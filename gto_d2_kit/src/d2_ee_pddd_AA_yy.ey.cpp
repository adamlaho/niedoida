/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddd_AA_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1222_11_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150502 = ae + be;
    const double C150501 = ae * be;
    const double C150500 = yA - yB;
    const double C150508 = 0 * be;
    const double C150560 = 0 * ae;
    const double C150552 = 0 * be;
    const double C150609 = p + q;
    const double C150608 = p * q;
    const double C150617 = std::pow(ae, 2);
    const double C150615 = bs[3];
    const double C150614 = yP - yQ;
    const double C150623 = bs[4];
    const double C150621 = xP - xQ;
    const double C150631 = bs[5];
    const double C150640 = bs[6];
    const double C150651 = bs[7];
    const double C150666 = bs[8];
    const double C150687 = bs[2];
    const double C150806 = zP - zQ;
    const double C136 = bs[0];
    const double C151899 = xA - xB;
    const double C151926 = ce + de;
    const double C151925 = ce * de;
    const double C151924 = xC - xD;
    const double C151958 = yC - yD;
    const double C151976 = zC - zD;
    const double C152157 = zA - zB;
    const double C150509 = std::pow(C150502, 2);
    const double C150553 = 2 * C150502;
    const double C150511 = 2 * C150501;
    const double C150510 = C150501 * C150500;
    const double C152142 = std::pow(C150500, 2);
    const double C152194 = C150500 * be;
    const double C152193 = C150500 * ae;
    const double C150555 = C150500 * C150508;
    const double C150554 = -2 * C150508;
    const double C150568 = C150560 / C150502;
    const double C150610 = 2 * C150608;
    const double C150618 = std::pow(C150614, 2);
    const double C150680 = C150614 * ae;
    const double C150633 = std::pow(C150621, 2);
    const double C150950 = std::pow(C150806, 2);
    const double C151902 = C151899 * be;
    const double C151901 = C151899 * ae;
    const double C151900 = std::pow(C151899, 2);
    const double C151930 = 2 * C151926;
    const double C151929 = std::pow(C151926, 2);
    const double C151931 = C151924 * de;
    const double C151928 = C151924 * ce;
    const double C151927 = std::pow(C151924, 2);
    const double C151959 = std::pow(C151958, 2);
    const double C152018 = C151958 * de;
    const double C152016 = C151958 * ce;
    const double C151977 = std::pow(C151976, 2);
    const double C152060 = C151976 * de;
    const double C152058 = C151976 * ce;
    const double C152158 = std::pow(C152157, 2);
    const double C152222 = C152157 * be;
    const double C152221 = C152157 * ae;
    const double C150513 = 2 * C150509;
    const double C152262 = 4 * C150509;
    const double C150562 = C150509 * C150553;
    const double C151910 = std::pow(C150553, -1);
    const double C152294 = std::pow(C150553, -2);
    const double C152143 = C152142 * C150501;
    const double C150564 = C150555 / C150502;
    const double C150563 = ae * C150554;
    const double C150612 = C150610 / C150609;
    const double C152 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C150610 / C150609, 2) -
          (bs[1] * C150610) / C150609) *
         std::pow(ae, 2)) /
        C150509;
    const double C137 = -(C150621 * bs[1] * C150610) / C150609;
    const double C353 = -(C150614 * bs[1] * C150610) / C150609;
    const double C590 = -(C150806 * bs[1] * C150610) / C150609;
    const double C150625 = C150618 * C150623;
    const double C150634 = C150618 * C150631;
    const double C150642 = C150618 * C150640;
    const double C150654 = C150618 * C150651;
    const double C150669 = C150618 * C150666;
    const double C150681 = C150623 * C150680;
    const double C150690 = C150615 * C150680;
    const double C150704 = C150631 * C150680;
    const double C150716 = C150640 * C150680;
    const double C150737 = C150651 * C150680;
    const double C150764 = C150666 * C150680;
    const double C144 = (-(bs[1] * C150680 * C150610) / C150609) / C150502;
    const double C151903 = C151900 * C150501;
    const double C151943 = std::pow(C151930, -1);
    const double C152270 = std::pow(C151930, -2);
    const double C151944 = 2 * C151929;
    const double C152274 = C151929 * C151930;
    const double C152273 = 4 * C151929;
    const double C152263 = std::pow(C151928, 2);
    const double C151932 = C151927 * C151925;
    const double C151960 = C151959 * C151925;
    const double C152275 = std::pow(C152016, 2);
    const double C151978 = C151977 * C151925;
    const double C152277 = std::pow(C152058, 2);
    const double C152159 = C152158 * C150501;
    const double C150559 = C150508 / C150513;
    const double C150565 = C150552 / C150513;
    const double C152144 = C152143 / C150502;
    const double C150569 = 0 - C150564;
    const double C150616 = -C150612;
    const double C150624 = std::pow(C150612, 4);
    const double C150641 = std::pow(C150612, 6);
    const double C150667 = std::pow(C150612, 8);
    const double C150686 = std::pow(C150612, 2);
    const double C153 =
        ((xP - xQ) *
         (bs[2] * std::pow(C150612, 2) +
          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C150612, 3)) *
         std::pow(ae, 2)) /
        C150509;
    const double C151904 = C151903 / C150502;
    const double C152318 = 4 * C152274;
    const double C152317 = C151926 * C152273;
    const double C151933 = C151932 / C151926;
    const double C151961 = C151960 / C151926;
    const double C151979 = C151978 / C151926;
    const double C152160 = C152159 / C150502;
    const double C152145 = -C152144;
    const double C150573 = C150569 * ae;
    const double C150619 = std::pow(C150616, 3);
    const double C150632 = std::pow(C150616, 5);
    const double C150652 = std::pow(C150616, 7);
    const double C150626 = C150625 * C150624;
    const double C150630 = C150623 * C150624;
    const double C150682 = C150624 * C150681;
    const double C150643 = C150642 * C150641;
    const double C150650 = C150640 * C150641;
    const double C150720 = C150641 * C150716;
    const double C150670 = C150669 * C150667;
    const double C150770 = C150667 * C150764;
    const double C150689 = C150687 * C150686;
    const double C145 = (C150621 * C150686 * C150687 * C150680) / C150502;
    const double C365 = (C150614 * C150686 * C150687 * C150680) / C150502 -
                        (ae * bs[1] * C150610) / (C150609 * C150502);
    const double C602 = (C150806 * C150686 * C150687 * C150680) / C150502;
    const double C151905 = -C151904;
    const double C151934 = -C151933;
    const double C151962 = -C151961;
    const double C151980 = -C151979;
    const double C152161 = -C152160;
    const double C152146 = std::exp(C152145);
    const double C150575 = C150573 / C150502;
    const double C150622 = C150615 * C150619;
    const double C150691 = C150619 * C150690;
    const double C154 =
        ((bs[2] * std::pow(C150612, 2) + C150618 * C150615 * C150619) *
             C150617 +
         (C150615 * C150619 + C150618 * bs[4] * std::pow(C150612, 4)) *
             C150617 * std::pow(xP - xQ, 2)) /
        C150509;
    const double C377 =
        (2 * ae * C150686 * C150687 * C150680 +
         C150614 * (C150687 * C150686 + C150618 * C150615 * C150619) *
             C150617) /
        C150509;
    const double C150635 = C150634 * C150632;
    const double C150639 = C150631 * C150632;
    const double C150706 = C150632 * C150704;
    const double C150655 = C150654 * C150652;
    const double C150665 = C150651 * C150652;
    const double C150742 = C150652 * C150737;
    const double C150705 = C150630 * C150633;
    const double C150717 = C150621 * C150630;
    const double C150864 = C150630 * C150618;
    const double C150863 = C150614 * C150630;
    const double C150862 = C150630 * ae;
    const double C151844 = C150630 * C150950;
    const double C151847 = C150806 * C150630;
    const double C150697 = C150621 * C150682;
    const double C150847 = C150614 * C150682;
    const double C150858 = ae * C150682;
    const double C150740 = C150650 * C150633;
    const double C150767 = C150621 * C150650;
    const double C151117 = C150650 * C150618;
    const double C151116 = C150614 * C150650;
    const double C151115 = C150650 * ae;
    const double C151888 = C150650 * C150950;
    const double C150723 = C150720 * C150633;
    const double C150736 = C150621 * C150720;
    const double C151076 = C150614 * C150720;
    const double C151109 = ae * C150720;
    const double C151254 = C150720 * C150950;
    const double C151340 = C150806 * C150720;
    const double C150773 = C150770 * C150633;
    const double C151164 = C150621 * C150770;
    const double C151454 = C150614 * C150770;
    const double C150692 = C150689 * ae;
    const double C614 =
        ((zP - zQ) * (C150689 + C150618 * C150615 * C150619) * C150617) /
        C150509;
    const double C138 = C150689 * C150633 - (bs[1] * C150610) / C150609;
    const double C352 = C150614 * C150621 * C150689;
    const double C354 = C150689 * C150618 - (bs[1] * C150610) / C150609;
    const double C589 = C150806 * C150621 * C150689;
    const double C591 = C150689 * C150950 - (bs[1] * C150610) / C150609;
    const double C1155 = C150806 * C150614 * C150689;
    const double C151906 = std::exp(C151905);
    const double C151935 = std::exp(C151934);
    const double C151963 = std::exp(C151962);
    const double C151981 = std::exp(C151980);
    const double C152162 = std::exp(C152161);
    const double C164 = C152146 * C153;
    const double C150512 = C150510 * C152146;
    const double C134 =
        -((C152146 - (C150500 * 2 * C150501 * C150500 * C152146) / C150502) *
          2 * C150501) /
        C150502;
    const double C135 = -(2 * C150501 * C150500 * C152146) / C150502;
    const double C152195 = C152146 * C152193;
    const double C152198 = C151910 * C152146;
    const double C152298 = C152146 * C152194;
    const double C152293 = C152146 / C150553;
    const double C6220 = C152294 * C152146;
    const double C150576 = C150575 - C150565;
    const double C150627 = C150622 + C150626;
    const double C150698 = C150621 * C150622;
    const double C150849 = C150614 * C150622;
    const double C150848 = C150622 * ae;
    const double C139 =
        2 * C150621 * C150689 + C150621 * (C150689 + C150622 * C150633);
    const double C351 = C150614 * (C150689 + C150622 * C150633);
    const double C588 = C150806 * (C150689 + C150622 * C150633);
    const double C1442 =
        2 * C150614 * C150689 + C150614 * (C150689 + C150622 * C150618);
    const double C1624 = C150806 * (C150689 + C150622 * C150618);
    const double C2564 =
        2 * C150806 * C150689 + C150806 * (C150689 + C150622 * C150950);
    const double C2565 = 3 * (C150689 + C150622 * C150950) +
                         C150806 * (2 * C150806 * C150622 +
                                    C150806 * (C150622 + C150630 * C150950));
    const double C150693 = C150614 * C150691;
    const double C146 =
        (C150686 * C150687 * C150680 + C150691 * C150633) / C150502;
    const double C147 =
        (2 * C150621 * C150691 + C150621 * (C150691 + C150682 * C150633)) /
        C150502;
    const double C363 = (C150614 * (C150691 + C150682 * C150633) +
                         (C150689 + C150622 * C150633) * ae) /
                        C150502;
    const double C364 =
        (C150614 * C150621 * C150691 + C150621 * C150689 * ae) / C150502;
    const double C600 = (C150806 * (C150691 + C150682 * C150633)) / C150502;
    const double C601 = (C150806 * C150621 * C150691) / C150502;
    const double C603 =
        (C150686 * C150687 * C150680 + C150691 * C150950) / C150502;
    const double C2572 =
        (2 * C150806 * C150691 + C150806 * (C150691 + C150682 * C150950)) /
        C150502;
    const double C167 = C152146 * C154;
    const double C150636 = C150630 + C150635;
    const double C150644 = C150639 + C150643;
    const double C150718 = C150639 * C150633;
    const double C150739 = C150621 * C150639;
    const double C151079 = C150639 * C150618;
    const double C151078 = C150614 * C150639;
    const double C151077 = C150639 * ae;
    const double C151848 = C150639 * C150950;
    const double C151887 = C150806 * C150639;
    const double C150708 = C150706 * C150633;
    const double C150715 = C150621 * C150706;
    const double C150861 = C150614 * C150706;
    const double C151072 = ae * C150706;
    const double C151241 = C150806 * C150706;
    const double C151709 = C150706 * C150950;
    const double C2573 = (3 * (C150691 + C150682 * C150950) +
                          C150806 * (2 * C150806 * C150682 +
                                     C150806 * (C150682 + C150706 * C150950))) /
                         C150502;
    const double C150656 = C150650 + C150655;
    const double C150671 = C150665 + C150670;
    const double C150768 = C150665 * C150633;
    const double C151165 = C150621 * C150665;
    const double C151457 = C150665 * C150618;
    const double C151456 = C150614 * C150665;
    const double C151455 = C150665 * ae;
    const double C150745 = C150742 * C150633;
    const double C150763 = C150621 * C150742;
    const double C151114 = C150614 * C150742;
    const double C151448 = ae * C150742;
    const double C151510 = C150742 * C150950;
    const double C151536 = C150806 * C150742;
    const double C150707 = C150622 + C150705;
    const double C150721 = 2 * C150717;
    const double C150838 = C150614 * C150717;
    const double C150837 = C150717 * ae;
    const double C150868 = C150622 + C150864;
    const double C150867 = C150863 * ae;
    const double C151080 = 2 * C150863;
    const double C151845 = C150622 + C151844;
    const double C151849 = 2 * C151847;
    const double C150699 = C150614 * C150697;
    const double C604 = (C150621 * C150691 + C150697 * C150950) / C150502;
    const double C150865 = 2 * C150858;
    const double C150744 = C150639 + C150740;
    const double C150771 = 2 * C150767;
    const double C151043 = C150767 * C150618;
    const double C151042 = C150614 * C150767;
    const double C151041 = C150767 * ae;
    const double C151855 = C150767 * C150950;
    const double C151125 = C150639 + C151117;
    const double C151124 = C151116 * ae;
    const double C151458 = 2 * C151116;
    const double C151877 = C151116 * C150950;
    const double C151890 = C150639 + C151888;
    const double C150725 = C150706 + C150723;
    const double C150741 = 2 * C150736;
    const double C150884 = C150614 * C150736;
    const double C151036 = ae * C150736;
    const double C151228 = C150806 * C150736;
    const double C151706 = C150736 * C150950;
    const double C151122 = 2 * C151109;
    const double C151259 = C150706 + C151254;
    const double C151347 = ae * C151340;
    const double C151581 = 2 * C151340;
    const double C150775 = C150742 + C150773;
    const double C151172 = C150614 * C151164;
    const double C15338 = C152146 * C614;
    const double C151907 = C151906 * C151901;
    const double C151911 = C151910 * C151906;
    const double C152259 = C151906 * C151902;
    const double C152256 = C151906 / C150553;
    const double C51062 = C152294 * C151906;
    const double C151937 = C151935 * C151928;
    const double C151936 = C151935 / C151930;
    const double C151946 = C151943 * C151935;
    const double C152266 = C151935 * C151931;
    const double C152315 = C152270 * C151935;
    const double C152309 = C151935 * C152263;
    const double C152017 = C151963 / C151930;
    const double C152019 = C151963 * C152016;
    const double C152026 = C151943 * C151963;
    const double C152281 = C151963 * C152018;
    const double C152321 = C152270 * C151963;
    const double C152319 = C151963 * C152275;
    const double C152059 = C151981 / C151930;
    const double C152061 = C151981 * C152058;
    const double C152068 = C151943 * C151981;
    const double C152287 = C151981 * C152060;
    const double C152324 = C152270 * C151981;
    const double C152322 = C151981 * C152277;
    const double C152223 = C152162 * C152221;
    const double C152226 = C151910 * C152162;
    const double C152302 = C152162 * C152222;
    const double C152295 = C152162 / C150553;
    const double C14889 = C152294 * C152162;
    const double C150514 = 2 * C150512;
    const double C150561 = C150512 / C150509;
    const double C150556 = -4 * C150512;
    const double C6228 =
        ((0 * ae) / C150502 - C150512 / C150509) / (2 * C150502) +
        (0 * ae) / C150502;
    const double C23277 = (0 * ae) / C150502 - C150512 / C150509;
    const double C165 = C134 * C138;
    const double C162 = C134 * C137;
    const double C393 = C134 * C352;
    const double C630 = C134 * C589;
    const double C15340 = C134 * C591;
    const double C15337 = C134 * C590;
    const double C16065 = C134 * C1155;
    const double C163 = C135 * C145;
    const double C161 = C135 * C144;
    const double C396 = C135 * C365;
    const double C633 = C135 * C602;
    const double C152300 = C152195 / C150513;
    const double C152299 = C152195 * C152194;
    const double C152296 = C152195 / C150502;
    const double C6219 = (2 * C151910 * C152195) / C150502;
    const double C152301 = C152198 * C152194;
    const double C59606 = C152198 / C152262;
    const double C73620 = C152198 / C150553;
    const double C152338 = C152298 / C150502;
    const double C6218 = (C152146 * std::pow(C152193, 2)) / C150509 + C152293;
    const double C150628 = C150627 * C150617;
    const double C150700 = C150698 * ae;
    const double C355 = C150621 * C150689 + C150698 * C150618;
    const double C592 = C150621 * C150689 + C150698 * C150950;
    const double C1156 = C150806 * C150614 * C150698;
    const double C1441 =
        2 * C150614 * C150698 + C150614 * (C150698 + C150717 * C150618);
    const double C1623 = C150806 * (C150698 + C150717 * C150618);
    const double C2563 =
        2 * C150806 * C150698 + C150806 * (C150698 + C150717 * C150950);
    const double C150851 = C150849 * ae;
    const double C1620 = C150614 * C150689 + C150849 * C150950;
    const double C3089 =
        2 * C150806 * C150849 + C150806 * (C150849 + C150863 * C150950);
    const double C150850 = C150847 + C150848;
    const double C168 = C134 * C139;
    const double C390 = C134 * C351;
    const double C627 = C134 * C588;
    const double C16667 = C134 * C1624;
    const double C15344 = C134 * C2564;
    const double C17983 = C134 * C2565;
    const double C150694 = C150693 + C150692;
    const double C166 = C135 * C146;
    const double C169 = C135 * C147;
    const double C391 = C135 * C363;
    const double C394 = C135 * C364;
    const double C628 = C135 * C600;
    const double C631 = C135 * C601;
    const double C634 = C135 * C603;
    const double C2589 = C135 * C2572;
    const double C150637 = C150636 * C150617;
    const double C150645 = C150644 * C150617;
    const double C150722 = C150630 + C150718;
    const double C150743 = 2 * C150739;
    const double C150887 = C150739 * C150618;
    const double C150886 = C150614 * C150739;
    const double C150885 = C150739 * ae;
    const double C151841 = C150739 * C150950;
    const double C151854 = C150806 * C150739;
    const double C2566 = 3 * (C150698 + C150717 * C150950) +
                         C150806 * (2 * C150806 * C150717 +
                                    C150806 * (C150717 + C150739 * C150950));
    const double C151085 = C150630 + C151079;
    const double C151084 = C151078 * ae;
    const double C151118 = 2 * C151078;
    const double C151865 = C151078 * C150950;
    const double C151876 = C150806 * C151078;
    const double C9577 = 3 * (C150849 + C150863 * C150950) +
                         C150806 * (2 * C150806 * C150863 +
                                    C150806 * (C150863 + C151078 * C150950));
    const double C151083 = C151076 + C151077;
    const double C151850 = C150630 + C151848;
    const double C151889 = 2 * C151887;
    const double C150710 = C150682 + C150708;
    const double C150719 = 2 * C150715;
    const double C150836 = C150614 * C150715;
    const double C150881 = ae * C150715;
    const double C2571 =
        (2 * C150806 * C150697 + C150806 * (C150697 + C150715 * C150950)) /
        C150502;
    const double C2574 = (3 * (C150697 + C150715 * C150950) +
                          C150806 * (2 * C150806 * C150715 +
                                     C150806 * (C150715 + C150736 * C150950))) /
                         C150502;
    const double C150866 = C150861 + C150862;
    const double C151082 = 2 * C151072;
    const double C151246 = ae * C151241;
    const double C151712 = 2 * C151241;
    const double C151710 = C150682 + C151709;
    const double C2590 = C135 * C2573;
    const double C150657 = C150656 * C150617;
    const double C150672 = C150671 * C150617;
    const double C150772 = C150650 + C150768;
    const double C151175 = C151165 * C150618;
    const double C151174 = C150614 * C151165;
    const double C151173 = C151165 * ae;
    const double C151467 = C150650 + C151457;
    const double C151466 = C151456 * ae;
    const double C151465 = C151454 + C151455;
    const double C150747 = C150720 + C150745;
    const double C150769 = 2 * C150763;
    const double C151040 = C150614 * C150763;
    const double C151159 = ae * C150763;
    const double C151272 = C150763 * C150950;
    const double C151359 = C150806 * C150763;
    const double C151123 = C151114 + C151115;
    const double C151464 = 2 * C151448;
    const double C151517 = C150720 + C151510;
    const double C151545 = ae * C151536;
    const double C150709 = C150707 * ae;
    const double C140 = 3 * (C150689 + C150622 * C150633) +
                        C150621 * (2 * C150698 + C150621 * C150707);
    const double C350 = C150614 * (2 * C150698 + C150621 * C150707);
    const double C356 = C150689 + C150622 * C150633 + C150707 * C150618;
    const double C587 = C150806 * (2 * C150698 + C150621 * C150707);
    const double C593 = C150689 + C150622 * C150633 + C150707 * C150950;
    const double C1157 = C150806 * C150614 * C150707;
    const double C150840 = C150838 * ae;
    const double C1619 = C150614 * C150698 + C150838 * C150950;
    const double C150871 = C150868 * ae;
    const double C1443 = 3 * (C150689 + C150622 * C150618) +
                         C150614 * (2 * C150849 + C150614 * C150868);
    const double C1625 = C150689 + C150622 * C150618 + C150868 * C150950;
    const double C2163 = C150806 * (2 * C150849 + C150614 * C150868);
    const double C17970 =
        4 * (2 * C150806 * C150622 + C150806 * C151845) +
        C150806 *
            (3 * C151845 + C150806 * (2 * C150806 * C150630 +
                                      C150806 * (C150630 + C150639 * C150950)));
    const double C636 = C135 * C604;
    const double C150746 = C150621 * C150744;
    const double C150766 = 3 * C150744;
    const double C150910 = C150744 * C150618;
    const double C150909 = C150614 * C150744;
    const double C150908 = C150744 * ae;
    const double C151862 = C150744 * C150950;
    const double C151049 = C150739 + C151043;
    const double C151048 = C151042 * ae;
    const double C151166 = 2 * C151042;
    const double C151868 = C151042 * C150950;
    const double C151857 = C150739 + C151855;
    const double C151130 = C150614 * C151125;
    const double C151129 = C151125 * ae;
    const double C151459 = 3 * C151125;
    const double C151883 = C151125 * C150950;
    const double C151879 = C151078 + C151877;
    const double C151891 = C150806 * C151890;
    const double C150727 = C150621 * C150725;
    const double C150735 = 3 * C150725;
    const double C150824 = C150614 * C150725;
    const double C150904 = ae * C150725;
    const double C151046 = 2 * C151036;
    const double C151233 = ae * C151228;
    const double C151716 = 2 * C151228;
    const double C151707 = C150715 + C151706;
    const double C151264 = ae * C151259;
    const double C151713 = C150806 * C151259;
    const double C151733 = 3 * C151259;
    const double C151353 = 2 * C151347;
    const double C150777 = C150621 * C150775;
    const double C151295 = C150614 * C150775;
    const double C152260 = C151907 / C150513;
    const double C152258 = C151907 / C150502;
    const double C152257 = C151907 * C151902;
    const double C51061 = (2 * C151910 * C151907) / C150502;
    const double C152261 = C151911 * C151902;
    const double C125 = C151911 / C152262;
    const double C23273 = C151911 / C150553;
    const double C152307 = C152259 / C150502;
    const double C51060 = (C151906 * std::pow(C151901, 2)) / C150509 + C152256;
    const double C151938 = C151937 * C151931;
    const double C151945 = C151937 / C151944;
    const double C152267 = C151943 * C151937;
    const double C152265 = C151937 / C151926;
    const double C347 = (C151935 * std::pow(C151931, 2)) / C151929 + C151936;
    const double C151947 = C151946 * C151931;
    const double C152271 = C151928 * C151946;
    const double C152269 = 2 * C151946;
    const double C152325 = C151946 / C152273;
    const double C133 = C151946 / C152318;
    const double C3722 = C151946 / C151930;
    const double C152311 = C152266 / C151926;
    const double C348 = (-2 * C151943 * C152266) / C151926;
    const double C152346 = C152309 / C151929;
    const double C1345 = (C151963 * std::pow(C152018, 2)) / C151929 + C152017;
    const double C152020 = C152019 * C152018;
    const double C152025 = C152019 / C151944;
    const double C152279 = C152019 / C151926;
    const double C152276 = C151943 * C152019;
    const double C152027 = C152026 * C152018;
    const double C152285 = C152016 * C152026;
    const double C152284 = 2 * C152026;
    const double C152331 = C152026 / C152273;
    const double C1437 = C152026 / C152318;
    const double C3719 = C152026 / C151930;
    const double C152327 = C152281 / C151926;
    const double C1346 = (-2 * C151943 * C152281) / C151926;
    const double C152351 = C152319 / C151929;
    const double C2325 = (C151981 * std::pow(C152060, 2)) / C151929 + C152059;
    const double C152062 = C152061 * C152060;
    const double C152067 = C152061 / C151944;
    const double C152280 = C152061 / C151926;
    const double C152278 = C151943 * C152061;
    const double C152069 = C152068 * C152060;
    const double C152291 = C152058 * C152068;
    const double C152290 = 2 * C152068;
    const double C152337 = C152068 / C152273;
    const double C2560 = C152068 / C152318;
    const double C4913 = C152068 / C151930;
    const double C152333 = C152287 / C151926;
    const double C2326 = (-2 * C151943 * C152287) / C151926;
    const double C152353 = C152322 / C151929;
    const double C152304 = C152223 / C150513;
    const double C152303 = C152223 * C152222;
    const double C152297 = C152223 / C150502;
    const double C14888 = (2 * C151910 * C152223) / C150502;
    const double C152305 = C152226 * C152222;
    const double C117827 = C152226 / C152262;
    const double C134210 = C152226 / C150553;
    const double C152341 = C152302 / C150502;
    const double C14887 = (C152162 * std::pow(C152221, 2)) / C150509 + C152295;
    const double C150515 = C150500 * C150514;
    const double C51066 =
        (-C150514 / C150502) / (2 * C150502) - (0 * be) / C150502;
    const double C150572 = C150568 - C150561;
    const double C150566 = C150556 / C150502;
    const double C23291 = C23277 * C363;
    const double C23285 = C23277 * C364;
    const double C23280 = C23277 * C365;
    const double C181 = C162 + C163;
    const double C15362 = C15337 + C633;
    const double C152339 = C152299 / C150509;
    const double C23289 = C152296 * C154;
    const double C23283 = C152296 * C153;
    const double C40680 = C152296 * C614;
    const double C152340 = C152301 / C150502;
    const double C51058 = -C152338;
    const double C6250 = C6218 * C154;
    const double C6235 = C6218 * C153;
    const double C110001 = C6218 * C614;
    const double C155 =
        (2 * C150621 * C150628 +
         C150621 * (C150628 + (C150623 * C150624 +
                               C150618 * bs[5] * std::pow(C150616, 5)) *
                                  C150617 * std::pow(C150621, 2))) /
        C150509;
    const double C376 = (2 * ae * C150621 * C150619 * C150615 * C150680 +
                         C150614 * C150621 * C150628) /
                        C150509;
    const double C613 = ((zP - zQ) * C150621 * C150628) / C150509;
    const double C615 = ((C150689 + C150618 * C150615 * C150619) * C150617 +
                         C150628 * std::pow(zP - zQ, 2)) /
                        C150509;
    const double C1167 =
        (2 * ae * C150806 * C150691 + C150614 * C150806 * C150628) / C150509;
    const double C150701 = C150699 + C150700;
    const double C398 = C134 * C355;
    const double C635 = C134 * C592;
    const double C1175 = C134 * C1156;
    const double C1809 = C134 * C1441;
    const double C2022 = C134 * C1623;
    const double C2948 = C134 * C2563;
    const double C16068 = C134 * C1620;
    const double C16661 = C134 * C3089;
    const double C150853 = ae * C150850;
    const double C150852 = C150614 * C150850;
    const double C150860 = 2 * C150850;
    const double C150964 = C150806 * C150850;
    const double C150695 = ae * C150694;
    const double C366 = (C150686 * C150687 * C150680 + C150614 * C150694 +
                         C150614 * C150689 * ae) /
                        C150502;
    const double C1161 = (C150806 * C150694) / C150502;
    const double C1632 = (C150694 + C150850 * C150950) / C150502;
    const double C182 = C165 + C166;
    const double C183 = C168 + C169;
    const double C416 = C390 + C391;
    const double C417 = C393 + C394;
    const double C653 = C627 + C628;
    const double C654 = C630 + C631;
    const double C15363 = C15340 + C634;
    const double C15364 = C15344 + C2589;
    const double C150835 = C150621 * C150637;
    const double C150859 = C150614 * C150637;
    const double C150997 = C150806 * C150637;
    const double C156 =
        (3 * (C150628 + C150637 * C150633) +
         C150621 *
             (2 * C150621 * C150637 +
              C150621 * (C150637 + (C150631 * C150632 +
                                    C150618 * bs[6] * std::pow(C150612, 6)) *
                                       C150617 * C150633))) /
        C150509;
    const double C375 =
        (2 * ae * (C150619 * C150615 * C150680 + C150682 * C150633) +
         C150614 * (C150628 + C150637 * C150633)) /
        C150509;
    const double C612 = ((zP - zQ) * (C150628 + C150637 * C150633)) / C150509;
    const double C616 =
        (C150621 * C150628 + C150621 * C150637 * std::pow(zP - zQ, 2)) /
        C150509;
    const double C1168 =
        (2 * ae * C150806 * C150697 + C150614 * C150806 * C150621 * C150637) /
        C150509;
    const double C1644 = (2 * ae * (C150691 + C150682 * C150950) +
                          C150614 * (C150628 + C150637 * C150950)) /
                         C150509;
    const double C2580 =
        (2 * C150806 * C150628 + C150806 * (C150628 + C150637 * C150950)) /
        C150509;
    const double C150646 = C150645 * C150633;
    const double C150649 = C150621 * C150645;
    const double C151073 = C150614 * C150645;
    const double C151219 = C150645 * C150950;
    const double C151242 = C150806 * C150645;
    const double C150724 = C150621 * C150722;
    const double C150738 = 3 * C150722;
    const double C150826 = C150614 * C150722;
    const double C150825 = C150722 * ae;
    const double C1440 =
        2 * C150614 * C150707 + C150614 * (C150707 + C150722 * C150618);
    const double C1622 = C150806 * (C150707 + C150722 * C150618);
    const double C2562 =
        2 * C150806 * C150707 + C150806 * (C150707 + C150722 * C150950);
    const double C2567 = 3 * (C150707 + C150722 * C150950) +
                         C150806 * (2 * C150806 * C150722 +
                                    C150806 * (C150722 + C150744 * C150950));
    const double C150891 = C150717 + C150887;
    const double C150890 = C150886 * ae;
    const double C151044 = 2 * C150886;
    const double C3090 =
        2 * C150806 * C150838 + C150806 * (C150838 + C150886 * C150950);
    const double C9579 = 3 * (C150838 + C150886 * C150950) +
                         C150806 * (2 * C150806 * C150886 +
                                    C150806 * (C150886 + C151042 * C150950));
    const double C150889 = C150884 + C150885;
    const double C151842 = C150717 + C151841;
    const double C151856 = 2 * C151854;
    const double C15346 = C134 * C2566;
    const double C151089 = C150614 * C151085;
    const double C151088 = C151085 * ae;
    const double C151119 = 3 * C151085;
    const double C9576 =
        2 * C150806 * C150868 + C150806 * (C150868 + C151085 * C150950);
    const double C9578 = 3 * (C150868 + C151085 * C150950) +
                         C150806 * (2 * C150806 * C151085 +
                                    C150806 * (C151085 + C151125 * C150950));
    const double C151866 = C150863 + C151865;
    const double C151878 = 2 * C151876;
    const double C18712 = C134 * C9577;
    const double C151090 = ae * C151083;
    const double C151087 = C150614 * C151083;
    const double C151113 = 2 * C151083;
    const double C151221 = C151083 * C150950;
    const double C151245 = C150806 * C151083;
    const double C151851 = C150806 * C151850;
    const double C151886 = 3 * C151850;
    const double C150711 = C150614 * C150710;
    const double C148 = (3 * (C150691 + C150682 * C150633) +
                         C150621 * (2 * C150697 + C150621 * C150710)) /
                        C150502;
    const double C362 = (C150614 * (2 * C150697 + C150621 * C150710) +
                         (2 * C150698 + C150621 * C150707) * ae) /
                        C150502;
    const double C599 = (C150806 * (2 * C150697 + C150621 * C150710)) / C150502;
    const double C605 =
        (C150691 + C150682 * C150633 + C150710 * C150950) / C150502;
    const double C2570 =
        (2 * C150806 * C150710 + C150806 * (C150710 + C150725 * C150950)) /
        C150502;
    const double C150839 = C150836 + C150837;
    const double C150888 = 2 * C150881;
    const double C2588 = C135 * C2571;
    const double C2591 = C135 * C2574;
    const double C150872 = ae * C150866;
    const double C150870 = C150614 * C150866;
    const double C150967 = C150866 * C150950;
    const double C150999 = C150806 * C150866;
    const double C151075 = 2 * C150866;
    const double C151251 = 2 * C151246;
    const double C17974 =
        (4 * (2 * C150806 * C150682 + C150806 * C151710) +
         C150806 *
             (3 * C151710 + C150806 * (2 * C151241 + C150806 * C151259))) /
        C150502;
    const double C17994 = C17983 + C2590;
    const double C150658 = C150657 * C150633;
    const double C150664 = C150621 * C150657;
    const double C151110 = C150614 * C150657;
    const double C151255 = C150657 * C150950;
    const double C151341 = C150806 * C150657;
    const double C150673 = C150672 * C150633;
    const double C151160 = C150621 * C150672;
    const double C151449 = C150614 * C150672;
    const double C151511 = C150672 * C150950;
    const double C151537 = C150806 * C150672;
    const double C150774 = C150621 * C150772;
    const double C151298 = C150772 * C150618;
    const double C151297 = C150614 * C150772;
    const double C151296 = C150772 * ae;
    const double C151180 = C150767 + C151175;
    const double C151179 = C151174 * ae;
    const double C151178 = C151172 + C151173;
    const double C151473 = C150614 * C151467;
    const double C151472 = C151467 * ae;
    const double C151474 = ae * C151465;
    const double C151471 = C150614 * C151465;
    const double C151515 = C151465 * C150950;
    const double C151542 = C150806 * C151465;
    const double C150749 = C150621 * C150747;
    const double C150762 = 3 * C150747;
    const double C150907 = C150614 * C150747;
    const double C151291 = ae * C150747;
    const double C151326 = C150806 * C150747;
    const double C151721 = C150747 * C150950;
    const double C2575 = (3 * (C150710 + C150725 * C150950) +
                          C150806 * (2 * C150806 * C150725 +
                                     C150806 * (C150725 + C150747 * C150950))) /
                         C150502;
    const double C151047 = C151040 + C151041;
    const double C151170 = 2 * C151159;
    const double C151277 = C150736 + C151272;
    const double C151366 = ae * C151359;
    const double C151131 = ae * C151123;
    const double C151128 = C150614 * C151123;
    const double C151258 = C151123 * C150950;
    const double C151345 = C150806 * C151123;
    const double C151453 = 2 * C151123;
    const double C151523 = ae * C151517;
    const double C151582 = C150806 * C151517;
    const double C151553 = 2 * C151545;
    const double C171 = C134 * C140;
    const double C387 = C134 * C350;
    const double C401 = C134 * C356;
    const double C624 = C134 * C587;
    const double C638 = C134 * C593;
    const double C1178 = C134 * C1157;
    const double C2795 = C134 * C1619;
    const double C16670 = C134 * C1625;
    const double C17396 = C134 * C2163;
    const double C17989 = C134 * C17970;
    const double C150748 = C150743 + C150746;
    const double C150914 = C150722 + C150910;
    const double C150913 = C150909 * ae;
    const double C151299 = 2 * C150909;
    const double C151863 = C150722 + C151862;
    const double C151053 = C150614 * C151049;
    const double C151052 = C151049 * ae;
    const double C151167 = 3 * C151049;
    const double C151869 = C150886 + C151868;
    const double C151858 = C150806 * C151857;
    const double C151134 = C151118 + C151130;
    const double C151884 = C151085 + C151883;
    const double C151880 = C150806 * C151879;
    const double C151892 = C151889 + C151891;
    const double C150729 = C150719 + C150727;
    const double C150911 = 2 * C150904;
    const double C151238 = 2 * C151233;
    const double C151269 = 2 * C151264;
    const double C151714 = C151712 + C151713;
    const double C150779 = C150769 + C150777;
    const double C152306 = C152257 / C150509;
    const double C152308 = C152261 / C150502;
    const double C6221 = -C152307;
    const double C151939 = C151938 / C151929;
    const double C152312 = 2 * C152267;
    const double C151948 = C151947 / C151926;
    const double C152316 = C152271 / C151944;
    const double C152347 = C152265 - C152311;
    const double C3375 = -C152311;
    const double C152365 = C152346 + C151936;
    const double C152021 = C152020 / C151929;
    const double C152320 = 2 * C152276;
    const double C152028 = C152027 / C151926;
    const double C152330 = C152285 / C151944;
    const double C152355 = C152279 - C152327;
    const double C3235 = -C152327;
    const double C152368 = C152351 + C152017;
    const double C152063 = C152062 / C151929;
    const double C152323 = 2 * C152278;
    const double C152070 = C152069 / C151926;
    const double C152336 = C152291 / C151944;
    const double C152358 = C152280 - C152333;
    const double C4241 = -C152333;
    const double C152369 = C152353 + C152059;
    const double C152342 = C152303 / C150509;
    const double C152343 = C152305 / C150502;
    const double C101365 = -C152341;
    const double C150516 = C150515 / C150502;
    const double C51080 = C51066 * C363;
    const double C51074 = C51066 * C364;
    const double C51069 = C51066 * C365;
    const double C59615 =
        (C150572 / C150553 - (0 * be) / C150502) / C150553 + (0 * ae) / C150502;
    const double C73628 = C150572 / C150553 - (0 * be) / C150502;
    const double C187 = C181 + C163;
    const double C15369 = C15362 + C633;
    const double C152361 = C152293 - C152339;
    const double C152362 = C152300 - C152340;
    const double C51078 = C51058 * C154;
    const double C51072 = C51058 * C153;
    const double C65697 = C51058 * C614;
    const double C170 = C152146 * C155;
    const double C6253 = C6218 * C155;
    const double C23298 = C152296 * C155;
    const double C51087 = C51058 * C155;
    const double C395 = C152146 * C376;
    const double C6238 = C6219 * C376;
    const double C6534 = C6218 * C376;
    const double C23286 = C152198 * C376;
    const double C23575 = C152296 * C376;
    const double C51075 = C152198 * C376;
    const double C51364 = C51058 * C376;
    const double C632 = C152146 * C613;
    const double C6836 = C6218 * C613;
    const double C23875 = C152296 * C613;
    const double C51664 = C51058 * C613;
    const double C15341 = C152146 * C615;
    const double C40688 = C152296 * C615;
    const double C65701 = C51058 * C615;
    const double C110011 = C6218 * C615;
    const double C16066 = C152146 * C1167;
    const double C40682 = C152198 * C1167;
    const double C41609 = C152296 * C1167;
    const double C65699 = C152198 * C1167;
    const double C66410 = C51058 * C1167;
    const double C110003 = C6219 * C1167;
    const double C110709 = C6218 * C1167;
    const double C150702 = ae * C150701;
    const double C367 =
        (C150621 * C150691 + C150614 * C150701 + C150614 * C150698 * ae) /
        C150502;
    const double C1162 = (C150806 * C150701) / C150502;
    const double C655 = C635 + C636;
    const double C150854 = C150691 + C150852;
    const double C150965 = ae * C150964;
    const double C378 =
        ((C150689 + C150618 * C150615 * C150619) * C150617 + C150695 + C150695 +
         C150614 * (2 * ae * C150691 + C150614 * C150628)) /
        C150509;
    const double C397 = C135 * C366;
    const double C6232 = C6228 * C366;
    const double C23576 = C23277 * C366;
    const double C51365 = C51066 * C366;
    const double C1174 = C135 * C1161;
    const double C23876 = C23277 * C1161;
    const double C51665 = C51066 * C1161;
    const double C1657 = C135 * C1632;
    const double C23879 = C23277 * C1632;
    const double C51668 = C51066 * C1632;
    const double C188 = C182 + C166;
    const double C189 = C183 + C169;
    const double C424 = C416 + C391;
    const double C425 = C417 + C394;
    const double C661 = C653 + C628;
    const double C662 = C654 + C631;
    const double C15370 = C15363 + C634;
    const double C15371 = C15364 + C2589;
    const double C150869 = C150865 + C150859;
    const double C2581 =
        (3 * (C150628 + C150637 * C150950) +
         C150806 * (2 * C150997 + C150806 * (C150637 + C150645 * C150950))) /
        C150509;
    const double C3097 =
        (2 * ae *
             (2 * C150806 * C150682 + C150806 * (C150682 + C150706 * C150950)) +
         C150614 * (2 * C150997 + C150806 * (C150637 + C150645 * C150950))) /
        C150509;
    const double C173 = C152146 * C156;
    const double C6268 = C6218 * C156;
    const double C23301 = C152296 * C156;
    const double C51090 = C51058 * C156;
    const double C392 = C152146 * C375;
    const double C6247 = C6219 * C375;
    const double C6552 = C6218 * C375;
    const double C23292 = C152198 * C375;
    const double C23569 = C152296 * C375;
    const double C51081 = C152198 * C375;
    const double C51358 = C51058 * C375;
    const double C629 = C152146 * C612;
    const double C6854 = C6218 * C612;
    const double C23869 = C152296 * C612;
    const double C51658 = C51058 * C612;
    const double C637 = C152146 * C616;
    const double C6845 = C6218 * C616;
    const double C23882 = C152296 * C616;
    const double C51671 = C51058 * C616;
    const double C1177 = C152146 * C1168;
    const double C6833 = C6219 * C1168;
    const double C7631 = C6218 * C1168;
    const double C23872 = C152198 * C1168;
    const double C24654 = C152296 * C1168;
    const double C51661 = C152198 * C1168;
    const double C52443 = C51058 * C1168;
    const double C16069 = C152146 * C1644;
    const double C40686 = C152198 * C1644;
    const double C42368 = C152296 * C1644;
    const double C65703 = C152198 * C1644;
    const double C66414 = C51058 * C1644;
    const double C110009 = C6219 * C1644;
    const double C111285 = C6218 * C1644;
    const double C15345 = C152146 * C2580;
    const double C44082 = C152296 * C2580;
    const double C65707 = C51058 * C2580;
    const double C112587 = C6218 * C2580;
    const double C150647 = C150637 + C150646;
    const double C150653 = 2 * C150649;
    const double C150882 = C150614 * C150649;
    const double C151003 = C150806 * C150649;
    const double C1643 = (2 * ae * (C150697 + C150715 * C150950) +
                          C150614 * (C150835 + C150649 * C150950)) /
                         C150509;
    const double C2579 =
        (2 * C150806 * C150835 + C150806 * (C150835 + C150649 * C150950)) /
        C150509;
    const double C151086 = C151082 + C151073;
    const double C151222 = C150637 + C151219;
    const double C151247 = C150614 * C151242;
    const double C151419 = 2 * C151242;
    const double C150726 = C150721 + C150724;
    const double C150828 = C150826 * ae;
    const double C1618 = C150614 * C150707 + C150826 * C150950;
    const double C3091 =
        2 * C150806 * C150826 + C150806 * (C150826 + C150909 * C150950);
    const double C150827 = C150824 + C150825;
    const double C1807 = C134 * C1440;
    const double C2020 = C134 * C1622;
    const double C2946 = C134 * C2562;
    const double C15354 = C134 * C2567;
    const double C150894 = C150891 * ae;
    const double C1444 = 3 * (C150698 + C150717 * C150618) +
                         C150614 * (2 * C150838 + C150614 * C150891);
    const double C1626 = C150698 + C150717 * C150618 + C150891 * C150950;
    const double C2164 = C150806 * (2 * C150838 + C150614 * C150891);
    const double C9575 =
        2 * C150806 * C150891 + C150806 * (C150891 + C151049 * C150950);
    const double C16071 = C134 * C3090;
    const double C18300 = C134 * C9579;
    const double C150895 = ae * C150889;
    const double C150893 = C150614 * C150889;
    const double C150971 = C150889 * C150950;
    const double C151005 = C150806 * C150889;
    const double C151039 = 2 * C150889;
    const double C17969 =
        4 * (2 * C150806 * C150717 + C150806 * C151842) +
        C150806 *
            (3 * C151842 + C150806 * (2 * C150806 * C150739 +
                                      C150806 * (C150739 + C150767 * C150950)));
    const double C151093 = C151080 + C151089;
    const double C16676 = C134 * C9576;
    const double C118978 = C134 * C9578;
    const double C18703 =
        4 * (2 * C150806 * C150863 + C150806 * C151866) +
        C150806 *
            (3 * C151866 + C150806 * (2 * C150806 * C151078 +
                                      C150806 * (C151078 + C151116 * C150950)));
    const double C151108 = C150645 + C151090;
    const double C151092 = C150706 + C151087;
    const double C151224 = C150866 + C151221;
    const double C151250 = ae * C151245;
    const double C151389 = 2 * C151245;
    const double C151852 = C151849 + C151851;
    const double C150712 = C150711 + C150709;
    const double C172 = C135 * C148;
    const double C388 = C135 * C362;
    const double C23294 = C23277 * C362;
    const double C51083 = C51066 * C362;
    const double C625 = C135 * C599;
    const double C639 = C135 * C605;
    const double C2587 = C135 * C2570;
    const double C150842 = ae * C150839;
    const double C150841 = C150614 * C150839;
    const double C150883 = 2 * C150839;
    const double C150961 = C150806 * C150839;
    const double C1631 = (C150701 + C150839 * C150950) / C150502;
    const double C2953 = C2948 + C2588;
    const double C15365 = C15346 + C2591;
    const double C151071 = C150637 + C150872;
    const double C150873 = C150682 + C150870;
    const double C150968 = C150850 + C150967;
    const double C151001 = ae * C150999;
    const double C151382 = 2 * C150999;
    const double C17990 = C135 * C17974;
    const double C17997 = C17994 + C2590;
    const double C150659 = C150645 + C150658;
    const double C150668 = 2 * C150664;
    const double C151037 = C150614 * C150664;
    const double C151210 = C150664 * C150950;
    const double C151229 = C150806 * C150664;
    const double C151127 = C151122 + C151110;
    const double C151260 = C150645 + C151255;
    const double C151348 = C150614 * C151341;
    const double C151561 = 2 * C151341;
    const double C150674 = C150657 + C150673;
    const double C151171 = C150614 * C151160;
    const double C151273 = C151160 * C150950;
    const double C151360 = C150806 * C151160;
    const double C151470 = C151464 + C151449;
    const double C151518 = C150657 + C151511;
    const double C151546 = C150614 * C151537;
    const double C150776 = C150771 + C150774;
    const double C151304 = C150744 + C151298;
    const double C151303 = C151297 * ae;
    const double C18296 = 3 * (C150826 + C150909 * C150950) +
                          C150806 * (2 * C150806 * C150909 +
                                     C150806 * (C150909 + C151297 * C150950));
    const double C151302 = C151295 + C151296;
    const double C151184 = C150614 * C151180;
    const double C151183 = C151180 * ae;
    const double C9580 = 3 * (C150891 + C151049 * C150950) +
                         C150806 * (2 * C150806 * C151049 +
                                    C150806 * (C151049 + C151180 * C150950));
    const double C151185 = ae * C151178;
    const double C151182 = C150614 * C151178;
    const double C151276 = C151178 * C150950;
    const double C151364 = C150806 * C151178;
    const double C151477 = C151458 + C151473;
    const double C151476 = C150742 + C151471;
    const double C151522 = C151123 + C151515;
    const double C151551 = ae * C151542;
    const double C150751 = C150741 + C150749;
    const double C150912 = C150907 + C150908;
    const double C151301 = 2 * C151291;
    const double C151331 = ae * C151326;
    const double C151722 = C150725 + C151721;
    const double C2592 = C135 * C2575;
    const double C151054 = ae * C151047;
    const double C151051 = C150614 * C151047;
    const double C151163 = 2 * C151047;
    const double C151212 = C151047 * C150950;
    const double C151232 = C150806 * C151047;
    const double C151282 = ae * C151277;
    const double C151717 = C150806 * C151277;
    const double C17973 =
        (4 * (2 * C150806 * C150715 + C150806 * C151707) +
         C150806 *
             (3 * C151707 + C150806 * (2 * C151228 + C150806 * C151277))) /
        C150502;
    const double C151372 = 2 * C151366;
    const double C151447 = C150657 + C151131;
    const double C151133 = C150720 + C151128;
    const double C151263 = C151083 + C151258;
    const double C151352 = ae * C151345;
    const double C151567 = 2 * C151345;
    const double C151529 = 2 * C151523;
    const double C151588 = C151581 + C151582;
    const double C150750 = C150621 * C150748;
    const double C150765 = 4 * C150748;
    const double C150815 = C150614 * C150748;
    const double C150814 = C150748 * ae;
    const double C150917 = C150914 * ae;
    const double C1445 = 3 * (C150707 + C150722 * C150618) +
                         C150614 * (2 * C150826 + C150614 * C150914);
    const double C1627 = C150707 + C150722 * C150618 + C150914 * C150950;
    const double C2165 = C150806 * (2 * C150826 + C150614 * C150914);
    const double C18502 =
        4 * (2 * C150806 * C150722 + C150806 * C151863) +
        C150806 *
            (3 * C151863 + C150806 * (2 * C150806 * C150744 +
                                      C150806 * (C150744 + C150772 * C150950)));
    const double C151057 = C151044 + C151053;
    const double C18704 =
        4 * (2 * C150806 * C150886 + C150806 * C151869) +
        C150806 *
            (3 * C151869 + C150806 * (2 * C150806 * C151042 +
                                      C150806 * (C151042 + C151174 * C150950)));
    const double C151859 = C151856 + C151858;
    const double C151138 = C150614 * C151134;
    const double C151137 = C151134 * ae;
    const double C151460 = 4 * C151134;
    const double C69051 =
        4 * (2 * C150806 * C151085 + C150806 * C151884) +
        C150806 *
            (3 * C151884 + C150806 * (2 * C150806 * C151125 +
                                      C150806 * (C151125 + C151467 * C150950)));
    const double C151881 = C151878 + C151880;
    const double C151893 = C150806 * C151892;
    const double C150730 = C150614 * C150729;
    const double C149 = (4 * (2 * C150697 + C150621 * C150710) +
                         C150621 * (3 * C150710 + C150621 * C150729)) /
                        C150502;
    const double C606 =
        (2 * C150697 + C150621 * C150710 + C150729 * C150950) / C150502;
    const double C607 = (C150806 * (3 * C150710 + C150621 * C150729)) / C150502;
    const double C150781 = C150621 * C150779;
    const double C150930 = C150614 * C150779;
    const double C152344 = C152256 - C152306;
    const double C152345 = C152260 - C152308;
    const double C151940 = C151936 - C151939;
    const double C152348 = C152312 / C151926;
    const double C151949 = C151945 - C151948;
    const double C152366 = C152347 / C151930;
    const double C152022 = C152017 - C152021;
    const double C152352 = C152320 / C151926;
    const double C152029 = C152025 - C152028;
    const double C152370 = C152355 / C151930;
    const double C152064 = C152059 - C152063;
    const double C152354 = C152323 / C151926;
    const double C152071 = C152067 - C152070;
    const double C152372 = C152358 / C151930;
    const double C152363 = C152295 - C152342;
    const double C152364 = C152304 - C152343;
    const double C150517 = C152146 - C150516;
    const double C73632 = C73628 * C366;
    const double C193 = C187 + C164;
    const double C15374 = C15369 + C15338;
    const double C73668 = C152361 * C156;
    const double C73653 = C152361 * C155;
    const double C73650 = C152361 * C154;
    const double C73635 = C152361 * C153;
    const double C73952 = C152361 * C375;
    const double C73934 = C152361 * C376;
    const double C74254 = C152361 * C612;
    const double C74245 = C152361 * C616;
    const double C74236 = C152361 * C613;
    const double C75031 = C152361 * C1168;
    const double C93512 = C152361 * C615;
    const double C93502 = C152361 * C614;
    const double C94210 = C152361 * C1167;
    const double C94786 = C152361 * C1644;
    const double C96088 = C152361 * C2580;
    const double C59603 =
        (C152361 * C152193) / C150502 + (C152296 - C152338) / C150553;
    const double C73647 = C152362 * C375;
    const double C73638 = C152362 * C376;
    const double C74233 = C152362 * C1168;
    const double C93510 = C152362 * C1644;
    const double C93504 = C152362 * C1167;
    const double C59604 =
        (C152362 * C152193) / C150502 + (2 * C152198 + C152361) / C150553;
    const double C59605 = (C152193 * C152198) / C150513 + C152362 / C150553;
    const double C379 =
        (C150621 * C150628 + C150702 + C150702 +
         C150614 * (2 * ae * C150697 + C150614 * C150621 * C150637)) /
        C150509;
    const double C399 = C135 * C367;
    const double C6240 = C6228 * C367;
    const double C23571 = C23277 * C367;
    const double C51360 = C51066 * C367;
    const double C73640 = C73628 * C367;
    const double C1176 = C135 * C1162;
    const double C23871 = C23277 * C1162;
    const double C51660 = C51066 * C1162;
    const double C663 = C655 + C636;
    const double C150855 = C150854 + C150851;
    const double C1648 =
        (C150806 * C150628 + C150965 + C150965 +
         C150614 * (2 * ae * C150806 * C150682 + C150614 * C150806 * C150637)) /
        C150509;
    const double C16083 = C16065 + C1174;
    const double C16084 = C16068 + C1657;
    const double C194 = C188 + C167;
    const double C195 = C189 + C170;
    const double C433 = C425 + C395;
    const double C670 = C662 + C632;
    const double C15375 = C15370 + C15341;
    const double C17984 = C152146 * C2581;
    const double C44092 = C152296 * C2581;
    const double C68320 = C51058 * C2581;
    const double C96098 = C152361 * C2581;
    const double C112597 = C6218 * C2581;
    const double C16662 = C152146 * C3097;
    const double C44084 = C152198 * C3097;
    const double C45034 = C152296 * C3097;
    const double C65705 = C152198 * C3097;
    const double C66994 = C51058 * C3097;
    const double C96090 = C152362 * C3097;
    const double C96803 = C152361 * C3097;
    const double C112589 = C6219 * C3097;
    const double C113302 = C6218 * C3097;
    const double C432 = C424 + C392;
    const double C669 = C661 + C629;
    const double C15376 = C15371 + C15345;
    const double C157 =
        (4 * (2 * C150621 * C150637 + C150621 * C150647) +
         C150621 * (3 * C150647 +
                    C150621 * (2 * C150621 * C150645 +
                               C150621 * (C150645 + (C150640 * C150641 +
                                                     C150618 * bs[7] *
                                                         std::pow(C150616, 7)) *
                                                        C150617 * C150633)))) /
        C150509;
    const double C374 =
        (2 * ae *
             (2 * C150621 * C150682 +
              C150621 * (C150682 + C150632 * C150631 * C150680 * C150633)) +
         C150614 * (2 * C150621 * C150637 + C150621 * C150647)) /
        C150509;
    const double C611 =
        ((zP - zQ) * (2 * C150621 * C150637 + C150621 * C150647)) / C150509;
    const double C617 =
        (C150628 + C150637 * C150633 + C150647 * std::pow(zP - zQ, 2)) /
        C150509;
    const double C1169 =
        (2 * ae * C150806 * C150710 + C150614 * C150806 * C150647) / C150509;
    const double C150892 = C150888 + C150882;
    const double C2582 =
        (3 * (C150835 + C150649 * C150950) +
         C150806 * (2 * C151003 + C150806 * (C150649 + C150664 * C150950))) /
        C150509;
    const double C3098 =
        (2 * ae *
             (2 * C150806 * C150715 + C150806 * (C150715 + C150736 * C150950)) +
         C150614 * (2 * C151003 + C150806 * (C150649 + C150664 * C150950))) /
        C150509;
    const double C2796 = C152146 * C1643;
    const double C6848 = C6219 * C1643;
    const double C9904 = C6218 * C1643;
    const double C23885 = C152198 * C1643;
    const double C26874 = C152296 * C1643;
    const double C51674 = C152198 * C1643;
    const double C54663 = C51058 * C1643;
    const double C74248 = C152362 * C1643;
    const double C77241 = C152361 * C1643;
    const double C2949 = C152146 * C2579;
    const double C10119 = C6218 * C2579;
    const double C27090 = C152296 * C2579;
    const double C54879 = C51058 * C2579;
    const double C77453 = C152361 * C2579;
    const double C151091 = C150614 * C151086;
    const double C151107 = 2 * C151086;
    const double C151252 = C151251 + C151247;
    const double C150728 = C150726 * ae;
    const double C370 = (C150614 * (3 * C150710 + C150621 * C150729) +
                         (3 * C150707 + C150621 * C150726) * ae) /
                        C150502;
    const double C141 = 4 * (2 * C150698 + C150621 * C150707) +
                        C150621 * (3 * C150707 + C150621 * C150726);
    const double C357 = 2 * C150698 + C150621 * C150707 + C150726 * C150618;
    const double C358 = C150614 * (3 * C150707 + C150621 * C150726);
    const double C594 = 2 * C150698 + C150621 * C150707 + C150726 * C150950;
    const double C595 = C150806 * (3 * C150707 + C150621 * C150726);
    const double C1158 = C150806 * C150614 * C150726;
    const double C1439 =
        2 * C150614 * C150726 + C150614 * (C150726 + C150748 * C150618);
    const double C1621 = C150806 * (C150726 + C150748 * C150618);
    const double C2561 =
        2 * C150806 * C150726 + C150806 * (C150726 + C150748 * C150950);
    const double C2793 = C134 * C1618;
    const double C16077 = C134 * C3091;
    const double C150830 = ae * C150827;
    const double C150829 = C150614 * C150827;
    const double C150906 = 2 * C150827;
    const double C150958 = C150806 * C150827;
    const double C15109 = C134 * C1626;
    const double C16898 = C134 * C2164;
    const double C16673 = C134 * C9575;
    const double C151035 = C150649 + C150895;
    const double C150896 = C150715 + C150893;
    const double C150972 = C150839 + C150971;
    const double C151007 = ae * C151005;
    const double C151377 = 2 * C151005;
    const double C17986 = C134 * C17969;
    const double C151096 = C151093 * ae;
    const double C8008 = 4 * (2 * C150849 + C150614 * C150868) +
                         C150614 * (3 * C150868 + C150614 * C151093);
    const double C8250 = 2 * C150849 + C150614 * C150868 + C151093 * C150950;
    const double C8252 = C150806 * (3 * C150868 + C150614 * C151093);
    const double C10325 =
        2 * C150806 * C151093 + C150806 * (C151093 + C151134 * C150950);
    const double C120292 = C134 * C18703;
    const double C151121 = C151108 + C151090;
    const double C151095 = C151092 + C151084;
    const double C151226 = ae * C151224;
    const double C151383 = C150806 * C151224;
    const double C151388 = 3 * C151224;
    const double C151339 = C151242 + C151250;
    const double C17971 =
        5 * (3 * C151845 + C150806 * C151852) +
        C150806 *
            (4 * C151852 +
             C150806 * (3 * C151850 +
                        C150806 * (2 * C150806 * C150639 +
                                   C150806 * (C150639 + C150650 * C150950))));
    const double C150713 = ae * C150712;
    const double C368 = (C150691 + C150682 * C150633 + C150614 * C150712 +
                         C150614 * C150707 * ae) /
                        C150502;
    const double C1163 = (C150806 * C150712) / C150502;
    const double C1630 = (C150712 + C150827 * C150950) / C150502;
    const double C184 = C171 + C172;
    const double C415 = C387 + C388;
    const double C652 = C624 + C625;
    const double C656 = C638 + C639;
    const double C2952 = C2946 + C2587;
    const double C150843 = C150697 + C150841;
    const double C150962 = ae * C150961;
    const double C1656 = C135 * C1631;
    const double C23884 = C23277 * C1631;
    const double C51673 = C51066 * C1631;
    const double C2956 = C2953 + C2588;
    const double C15372 = C15365 + C2591;
    const double C151081 = C151071 + C150872;
    const double C150874 = C150873 + C150867;
    const double C150969 = ae * C150968;
    const double C3093 = (2 * C150964 + C150806 * C150968) / C150502;
    const double C17996 = C17989 + C17990;
    const double C150660 = C150621 * C150659;
    const double C150663 = 3 * C150659;
    const double C150905 = C150614 * C150659;
    const double C151009 = C150806 * C150659;
    const double C1642 = (2 * ae * (C150710 + C150725 * C150950) +
                          C150614 * (C150647 + C150659 * C150950)) /
                         C150509;
    const double C2578 =
        (2 * C150806 * C150647 + C150806 * (C150647 + C150659 * C150950)) /
        C150509;
    const double C151050 = C151046 + C151037;
    const double C151213 = C150649 + C151210;
    const double C151234 = C150614 * C151229;
    const double C151428 = 2 * C151229;
    const double C151132 = C150614 * C151127;
    const double C151446 = 2 * C151127;
    const double C151265 = C150614 * C151260;
    const double C151420 = C150806 * C151260;
    const double C151560 = 3 * C151260;
    const double C9589 =
        (2 * ae *
             (3 * (C150682 + C150706 * C150950) +
              C150806 * (2 * C151241 + C150806 * C151259)) +
         C150614 *
             (3 * C151222 + C150806 * (2 * C151242 + C150806 * C151260))) /
        C150509;
    const double C151354 = C151353 + C151348;
    const double C150675 = C150621 * C150674;
    const double C151292 = C150614 * C150674;
    const double C151327 = C150806 * C150674;
    const double C151405 = C150674 * C150950;
    const double C151177 = C151170 + C151171;
    const double C151278 = C150664 + C151273;
    const double C151367 = C150614 * C151360;
    const double C151475 = C150614 * C151470;
    const double C151524 = C150614 * C151518;
    const double C151562 = C150806 * C151518;
    const double C151554 = C151553 + C151546;
    const double C150778 = C150621 * C150776;
    const double C150933 = C150776 * C150618;
    const double C150932 = C150614 * C150776;
    const double C150931 = C150776 * ae;
    const double C2568 = 3 * (C150726 + C150748 * C150950) +
                         C150806 * (2 * C150806 * C150748 +
                                    C150806 * (C150748 + C150776 * C150950));
    const double C151308 = C150614 * C151304;
    const double C151307 = C151304 * ae;
    const double C10110 =
        2 * C150806 * C150914 + C150806 * (C150914 + C151304 * C150950);
    const double C151309 = ae * C151302;
    const double C151306 = C150614 * C151302;
    const double C151330 = C150806 * C151302;
    const double C151407 = C151302 * C150950;
    const double C151188 = C151166 + C151184;
    const double C151187 = C150763 + C151182;
    const double C151281 = C151047 + C151276;
    const double C151371 = ae * C151364;
    const double C151481 = C150614 * C151477;
    const double C151480 = C151477 * ae;
    const double C61693 = 3 * (C151093 + C151134 * C150950) +
                          C150806 * (2 * C150806 * C151134 +
                                     C150806 * (C151134 + C151477 * C150950));
    const double C151479 = C151476 + C151466;
    const double C151528 = ae * C151522;
    const double C151568 = C150806 * C151522;
    const double C150753 = C150621 * C150751;
    const double C150761 = 4 * C150751;
    const double C150813 = C150614 * C150751;
    const double C150927 = ae * C150751;
    const double C2569 =
        (2 * C150806 * C150729 + C150806 * (C150729 + C150751 * C150950)) /
        C150502;
    const double C2576 = (3 * (C150729 + C150751 * C150950) +
                          C150806 * (2 * C150806 * C150751 +
                                     C150806 * (C150751 + C150779 * C150950))) /
                         C150502;
    const double C150918 = ae * C150912;
    const double C150916 = C150614 * C150912;
    const double C150975 = C150912 * C150950;
    const double C151011 = C150806 * C150912;
    const double C151294 = 2 * C150912;
    const double C151336 = 2 * C151331;
    const double C18503 =
        (4 * (2 * C150806 * C150725 + C150806 * C151722) +
         C150806 * (3 * C151722 +
                    C150806 * (2 * C151326 +
                               C150806 * (C150747 + C150775 * C150950)))) /
        C150502;
    const double C15367 = C15354 + C2592;
    const double C151158 = C150664 + C151054;
    const double C151056 = C150736 + C151051;
    const double C151215 = C150889 + C151212;
    const double C151237 = ae * C151232;
    const double C151398 = 2 * C151232;
    const double C151287 = 2 * C151282;
    const double C151718 = C151716 + C151717;
    const double C17987 = C135 * C17973;
    const double C151463 = C151447 + C151131;
    const double C151136 = C151133 + C151124;
    const double C151268 = ae * C151263;
    const double C151390 = C150806 * C151263;
    const double C151566 = 3 * C151263;
    const double C151535 = C151341 + C151352;
    const double C151590 = ae * C151588;
    const double C151734 = C150806 * C151588;
    const double C17975 =
        (5 * (3 * C151710 + C150806 * C151714) +
         C150806 *
             (4 * C151714 + C150806 * (3 * C151259 + C150806 * C151588))) /
        C150502;
    const double C150752 = C150738 + C150750;
    const double C150817 = C150815 * ae;
    const double C1617 = C150614 * C150726 + C150815 * C150950;
    const double C15111 = C134 * C1627;
    const double C33763 = C134 * C2165;
    const double C151060 = C151057 * ae;
    const double C8007 = 4 * (2 * C150838 + C150614 * C150891) +
                         C150614 * (3 * C150891 + C150614 * C151057);
    const double C8249 = 2 * C150838 + C150614 * C150891 + C151057 * C150950;
    const double C8251 = C150806 * (3 * C150891 + C150614 * C151057);
    const double C17972 =
        5 * (3 * C151842 + C150806 * C151859) +
        C150806 *
            (4 * C151859 +
             C150806 * (3 * C151857 +
                        C150806 * (2 * C150806 * C150767 +
                                   C150806 * (C150767 + C151165 * C150950))));
    const double C151141 = C151119 + C151138;
    const double C68314 =
        5 * (3 * C151866 + C150806 * C151881) +
        C150806 *
            (4 * C151881 +
             C150806 * (3 * C151879 +
                        C150806 * (2 * C150806 * C151116 +
                                   C150806 * (C151116 + C151456 * C150950))));
    const double C151894 = C151886 + C151893;
    const double C175 = C135 * C149;
    const double C642 = C135 * C606;
    const double C645 = C135 * C607;
    const double C150783 = C150762 + C150781;
    const double C122 =
        (C152344 * C151901) / C150502 + (C152258 - C152307) / C150553;
    const double C123 =
        (C152345 * C151901) / C150502 + (2 * C151911 + C152344) / C150553;
    const double C124 = (C151901 * C151911) / C150513 + C152345 / C150553;
    const double C152264 = C151940 * C151928;
    const double C152314 = C152269 + C151940;
    const double C152272 = C151949 / C151930;
    const double C152268 = C151949 * C151928;
    const double C807 = C152366 - (C151940 * C151931) / C151926;
    const double C152282 = C152022 * C152016;
    const double C152329 = C152284 + C152022;
    const double C152286 = C152029 / C151930;
    const double C152283 = C152029 * C152016;
    const double C1795 = C152370 - (C152022 * C152018) / C151926;
    const double C152288 = C152064 * C152058;
    const double C152335 = C152290 + C152064;
    const double C152292 = C152071 / C151930;
    const double C152289 = C152071 * C152058;
    const double C2936 = C152372 - (C152064 * C152060) / C151926;
    const double C117824 =
        (C152363 * C152221) / C150502 + (C152297 - C152341) / C150553;
    const double C117825 =
        (C152364 * C152221) / C150502 + (2 * C152226 + C152363) / C150553;
    const double C117826 = (C152221 * C152226) / C150513 + C152364 / C150553;
    const double C150518 = C150517 * C150511;
    const double C150558 = C150517 * ae;
    const double C6224 =
        (((0 - (C150500 * C150508) / C150502) * ae) / C150502 -
         (0 * be) / C150513) /
            (2 * C150502) +
        ((C150500 * ((C150517 * ae) / C150502 - C150508 / C150513) + C152296) *
         ae) /
            C150502 +
        (0 * ae) / C150502 - C150512 / C150509;
    const double C6226 =
        ((C150517 * ae) / C150502 - C150508 / C150513) / (2 * C150502) +
        ((C150500 * ((0 * ae) / C150502 - C150512 / C150509) + C152198) * ae) /
            C150502;
    const double C23275 = (C150517 * ae) / C150502 - C150508 / C150513;
    const double C51064 =
        (-C150508 / C150502) / (2 * C150502) - (C150517 * be) / C150502;
    const double C15379 = C15374 * C6221;
    const double C32293 = C15374 * C152344;
    const double C101804 = C15374 * C51060;
    const double C118121 = C15374 * C151906;
    const double C134648 = C15374 * C152258;
    const double C400 = C152146 * C379;
    const double C6241 = C6220 * C379;
    const double C6543 = C6218 * C379;
    const double C6531 = C6219 * C379;
    const double C23582 = C152296 * C379;
    const double C23572 = C152198 * C379;
    const double C51371 = C51058 * C379;
    const double C51361 = C152198 * C379;
    const double C73641 = C73620 * C379;
    const double C73943 = C152361 * C379;
    const double C73931 = C152362 * C379;
    const double C418 = C398 + C399;
    const double C1188 = C1175 + C1176;
    const double C671 = C663 + C637;
    const double C150856 = ae * C150855;
    const double C1450 =
        (2 * C150694 + C150614 * C150855 + (C150689 + C150622 * C150618) * ae) /
        C150502;
    const double C1636 = (C150806 * C150855) / C150502;
    const double C16668 = C152146 * C1648;
    const double C41611 = C152198 * C1648;
    const double C42372 = C152296 * C1648;
    const double C66412 = C152198 * C1648;
    const double C67001 = C51058 * C1648;
    const double C93506 = C73620 * C1648;
    const double C94212 = C152362 * C1648;
    const double C94792 = C152361 * C1648;
    const double C110005 = C6220 * C1648;
    const double C110711 = C6219 * C1648;
    const double C111291 = C6218 * C1648;
    const double C16087 = C16083 + C1174;
    const double C16088 = C16084 + C1657;
    const double C15348 = C670 * C6221;
    const double C15339 = C670 * C151911;
    const double C32299 = C670 * C152344;
    const double C32294 = C670 * C152345;
    const double C101810 = C670 * C51060;
    const double C101805 = C670 * C51061;
    const double C118125 = C670 * C151906;
    const double C134654 = C670 * C152258;
    const double C134649 = C670 * C151911;
    const double C15380 = C15375 * C6221;
    const double C32298 = C15375 * C152344;
    const double C101809 = C15375 * C51060;
    const double C118122 = C15375 * C151906;
    const double C134650 = C15375 * C152258;
    const double C18000 = C17997 + C17984;
    const double C15356 = C669 * C6221;
    const double C15349 = C669 * C151911;
    const double C32305 = C669 * C152344;
    const double C32300 = C669 * C152345;
    const double C32295 = C669 * C23273;
    const double C101816 = C669 * C51060;
    const double C101811 = C669 * C51061;
    const double C101806 = C669 * C51062;
    const double C118129 = C669 * C151906;
    const double C134660 = C669 * C152258;
    const double C134655 = C669 * C151911;
    const double C15381 = C15376 * C6221;
    const double C34816 = C15376 * C152344;
    const double C104321 = C15376 * C51060;
    const double C118123 = C15376 * C151906;
    const double C134653 = C15376 * C152258;
    const double C176 = C152146 * C157;
    const double C23310 = C152296 * C157;
    const double C51099 = C51058 * C157;
    const double C389 = C152146 * C374;
    const double C6256 = C6219 * C374;
    const double C7111 = C6218 * C374;
    const double C23295 = C152198 * C374;
    const double C23594 = C152296 * C374;
    const double C51084 = C152198 * C374;
    const double C51383 = C51058 * C374;
    const double C73656 = C152362 * C374;
    const double C74511 = C152361 * C374;
    const double C626 = C152146 * C611;
    const double C7323 = C6218 * C611;
    const double C23894 = C152296 * C611;
    const double C51683 = C51058 * C611;
    const double C74723 = C152361 * C611;
    const double C640 = C152146 * C617;
    const double C6869 = C6218 * C617;
    const double C23888 = C152296 * C617;
    const double C51677 = C51058 * C617;
    const double C74269 = C152361 * C617;
    const double C1180 = C152146 * C1169;
    const double C6857 = C6219 * C1169;
    const double C7646 = C6218 * C1169;
    const double C23866 = C152198 * C1169;
    const double C24660 = C152296 * C1169;
    const double C51655 = C152198 * C1169;
    const double C52449 = C51058 * C1169;
    const double C74257 = C152362 * C1169;
    const double C75046 = C152361 * C1169;
    const double C15347 = C152146 * C2582;
    const double C44088 = C152296 * C2582;
    const double C68848 = C51058 * C2582;
    const double C10117 = C6219 * C3098;
    const double C16072 = C152146 * C3098;
    const double C27088 = C152198 * C3098;
    const double C44505 = C152296 * C3098;
    const double C54877 = C152198 * C3098;
    const double C68640 = C51058 * C3098;
    const double C77451 = C152362 * C3098;
    const double C150731 = C150730 + C150728;
    const double C408 = C135 * C370;
    const double C23303 = C23277 * C370;
    const double C51092 = C51066 * C370;
    const double C174 = C134 * C141;
    const double C404 = C134 * C357;
    const double C407 = C134 * C358;
    const double C641 = C134 * C594;
    const double C644 = C134 * C595;
    const double C1181 = C134 * C1158;
    const double C1805 = C134 * C1439;
    const double C2018 = C134 * C1621;
    const double C2944 = C134 * C2561;
    const double C150831 = C150710 + C150829;
    const double C150959 = ae * C150958;
    const double C151045 = C151035 + C150895;
    const double C150897 = C150896 + C150890;
    const double C150973 = ae * C150972;
    const double C3094 = (2 * C150961 + C150806 * C150972) / C150502;
    const double C17399 = C134 * C8250;
    const double C119444 = C134 * C10325;
    const double C151098 = ae * C151095;
    const double C151097 = C150614 * C151095;
    const double C151112 = 3 * C151095;
    const double C151220 = C151095 * C150950;
    const double C151244 = C150806 * C151095;
    const double C151384 = C151382 + C151383;
    const double C151346 = C151339 + C151250;
    const double C119829 = C134 * C17971;
    const double C380 = (C150628 + C150637 * C150633 + C150713 + C150713 +
                         C150614 * (2 * ae * C150710 + C150614 * C150647)) /
                        C150509;
    const double C402 = C135 * C368;
    const double C6243 = C6228 * C368;
    const double C23565 = C23277 * C368;
    const double C51354 = C51066 * C368;
    const double C73643 = C73628 * C368;
    const double C1179 = C135 * C1163;
    const double C23865 = C23277 * C1163;
    const double C51654 = C51066 * C1163;
    const double C1655 = C135 * C1630;
    const double C23890 = C23277 * C1630;
    const double C51679 = C51066 * C1630;
    const double C190 = C184 + C172;
    const double C423 = C415 + C388;
    const double C660 = C652 + C625;
    const double C664 = C656 + C639;
    const double C2955 = C2952 + C2587;
    const double C150844 = C150843 + C150840;
    const double C1647 =
        (C150806 * C150835 + C150962 + C150962 +
         C150614 * (2 * ae * C150806 * C150715 + C150614 * C150806 * C150649)) /
        C150509;
    const double C2800 = C2795 + C1656;
    const double C2959 = C2956 + C2949;
    const double C151094 = C151081 + C151091;
    const double C150876 = ae * C150874;
    const double C150875 = C150614 * C150874;
    const double C150998 = C150806 * C150874;
    const double C151074 = 3 * C150874;
    const double C1637 = (C150855 + C150874 * C150950) / C150502;
    const double C1649 = (C150628 + C150637 * C150950 + C150969 + C150969 +
                          C150614 * (2 * ae * (C150682 + C150706 * C150950) +
                                     C150614 * (C150637 + C150645 * C150950))) /
                         C150509;
    const double C3102 = C135 * C3093;
    const double C26569 = C23277 * C3093;
    const double C54358 = C51066 * C3093;
    const double C17999 = C17996 + C17990;
    const double C150661 = C150653 + C150660;
    const double C150915 = C150911 + C150905;
    const double C2583 =
        (3 * (C150647 + C150659 * C150950) +
         C150806 * (2 * C151009 + C150806 * (C150659 + C150674 * C150950))) /
        C150509;
    const double C3099 =
        (2 * ae *
             (2 * C150806 * C150725 + C150806 * (C150725 + C150747 * C150950)) +
         C150614 * (2 * C151009 + C150806 * (C150659 + C150674 * C150950))) /
        C150509;
    const double C2794 = C152146 * C1642;
    const double C6866 = C6219 * C1642;
    const double C23891 = C152198 * C1642;
    const double C26870 = C152296 * C1642;
    const double C51680 = C152198 * C1642;
    const double C54659 = C51058 * C1642;
    const double C74266 = C152362 * C1642;
    const double C2947 = C152146 * C2578;
    const double C27086 = C152296 * C2578;
    const double C54875 = C51058 * C2578;
    const double C151055 = C150614 * C151050;
    const double C151157 = 2 * C151050;
    const double C151239 = C151238 + C151234;
    const double C151135 = C151121 + C151132;
    const double C151270 = C151269 + C151265;
    const double C151424 = C151419 + C151420;
    const double C18713 = C152146 * C9589;
    const double C44090 = C152198 * C9589;
    const double C68322 = C152198 * C9589;
    const double C69059 = C51058 * C9589;
    const double C96096 = C152362 * C9589;
    const double C112595 = C6219 * C9589;
    const double C146060 = C152296 * C9589;
    const double C151355 = C150614 * C151354;
    const double C151534 = 2 * C151354;
    const double C150676 = C150668 + C150675;
    const double C151305 = C151301 + C151292;
    const double C151332 = C150614 * C151327;
    const double C151408 = C150659 + C151405;
    const double C151181 = C150614 * C151177;
    const double C151283 = C150614 * C151278;
    const double C151429 = C150806 * C151278;
    const double C9591 =
        (2 * ae *
             (3 * (C150715 + C150736 * C150950) +
              C150806 * (2 * C151228 + C150806 * C151277)) +
         C150614 *
             (3 * C151213 + C150806 * (2 * C151229 + C150806 * C151278))) /
        C150509;
    const double C151373 = C151372 + C151367;
    const double C151530 = C151529 + C151524;
    const double C151569 = C151561 + C151562;
    const double C151555 = C150614 * C151554;
    const double C150780 = C150766 + C150778;
    const double C150937 = C150748 + C150933;
    const double C150936 = C150932 * ae;
    const double C3092 =
        2 * C150806 * C150815 + C150806 * (C150815 + C150932 * C150950);
    const double C150935 = C150930 + C150931;
    const double C151312 = C151299 + C151308;
    const double C151311 = C150747 + C151306;
    const double C151335 = ae * C151330;
    const double C151410 = C150912 + C151407;
    const double C151192 = C150614 * C151188;
    const double C151191 = C151188 * ae;
    const double C10326 =
        2 * C150806 * C151057 + C150806 * (C151057 + C151188 * C150950);
    const double C151190 = C151187 + C151179;
    const double C151286 = ae * C151281;
    const double C151399 = C150806 * C151281;
    const double C151484 = C151459 + C151481;
    const double C151485 = ae * C151479;
    const double C151483 = C150614 * C151479;
    const double C151514 = C151479 * C150950;
    const double C151541 = C150806 * C151479;
    const double C151571 = C151567 + C151568;
    const double C150755 = C150735 + C150753;
    const double C150816 = C150813 + C150814;
    const double C150934 = 2 * C150927;
    const double C2586 = C135 * C2569;
    const double C2593 = C135 * C2576;
    const double C151290 = C150659 + C150918;
    const double C150919 = C150725 + C150916;
    const double C150976 = C150827 + C150975;
    const double C151013 = ae * C151011;
    const double C151414 = 2 * C151011;
    const double C18509 = C135 * C18503;
    const double C15373 = C15367 + C2592;
    const double C151169 = C151158 + C151054;
    const double C151059 = C151056 + C151048;
    const double C151217 = ae * C151215;
    const double C151378 = C150806 * C151215;
    const double C151397 = 3 * C151215;
    const double C151358 = C151229 + C151237;
    const double C17976 =
        (5 * (3 * C151707 + C150806 * C151718) +
         C150806 * (4 * C151718 +
                    C150806 * (3 * C151277 +
                               C150806 * (2 * C151359 +
                                          C150806 * (C150763 +
                                                     C151164 * C150950))))) /
        C150502;
    const double C17995 = C17986 + C17987;
    const double C151478 = C151463 + C151475;
    const double C151142 = ae * C151136;
    const double C151140 = C150614 * C151136;
    const double C151257 = C151136 * C150950;
    const double C151344 = C150806 * C151136;
    const double C151452 = 3 * C151136;
    const double C151509 = C151260 + C151268;
    const double C151391 = C151389 + C151390;
    const double C151544 = C151535 + C151352;
    const double C151592 = 2 * C151590;
    const double C151735 = C151733 + C151734;
    const double C17992 = C135 * C17975;
    const double C150754 = C150752 * ae;
    const double C142 = 5 * (3 * C150707 + C150621 * C150726) +
                        C150621 * (4 * C150726 + C150621 * C150752);
    const double C359 = 3 * C150707 + C150621 * C150726 + C150752 * C150618;
    const double C360 = C150614 * (4 * C150726 + C150621 * C150752);
    const double C596 = 3 * C150707 + C150621 * C150726 + C150752 * C150950;
    const double C597 = C150806 * (4 * C150726 + C150621 * C150752);
    const double C1159 = C150806 * C150614 * C150752;
    const double C2791 = C134 * C1617;
    const double C16896 = C134 * C8249;
    const double C151145 = C151141 * ae;
    const double C8009 = 5 * (3 * C150868 + C150614 * C151093) +
                         C150614 * (4 * C151093 + C150614 * C151141);
    const double C8253 = 3 * C150868 + C150614 * C151093 + C151141 * C150950;
    const double C9005 = C150806 * (4 * C151093 + C150614 * C151141);
    const double C119824 =
        6 * (4 * C151852 + C150806 * C151894) +
        C150806 *
            (5 * C151894 +
             C150806 * (4 * C151892 +
                        C150806 * (3 * C151890 +
                                   C150806 * (2 * C150806 * C150650 +
                                              C150806 * (C150650 +
                                                         C150665 * C150950)))));
    const double C150785 = C150621 * C150783;
    const double C150983 = C150614 * C150783;
    const double C152310 = C152264 / C151926;
    const double C152349 = C152314 / C151930;
    const double C152350 = C152316 + C152272;
    const double C809 = C152272 - C151947 / C151944;
    const double C152313 = C152268 / C151926;
    const double C152326 = C152282 / C151926;
    const double C152356 = C152329 / C151930;
    const double C152357 = C152330 + C152286;
    const double C1797 = C152286 - C152027 / C151944;
    const double C152328 = C152283 / C151926;
    const double C152332 = C152288 / C151926;
    const double C152359 = C152335 / C151930;
    const double C152360 = C152336 + C152292;
    const double C2938 = C152292 - C152069 / C151944;
    const double C152334 = C152289 / C151926;
    const double C150526 = C150500 * C150518;
    const double C6223 =
        (ae * -2 * C150508) / (C150509 * 2 * C150502) +
        (((C150500 *
           ((-4 * C150512) / C150502 - (C150500 * C150518) / C150502) * ae) /
              C150502 +
          2 * ((C150517 * ae) / C150502 - C150508 / C150513)) *
         ae) /
            C150502 -
        C150518 / C150513;
    const double C6227 = (-C150518 / C150502) / (4 * C150509);
    const double C23276 = (-C150518 / C150502) / (2 * C150502);
    const double C51065 = (-C150518 / C150502) / (2 * C150502);
    const double C59614 = (-C150518 / C150502) / (4 * C150562);
    const double C73627 = (-C150518 / C150502) / (4 * C150509);
    const double C150567 = C150558 / C150502;
    const double C6269 = C6224 * C149;
    const double C6267 = C6224 * C148;
    const double C6252 = C6224 * C147;
    const double C6249 = C6224 * C146;
    const double C6234 = C6224 * C145;
    const double C6230 = C6224 * C144;
    const double C6570 = C6224 * C362;
    const double C6566 = C6224 * C368;
    const double C6551 = C6224 * C363;
    const double C6542 = C6224 * C367;
    const double C6538 = C6224 * C366;
    const double C6537 = C6224 * C365;
    const double C6533 = C6224 * C364;
    const double C6873 = C6224 * C606;
    const double C6872 = C6224 * C599;
    const double C6868 = C6224 * C605;
    const double C6853 = C6224 * C600;
    const double C6844 = C6224 * C604;
    const double C6840 = C6224 * C603;
    const double C6839 = C6224 * C602;
    const double C6835 = C6224 * C601;
    const double C7112 = C6224 * C370;
    const double C7324 = C6224 * C607;
    const double C7645 = C6224 * C1163;
    const double C7630 = C6224 * C1162;
    const double C7626 = C6224 * C1161;
    const double C8273 = C6224 * C1632;
    const double C8270 = C6224 * C1631;
    const double C9603 = C6224 * C2574;
    const double C9600 = C6224 * C2573;
    const double C9599 = C6224 * C2572;
    const double C9596 = C6224 * C2571;
    const double C9905 = C6224 * C1630;
    const double C10120 = C6224 * C2570;
    const double C10332 = C6224 * C3093;
    const double C112598 = C6224 * C17974;
    const double C6264 = C6226 * C370;
    const double C6255 = C6226 * C362;
    const double C6246 = C6226 * C363;
    const double C6237 = C6226 * C364;
    const double C6231 = C6226 * C365;
    const double C6554 = C6226 * C368;
    const double C6536 = C6226 * C366;
    const double C6530 = C6226 * C367;
    const double C6865 = C6226 * C1630;
    const double C6856 = C6226 * C1163;
    const double C6847 = C6226 * C1631;
    const double C6841 = C6226 * C1632;
    const double C6838 = C6226 * C1161;
    const double C6832 = C6226 * C1162;
    const double C9598 = C6226 * C3093;
    const double C23309 = C23275 * C149;
    const double C23300 = C23275 * C148;
    const double C23297 = C23275 * C147;
    const double C23288 = C23275 * C146;
    const double C23282 = C23275 * C145;
    const double C23279 = C23275 * C144;
    const double C23605 = C23275 * C370;
    const double C23593 = C23275 * C362;
    const double C23587 = C23275 * C368;
    const double C23581 = C23275 * C367;
    const double C23578 = C23275 * C366;
    const double C23577 = C23275 * C365;
    const double C23574 = C23275 * C364;
    const double C23568 = C23275 * C363;
    const double C23905 = C23275 * C607;
    const double C23902 = C23275 * C606;
    const double C23893 = C23275 * C599;
    const double C23887 = C23275 * C605;
    const double C23881 = C23275 * C604;
    const double C23878 = C23275 * C603;
    const double C23877 = C23275 * C602;
    const double C23874 = C23275 * C601;
    const double C23868 = C23275 * C600;
    const double C24659 = C23275 * C1163;
    const double C24653 = C23275 * C1162;
    const double C24650 = C23275 * C1161;
    const double C25266 = C23275 * C1632;
    const double C25264 = C23275 * C1631;
    const double C25262 = C23275 * C1630;
    const double C26575 = C23275 * C2575;
    const double C26573 = C23275 * C2574;
    const double C26571 = C23275 * C2573;
    const double C26570 = C23275 * C2572;
    const double C26568 = C23275 * C2571;
    const double C26566 = C23275 * C2570;
    const double C27091 = C23275 * C2569;
    const double C27299 = C23275 * C3093;
    const double C44095 = C23275 * C17973;
    const double C44093 = C23275 * C17974;
    const double C145366 = C23275 * C17975;
    const double C51098 = C51064 * C149;
    const double C51089 = C51064 * C148;
    const double C51086 = C51064 * C147;
    const double C51077 = C51064 * C146;
    const double C51071 = C51064 * C145;
    const double C51068 = C51064 * C144;
    const double C51394 = C51064 * C370;
    const double C51382 = C51064 * C362;
    const double C51376 = C51064 * C368;
    const double C51370 = C51064 * C367;
    const double C51367 = C51064 * C366;
    const double C51366 = C51064 * C365;
    const double C51363 = C51064 * C364;
    const double C51357 = C51064 * C363;
    const double C51694 = C51064 * C607;
    const double C51691 = C51064 * C606;
    const double C51682 = C51064 * C599;
    const double C51676 = C51064 * C605;
    const double C51670 = C51064 * C604;
    const double C51667 = C51064 * C603;
    const double C51666 = C51064 * C602;
    const double C51663 = C51064 * C601;
    const double C51657 = C51064 * C600;
    const double C52448 = C51064 * C1163;
    const double C52442 = C51064 * C1162;
    const double C52439 = C51064 * C1161;
    const double C53055 = C51064 * C1632;
    const double C53053 = C51064 * C1631;
    const double C53051 = C51064 * C1630;
    const double C54364 = C51064 * C2575;
    const double C54362 = C51064 * C2574;
    const double C54360 = C51064 * C2573;
    const double C54359 = C51064 * C2572;
    const double C54357 = C51064 * C2571;
    const double C54355 = C51064 * C2570;
    const double C54880 = C51064 * C2569;
    const double C55088 = C51064 * C3093;
    const double C68329 = C51064 * C17975;
    const double C68327 = C51064 * C17974;
    const double C68849 = C51064 * C17973;
    const double C426 = C418 + C399;
    const double C1192 = C1188 + C1176;
    const double C15350 = C671 * C6221;
    const double C15342 = C671 * C151911;
    const double C32302 = C671 * C152344;
    const double C32297 = C671 * C152345;
    const double C101813 = C671 * C51060;
    const double C101808 = C671 * C51061;
    const double C118126 = C671 * C151906;
    const double C134656 = C671 * C152258;
    const double C134651 = C671 * C151911;
    const double C1458 =
        (2 * (2 * ae * C150691 + C150614 * C150628) + C150856 + C150856 +
         C150614 * (C150628 + C150853 + C150853 +
                    C150614 * (2 * ae * C150682 + C150614 * C150637))) /
        C150509;
    const double C1467 = C135 * C1450;
    const double C6539 = C6226 * C1450;
    const double C6535 = C6228 * C1450;
    const double C8025 = C6224 * C1450;
    const double C23579 = C23277 * C1450;
    const double C25036 = C23275 * C1450;
    const double C51368 = C51066 * C1450;
    const double C52825 = C51064 * C1450;
    const double C59620 = C59615 * C1450;
    const double C73935 = C73628 * C1450;
    const double C1661 = C135 * C1636;
    const double C6837 = C6228 * C1636;
    const double C7627 = C6226 * C1636;
    const double C8279 = C6224 * C1636;
    const double C24651 = C23277 * C1636;
    const double C25272 = C23275 * C1636;
    const double C52440 = C51066 * C1636;
    const double C53061 = C51064 * C1636;
    const double C74237 = C73628 * C1636;
    const double C16091 = C16087 + C16066;
    const double C16092 = C16088 + C16069;
    const double C18003 = C18000 * C6221;
    const double C34821 = C18000 * C152344;
    const double C104326 = C18000 * C51060;
    const double C118124 = C18000 * C151906;
    const double C137176 = C18000 * C152258;
    const double C15377 = C15372 + C15347;
    const double C150732 = ae * C150731;
    const double C369 = (2 * C150697 + C150621 * C150710 + C150614 * C150731 +
                         C150614 * C150726 * ae) /
                        C150502;
    const double C1164 = (C150806 * C150731) / C150502;
    const double C185 = C174 + C175;
    const double C421 = C407 + C408;
    const double C657 = C641 + C642;
    const double C658 = C644 + C645;
    const double C150832 = C150831 + C150828;
    const double C1646 =
        (C150806 * C150647 + C150959 + C150959 +
         C150614 * (2 * ae * C150806 * C150725 + C150614 * C150806 * C150659)) /
        C150509;
    const double C150899 = ae * C150897;
    const double C150898 = C150614 * C150897;
    const double C151004 = C150806 * C150897;
    const double C151038 = 3 * C150897;
    const double C1650 = (C150835 + C150649 * C150950 + C150973 + C150973 +
                          C150614 * (2 * ae * (C150715 + C150736 * C150950) +
                                     C150614 * (C150649 + C150664 * C150950))) /
                         C150509;
    const double C3103 = C135 * C3094;
    const double C9595 = C6226 * C3094;
    const double C10335 = C6224 * C3094;
    const double C26567 = C23277 * C3094;
    const double C27301 = C23275 * C3094;
    const double C54356 = C51066 * C3094;
    const double C55090 = C51064 * C3094;
    const double C151120 = C151107 + C151098;
    const double C151099 = C151075 + C151097;
    const double C151223 = C150874 + C151220;
    const double C151249 = ae * C151244;
    const double C151421 = 2 * C151244;
    const double C151385 = ae * C151384;
    const double C9583 = (3 * C150968 + C150806 * C151384) / C150502;
    const double C403 = C152146 * C380;
    const double C6244 = C6220 * C380;
    const double C6567 = C6218 * C380;
    const double C6555 = C6219 * C380;
    const double C23588 = C152296 * C380;
    const double C23566 = C152198 * C380;
    const double C51377 = C51058 * C380;
    const double C51355 = C152198 * C380;
    const double C73644 = C73620 * C380;
    const double C73967 = C152361 * C380;
    const double C73955 = C152362 * C380;
    const double C419 = C401 + C402;
    const double C1189 = C1178 + C1179;
    const double C2799 = C2793 + C1655;
    const double C196 = C190 + C173;
    const double C431 = C423 + C389;
    const double C668 = C660 + C626;
    const double C672 = C664 + C640;
    const double C150845 = ae * C150844;
    const double C1449 =
        (2 * C150701 + C150614 * C150844 + (C150698 + C150717 * C150618) * ae) /
        C150502;
    const double C1635 = (C150806 * C150844) / C150502;
    const double C1638 = (C150844 + C150897 * C150950) / C150502;
    const double C2023 = C152146 * C1647;
    const double C6830 = C6220 * C1647;
    const double C7634 = C6219 * C1647;
    const double C8799 = C6218 * C1647;
    const double C24657 = C152198 * C1647;
    const double C25792 = C152296 * C1647;
    const double C52446 = C152198 * C1647;
    const double C53581 = C51058 * C1647;
    const double C74230 = C73620 * C1647;
    const double C75034 = C152362 * C1647;
    const double C76163 = C152361 * C1647;
    const double C2803 = C2800 + C1656;
    const double C15352 = C2959 * C6221;
    const double C15343 = C2959 * C151911;
    const double C34817 = C2959 * C152345;
    const double C35311 = C2959 * C152344;
    const double C104322 = C2959 * C51061;
    const double C104816 = C2959 * C51060;
    const double C118127 = C2959 * C151906;
    const double C134658 = C2959 * C152258;
    const double C134652 = C2959 * C151911;
    const double C150877 = C150860 + C150875;
    const double C151000 = ae * C150998;
    const double C1662 = C135 * C1637;
    const double C6842 = C6228 * C1637;
    const double C8280 = C6224 * C1637;
    const double C8272 = C6226 * C1637;
    const double C25273 = C23275 * C1637;
    const double C25265 = C23277 * C1637;
    const double C53062 = C51064 * C1637;
    const double C53054 = C51066 * C1637;
    const double C74242 = C73628 * C1637;
    const double C16671 = C152146 * C1649;
    const double C42382 = C152296 * C1649;
    const double C42370 = C152198 * C1649;
    const double C66416 = C152198 * C1649;
    const double C67005 = C51058 * C1649;
    const double C93508 = C73620 * C1649;
    const double C94802 = C152361 * C1649;
    const double C94788 = C152362 * C1649;
    const double C110007 = C6220 * C1649;
    const double C111301 = C6218 * C1649;
    const double C111287 = C6219 * C1649;
    const double C16681 = C16661 + C3102;
    const double C158 =
        (5 * (3 * C150647 + C150621 * C150661) +
         C150621 *
             (4 * C150661 +
              C150621 *
                  (3 * C150659 +
                   C150621 * (2 * C150621 * C150657 +
                              C150621 * (C150657 + (C150651 * C150652 +
                                                    C150618 * bs[8] *
                                                        std::pow(C150612, 8)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C382 = (2 * ae * (3 * C150710 + C150621 * C150729) +
                         C150614 * (3 * C150647 + C150621 * C150661)) /
                        C150509;
    const double C618 = (2 * C150621 * C150637 + C150621 * C150647 +
                         C150661 * std::pow(zP - zQ, 2)) /
                        C150509;
    const double C619 =
        ((zP - zQ) * (3 * C150647 + C150621 * C150661)) / C150509;
    const double C1170 =
        (2 * ae * C150806 * C150729 + C150614 * C150806 * C150661) / C150509;
    const double C15355 = C152146 * C2583;
    const double C16078 = C152146 * C3099;
    const double C27084 = C152198 * C3099;
    const double C54873 = C152198 * C3099;
    const double C2958 = C2955 + C2947;
    const double C151058 = C151045 + C151055;
    const double C151139 = C150614 * C151135;
    const double C151445 = 3 * C151135;
    const double C17978 = (4 * (2 * C150997 + C150806 * C151222) +
                           C150806 * (3 * C151222 + C150806 * C151424)) /
                          C150509;
    const double C17979 =
        (5 * (3 * C151222 + C150806 * C151424) +
         C150806 * (4 * C151424 +
                    C150806 * (3 * C151260 +
                               C150806 * (2 * C151341 +
                                          C150806 * (C150657 +
                                                     C150672 * C150950))))) /
        C150509;
    const double C18707 =
        (2 * ae *
             (4 * (2 * C151241 + C150806 * C151259) +
              C150806 * (3 * C151259 +
                         C150806 * (2 * C151340 +
                                    C150806 * (C150720 + C150742 * C150950)))) +
         C150614 * (4 * C151424 +
                    C150806 * (3 * C151260 +
                               C150806 * (2 * C151341 +
                                          C150806 * (C150657 +
                                                     C150672 * C150950))))) /
        C150509;
    const double C151356 = C151346 + C151355;
    const double C150677 = C150621 * C150676;
    const double C150928 = C150614 * C150676;
    const double C151015 = C150806 * C150676;
    const double C1641 = (2 * ae * (C150729 + C150751 * C150950) +
                          C150614 * (C150661 + C150676 * C150950)) /
                         C150509;
    const double C2577 =
        (2 * C150806 * C150661 + C150806 * (C150661 + C150676 * C150950)) /
        C150509;
    const double C151310 = C150614 * C151305;
    const double C151337 = C151336 + C151332;
    const double C18298 =
        (2 * ae *
             (3 * (C150725 + C150747 * C150950) +
              C150806 *
                  (2 * C151326 + C150806 * (C150747 + C150775 * C150950))) +
         C150614 *
             (3 * C151408 +
              C150806 *
                  (2 * C151327 +
                   C150806 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150950)))) /
        C150509;
    const double C18504 =
        (4 * (2 * C151009 + C150806 * C151408) +
         C150806 *
             (3 * C151408 +
              C150806 *
                  (2 * C151327 +
                   C150806 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150950)))) /
        C150509;
    const double C151288 = C151287 + C151283;
    const double C151433 = C151428 + C151429;
    const double C18301 = C152146 * C9591;
    const double C44086 = C152198 * C9591;
    const double C68846 = C152198 * C9591;
    const double C151374 = C150614 * C151373;
    const double C151531 = C150614 * C151530;
    const double C151572 = C150806 * C151569;
    const double C151583 = C150614 * C151569;
    const double C150782 = C150621 * C150780;
    const double C150985 = C150614 * C150780;
    const double C150984 = C150780 * ae;
    const double C1801 =
        2 * C150614 * C150752 + C150614 * (C150752 + C150780 * C150618);
    const double C2014 = C150806 * (C150752 + C150780 * C150618);
    const double C2940 =
        2 * C150806 * C150752 + C150806 * (C150752 + C150780 * C150950);
    const double C150940 = C150937 * ae;
    const double C1446 = 3 * (C150726 + C150748 * C150618) +
                         C150614 * (2 * C150815 + C150614 * C150937);
    const double C1628 = C150726 + C150748 * C150618 + C150937 * C150950;
    const double C2166 = C150806 * (2 * C150815 + C150614 * C150937);
    const double C150941 = ae * C150935;
    const double C150939 = C150614 * C150935;
    const double C150979 = C150935 * C150950;
    const double C151017 = C150806 * C150935;
    const double C151315 = C151312 * ae;
    const double C8479 = 4 * (2 * C150826 + C150614 * C150914) +
                         C150614 * (3 * C150914 + C150614 * C151312);
    const double C8790 = C150806 * (3 * C150914 + C150614 * C151312);
    const double C9895 = 2 * C150826 + C150614 * C150914 + C151312 * C150950;
    const double C151314 = C151311 + C151303;
    const double C151412 = ae * C151410;
    const double C151415 = C150806 * C151410;
    const double C151195 = C151167 + C151192;
    const double C151196 = ae * C151190;
    const double C151194 = C150614 * C151190;
    const double C151275 = C151190 * C150950;
    const double C151363 = C150806 * C151190;
    const double C151400 = C151398 + C151399;
    const double C151489 = C150614 * C151484;
    const double C151488 = C151484 * ae;
    const double C62166 =
        2 * C150806 * C151141 + C150806 * (C151141 + C151484 * C150950);
    const double C151487 = C151453 + C151483;
    const double C151521 = C151136 + C151514;
    const double C151550 = ae * C151541;
    const double C151574 = C150806 * C151571;
    const double C151587 = ae * C151571;
    const double C150756 = C150614 * C150755;
    const double C150 = (5 * (3 * C150710 + C150621 * C150729) +
                         C150621 * (4 * C150729 + C150621 * C150755)) /
                        C150502;
    const double C372 = (C150614 * (4 * C150729 + C150621 * C150755) +
                         (4 * C150726 + C150621 * C150752) * ae) /
                        C150502;
    const double C608 =
        (3 * C150710 + C150621 * C150729 + C150755 * C150950) / C150502;
    const double C609 = (C150806 * (4 * C150729 + C150621 * C150755)) / C150502;
    const double C2941 =
        (2 * C150806 * C150755 + C150806 * (C150755 + C150783 * C150950)) /
        C150502;
    const double C150819 = ae * C150816;
    const double C150818 = C150614 * C150816;
    const double C150929 = 2 * C150816;
    const double C150955 = C150806 * C150816;
    const double C1629 = (C150731 + C150816 * C150950) / C150502;
    const double C2951 = C2944 + C2586;
    const double C151300 = C151290 + C150918;
    const double C150920 = C150919 + C150913;
    const double C150977 = ae * C150976;
    const double C3095 = (2 * C150958 + C150806 * C150976) / C150502;
    const double C151186 = C151169 + C151181;
    const double C151062 = ae * C151059;
    const double C151061 = C150614 * C151059;
    const double C151162 = 3 * C151059;
    const double C151211 = C151059 * C150950;
    const double C151231 = C150806 * C151059;
    const double C151379 = C151377 + C151378;
    const double C151365 = C151358 + C151237;
    const double C17993 = C135 * C17976;
    const double C17998 = C17995 + C17987;
    const double C151482 = C150614 * C151478;
    const double C151462 = C151446 + C151142;
    const double C151144 = C151113 + C151140;
    const double C151262 = C151095 + C151257;
    const double C151351 = ae * C151344;
    const double C151564 = 2 * C151344;
    const double C151516 = C151509 + C151268;
    const double C151392 = C150806 * C151391;
    const double C151423 = ae * C151391;
    const double C151596 = 4 * C151391;
    const double C151556 = C151544 + C151555;
    const double C119825 =
        (6 * (4 * C151714 + C150806 * C151735) +
         C150806 *
             (5 * C151735 +
              C150806 *
                  (4 * C151588 +
                   C150806 * (3 * C151517 +
                              C150806 * (2 * C151536 +
                                         C150806 * (C150742 +
                                                    C150770 * C150950)))))) /
        C150502;
    const double C119832 = C119829 + C17992;
    const double C177 = C134 * C142;
    const double C410 = C134 * C359;
    const double C815 = C134 * C360;
    const double C647 = C134 * C596;
    const double C956 = C134 * C597;
    const double C1184 = C134 * C1159;
    const double C150787 = C150761 + C150785;
    const double C152374 = C152310 + C152366;
    const double C808 = C152349 - (C151949 * C151931) / C151926;
    const double C132 = C152350 / C151930 - C151947 / C152317;
    const double C152367 = C152313 + C152349;
    const double C152375 = C152326 + C152370;
    const double C1796 = C152356 - (C152029 * C152018) / C151926;
    const double C1436 = C152357 / C151930 - C152027 / C152317;
    const double C152371 = C152328 + C152356;
    const double C152376 = C152332 + C152372;
    const double C2937 = C152359 - (C152071 * C152060) / C151926;
    const double C2559 = C152360 / C151930 - C152069 / C152317;
    const double C152373 = C152334 + C152359;
    const double C150557 = C150526 / C150502;
    const double C6225 =
        (((-4 * C150512) / C150502 - C150526 / C150502) * ae) / C150513 +
        ((2 * ((0 * ae) / C150502 - C150512 / C150509) - C150526 / C150513) *
         ae) /
            C150502;
    const double C23274 =
        (((-4 * C150512) / C150502 - C150526 / C150502) * ae) / C150502;
    const double C51063 =
        -(((-4 * C150512) / C150502 - C150526 / C150502) * be) / C150502;
    const double C6266 = C6223 * C140;
    const double C6251 = C6223 * C139;
    const double C6248 = C6223 * C138;
    const double C6233 = C6223 * C137;
    const double C6565 = C6223 * C356;
    const double C6550 = C6223 * C351;
    const double C6541 = C6223 * C355;
    const double C6532 = C6223 * C352;
    const double C6867 = C6223 * C593;
    const double C6852 = C6223 * C588;
    const double C6843 = C6223 * C592;
    const double C6834 = C6223 * C589;
    const double C7110 = C6223 * C350;
    const double C7322 = C6223 * C587;
    const double C7644 = C6223 * C1157;
    const double C7629 = C6223 * C1156;
    const double C8487 = C6223 * C1441;
    const double C8798 = C6223 * C1623;
    const double C9903 = C6223 * C1619;
    const double C10118 = C6223 * C2563;
    const double C110010 = C6223 * C591;
    const double C110000 = C6223 * C590;
    const double C110708 = C6223 * C1155;
    const double C111300 = C6223 * C1625;
    const double C111290 = C6223 * C1624;
    const double C111284 = C6223 * C1620;
    const double C112010 = C6223 * C2163;
    const double C112596 = C6223 * C2565;
    const double C112586 = C6223 * C2564;
    const double C113301 = C6223 * C3089;
    const double C6260 = C6227 * C359;
    const double C6257 = C6227 * C357;
    const double C6242 = C6227 * C356;
    const double C6239 = C6227 * C355;
    const double C6559 = C6227 * C1445;
    const double C6556 = C6227 * C1440;
    const double C6547 = C6227 * C1444;
    const double C6526 = C6227 * C1441;
    const double C6861 = C6227 * C1627;
    const double C6858 = C6227 * C1622;
    const double C6849 = C6227 * C1626;
    const double C6828 = C6227 * C1623;
    const double C7106 = C6227 * C1439;
    const double C7318 = C6227 * C1621;
    const double C7638 = C6227 * C2165;
    const double C7635 = C6227 * C2164;
    const double C8483 = C6227 * C8007;
    const double C8794 = C6227 * C8251;
    const double C9899 = C6227 * C8249;
    const double C10114 = C6227 * C9575;
    const double C110006 = C6227 * C1625;
    const double C110004 = C6227 * C1624;
    const double C110712 = C6227 * C2163;
    const double C111296 = C6227 * C8253;
    const double C111294 = C6227 * C8252;
    const double C111288 = C6227 * C8250;
    const double C112014 = C6227 * C9005;
    const double C112592 = C6227 * C9578;
    const double C112590 = C6227 * C9576;
    const double C113297 = C6227 * C10325;
    const double C23305 = C23276 * C360;
    const double C23302 = C23276 * C358;
    const double C23293 = C23276 * C350;
    const double C23290 = C23276 * C351;
    const double C23284 = C23276 * C352;
    const double C23598 = C23276 * C1439;
    const double C23595 = C23276 * C357;
    const double C23589 = C23276 * C1440;
    const double C23583 = C23276 * C1441;
    const double C23570 = C23276 * C355;
    const double C23564 = C23276 * C356;
    const double C23898 = C23276 * C1617;
    const double C23895 = C23276 * C1158;
    const double C23889 = C23276 * C1618;
    const double C23883 = C23276 * C1619;
    const double C23870 = C23276 * C1156;
    const double C23864 = C23276 * C1157;
    const double C24141 = C23276 * C359;
    const double C24348 = C23276 * C1159;
    const double C24664 = C23276 * C1621;
    const double C24661 = C23276 * C1622;
    const double C24655 = C23276 * C1623;
    const double C25477 = C23276 * C1444;
    const double C25473 = C23276 * C1445;
    const double C25789 = C23276 * C2164;
    const double C25785 = C23276 * C2165;
    const double C26871 = C23276 * C1626;
    const double C26867 = C23276 * C1627;
    const double C27087 = C23276 * C3090;
    const double C27083 = C23276 * C3091;
    const double C40685 = C23276 * C1620;
    const double C40681 = C23276 * C1155;
    const double C41610 = C23276 * C1624;
    const double C42379 = C23276 * C8250;
    const double C42375 = C23276 * C8249;
    const double C42373 = C23276 * C2163;
    const double C42369 = C23276 * C1625;
    const double C42669 = C23276 * C8251;
    const double C43327 = C23276 * C8252;
    const double C44089 = C23276 * C9577;
    const double C44085 = C23276 * C9579;
    const double C44083 = C23276 * C3089;
    const double C44502 = C23276 * C9575;
    const double C45031 = C23276 * C9576;
    const double C144098 = C23276 * C10325;
    const double C144792 = C23276 * C8253;
    const double C145362 = C23276 * C18703;
    const double C146057 = C23276 * C9578;
    const double C51094 = C51065 * C360;
    const double C51091 = C51065 * C358;
    const double C51082 = C51065 * C350;
    const double C51079 = C51065 * C351;
    const double C51073 = C51065 * C352;
    const double C51387 = C51065 * C1439;
    const double C51384 = C51065 * C357;
    const double C51378 = C51065 * C1440;
    const double C51372 = C51065 * C1441;
    const double C51359 = C51065 * C355;
    const double C51353 = C51065 * C356;
    const double C51687 = C51065 * C1617;
    const double C51684 = C51065 * C1158;
    const double C51678 = C51065 * C1618;
    const double C51672 = C51065 * C1619;
    const double C51659 = C51065 * C1156;
    const double C51653 = C51065 * C1157;
    const double C51930 = C51065 * C359;
    const double C52137 = C51065 * C1159;
    const double C52453 = C51065 * C1621;
    const double C52450 = C51065 * C1622;
    const double C52444 = C51065 * C1623;
    const double C53266 = C51065 * C1444;
    const double C53262 = C51065 * C1445;
    const double C53578 = C51065 * C2164;
    const double C53574 = C51065 * C2165;
    const double C54660 = C51065 * C1626;
    const double C54656 = C51065 * C1627;
    const double C54876 = C51065 * C3090;
    const double C54872 = C51065 * C3091;
    const double C65704 = C51065 * C3089;
    const double C65702 = C51065 * C1620;
    const double C65698 = C51065 * C1155;
    const double C66415 = C51065 * C1625;
    const double C66411 = C51065 * C1624;
    const double C67008 = C51065 * C10325;
    const double C67006 = C51065 * C8250;
    const double C67002 = C51065 * C2163;
    const double C66995 = C51065 * C9576;
    const double C67531 = C51065 * C8249;
    const double C67741 = C51065 * C8253;
    const double C67737 = C51065 * C8252;
    const double C68323 = C51065 * C18703;
    const double C68321 = C51065 * C9577;
    const double C68637 = C51065 * C9575;
    const double C68845 = C51065 * C9579;
    const double C69056 = C51065 * C9578;
    const double C84749 = C51065 * C8251;
    const double C73660 = C73627 * C359;
    const double C73657 = C73627 * C357;
    const double C73642 = C73627 * C356;
    const double C73639 = C73627 * C355;
    const double C73959 = C73627 * C1445;
    const double C73956 = C73627 * C1440;
    const double C73947 = C73627 * C1444;
    const double C73926 = C73627 * C1441;
    const double C74261 = C73627 * C1627;
    const double C74258 = C73627 * C1622;
    const double C74249 = C73627 * C1626;
    const double C74228 = C73627 * C1623;
    const double C74506 = C73627 * C1439;
    const double C74718 = C73627 * C1621;
    const double C75038 = C73627 * C2165;
    const double C75035 = C73627 * C2164;
    const double C75850 = C73627 * C8007;
    const double C76158 = C73627 * C8251;
    const double C77236 = C73627 * C8249;
    const double C77448 = C73627 * C9575;
    const double C93507 = C73627 * C1625;
    const double C93505 = C73627 * C1624;
    const double C94213 = C73627 * C2163;
    const double C94797 = C73627 * C8253;
    const double C94795 = C73627 * C8252;
    const double C94789 = C73627 * C8250;
    const double C95515 = C73627 * C9005;
    const double C96093 = C73627 * C9578;
    const double C96091 = C73627 * C9576;
    const double C96798 = C73627 * C10325;
    const double C150571 = C150567 - C150559;
    const double C434 = C426 + C400;
    const double C1196 = C1192 + C1177;
    const double C15382 = C15380 + C15342;
    const double C134666 = C134650 + C134651;
    const double C16682 = C16667 + C1661;
    const double C16095 = C16091 * C6221;
    const double C32992 = C16091 * C152344;
    const double C102503 = C16091 * C51060;
    const double C118590 = C16091 * C151906;
    const double C135351 = C16091 * C152258;
    const double C16096 = C16092 * C6221;
    const double C33560 = C16092 * C152344;
    const double C103070 = C16092 * C51060;
    const double C118591 = C16092 * C151906;
    const double C135353 = C16092 * C152258;
    const double C17985 = C15377 * C151911;
    const double C18508 = C15377 * C6221;
    const double C34820 = C15377 * C152345;
    const double C104325 = C15377 * C51061;
    const double C118128 = C15377 * C151906;
    const double C137177 = C15377 * C151911;
    const double C137670 = C15377 * C152258;
    const double C381 =
        (2 * C150621 * C150637 + C150621 * C150647 + C150732 + C150732 +
         C150614 * (2 * ae * C150729 + C150614 * C150661)) /
        C150509;
    const double C405 = C135 * C369;
    const double C6258 = C6228 * C369;
    const double C6571 = C6224 * C369;
    const double C6569 = C6226 * C369;
    const double C23602 = C23275 * C369;
    const double C23596 = C23277 * C369;
    const double C51391 = C51064 * C369;
    const double C51385 = C51066 * C369;
    const double C73658 = C73628 * C369;
    const double C1182 = C135 * C1164;
    const double C6871 = C6226 * C1164;
    const double C7647 = C6224 * C1164;
    const double C23896 = C23277 * C1164;
    const double C24668 = C23275 * C1164;
    const double C51685 = C51066 * C1164;
    const double C52457 = C51064 * C1164;
    const double C191 = C185 + C175;
    const double C429 = C421 + C408;
    const double C665 = C657 + C642;
    const double C666 = C658 + C645;
    const double C150833 = ae * C150832;
    const double C1448 =
        (2 * C150712 + C150614 * C150832 + (C150707 + C150722 * C150618) * ae) /
        C150502;
    const double C1634 = (C150806 * C150832) / C150502;
    const double C2021 = C152146 * C1646;
    const double C6860 = C6220 * C1646;
    const double C7643 = C6219 * C1646;
    const double C24663 = C152198 * C1646;
    const double C25788 = C152296 * C1646;
    const double C52452 = C152198 * C1646;
    const double C53577 = C51058 * C1646;
    const double C74260 = C73620 * C1646;
    const double C75043 = C152362 * C1646;
    const double C150900 = C150883 + C150898;
    const double C151006 = ae * C151004;
    const double C6851 = C6220 * C1650;
    const double C9902 = C6219 * C1650;
    const double C15110 = C152146 * C1650;
    const double C26872 = C152198 * C1650;
    const double C42378 = C152296 * C1650;
    const double C54661 = C152198 * C1650;
    const double C67530 = C51058 * C1650;
    const double C74251 = C73620 * C1650;
    const double C77239 = C152362 * C1650;
    const double C16085 = C16071 + C3103;
    const double C151126 = C151120 + C151098;
    const double C151100 = C151099 + C151088;
    const double C151225 = ae * C151223;
    const double C9582 = (2 * C150998 + C150806 * C151223) / C150502;
    const double C9588 =
        (2 * C150997 + C150806 * C151222 + C151385 + C151385 +
         C150614 * (2 * ae * (2 * C151241 + C150806 * C151259) +
                    C150614 * (2 * C151242 + C150806 * C151260))) /
        C150509;
    const double C9601 = C6226 * C9583;
    const double C16666 = C135 * C9583;
    const double C26572 = C23277 * C9583;
    const double C45035 = C23275 * C9583;
    const double C54361 = C51066 * C9583;
    const double C66999 = C51064 * C9583;
    const double C113303 = C6224 * C9583;
    const double C427 = C419 + C402;
    const double C1193 = C1189 + C1179;
    const double C2802 = C2799 + C1655;
    const double C15357 = C668 * C151911;
    const double C15771 = C668 * C6221;
    const double C32306 = C668 * C152345;
    const double C32301 = C668 * C23273;
    const double C32699 = C668 * C152344;
    const double C101817 = C668 * C51061;
    const double C101812 = C668 * C51062;
    const double C102210 = C668 * C51060;
    const double C118393 = C668 * C151906;
    const double C134661 = C668 * C151911;
    const double C135057 = C668 * C152258;
    const double C15358 = C672 * C6221;
    const double C15351 = C672 * C151911;
    const double C32310 = C672 * C152344;
    const double C32303 = C672 * C152345;
    const double C32296 = C672 * C23273;
    const double C101821 = C672 * C51060;
    const double C101814 = C672 * C51061;
    const double C101807 = C672 * C51062;
    const double C118130 = C672 * C151906;
    const double C134662 = C672 * C152258;
    const double C134657 = C672 * C151911;
    const double C1457 =
        (2 * (2 * ae * C150697 + C150614 * C150835) + C150845 + C150845 +
         C150614 * (C150835 + C150842 + C150842 +
                    C150614 * (2 * ae * C150715 + C150614 * C150649))) /
        C150509;
    const double C1466 = C135 * C1449;
    const double C6545 = C6226 * C1449;
    const double C6527 = C6228 * C1449;
    const double C8022 = C6224 * C1449;
    const double C23584 = C23277 * C1449;
    const double C25034 = C23275 * C1449;
    const double C51373 = C51066 * C1449;
    const double C52823 = C51064 * C1449;
    const double C59621 = C59615 * C1449;
    const double C73927 = C73628 * C1449;
    const double C1660 = C135 * C1635;
    const double C6829 = C6228 * C1635;
    const double C7633 = C6226 * C1635;
    const double C8276 = C6224 * C1635;
    const double C24656 = C23277 * C1635;
    const double C25270 = C23275 * C1635;
    const double C52445 = C51066 * C1635;
    const double C53059 = C51064 * C1635;
    const double C74229 = C73628 * C1635;
    const double C1663 = C135 * C1638;
    const double C6850 = C6228 * C1638;
    const double C8283 = C6224 * C1638;
    const double C8269 = C6226 * C1638;
    const double C25275 = C23275 * C1638;
    const double C25263 = C23277 * C1638;
    const double C53064 = C51064 * C1638;
    const double C53052 = C51066 * C1638;
    const double C74250 = C73628 * C1638;
    const double C2806 = C2803 + C2796;
    const double C17982 = C15343 + C15381;
    const double C137175 = C134652 + C134653;
    const double C150878 = C150877 + C150871;
    const double C2171 = (2 * (2 * ae * C150806 * C150682 + C150614 * C150997) +
                          C151000 + C151000 +
                          C150614 * (C150997 + C151001 + C151001 +
                                     C150614 * (2 * ae * C150806 * C150706 +
                                                C150614 * C150806 * C150645))) /
                         C150509;
    const double C16683 = C16670 + C1662;
    const double C16686 = C16681 + C3102;
    const double C179 = C152146 * C158;
    const double C409 = C152146 * C382;
    const double C6265 = C6219 * C382;
    const double C23304 = C152198 * C382;
    const double C24144 = C152296 * C382;
    const double C51093 = C152198 * C382;
    const double C51933 = C51058 * C382;
    const double C73665 = C152362 * C382;
    const double C643 = C152146 * C618;
    const double C23903 = C152296 * C618;
    const double C51692 = C51058 * C618;
    const double C646 = C152146 * C619;
    const double C24351 = C152296 * C619;
    const double C52140 = C51058 * C619;
    const double C1183 = C152146 * C1170;
    const double C7321 = C6219 * C1170;
    const double C23897 = C152198 * C1170;
    const double C24669 = C152296 * C1170;
    const double C51686 = C152198 * C1170;
    const double C52458 = C51058 * C1170;
    const double C74721 = C152362 * C1170;
    const double C15378 = C15373 + C15355;
    const double C15361 = C2958 * C6221;
    const double C15353 = C2958 * C151911;
    const double C34818 = C2958 * C23273;
    const double C35310 = C2958 * C152345;
    const double C104323 = C2958 * C51062;
    const double C104815 = C2958 * C51061;
    const double C118131 = C2958 * C151906;
    const double C134665 = C2958 * C152258;
    const double C134659 = C2958 * C151911;
    const double C17991 = C152146 * C17978;
    const double C68328 = C51058 * C17978;
    const double C145365 = C152296 * C17978;
    const double C119830 = C152146 * C17979;
    const double C68325 = C152198 * C18707;
    const double C120293 = C152146 * C18707;
    const double C145363 = C152198 * C18707;
    const double C150678 = C150663 + C150677;
    const double C150938 = C150934 + C150928;
    const double C2584 =
        (3 * (C150661 + C150676 * C150950) +
         C150806 *
             (2 * C151015 +
              C150806 * (C150676 +
                         (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)) *
                             C150950))) /
        C150509;
    const double C3100 =
        (2 * ae *
             (2 * C150806 * C150751 + C150806 * (C150751 + C150779 * C150950)) +
         C150614 *
             (2 * C151015 +
              C150806 * (C150676 +
                         (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)) *
                             C150950))) /
        C150509;
    const double C2792 = C152146 * C1641;
    const double C23900 = C152198 * C1641;
    const double C51689 = C152198 * C1641;
    const double C2945 = C152146 * C2577;
    const double C17977 = (4 * (2 * C151003 + C150806 * C151213) +
                           C150806 * (3 * C151213 + C150806 * C151433)) /
                          C150509;
    const double C17980 =
        (5 * (3 * C151213 + C150806 * C151433) +
         C150806 *
             (4 * C151433 +
              C150806 * (3 * C151278 +
                         C150806 * (2 * C151360 +
                                    C150806 * (C151160 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150950))))) /
        C150509;
    const double C18708 =
        (2 * ae *
             (4 * (2 * C151228 + C150806 * C151277) +
              C150806 * (3 * C151277 +
                         C150806 * (2 * C151359 +
                                    C150806 * (C150763 + C151164 * C150950)))) +
         C150614 *
             (4 * C151433 +
              C150806 * (3 * C151278 +
                         C150806 * (2 * C151360 +
                                    C150806 * (C151160 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150950))))) /
        C150509;
    const double C151575 = C151560 + C151572;
    const double C151593 = C151592 + C151583;
    const double C150784 = C150765 + C150782;
    const double C150987 = C150985 * ae;
    const double C2787 = C150614 * C150752 + C150985 * C150950;
    const double C150986 = C150983 + C150984;
    const double C150942 = C150751 + C150939;
    const double C150980 = C150816 + C150979;
    const double C151019 = ae * C151017;
    const double C151317 = ae * C151314;
    const double C151316 = C150614 * C151314;
    const double C151329 = C150806 * C151314;
    const double C151406 = C151314 * C150950;
    const double C151416 = C151414 + C151415;
    const double C151198 = C151195 * ae;
    const double C8010 = 5 * (3 * C150891 + C150614 * C151057) +
                         C150614 * (4 * C151057 + C150614 * C151195);
    const double C8254 = 3 * C150891 + C150614 * C151057 + C151195 * C150950;
    const double C9006 = C150806 * (4 * C151057 + C150614 * C151195);
    const double C151197 = C151163 + C151194;
    const double C151280 = C151059 + C151275;
    const double C151370 = ae * C151363;
    const double C151401 = C150806 * C151400;
    const double C151432 = ae * C151400;
    const double C151492 = C151460 + C151489;
    const double C151491 = C151487 + C151472;
    const double C151527 = ae * C151521;
    const double C151565 = C150806 * C151521;
    const double C151577 = C151566 + C151574;
    const double C150757 = C150756 + C150754;
    const double C178 = C135 * C150;
    const double C23311 = C23275 * C150;
    const double C51100 = C51064 * C150;
    const double C413 = C135 * C372;
    const double C6270 = C6226 * C372;
    const double C23306 = C23277 * C372;
    const double C24145 = C23275 * C372;
    const double C51095 = C51066 * C372;
    const double C51934 = C51064 * C372;
    const double C648 = C135 * C608;
    const double C23906 = C23275 * C608;
    const double C51695 = C51064 * C608;
    const double C650 = C135 * C609;
    const double C24352 = C23275 * C609;
    const double C52141 = C51064 * C609;
    const double C2950 = C135 * C2941;
    const double C150820 = C150729 + C150818;
    const double C150956 = ae * C150955;
    const double C1654 = C135 * C1629;
    const double C6874 = C6226 * C1629;
    const double C23899 = C23277 * C1629;
    const double C26875 = C23275 * C1629;
    const double C51688 = C51066 * C1629;
    const double C54664 = C51064 * C1629;
    const double C2954 = C2951 + C2586;
    const double C151313 = C151300 + C151310;
    const double C150922 = ae * C150920;
    const double C150921 = C150614 * C150920;
    const double C151010 = C150806 * C150920;
    const double C151293 = 3 * C150920;
    const double C1639 = (C150832 + C150920 * C150950) / C150502;
    const double C1651 = (C150647 + C150659 * C150950 + C150977 + C150977 +
                          C150614 * (2 * ae * (C150725 + C150747 * C150950) +
                                     C150614 * (C150659 + C150674 * C150950))) /
                         C150509;
    const double C3104 = C135 * C3095;
    const double C10121 = C6226 * C3095;
    const double C26565 = C23277 * C3095;
    const double C27303 = C23275 * C3095;
    const double C54354 = C51066 * C3095;
    const double C55092 = C51064 * C3095;
    const double C151189 = C150614 * C151186;
    const double C151168 = C151157 + C151062;
    const double C151063 = C151039 + C151061;
    const double C151214 = C150897 + C151211;
    const double C151236 = ae * C151231;
    const double C151430 = 2 * C151231;
    const double C151380 = ae * C151379;
    const double C9585 = (3 * C150972 + C150806 * C151379) / C150502;
    const double C151375 = C151365 + C151374;
    const double C151469 = C151462 + C151142;
    const double C151146 = C151144 + C151129;
    const double C151267 = ae * C151262;
    const double C151422 = C150806 * C151262;
    const double C151563 = 3 * C151262;
    const double C151543 = C151534 + C151351;
    const double C151532 = C151516 + C151531;
    const double C151393 = C151388 + C151392;
    const double C151557 = C150614 * C151556;
    const double C119831 = C135 * C119825;
    const double C119833 = C119832 + C17992;
    const double C150788 = C150614 * C150787;
    const double C1172 =
        (2 * ae * C150806 * C150787 +
         C150614 * C150806 *
             (4 * C150676 +
              C150621 *
                  (3 * C150674 +
                   C150621 * (2 * C150621 * C150672 +
                              C150621 * (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C151 = (6 * (4 * C150729 + C150621 * C150755) +
                         C150621 * (5 * C150755 + C150621 * C150787)) /
                        C150502;
    const double C610 =
        (4 * C150729 + C150621 * C150755 + C150787 * C150950) / C150502;
    const double C953 = (C150806 * (5 * C150755 + C150621 * C150787)) / C150502;
    const double C129 =
        (C152365 + 2 * C151940) / C151930 - (C152374 * C151931) / C151926;
    const double C130 = (C152348 + 2 * C151949 + C152374) / C151930 -
                        (C152367 * C151931) / C151926;
    const double C131 = (C152315 + C151946 / C151926 + C152367) / C151930 -
                        (C152350 * C151931) / C151926;
    const double C1433 =
        (C152368 + 2 * C152022) / C151930 - (C152375 * C152018) / C151926;
    const double C1434 = (C152352 + 2 * C152029 + C152375) / C151930 -
                         (C152371 * C152018) / C151926;
    const double C1435 = (C152321 + C152026 / C151926 + C152371) / C151930 -
                         (C152357 * C152018) / C151926;
    const double C2556 =
        (C152369 + 2 * C152064) / C151930 - (C152376 * C152060) / C151926;
    const double C2557 = (C152354 + 2 * C152071 + C152376) / C151930 -
                         (C152373 * C152060) / C151926;
    const double C2558 = (C152324 + C152068 / C151926 + C152373) / C151930 -
                         (C152360 * C152060) / C151926;
    const double C150570 = C150566 - C150557;
    const double C6263 = C6225 * C358;
    const double C6254 = C6225 * C350;
    const double C6245 = C6225 * C351;
    const double C6236 = C6225 * C352;
    const double C6562 = C6225 * C1440;
    const double C6553 = C6225 * C356;
    const double C6544 = C6225 * C1441;
    const double C6529 = C6225 * C355;
    const double C6864 = C6225 * C1618;
    const double C6855 = C6225 * C1157;
    const double C6846 = C6225 * C1619;
    const double C6831 = C6225 * C1156;
    const double C7108 = C6225 * C357;
    const double C7320 = C6225 * C1158;
    const double C7641 = C6225 * C1622;
    const double C7632 = C6225 * C1623;
    const double C8485 = C6225 * C1444;
    const double C8796 = C6225 * C2164;
    const double C9901 = C6225 * C1626;
    const double C10116 = C6225 * C3090;
    const double C110008 = C6225 * C1620;
    const double C110002 = C6225 * C1155;
    const double C110710 = C6225 * C1624;
    const double C111298 = C6225 * C8250;
    const double C111292 = C6225 * C2163;
    const double C111286 = C6225 * C1625;
    const double C112012 = C6225 * C8252;
    const double C112594 = C6225 * C9577;
    const double C112588 = C6225 * C3089;
    const double C113299 = C6225 * C9576;
    const double C23308 = C23274 * C141;
    const double C23299 = C23274 * C140;
    const double C23296 = C23274 * C139;
    const double C23287 = C23274 * C138;
    const double C23281 = C23274 * C137;
    const double C23601 = C23274 * C357;
    const double C23592 = C23274 * C350;
    const double C23586 = C23274 * C356;
    const double C23580 = C23274 * C355;
    const double C23573 = C23274 * C352;
    const double C23567 = C23274 * C351;
    const double C23901 = C23274 * C594;
    const double C23892 = C23274 * C587;
    const double C23886 = C23274 * C593;
    const double C23880 = C23274 * C592;
    const double C23873 = C23274 * C589;
    const double C23867 = C23274 * C588;
    const double C24143 = C23274 * C358;
    const double C24350 = C23274 * C595;
    const double C24667 = C23274 * C1158;
    const double C24658 = C23274 * C1157;
    const double C24652 = C23274 * C1156;
    const double C25479 = C23274 * C1441;
    const double C25475 = C23274 * C1440;
    const double C25791 = C23274 * C1623;
    const double C25787 = C23274 * C1622;
    const double C26873 = C23274 * C1619;
    const double C26869 = C23274 * C1618;
    const double C27089 = C23274 * C2563;
    const double C27085 = C23274 * C2562;
    const double C40687 = C23274 * C591;
    const double C40679 = C23274 * C590;
    const double C41608 = C23274 * C1155;
    const double C42381 = C23274 * C1625;
    const double C42377 = C23274 * C1626;
    const double C42371 = C23274 * C1624;
    const double C42367 = C23274 * C1620;
    const double C42671 = C23274 * C2164;
    const double C43325 = C23274 * C2163;
    const double C44091 = C23274 * C2565;
    const double C44087 = C23274 * C2566;
    const double C44081 = C23274 * C2564;
    const double C44504 = C23274 * C3090;
    const double C45033 = C23274 * C3089;
    const double C144100 = C23274 * C9576;
    const double C144790 = C23274 * C8250;
    const double C145364 = C23274 * C17970;
    const double C146059 = C23274 * C9577;
    const double C51097 = C51063 * C141;
    const double C51088 = C51063 * C140;
    const double C51085 = C51063 * C139;
    const double C51076 = C51063 * C138;
    const double C51070 = C51063 * C137;
    const double C51390 = C51063 * C357;
    const double C51381 = C51063 * C350;
    const double C51375 = C51063 * C356;
    const double C51369 = C51063 * C355;
    const double C51362 = C51063 * C352;
    const double C51356 = C51063 * C351;
    const double C51690 = C51063 * C594;
    const double C51681 = C51063 * C587;
    const double C51675 = C51063 * C593;
    const double C51669 = C51063 * C592;
    const double C51662 = C51063 * C589;
    const double C51656 = C51063 * C588;
    const double C51932 = C51063 * C358;
    const double C52139 = C51063 * C595;
    const double C52456 = C51063 * C1158;
    const double C52447 = C51063 * C1157;
    const double C52441 = C51063 * C1156;
    const double C53268 = C51063 * C1441;
    const double C53264 = C51063 * C1440;
    const double C53580 = C51063 * C1623;
    const double C53576 = C51063 * C1622;
    const double C54662 = C51063 * C1619;
    const double C54658 = C51063 * C1618;
    const double C54878 = C51063 * C2563;
    const double C54874 = C51063 * C2562;
    const double C65706 = C51063 * C2564;
    const double C65700 = C51063 * C591;
    const double C65696 = C51063 * C590;
    const double C66413 = C51063 * C1620;
    const double C66409 = C51063 * C1155;
    const double C67011 = C51063 * C9576;
    const double C67004 = C51063 * C1625;
    const double C67000 = C51063 * C1624;
    const double C66993 = C51063 * C3089;
    const double C67529 = C51063 * C1626;
    const double C67739 = C51063 * C8250;
    const double C67735 = C51063 * C2163;
    const double C68326 = C51063 * C17970;
    const double C68319 = C51063 * C2565;
    const double C68639 = C51063 * C3090;
    const double C68847 = C51063 * C2566;
    const double C69058 = C51063 * C9577;
    const double C84751 = C51063 * C2164;
    const double C6283 = C6266 + C6267;
    const double C6278 = C6251 + C6252;
    const double C6277 = C6248 + C6249;
    const double C6272 = C6233 + C6234;
    const double C6585 = C6565 + C6566;
    const double C6580 = C6550 + C6551;
    const double C6577 = C6541 + C6542;
    const double C6576 = C6532 + C6533;
    const double C6887 = C6867 + C6868;
    const double C6882 = C6852 + C6853;
    const double C6879 = C6843 + C6844;
    const double C6878 = C6834 + C6835;
    const double C7117 = C7110 + C6570;
    const double C7329 = C7322 + C6872;
    const double C7655 = C7644 + C7645;
    const double C7650 = C7629 + C7630;
    const double C9910 = C9903 + C8270;
    const double C10125 = C10118 + C9596;
    const double C110017 = C110010 + C6840;
    const double C110012 = C110000 + C6839;
    const double C110714 = C110708 + C7626;
    const double C111313 = C111300 + C8280;
    const double C111308 = C111290 + C8279;
    const double C111305 = C111284 + C8273;
    const double C112606 = C112596 + C9600;
    const double C112601 = C112586 + C9599;
    const double C113308 = C113301 + C10332;
    const double C6275 = C6242 + C6243;
    const double C6274 = C6239 + C6240;
    const double C110015 = C110006 + C6842;
    const double C110014 = C110004 + C6837;
    const double C23320 = C23302 + C23303;
    const double C23317 = C23293 + C23294;
    const double C23316 = C23290 + C23291;
    const double C23314 = C23284 + C23285;
    const double C23610 = C23570 + C23571;
    const double C23608 = C23564 + C23565;
    const double C23915 = C23889 + C23890;
    const double C23913 = C23883 + C23884;
    const double C23910 = C23870 + C23871;
    const double C23908 = C23864 + C23865;
    const double C27095 = C27087 + C26567;
    const double C40695 = C40685 + C23879;
    const double C40694 = C40681 + C23876;
    const double C41616 = C41610 + C24651;
    const double C42388 = C42369 + C25265;
    const double C44098 = C44083 + C26569;
    const double C51109 = C51091 + C51092;
    const double C51106 = C51082 + C51083;
    const double C51105 = C51079 + C51080;
    const double C51103 = C51073 + C51074;
    const double C51399 = C51359 + C51360;
    const double C51397 = C51353 + C51354;
    const double C51704 = C51678 + C51679;
    const double C51702 = C51672 + C51673;
    const double C51699 = C51659 + C51660;
    const double C51697 = C51653 + C51654;
    const double C54884 = C54876 + C54356;
    const double C65714 = C65704 + C54358;
    const double C65713 = C65702 + C51668;
    const double C65711 = C65698 + C51665;
    const double C66420 = C66415 + C53054;
    const double C66418 = C66411 + C52440;
    const double C73675 = C73642 + C73643;
    const double C73674 = C73639 + C73640;
    const double C93516 = C93507 + C74242;
    const double C93515 = C93505 + C74237;
    const double C59609 =
        ((((0 - (C150500 * C150552) / C150502) * ae) / C150502 -
          (0 * be) / C150513 + C150508 / C150502) /
             C150553 -
         ((C150500 * C150576 + 0) * be) / C150502) /
            C150553 +
        ((C150500 * (C150576 / C150553 -
                     ((C150500 * C150571 + C152296) * be) / C150502 + C150572) +
          C152361) *
         ae) /
            C150502 +
        C150571 / C150553 - ((C150500 * C150572 + C152198) * be) / C150502;
    const double C59611 =
        (C150576 / C150553 - ((C150500 * C150571 + C152296) * be) / C150502 +
         C150572) /
            C150553 +
        ((C150500 * (C150571 / C150553 -
                     ((C150500 * C150572 + C152198) * be) / C150502) +
          C152362) *
         ae) /
            C150502 +
        2 * (C150572 / C150553 - (0 * be) / C150502);
    const double C59613 =
        (C150571 / C150553 - ((C150500 * C150572 + C152198) * be) / C150502) /
            C150553 +
        ((C150500 * (C150572 / C150553 - (0 * be) / C150502) + C73620) * ae) /
            C150502;
    const double C73624 = C150576 / C150553 -
                          ((C150500 * C150571 + C152296) * be) / C150502 +
                          C150572;
    const double C73626 =
        C150571 / C150553 - ((C150500 * C150572 + C152198) * be) / C150502;
    const double C16073 = C1196 * C6221;
    const double C16067 = C1196 * C151911;
    const double C32995 = C1196 * C152344;
    const double C32993 = C1196 * C152345;
    const double C102506 = C1196 * C51060;
    const double C102504 = C1196 * C51061;
    const double C118593 = C1196 * C151906;
    const double C135355 = C1196 * C152258;
    const double C135352 = C1196 * C151911;
    const double C16687 = C16682 + C1661;
    const double C18006 = C18003 + C17985;
    const double C137180 = C137176 + C137177;
    const double C406 = C152146 * C381;
    const double C6259 = C6220 * C381;
    const double C7109 = C6219 * C381;
    const double C23603 = C152296 * C381;
    const double C23597 = C152198 * C381;
    const double C51392 = C51058 * C381;
    const double C51386 = C152198 * C381;
    const double C73659 = C73620 * C381;
    const double C74509 = C152362 * C381;
    const double C420 = C404 + C405;
    const double C6280 = C6257 + C6258;
    const double C23617 = C23595 + C23596;
    const double C51406 = C51384 + C51385;
    const double C73680 = C73657 + C73658;
    const double C1190 = C1181 + C1182;
    const double C23917 = C23895 + C23896;
    const double C51706 = C51684 + C51685;
    const double C197 = C191 + C176;
    const double C1456 =
        (2 * (2 * ae * C150710 + C150614 * C150647) + C150833 + C150833 +
         C150614 * (C150647 + C150830 + C150830 +
                    C150614 * (2 * ae * C150725 + C150614 * C150659))) /
        C150509;
    const double C1465 = C135 * C1448;
    const double C6563 = C6226 * C1448;
    const double C6557 = C6228 * C1448;
    const double C8489 = C6224 * C1448;
    const double C23590 = C23277 * C1448;
    const double C25032 = C23275 * C1448;
    const double C51379 = C51066 * C1448;
    const double C52821 = C51064 * C1448;
    const double C59628 = C59615 * C1448;
    const double C73957 = C73628 * C1448;
    const double C1659 = C135 * C1634;
    const double C6859 = C6228 * C1634;
    const double C7642 = C6226 * C1634;
    const double C8800 = C6224 * C1634;
    const double C24662 = C23277 * C1634;
    const double C25268 = C23275 * C1634;
    const double C52451 = C51066 * C1634;
    const double C53057 = C51064 * C1634;
    const double C74259 = C73628 * C1634;
    const double C150901 = C150900 + C150894;
    const double C2172 = (2 * (2 * ae * C150806 * C150715 + C150614 * C151003) +
                          C151006 + C151006 +
                          C150614 * (C151003 + C151007 + C151007 +
                                     C150614 * (2 * ae * C150806 * C150736 +
                                                C150614 * C150806 * C150664))) /
                         C150509;
    const double C16089 = C16085 + C3103;
    const double C151143 = C151126 + C151139;
    const double C151102 = ae * C151100;
    const double C151101 = C150614 * C151100;
    const double C151111 = 4 * C151100;
    const double C151243 = C150806 * C151100;
    const double C8262 =
        (2 * (2 * ae * (C150682 + C150706 * C150950) + C150614 * C151222) +
         C151225 + C151225 +
         C150614 * (C151222 + C151226 + C151226 +
                    C150614 * (2 * ae * (C150706 + C150720 * C150950) +
                               C150614 * (C150645 + C150657 * C150950)))) /
        C150509;
    const double C9597 = C6228 * C9582;
    const double C10333 = C6226 * C9582;
    const double C16677 = C135 * C9582;
    const double C27300 = C23277 * C9582;
    const double C42383 = C23275 * C9582;
    const double C55089 = C51066 * C9582;
    const double C67012 = C51064 * C9582;
    const double C76937 = C73628 * C9582;
    const double C111302 = C6224 * C9582;
    const double C16678 = C152146 * C9588;
    const double C45032 = C152198 * C9588;
    const double C67013 = C51058 * C9588;
    const double C66996 = C152198 * C9588;
    const double C96092 = C73620 * C9588;
    const double C96801 = C152362 * C9588;
    const double C112591 = C6220 * C9588;
    const double C113300 = C6219 * C9588;
    const double C144101 = C152296 * C9588;
    const double C18716 = C18712 + C16666;
    const double C44101 = C44089 + C26572;
    const double C68333 = C68321 + C54361;
    const double C435 = C427 + C403;
    const double C1197 = C1193 + C1180;
    const double C2805 = C2802 + C2794;
    const double C15366 = C15351 + C15350;
    const double C134667 = C134657 + C134656;
    const double C1810 = C152146 * C1457;
    const double C6546 = C6219 * C1457;
    const double C6528 = C6220 * C1457;
    const double C8488 = C6218 * C1457;
    const double C23585 = C152198 * C1457;
    const double C25480 = C152296 * C1457;
    const double C51374 = C152198 * C1457;
    const double C53269 = C51058 * C1457;
    const double C73946 = C152362 * C1457;
    const double C73928 = C73620 * C1457;
    const double C75855 = C152361 * C1457;
    const double C1814 = C1809 + C1466;
    const double C6574 = C6526 + C6527;
    const double C8494 = C8487 + C8022;
    const double C23613 = C23583 + C23584;
    const double C51402 = C51372 + C51373;
    const double C73974 = C73926 + C73927;
    const double C2027 = C2022 + C1660;
    const double C6876 = C6828 + C6829;
    const double C8805 = C8798 + C8276;
    const double C24673 = C24655 + C24656;
    const double C52462 = C52444 + C52445;
    const double C74276 = C74228 + C74229;
    const double C15113 = C15109 + C1663;
    const double C6881 = C6849 + C6850;
    const double C26879 = C26871 + C25263;
    const double C54668 = C54660 + C53052;
    const double C74281 = C74249 + C74250;
    const double C16075 = C2806 * C6221;
    const double C16070 = C2806 * C151911;
    const double C33561 = C2806 * C152345;
    const double C35114 = C2806 * C152344;
    const double C103071 = C2806 * C51061;
    const double C104619 = C2806 * C51060;
    const double C118594 = C2806 * C151906;
    const double C135357 = C2806 * C152258;
    const double C135354 = C2806 * C151911;
    const double C150879 = ae * C150878;
    const double C1451 = (3 * C150855 + C150614 * C150878 +
                          (2 * C150849 + C150614 * C150868) * ae) /
                         C150502;
    const double C2167 = (C150806 * C150878) / C150502;
    const double C8256 = (C150878 + C151100 * C150950) / C150502;
    const double C17397 = C152146 * C2171;
    const double C42374 = C152198 * C2171;
    const double C43326 = C152296 * C2171;
    const double C67003 = C152198 * C2171;
    const double C67736 = C51058 * C2171;
    const double C94214 = C73620 * C2171;
    const double C94794 = C152362 * C2171;
    const double C95512 = C152361 * C2171;
    const double C110713 = C6220 * C2171;
    const double C111293 = C6219 * C2171;
    const double C112011 = C6218 * C2171;
    const double C16688 = C16683 + C1662;
    const double C16691 = C16686 + C16662;
    const double C437 = C429 + C409;
    const double C673 = C665 + C643;
    const double C674 = C666 + C646;
    const double C18507 = C15378 * C151911;
    const double C34819 = C15378 * C23273;
    const double C104324 = C15378 * C51062;
    const double C118132 = C15378 * C151906;
    const double C137669 = C15378 * C151911;
    const double C18506 = C15352 + C15353;
    const double C137668 = C134658 + C134659;
    const double C18002 = C17999 + C17991;
    const double C159 =
        (6 * (4 * C150661 + C150621 * C150678) +
         C150621 *
             (5 * C150678 +
              C150621 *
                  (4 * C150676 +
                   C150621 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C384 = (2 * ae * (4 * C150729 + C150621 * C150755) +
                         C150614 * (4 * C150661 + C150621 * C150678)) /
                        C150509;
    const double C620 =
        (3 * C150647 + C150621 * C150661 + C150678 * std::pow(zP - zQ, 2)) /
        C150509;
    const double C621 =
        ((zP - zQ) * (4 * C150661 + C150621 * C150678)) / C150509;
    const double C622 =
        (4 * C150661 + C150621 * C150678 +
         (4 * C150676 +
          C150621 *
              (3 * C150674 +
               C150621 * (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)))) *
             std::pow(zP - zQ, 2)) /
        C150509;
    const double C813 =
        (2 * ae * (5 * C150755 + C150621 * C150787) +
         C150614 *
             (5 * C150678 +
              C150621 *
                  (4 * C150676 +
                   C150621 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C954 =
        ((zP - zQ) *
         (5 * C150678 +
          C150621 *
              (4 * C150676 +
               C150621 * (3 * C150674 +
                          C150621 * (2 * C150621 * C150672 +
                                     C150621 * (C150672 +
                                                (C150666 * C150667 +
                                                 C150618 * bs[9] *
                                                     std::pow(C150616, 9)) *
                                                    C150617 * C150633)))))) /
        C150509;
    const double C1171 =
        (2 * ae * C150806 * C150755 + C150614 * C150806 * C150678) / C150509;
    const double C2789 =
        (2 * ae * (C150755 + C150783 * C150950) +
         C150614 *
             (C150678 +
              (3 * C150674 +
               C150621 * (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633))) *
                  C150950)) /
        C150509;
    const double C2942 =
        (2 * C150806 * C150678 +
         C150806 *
             (C150678 +
              (3 * C150674 +
               C150621 * (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633))) *
                  C150950)) /
        C150509;
    const double C17988 = C152146 * C17977;
    const double C68316 =
        (2 * ae *
             (5 * (3 * C151259 + C150806 * C151588) +
              C150806 *
                  (4 * C151588 +
                   C150806 *
                       (3 * C151517 +
                        C150806 * (2 * C151536 +
                                   C150806 * (C150742 + C150770 * C150950))))) +
         C150614 *
             (5 * C151575 +
              C150806 *
                  (4 * C151569 +
                   C150806 *
                       (3 * C151518 +
                        C150806 *
                            (2 * C151537 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150950)))))) /
        C150509;
    const double C119826 =
        (6 * (4 * C151424 + C150806 * C151575) +
         C150806 *
             (5 * C151575 +
              C150806 *
                  (4 * C151569 +
                   C150806 *
                       (3 * C151518 +
                        C150806 *
                            (2 * C151537 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150950)))))) /
        C150509;
    const double C150786 = C150784 * ae;
    const double C812 = (C150614 * (5 * C150755 + C150621 * C150787) +
                         (5 * C150752 + C150621 * C150784) * ae) /
                        C150502;
    const double C143 = 6 * (4 * C150726 + C150621 * C150752) +
                        C150621 * (5 * C150752 + C150621 * C150784);
    const double C361 = 4 * C150726 + C150621 * C150752 + C150784 * C150618;
    const double C598 = 4 * C150726 + C150621 * C150752 + C150784 * C150950;
    const double C811 = C150614 * (5 * C150752 + C150621 * C150784);
    const double C952 = C150806 * (5 * C150752 + C150621 * C150784);
    const double C1160 = C150806 * C150614 * C150784;
    const double C150989 = ae * C150986;
    const double C150988 = C150614 * C150986;
    const double C150994 = C150806 * C150986;
    const double C150943 = C150942 + C150936;
    const double C150981 = ae * C150980;
    const double C3096 = (2 * C150955 + C150806 * C150980) / C150502;
    const double C151318 = C151294 + C151316;
    const double C151334 = ae * C151329;
    const double C151409 = C150920 + C151406;
    const double C151417 = ae * C151416;
    const double C18297 = (3 * C150976 + C150806 * C151416) / C150502;
    const double C151199 = C151197 + C151183;
    const double C151285 = ae * C151280;
    const double C151431 = C150806 * C151280;
    const double C151402 = C151397 + C151401;
    const double C151495 = C151492 * ae;
    const double C60678 = 6 * (4 * C151093 + C150614 * C151141) +
                          C150614 * (5 * C151141 + C150614 * C151492);
    const double C60835 = 4 * C151093 + C150614 * C151141 + C151492 * C150950;
    const double C61312 = C150806 * (5 * C151141 + C150614 * C151492);
    const double C151496 = ae * C151491;
    const double C151494 = C150614 * C151491;
    const double C151513 = C151491 * C150950;
    const double C151540 = C150806 * C151491;
    const double C151570 = C151564 + C151565;
    const double C151579 = ae * C151577;
    const double C151597 = C150806 * C151577;
    const double C150758 = ae * C150757;
    const double C371 = (3 * C150710 + C150621 * C150729 + C150614 * C150757 +
                         C150614 * C150752 * ae) /
                        C150502;
    const double C1165 = (C150806 * C150757) / C150502;
    const double C2788 = (C150757 + C150986 * C150950) / C150502;
    const double C186 = C177 + C178;
    const double C818 = C815 + C413;
    const double C23321 = C23305 + C23306;
    const double C51110 = C51094 + C51095;
    const double C659 = C647 + C648;
    const double C959 = C956 + C650;
    const double C150821 = C150820 + C150817;
    const double C1645 =
        (C150806 * C150661 + C150956 + C150956 +
         C150614 * (2 * ae * C150806 * C150751 + C150614 * C150806 * C150676)) /
        C150509;
    const double C2798 = C2791 + C1654;
    const double C23918 = C23898 + C23899;
    const double C51707 = C51687 + C51688;
    const double C2957 = C2954 + C2945;
    const double C150923 = C150906 + C150921;
    const double C151012 = ae * C151010;
    const double C1664 = C135 * C1639;
    const double C6862 = C6228 * C1639;
    const double C9906 = C6226 * C1639;
    const double C25277 = C23275 * C1639;
    const double C25261 = C23277 * C1639;
    const double C53066 = C51064 * C1639;
    const double C53050 = C51066 * C1639;
    const double C74262 = C73628 * C1639;
    const double C6863 = C6220 * C1651;
    const double C15112 = C152146 * C1651;
    const double C26868 = C152198 * C1651;
    const double C54657 = C152198 * C1651;
    const double C74263 = C73620 * C1651;
    const double C16086 = C16077 + C3104;
    const double C27093 = C27083 + C26565;
    const double C54882 = C54872 + C54354;
    const double C151176 = C151168 + C151062;
    const double C151064 = C151063 + C151052;
    const double C151216 = ae * C151214;
    const double C9581 = (2 * C151004 + C150806 * C151214) / C150502;
    const double C9587 =
        (2 * C151003 + C150806 * C151213 + C151380 + C151380 +
         C150614 * (2 * ae * (2 * C151228 + C150806 * C151277) +
                    C150614 * (2 * C151229 + C150806 * C151278))) /
        C150509;
    const double C9604 = C6226 * C9585;
    const double C16665 = C135 * C9585;
    const double C26574 = C23277 * C9585;
    const double C45037 = C23275 * C9585;
    const double C54363 = C51066 * C9585;
    const double C68641 = C51064 * C9585;
    const double C151486 = C151469 + C151482;
    const double C151148 = ae * C151146;
    const double C151147 = C150614 * C151146;
    const double C151256 = C151146 * C150950;
    const double C151343 = C150806 * C151146;
    const double C151451 = 4 * C151146;
    const double C151425 = C151421 + C151422;
    const double C151552 = C151543 + C151351;
    const double C151394 = ae * C151393;
    const double C18705 = (4 * C151384 + C150806 * C151393) / C150502;
    const double C119834 = C119833 + C119830;
    const double C180 = C135 * C151;
    const double C651 = C135 * C610;
    const double C958 = C135 * C953;
    const double C150574 = C150570 * ae;
    const double C6282 = C6263 + C6264;
    const double C6279 = C6254 + C6255;
    const double C6276 = C6245 + C6246;
    const double C6273 = C6236 + C6237;
    const double C6581 = C6553 + C6554;
    const double C6578 = C6544 + C6545;
    const double C6575 = C6529 + C6530;
    const double C6886 = C6864 + C6865;
    const double C6883 = C6855 + C6856;
    const double C6880 = C6846 + C6847;
    const double C6877 = C6831 + C6832;
    const double C7116 = C7108 + C6569;
    const double C7328 = C7320 + C6871;
    const double C7651 = C7632 + C7633;
    const double C9909 = C9901 + C8269;
    const double C10124 = C10116 + C9595;
    const double C110016 = C110008 + C6841;
    const double C110013 = C110002 + C6838;
    const double C110715 = C110710 + C7627;
    const double C111306 = C111286 + C8272;
    const double C112605 = C112594 + C9601;
    const double C112602 = C112588 + C9598;
    const double C23322 = C23308 + C23309;
    const double C23319 = C23299 + C23300;
    const double C23318 = C23296 + C23297;
    const double C23315 = C23287 + C23288;
    const double C23313 = C23281 + C23282;
    const double C23619 = C23601 + C23602;
    const double C23616 = C23592 + C23593;
    const double C23614 = C23586 + C23587;
    const double C23612 = C23580 + C23581;
    const double C23611 = C23573 + C23574;
    const double C23609 = C23567 + C23568;
    const double C23919 = C23901 + C23902;
    const double C23916 = C23892 + C23893;
    const double C23914 = C23886 + C23887;
    const double C23912 = C23880 + C23881;
    const double C23911 = C23873 + C23874;
    const double C23909 = C23867 + C23868;
    const double C24148 = C24143 + C23605;
    const double C24355 = C24350 + C23905;
    const double C24677 = C24667 + C24668;
    const double C24674 = C24658 + C24659;
    const double C24672 = C24652 + C24653;
    const double C25486 = C25479 + C25034;
    const double C25798 = C25791 + C25270;
    const double C26880 = C26873 + C25264;
    const double C26878 = C26869 + C25262;
    const double C27096 = C27089 + C26568;
    const double C27094 = C27085 + C26566;
    const double C40696 = C40687 + C23878;
    const double C40693 = C40679 + C23877;
    const double C41615 = C41608 + C24650;
    const double C42394 = C42381 + C25273;
    const double C42392 = C42377 + C25275;
    const double C42389 = C42371 + C25272;
    const double C42387 = C42367 + C25266;
    const double C44102 = C44091 + C26571;
    const double C44100 = C44087 + C26573;
    const double C44097 = C44081 + C26570;
    const double C44508 = C44504 + C27301;
    const double C45040 = C45033 + C27299;
    const double C145371 = C145364 + C44093;
    const double C146065 = C146059 + C45035;
    const double C51111 = C51097 + C51098;
    const double C51108 = C51088 + C51089;
    const double C51107 = C51085 + C51086;
    const double C51104 = C51076 + C51077;
    const double C51102 = C51070 + C51071;
    const double C51408 = C51390 + C51391;
    const double C51405 = C51381 + C51382;
    const double C51403 = C51375 + C51376;
    const double C51401 = C51369 + C51370;
    const double C51400 = C51362 + C51363;
    const double C51398 = C51356 + C51357;
    const double C51708 = C51690 + C51691;
    const double C51705 = C51681 + C51682;
    const double C51703 = C51675 + C51676;
    const double C51701 = C51669 + C51670;
    const double C51700 = C51662 + C51663;
    const double C51698 = C51656 + C51657;
    const double C51937 = C51932 + C51394;
    const double C52144 = C52139 + C51694;
    const double C52466 = C52456 + C52457;
    const double C52463 = C52447 + C52448;
    const double C52461 = C52441 + C52442;
    const double C53275 = C53268 + C52823;
    const double C53587 = C53580 + C53059;
    const double C54669 = C54662 + C53053;
    const double C54667 = C54658 + C53051;
    const double C54885 = C54878 + C54357;
    const double C54883 = C54874 + C54355;
    const double C65715 = C65706 + C54359;
    const double C65712 = C65700 + C51667;
    const double C65710 = C65696 + C51666;
    const double C66419 = C66413 + C53055;
    const double C66417 = C66409 + C52439;
    const double C67021 = C67004 + C53062;
    const double C67019 = C67000 + C53061;
    const double C67016 = C66993 + C55088;
    const double C67535 = C67529 + C53064;
    const double C68335 = C68326 + C68327;
    const double C68332 = C68319 + C54360;
    const double C68645 = C68639 + C55090;
    const double C68853 = C68847 + C54362;
    const double C69064 = C69058 + C66999;
    const double C6295 = C6283 + C6267;
    const double C6290 = C6278 + C6252;
    const double C6289 = C6277 + C6249;
    const double C6284 = C6272 + C6234;
    const double C6597 = C6585 + C6566;
    const double C6592 = C6580 + C6551;
    const double C6589 = C6577 + C6542;
    const double C6588 = C6576 + C6533;
    const double C6899 = C6887 + C6868;
    const double C6894 = C6882 + C6853;
    const double C6891 = C6879 + C6844;
    const double C6890 = C6878 + C6835;
    const double C7120 = C7117 + C6570;
    const double C7332 = C7329 + C6872;
    const double C7661 = C7655 + C7645;
    const double C7656 = C7650 + C7630;
    const double C9913 = C9910 + C8270;
    const double C10128 = C10125 + C9596;
    const double C110023 = C110017 + C6840;
    const double C110018 = C110012 + C6839;
    const double C110717 = C110714 + C7626;
    const double C111322 = C111313 + C8280;
    const double C111317 = C111308 + C8279;
    const double C111314 = C111305 + C8273;
    const double C112612 = C112606 + C9600;
    const double C112607 = C112601 + C9599;
    const double C113311 = C113308 + C10332;
    const double C6287 = C6275 + C6243;
    const double C6286 = C6274 + C6240;
    const double C110021 = C110015 + C6842;
    const double C110020 = C110014 + C6837;
    const double C23330 = C23320 + C23303;
    const double C23327 = C23317 + C23294;
    const double C23326 = C23316 + C23291;
    const double C23324 = C23314 + C23285;
    const double C23622 = C23610 + C23571;
    const double C23620 = C23608 + C23565;
    const double C23927 = C23915 + C23890;
    const double C23925 = C23913 + C23884;
    const double C23922 = C23910 + C23871;
    const double C23920 = C23908 + C23865;
    const double C27099 = C27095 + C26567;
    const double C40699 = C40695 + C23879;
    const double C40698 = C40694 + C23876;
    const double C41618 = C41616 + C24651;
    const double C42396 = C42388 + C25265;
    const double C44104 = C44098 + C26569;
    const double C51119 = C51109 + C51092;
    const double C51116 = C51106 + C51083;
    const double C51115 = C51105 + C51080;
    const double C51113 = C51103 + C51074;
    const double C51411 = C51399 + C51360;
    const double C51409 = C51397 + C51354;
    const double C51716 = C51704 + C51679;
    const double C51714 = C51702 + C51673;
    const double C51711 = C51699 + C51660;
    const double C51709 = C51697 + C51654;
    const double C54888 = C54884 + C54356;
    const double C65721 = C65714 + C54358;
    const double C65720 = C65713 + C51668;
    const double C65718 = C65711 + C51665;
    const double C66424 = C66420 + C53054;
    const double C66422 = C66418 + C52440;
    const double C73687 = C73675 + C73643;
    const double C73686 = C73674 + C73640;
    const double C93522 = C93516 + C74242;
    const double C93521 = C93515 + C74237;
    const double C59633 = C59609 * C148;
    const double C59632 = C59609 * C147;
    const double C59625 = C59609 * C146;
    const double C59624 = C59609 * C145;
    const double C59617 = C59609 * C144;
    const double C59803 = C59609 * C368;
    const double C59802 = C59609 * C363;
    const double C59798 = C59609 * C367;
    const double C59791 = C59609 * C364;
    const double C59787 = C59609 * C366;
    const double C59786 = C59609 * C365;
    const double C59973 = C59609 * C605;
    const double C59972 = C59609 * C600;
    const double C59968 = C59609 * C604;
    const double C59961 = C59609 * C601;
    const double C59957 = C59609 * C603;
    const double C59956 = C59609 * C602;
    const double C60107 = C59609 * C362;
    const double C60241 = C59609 * C599;
    const double C60447 = C59609 * C1163;
    const double C60446 = C59609 * C1162;
    const double C60439 = C59609 * C1161;
    const double C60685 = C59609 * C1450;
    const double C60847 = C59609 * C1637;
    const double C60846 = C59609 * C1636;
    const double C60842 = C59609 * C1632;
    const double C60981 = C59609 * C1449;
    const double C61179 = C59609 * C1635;
    const double C61701 = C59609 * C2573;
    const double C61700 = C59609 * C2572;
    const double C61899 = C59609 * C1631;
    const double C62033 = C59609 * C2571;
    const double C62170 = C59609 * C3093;
    const double C59634 = C59611 * C370;
    const double C59631 = C59611 * C362;
    const double C59626 = C59611 * C363;
    const double C59623 = C59611 * C364;
    const double C59618 = C59611 * C365;
    const double C59804 = C59611 * C1448;
    const double C59801 = C59611 * C368;
    const double C59797 = C59611 * C1449;
    const double C59792 = C59611 * C367;
    const double C59788 = C59611 * C1450;
    const double C59785 = C59611 * C366;
    const double C59974 = C59611 * C1630;
    const double C59971 = C59611 * C1163;
    const double C59967 = C59611 * C1631;
    const double C59962 = C59611 * C1162;
    const double C59958 = C59611 * C1632;
    const double C59955 = C59611 * C1161;
    const double C60108 = C59611 * C369;
    const double C60242 = C59611 * C1164;
    const double C60448 = C59611 * C1634;
    const double C60445 = C59611 * C1635;
    const double C60440 = C59611 * C1636;
    const double C60841 = C59611 * C1637;
    const double C61702 = C59611 * C9583;
    const double C61699 = C59611 * C3093;
    const double C61900 = C59611 * C1638;
    const double C62034 = C59611 * C3094;
    const double C62171 = C59611 * C9582;
    const double C59630 = C59613 * C369;
    const double C59627 = C59613 * C368;
    const double C59622 = C59613 * C367;
    const double C59619 = C59613 * C366;
    const double C59800 = C59613 * C1448;
    const double C59793 = C59613 * C1449;
    const double C59784 = C59613 * C1450;
    const double C59975 = C59613 * C1639;
    const double C59970 = C59613 * C1634;
    const double C59966 = C59613 * C1638;
    const double C59963 = C59613 * C1635;
    const double C59959 = C59613 * C1637;
    const double C59954 = C59613 * C1636;
    const double C61698 = C59613 * C9582;
    const double C73669 = C73624 * C149;
    const double C73667 = C73624 * C148;
    const double C73652 = C73624 * C147;
    const double C73649 = C73624 * C146;
    const double C73634 = C73624 * C145;
    const double C73630 = C73624 * C144;
    const double C73971 = C73624 * C369;
    const double C73970 = C73624 * C362;
    const double C73966 = C73624 * C368;
    const double C73951 = C73624 * C363;
    const double C73942 = C73624 * C367;
    const double C73938 = C73624 * C366;
    const double C73937 = C73624 * C365;
    const double C73933 = C73624 * C364;
    const double C74273 = C73624 * C606;
    const double C74272 = C73624 * C599;
    const double C74268 = C73624 * C605;
    const double C74253 = C73624 * C600;
    const double C74244 = C73624 * C604;
    const double C74240 = C73624 * C603;
    const double C74239 = C73624 * C602;
    const double C74235 = C73624 * C601;
    const double C74512 = C73624 * C370;
    const double C74724 = C73624 * C607;
    const double C75047 = C73624 * C1164;
    const double C75045 = C73624 * C1163;
    const double C75030 = C73624 * C1162;
    const double C75026 = C73624 * C1161;
    const double C75413 = C73624 * C1450;
    const double C75410 = C73624 * C1449;
    const double C75653 = C73624 * C1638;
    const double C75650 = C73624 * C1637;
    const double C75649 = C73624 * C1636;
    const double C75646 = C73624 * C1635;
    const double C75643 = C73624 * C1632;
    const double C75640 = C73624 * C1631;
    const double C75856 = C73624 * C1448;
    const double C76164 = C73624 * C1634;
    const double C76943 = C73624 * C2574;
    const double C76940 = C73624 * C2573;
    const double C76939 = C73624 * C2572;
    const double C76936 = C73624 * C2571;
    const double C77242 = C73624 * C1630;
    const double C77454 = C73624 * C2570;
    const double C77663 = C73624 * C3094;
    const double C77660 = C73624 * C3093;
    const double C94803 = C73624 * C9582;
    const double C96099 = C73624 * C17974;
    const double C96804 = C73624 * C9583;
    const double C73670 = C73626 * C372;
    const double C73664 = C73626 * C370;
    const double C73655 = C73626 * C362;
    const double C73646 = C73626 * C363;
    const double C73637 = C73626 * C364;
    const double C73631 = C73626 * C365;
    const double C73969 = C73626 * C369;
    const double C73963 = C73626 * C1448;
    const double C73954 = C73626 * C368;
    const double C73945 = C73626 * C1449;
    const double C73939 = C73626 * C1450;
    const double C73936 = C73626 * C366;
    const double C73930 = C73626 * C367;
    const double C74274 = C73626 * C1629;
    const double C74271 = C73626 * C1164;
    const double C74265 = C73626 * C1630;
    const double C74256 = C73626 * C1163;
    const double C74247 = C73626 * C1631;
    const double C74241 = C73626 * C1632;
    const double C74238 = C73626 * C1161;
    const double C74232 = C73626 * C1162;
    const double C75042 = C73626 * C1634;
    const double C75033 = C73626 * C1635;
    const double C75027 = C73626 * C1636;
    const double C75642 = C73626 * C1637;
    const double C75639 = C73626 * C1638;
    const double C76944 = C73626 * C9585;
    const double C76941 = C73626 * C9583;
    const double C76938 = C73626 * C3093;
    const double C76935 = C73626 * C3094;
    const double C77243 = C73626 * C1639;
    const double C77455 = C73626 * C3095;
    const double C77661 = C73626 * C9582;
    const double C16692 = C16687 + C16668;
    const double C428 = C420 + C405;
    const double C6292 = C6280 + C6258;
    const double C23629 = C23617 + C23596;
    const double C51418 = C51406 + C51385;
    const double C73692 = C73680 + C73658;
    const double C1194 = C1190 + C1182;
    const double C23929 = C23917 + C23896;
    const double C51718 = C51706 + C51685;
    const double C1808 = C152146 * C1456;
    const double C6564 = C6219 * C1456;
    const double C6558 = C6220 * C1456;
    const double C23591 = C152198 * C1456;
    const double C25476 = C152296 * C1456;
    const double C51380 = C152198 * C1456;
    const double C53265 = C51058 * C1456;
    const double C73964 = C152362 * C1456;
    const double C73958 = C73620 * C1456;
    const double C1813 = C1807 + C1465;
    const double C6584 = C6562 + C6563;
    const double C6582 = C6556 + C6557;
    const double C23615 = C23589 + C23590;
    const double C25484 = C25475 + C25032;
    const double C51404 = C51378 + C51379;
    const double C53273 = C53264 + C52821;
    const double C73982 = C73956 + C73957;
    const double C2026 = C2020 + C1659;
    const double C6884 = C6858 + C6859;
    const double C7654 = C7641 + C7642;
    const double C24675 = C24661 + C24662;
    const double C25796 = C25787 + C25268;
    const double C52464 = C52450 + C52451;
    const double C53585 = C53576 + C53057;
    const double C74284 = C74258 + C74259;
    const double C150902 = ae * C150901;
    const double C1452 = (3 * C150844 + C150614 * C150901 +
                          (2 * C150838 + C150614 * C150891) * ae) /
                         C150502;
    const double C2168 = (C150806 * C150901) / C150502;
    const double C7637 = C6220 * C2172;
    const double C8797 = C6219 * C2172;
    const double C16899 = C152146 * C2172;
    const double C25790 = C152198 * C2172;
    const double C42672 = C152296 * C2172;
    const double C53579 = C152198 * C2172;
    const double C75037 = C73620 * C2172;
    const double C76161 = C152362 * C2172;
    const double C84752 = C51058 * C2172;
    const double C16093 = C16089 + C16072;
    const double C151103 = C151074 + C151101;
    const double C151248 = ae * C151243;
    const double C17400 = C152146 * C8262;
    const double C42380 = C152198 * C8262;
    const double C67007 = C152198 * C8262;
    const double C67740 = C51058 * C8262;
    const double C94800 = C152362 * C8262;
    const double C94790 = C73620 * C8262;
    const double C111299 = C6219 * C8262;
    const double C111289 = C6220 * C8262;
    const double C144791 = C152296 * C8262;
    const double C112603 = C112590 + C9597;
    const double C113307 = C113299 + C10333;
    const double C16685 = C16676 + C16677;
    const double C45039 = C45031 + C27300;
    const double C144107 = C144100 + C42383;
    const double C67017 = C66995 + C55089;
    const double C67024 = C67011 + C67012;
    const double C96104 = C96091 + C76937;
    const double C18717 = C18716 + C16666;
    const double C44107 = C44101 + C26572;
    const double C68337 = C68333 + C54361;
    const double C16079 = C1197 * C6221;
    const double C16074 = C1197 * C151911;
    const double C32998 = C1197 * C152344;
    const double C32996 = C1197 * C152345;
    const double C32994 = C1197 * C23273;
    const double C102509 = C1197 * C51060;
    const double C102507 = C1197 * C51061;
    const double C102505 = C1197 * C51062;
    const double C118596 = C1197 * C151906;
    const double C135359 = C1197 * C152258;
    const double C135356 = C1197 * C151911;
    const double C16081 = C2805 * C6221;
    const double C16076 = C2805 * C151911;
    const double C33562 = C2805 * C23273;
    const double C35113 = C2805 * C152345;
    const double C103072 = C2805 * C51062;
    const double C104618 = C2805 * C51061;
    const double C118597 = C2805 * C151906;
    const double C135361 = C2805 * C152258;
    const double C135358 = C2805 * C151911;
    const double C1817 = C1814 + C1466;
    const double C6586 = C6574 + C6527;
    const double C8497 = C8494 + C8022;
    const double C23625 = C23613 + C23584;
    const double C51414 = C51402 + C51373;
    const double C73986 = C73974 + C73927;
    const double C2030 = C2027 + C1660;
    const double C6888 = C6876 + C6829;
    const double C8808 = C8805 + C8276;
    const double C24679 = C24673 + C24656;
    const double C52468 = C52462 + C52445;
    const double C74288 = C74276 + C74229;
    const double C15115 = C15113 + C1663;
    const double C6893 = C6881 + C6850;
    const double C26883 = C26879 + C25263;
    const double C54672 = C54668 + C53052;
    const double C74293 = C74281 + C74250;
    const double C16664 = C16070 + C16096;
    const double C135923 = C135354 + C135353;
    const double C1459 =
        (3 * (C150628 + C150853 + C150853 + C150614 * C150869) + C150879 +
         C150879 +
         C150614 *
             (2 * C150869 + C150876 + C150876 +
              C150614 * (C150637 + C150872 + C150872 +
                         C150614 * (2 * ae * C150706 + C150614 * C150645)))) /
        C150509;
    const double C1468 = C135 * C1451;
    const double C6540 = C6228 * C1451;
    const double C8026 = C6224 * C1451;
    const double C8024 = C6226 * C1451;
    const double C25037 = C23275 * C1451;
    const double C25035 = C23277 * C1451;
    const double C52826 = C51064 * C1451;
    const double C52824 = C51066 * C1451;
    const double C59789 = C59613 * C1451;
    const double C59783 = C59615 * C1451;
    const double C60686 = C59609 * C1451;
    const double C60684 = C59611 * C1451;
    const double C73940 = C73628 * C1451;
    const double C75414 = C73624 * C1451;
    const double C75412 = C73626 * C1451;
    const double C2176 = C135 * C2167;
    const double C7628 = C6228 * C2167;
    const double C8278 = C6226 * C2167;
    const double C9012 = C6224 * C2167;
    const double C25271 = C23277 * C2167;
    const double C26001 = C23275 * C2167;
    const double C53060 = C51066 * C2167;
    const double C53790 = C51064 * C2167;
    const double C59953 = C59615 * C2167;
    const double C60441 = C59613 * C2167;
    const double C60845 = C59611 * C2167;
    const double C61316 = C59609 * C2167;
    const double C75028 = C73628 * C2167;
    const double C75648 = C73626 * C2167;
    const double C76370 = C73624 * C2167;
    const double C8281 = C6226 * C8256;
    const double C8271 = C6228 * C8256;
    const double C16438 = C135 * C8256;
    const double C25274 = C23277 * C8256;
    const double C43329 = C23275 * C8256;
    const double C53063 = C51066 * C8256;
    const double C59960 = C59615 * C8256;
    const double C60848 = C59611 * C8256;
    const double C60840 = C59613 * C8256;
    const double C66770 = C51064 * C8256;
    const double C75651 = C73626 * C8256;
    const double C75641 = C73628 * C8256;
    const double C95517 = C73624 * C8256;
    const double C112016 = C6224 * C8256;
    const double C16693 = C16688 + C16671;
    const double C16696 = C16691 * C6221;
    const double C35508 = C16691 * C152344;
    const double C105013 = C16691 * C51060;
    const double C118592 = C16691 * C151906;
    const double C135921 = C16691 * C152258;
    const double C15359 = C673 * C151911;
    const double C15773 = C673 * C6221;
    const double C32309 = C673 * C152345;
    const double C32304 = C673 * C23273;
    const double C101820 = C673 * C51061;
    const double C101815 = C673 * C51062;
    const double C118394 = C673 * C151906;
    const double C134663 = C673 * C151911;
    const double C135059 = C673 * C152258;
    const double C15772 = C674 * C151911;
    const double C32307 = C674 * C23273;
    const double C32700 = C674 * C152345;
    const double C101818 = C674 * C51062;
    const double C102211 = C674 * C51061;
    const double C135058 = C674 * C151911;
    const double C18005 = C18002 * C6221;
    const double C119828 = C18002 * C151906;
    const double C137179 = C18002 * C152258;
    const double C816 = C152146 * C384;
    const double C23307 = C152198 * C384;
    const double C51096 = C152198 * C384;
    const double C649 = C152146 * C620;
    const double C957 = C152146 * C621;
    const double C1186 = C152146 * C1171;
    const double C24349 = C152198 * C1171;
    const double C52138 = C152198 * C1171;
    const double C18001 = C17998 + C17988;
    const double C150789 = C150788 + C150786;
    const double C817 = C135 * C812;
    const double C23312 = C23277 * C812;
    const double C51101 = C51066 * C812;
    const double C150990 = C150755 + C150988;
    const double C150995 = ae * C150994;
    const double C150945 = ae * C150943;
    const double C150944 = C150614 * C150943;
    const double C151016 = C150806 * C150943;
    const double C1652 =
        (C150661 + C150676 * C150950 + C150981 + C150981 +
         C150614 *
             (2 * ae * (C150751 + C150779 * C150950) +
              C150614 * (C150676 +
                         (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)) *
                             C150950))) /
        C150509;
    const double C3105 = C135 * C3096;
    const double C27092 = C23277 * C3096;
    const double C54881 = C51066 * C3096;
    const double C151319 = C151318 + C151307;
    const double C151411 = ae * C151409;
    const double C10111 = (2 * C151010 + C150806 * C151409) / C150502;
    const double C10112 =
        (2 * C151009 + C150806 * C151408 + C151417 + C151417 +
         C150614 *
             (2 * ae * (2 * C151326 + C150806 * (C150747 + C150775 * C150950)) +
              C150614 *
                  (2 * C151327 +
                   C150806 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150950)))) /
        C150509;
    const double C18305 = C135 * C18297;
    const double C26576 = C23277 * C18297;
    const double C54365 = C51066 * C18297;
    const double C151201 = ae * C151199;
    const double C151200 = C150614 * C151199;
    const double C151274 = C151199 * C150950;
    const double C151362 = C150806 * C151199;
    const double C151434 = C151430 + C151431;
    const double C151403 = ae * C151402;
    const double C18706 = (4 * C151379 + C150806 * C151402) / C150502;
    const double C151497 = C151452 + C151494;
    const double C151520 = C151146 + C151513;
    const double C151549 = ae * C151540;
    const double C151573 = C150806 * C151570;
    const double C151586 = ae * C151570;
    const double C151598 = C151596 + C151597;
    const double C383 = (3 * C150647 + C150621 * C150661 + C150758 + C150758 +
                         C150614 * (2 * ae * C150755 + C150614 * C150678)) /
                        C150509;
    const double C411 = C135 * C371;
    const double C6261 = C6228 * C371;
    const double C7113 = C6226 * C371;
    const double C23606 = C23275 * C371;
    const double C23604 = C23277 * C371;
    const double C51395 = C51064 * C371;
    const double C51393 = C51066 * C371;
    const double C59635 = C59613 * C371;
    const double C73661 = C73628 * C371;
    const double C74513 = C73626 * C371;
    const double C1185 = C135 * C1165;
    const double C7325 = C6226 * C1165;
    const double C23904 = C23277 * C1165;
    const double C24670 = C23275 * C1165;
    const double C51693 = C51066 * C1165;
    const double C52459 = C51064 * C1165;
    const double C74725 = C73626 * C1165;
    const double C2797 = C135 * C2788;
    const double C23907 = C23277 * C2788;
    const double C51696 = C51066 * C2788;
    const double C192 = C186 + C178;
    const double C819 = C818 + C413;
    const double C23331 = C23321 + C23306;
    const double C51120 = C51110 + C51095;
    const double C667 = C659 + C648;
    const double C960 = C959 + C650;
    const double C150822 = ae * C150821;
    const double C1447 =
        (2 * C150731 + C150614 * C150821 + (C150726 + C150748 * C150618) * ae) /
        C150502;
    const double C1633 = (C150806 * C150821) / C150502;
    const double C1640 = (C150821 + C150943 * C150950) / C150502;
    const double C2019 = C152146 * C1645;
    const double C7319 = C6220 * C1645;
    const double C24666 = C152198 * C1645;
    const double C52455 = C152198 * C1645;
    const double C74719 = C73620 * C1645;
    const double C2801 = C2798 + C1654;
    const double C23930 = C23918 + C23899;
    const double C51719 = C51707 + C51688;
    const double C15360 = C2957 * C151911;
    const double C35309 = C2957 * C23273;
    const double C104814 = C2957 * C51062;
    const double C118395 = C2957 * C151906;
    const double C134664 = C2957 * C151911;
    const double C150924 = C150923 + C150917;
    const double C2173 = (2 * (2 * ae * C150806 * C150725 + C150614 * C151009) +
                          C151012 + C151012 +
                          C150614 * (C151009 + C151013 + C151013 +
                                     C150614 * (2 * ae * C150806 * C150747 +
                                                C150614 * C150806 * C150674))) /
                         C150509;
    const double C15114 = C15111 + C1664;
    const double C6885 = C6861 + C6862;
    const double C26877 = C26867 + C25261;
    const double C54666 = C54656 + C53050;
    const double C74285 = C74261 + C74262;
    const double C16090 = C16086 + C3104;
    const double C27097 = C27093 + C26565;
    const double C54886 = C54882 + C54354;
    const double C151193 = C151176 + C151189;
    const double C151066 = ae * C151064;
    const double C151065 = C150614 * C151064;
    const double C151161 = 4 * C151064;
    const double C151230 = C150806 * C151064;
    const double C8255 = (C150901 + C151064 * C150950) / C150502;
    const double C8261 =
        (2 * (2 * ae * (C150715 + C150736 * C150950) + C150614 * C151213) +
         C151216 + C151216 +
         C150614 * (C151213 + C151217 + C151217 +
                    C150614 * (2 * ae * (C150736 + C150763 * C150950) +
                               C150614 * (C150664 + C151160 * C150950)))) /
        C150509;
    const double C9594 = C6228 * C9581;
    const double C10336 = C6226 * C9581;
    const double C16674 = C135 * C9581;
    const double C27302 = C23277 * C9581;
    const double C42385 = C23275 * C9581;
    const double C55091 = C51066 * C9581;
    const double C62035 = C59613 * C9581;
    const double C67533 = C51064 * C9581;
    const double C76934 = C73628 * C9581;
    const double C77664 = C73626 * C9581;
    const double C10115 = C6220 * C9587;
    const double C16675 = C152146 * C9587;
    const double C44503 = C152198 * C9587;
    const double C68638 = C152198 * C9587;
    const double C77449 = C73620 * C9587;
    const double C18306 = C18300 + C16665;
    const double C44099 = C44085 + C26574;
    const double C68852 = C68845 + C54363;
    const double C151490 = C150614 * C151486;
    const double C151461 = C151445 + C151148;
    const double C151149 = C151112 + C151147;
    const double C151261 = C151100 + C151256;
    const double C151350 = ae * C151343;
    const double C151584 = 2 * C151343;
    const double C151426 = ae * C151425;
    const double C9584 = (3 * C151223 + C150806 * C151425) / C150502;
    const double C151558 = C151552 + C151557;
    const double C9590 =
        (3 * C151222 + C150806 * (2 * C151242 + C150806 * C151260) + C151394 +
         C151394 +
         C150614 * (2 * ae *
                        (3 * C151259 +
                         C150806 * (2 * C151340 +
                                    C150806 * (C150720 + C150742 * C150950))) +
                    C150614 * (3 * C151260 +
                               C150806 * (2 * C151341 +
                                          C150806 * (C150657 +
                                                     C150672 * C150950))))) /
        C150509;
    const double C18714 = C135 * C18705;
    const double C44094 = C23277 * C18705;
    const double C68324 = C51066 * C18705;
    const double C69060 = C51064 * C18705;
    const double C96100 = C73626 * C18705;
    const double C112599 = C6226 * C18705;
    const double C146061 = C23275 * C18705;
    const double C119835 = C119834 * C151906;
    const double C59608 =
        ((ae * -2 * C150552) / C150562 -
         (((C150500 * C150563) / C150509 + 2 * C150576) * be) / C150502) /
            C150553 +
        ((C150500 *
              (C150563 / C150562 -
               (((C150500 * C150574) / C150502 + 2 * C150571) * be) / C150502 -
               C150518 / C150513) +
          2 * (C150576 / C150553 -
               ((C150500 * C150571 + C152296) * be) / C150502 + C150572)) *
         ae) /
            C150502 +
        C150574 / C150513 - ((2 * C150572 - C150526 / C150513) * be) / C150502;
    const double C59610 =
        (C150563 / C150562 -
         (((C150500 * C150574) / C150502 + 2 * C150571) * be) / C150502 -
         C150518 / C150513) /
            C150553 +
        ((C150500 * (C150574 / C150513 -
                     ((2 * C150572 - C150526 / C150513) * be) / C150502) +
          2 * (C150571 / C150553 -
               ((C150500 * C150572 + C152198) * be) / C150502)) *
         ae) /
            C150502 +
        (-2 * C150518) / (C150502 * 4 * C150509);
    const double C59612 = (C150574 / C150513 -
                           ((2 * C150572 - C150526 / C150513) * be) / C150502) /
                              C150553 +
                          ((2 * (C150572 / C150553 - (0 * be) / C150502) -
                            C150526 / (C150502 * 4 * C150509)) *
                           ae) /
                              C150502;
    const double C73623 =
        C150563 / C150562 -
        (((C150500 * C150574) / C150502 + 2 * C150571) * be) / C150502 -
        C150518 / C150513;
    const double C73625 =
        C150574 / C150513 - ((2 * C150572 - C150526 / C150513) * be) / C150502;
    const double C6294 = C6282 + C6264;
    const double C6291 = C6279 + C6255;
    const double C6288 = C6276 + C6246;
    const double C6285 = C6273 + C6237;
    const double C6593 = C6581 + C6554;
    const double C6590 = C6578 + C6545;
    const double C6587 = C6575 + C6530;
    const double C6898 = C6886 + C6865;
    const double C6895 = C6883 + C6856;
    const double C6892 = C6880 + C6847;
    const double C6889 = C6877 + C6832;
    const double C7119 = C7116 + C6569;
    const double C7331 = C7328 + C6871;
    const double C7657 = C7651 + C7633;
    const double C9912 = C9909 + C8269;
    const double C10127 = C10124 + C9595;
    const double C110022 = C110016 + C6841;
    const double C110019 = C110013 + C6838;
    const double C110718 = C110715 + C7627;
    const double C111315 = C111306 + C8272;
    const double C112611 = C112605 + C9601;
    const double C112608 = C112602 + C9598;
    const double C23332 = C23322 + C23309;
    const double C23329 = C23319 + C23300;
    const double C23328 = C23318 + C23297;
    const double C23325 = C23315 + C23288;
    const double C23323 = C23313 + C23282;
    const double C23631 = C23619 + C23602;
    const double C23628 = C23616 + C23593;
    const double C23626 = C23614 + C23587;
    const double C23624 = C23612 + C23581;
    const double C23623 = C23611 + C23574;
    const double C23621 = C23609 + C23568;
    const double C23931 = C23919 + C23902;
    const double C23928 = C23916 + C23893;
    const double C23926 = C23914 + C23887;
    const double C23924 = C23912 + C23881;
    const double C23923 = C23911 + C23874;
    const double C23921 = C23909 + C23868;
    const double C24150 = C24148 + C23605;
    const double C24357 = C24355 + C23905;
    const double C24683 = C24677 + C24668;
    const double C24680 = C24674 + C24659;
    const double C24678 = C24672 + C24653;
    const double C25490 = C25486 + C25034;
    const double C25802 = C25798 + C25270;
    const double C26884 = C26880 + C25264;
    const double C26882 = C26878 + C25262;
    const double C27100 = C27096 + C26568;
    const double C27098 = C27094 + C26566;
    const double C40700 = C40696 + C23878;
    const double C40697 = C40693 + C23877;
    const double C41617 = C41615 + C24650;
    const double C42402 = C42394 + C25273;
    const double C42400 = C42392 + C25275;
    const double C42397 = C42389 + C25272;
    const double C42395 = C42387 + C25266;
    const double C44108 = C44102 + C26571;
    const double C44106 = C44100 + C26573;
    const double C44103 = C44097 + C26570;
    const double C44510 = C44508 + C27301;
    const double C45042 = C45040 + C27299;
    const double C145373 = C145371 + C44093;
    const double C146067 = C146065 + C45035;
    const double C51121 = C51111 + C51098;
    const double C51118 = C51108 + C51089;
    const double C51117 = C51107 + C51086;
    const double C51114 = C51104 + C51077;
    const double C51112 = C51102 + C51071;
    const double C51420 = C51408 + C51391;
    const double C51417 = C51405 + C51382;
    const double C51415 = C51403 + C51376;
    const double C51413 = C51401 + C51370;
    const double C51412 = C51400 + C51363;
    const double C51410 = C51398 + C51357;
    const double C51720 = C51708 + C51691;
    const double C51717 = C51705 + C51682;
    const double C51715 = C51703 + C51676;
    const double C51713 = C51701 + C51670;
    const double C51712 = C51700 + C51663;
    const double C51710 = C51698 + C51657;
    const double C51939 = C51937 + C51394;
    const double C52146 = C52144 + C51694;
    const double C52472 = C52466 + C52457;
    const double C52469 = C52463 + C52448;
    const double C52467 = C52461 + C52442;
    const double C53279 = C53275 + C52823;
    const double C53591 = C53587 + C53059;
    const double C54673 = C54669 + C53053;
    const double C54671 = C54667 + C53051;
    const double C54889 = C54885 + C54357;
    const double C54887 = C54883 + C54355;
    const double C65722 = C65715 + C54359;
    const double C65719 = C65712 + C51667;
    const double C65717 = C65710 + C51666;
    const double C66423 = C66419 + C53055;
    const double C66421 = C66417 + C52439;
    const double C67029 = C67021 + C53062;
    const double C67027 = C67019 + C53061;
    const double C67025 = C67016 + C55088;
    const double C67537 = C67535 + C53064;
    const double C68339 = C68335 + C68327;
    const double C68336 = C68332 + C54360;
    const double C68647 = C68645 + C55090;
    const double C68855 = C68853 + C54362;
    const double C69066 = C69064 + C66999;
    const double C6307 = C6295 + C6268;
    const double C6302 = C6290 + C6253;
    const double C6301 = C6289 + C6250;
    const double C6296 = C6284 + C6235;
    const double C6609 = C6597 + C6567;
    const double C6604 = C6592 + C6552;
    const double C6601 = C6589 + C6543;
    const double C6600 = C6588 + C6534;
    const double C6911 = C6899 + C6869;
    const double C6906 = C6894 + C6854;
    const double C6903 = C6891 + C6845;
    const double C6902 = C6890 + C6836;
    const double C7123 = C7120 + C7111;
    const double C7335 = C7332 + C7323;
    const double C7667 = C7661 + C7646;
    const double C7662 = C7656 + C7631;
    const double C9916 = C9913 + C9904;
    const double C10131 = C10128 + C10119;
    const double C110029 = C110023 + C110011;
    const double C110024 = C110018 + C110001;
    const double C110720 = C110717 + C110709;
    const double C111331 = C111322 + C111301;
    const double C111326 = C111317 + C111291;
    const double C111323 = C111314 + C111285;
    const double C112618 = C112612 + C112597;
    const double C112613 = C112607 + C112587;
    const double C113314 = C113311 + C113302;
    const double C6299 = C6287 + C6244;
    const double C6298 = C6286 + C6241;
    const double C110027 = C110021 + C110007;
    const double C110026 = C110020 + C110005;
    const double C23340 = C23330 + C23304;
    const double C23337 = C23327 + C23295;
    const double C23336 = C23326 + C23292;
    const double C23334 = C23324 + C23286;
    const double C23634 = C23622 + C23572;
    const double C23632 = C23620 + C23566;
    const double C23939 = C23927 + C23891;
    const double C23937 = C23925 + C23885;
    const double C23934 = C23922 + C23872;
    const double C23932 = C23920 + C23866;
    const double C27103 = C27099 + C27088;
    const double C40703 = C40699 + C40686;
    const double C40702 = C40698 + C40682;
    const double C41620 = C41618 + C41611;
    const double C42404 = C42396 + C42370;
    const double C44110 = C44104 + C44084;
    const double C51129 = C51119 + C51093;
    const double C51126 = C51116 + C51084;
    const double C51125 = C51115 + C51081;
    const double C51123 = C51113 + C51075;
    const double C51423 = C51411 + C51361;
    const double C51421 = C51409 + C51355;
    const double C51728 = C51716 + C51680;
    const double C51726 = C51714 + C51674;
    const double C51723 = C51711 + C51661;
    const double C51721 = C51709 + C51655;
    const double C54892 = C54888 + C54877;
    const double C65727 = C65721 + C65705;
    const double C65726 = C65720 + C65703;
    const double C65724 = C65718 + C65699;
    const double C66428 = C66424 + C66416;
    const double C66426 = C66422 + C66412;
    const double C73699 = C73687 + C73644;
    const double C73698 = C73686 + C73641;
    const double C93528 = C93522 + C93508;
    const double C93527 = C93521 + C93506;
    const double C16697 = C16692 * C6221;
    const double C33563 = C16692 * C152344;
    const double C103073 = C16692 * C51060;
    const double C118975 = C16692 * C151906;
    const double C135924 = C16692 * C152258;
    const double C436 = C428 + C406;
    const double C6304 = C6292 + C6259;
    const double C23641 = C23629 + C23597;
    const double C51430 = C51418 + C51386;
    const double C73704 = C73692 + C73659;
    const double C1198 = C1194 + C1183;
    const double C23941 = C23929 + C23897;
    const double C51730 = C51718 + C51686;
    const double C1816 = C1813 + C1465;
    const double C6596 = C6584 + C6563;
    const double C6594 = C6582 + C6557;
    const double C23627 = C23615 + C23590;
    const double C25488 = C25484 + C25032;
    const double C51416 = C51404 + C51379;
    const double C53277 = C53273 + C52821;
    const double C73994 = C73982 + C73957;
    const double C2029 = C2026 + C1659;
    const double C6896 = C6884 + C6859;
    const double C7660 = C7654 + C7642;
    const double C24681 = C24675 + C24662;
    const double C25800 = C25796 + C25268;
    const double C52470 = C52464 + C52451;
    const double C53589 = C53585 + C53057;
    const double C74296 = C74284 + C74259;
    const double C1460 =
        (3 * (C150835 + C150842 + C150842 + C150614 * C150892) + C150902 +
         C150902 +
         C150614 *
             (2 * C150892 + C150899 + C150899 +
              C150614 * (C150649 + C150895 + C150895 +
                         C150614 * (2 * ae * C150736 + C150614 * C150664)))) /
        C150509;
    const double C1469 = C135 * C1452;
    const double C6548 = C6228 * C1452;
    const double C8029 = C6224 * C1452;
    const double C8021 = C6226 * C1452;
    const double C25039 = C23275 * C1452;
    const double C25033 = C23277 * C1452;
    const double C52828 = C51064 * C1452;
    const double C52822 = C51066 * C1452;
    const double C59796 = C59613 * C1452;
    const double C59794 = C59615 * C1452;
    const double C60982 = C59611 * C1452;
    const double C73948 = C73628 * C1452;
    const double C75417 = C73624 * C1452;
    const double C75409 = C73626 * C1452;
    const double C2177 = C135 * C2168;
    const double C7636 = C6228 * C2168;
    const double C8275 = C6226 * C2168;
    const double C9015 = C6224 * C2168;
    const double C25269 = C23277 * C2168;
    const double C26003 = C23275 * C2168;
    const double C53058 = C51066 * C2168;
    const double C53792 = C51064 * C2168;
    const double C59964 = C59615 * C2168;
    const double C60444 = C59613 * C2168;
    const double C61180 = C59611 * C2168;
    const double C75036 = C73628 * C2168;
    const double C75645 = C73626 * C2168;
    const double C76373 = C73624 * C2168;
    const double C16663 = C16093 * C151911;
    const double C18304 = C16093 * C6221;
    const double C35507 = C16093 * C152345;
    const double C105012 = C16093 * C51061;
    const double C118595 = C16093 * C151906;
    const double C135922 = C16093 * C151911;
    const double C137473 = C16093 * C152258;
    const double C151104 = C151103 + C151096;
    const double C8264 =
        (3 * (C150997 + C151001 + C151001 + C150614 * C151252) + C151248 +
         C151248 +
         C150614 * (2 * C151252 + C151249 + C151249 +
                    C150614 * (C151242 + C151250 + C151250 +
                               C150614 * (2 * ae * C150806 * C150720 +
                                          C150614 * C150806 * C150657)))) /
        C150509;
    const double C112609 = C112603 + C9597;
    const double C113310 = C113307 + C10333;
    const double C16690 = C16685 + C16677;
    const double C45041 = C45039 + C27300;
    const double C144109 = C144107 + C42383;
    const double C67026 = C67017 + C55089;
    const double C67032 = C67024 + C67012;
    const double C96110 = C96104 + C76937;
    const double C18718 = C18717 + C18713;
    const double C44113 = C44107 + C44090;
    const double C68341 = C68337 + C68322;
    const double C18302 = C16075 + C16076;
    const double C137471 = C135357 + C135358;
    const double C1820 = C1817 + C1810;
    const double C6598 = C6586 + C6528;
    const double C8500 = C8497 + C8488;
    const double C23637 = C23625 + C23585;
    const double C51426 = C51414 + C51374;
    const double C73998 = C73986 + C73928;
    const double C2033 = C2030 + C2023;
    const double C6900 = C6888 + C6830;
    const double C8811 = C8808 + C8799;
    const double C24685 = C24679 + C24657;
    const double C52474 = C52468 + C52446;
    const double C74300 = C74288 + C74230;
    const double C15117 = C15115 + C15110;
    const double C6905 = C6893 + C6851;
    const double C26887 = C26883 + C26872;
    const double C54676 = C54672 + C54661;
    const double C74305 = C74293 + C74251;
    const double C17404 = C17396 + C2176;
    const double C110716 = C110712 + C7628;
    const double C111309 = C111292 + C8278;
    const double C112019 = C112010 + C9012;
    const double C42390 = C42373 + C25271;
    const double C43333 = C43325 + C26001;
    const double C67020 = C67002 + C53060;
    const double C67745 = C67735 + C53790;
    const double C94217 = C94213 + C75028;
    const double C111312 = C111298 + C8281;
    const double C111307 = C111288 + C8271;
    const double C17405 = C17399 + C16438;
    const double C42393 = C42379 + C25274;
    const double C144796 = C144790 + C43329;
    const double C67022 = C67006 + C53063;
    const double C67747 = C67739 + C66770;
    const double C94808 = C94789 + C75641;
    const double C16698 = C16693 * C6221;
    const double C33568 = C16693 * C152344;
    const double C103078 = C16693 * C51060;
    const double C118976 = C16693 * C151906;
    const double C135926 = C16693 * C152258;
    const double C15368 = C15358 + C15359;
    const double C134668 = C134662 + C134663;
    const double C18004 = C18001 * C151911;
    const double C120161 = C18001 * C151906;
    const double C137178 = C18001 * C151911;
    const double C150790 = ae * C150789;
    const double C373 = (4 * C150729 + C150621 * C150755 + C150614 * C150789 +
                         C150614 * C150784 * ae) /
                        C150502;
    const double C1166 = (C150806 * C150789) / C150502;
    const double C150991 = C150990 + C150987;
    const double C2016 =
        (C150806 * C150678 + C150995 + C150995 +
         C150614 *
             (2 * ae * C150806 * C150783 +
              C150614 * C150806 *
                  (3 * C150674 +
                   C150621 * (2 * C150621 * C150672 +
                              C150621 * (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C150946 = C150929 + C150944;
    const double C151018 = ae * C151016;
    const double C151321 = ae * C151319;
    const double C151320 = C150614 * C151319;
    const double C151328 = C150806 * C151319;
    const double C9897 =
        (2 * (2 * ae * (C150725 + C150747 * C150950) + C150614 * C151408) +
         C151411 + C151411 +
         C150614 *
             (C151408 + C151412 + C151412 +
              C150614 *
                  (2 * ae * (C150747 + C150775 * C150950) +
                   C150614 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150950)))) /
        C150509;
    const double C10122 = C6228 * C10111;
    const double C17201 = C135 * C10111;
    const double C27304 = C23277 * C10111;
    const double C55093 = C51066 * C10111;
    const double C77456 = C73628 * C10111;
    const double C151202 = C151162 + C151200;
    const double C151279 = C151064 + C151274;
    const double C151369 = ae * C151362;
    const double C151435 = ae * C151434;
    const double C9586 = (3 * C151214 + C150806 * C151434) / C150502;
    const double C9592 =
        (3 * C151213 + C150806 * (2 * C151229 + C150806 * C151278) + C151403 +
         C151403 +
         C150614 *
             (2 * ae *
                  (3 * C151277 +
                   C150806 * (2 * C151359 +
                              C150806 * (C150763 + C151164 * C150950))) +
              C150614 * (3 * C151278 +
                         C150806 * (2 * C151360 +
                                    C150806 * (C151160 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150950))))) /
        C150509;
    const double C18715 = C135 * C18706;
    const double C44096 = C23277 * C18706;
    const double C68850 = C51066 * C18706;
    const double C151498 = C151497 + C151480;
    const double C151526 = ae * C151520;
    const double C151585 = C150806 * C151520;
    const double C151576 = C151563 + C151573;
    const double C151599 = ae * C151598;
    const double C68315 = (5 * C151393 + C150806 * C151598) / C150502;
    const double C412 = C152146 * C383;
    const double C6262 = C6220 * C383;
    const double C24142 = C152198 * C383;
    const double C51931 = C152198 * C383;
    const double C73662 = C73620 * C383;
    const double C422 = C410 + C411;
    const double C6281 = C6260 + C6261;
    const double C24147 = C24141 + C23604;
    const double C51936 = C51930 + C51393;
    const double C73681 = C73660 + C73661;
    const double C1191 = C1184 + C1185;
    const double C24354 = C24348 + C23904;
    const double C52143 = C52137 + C51693;
    const double C198 = C192 + C179;
    const double C820 = C819 + C816;
    const double C23341 = C23331 + C23307;
    const double C51130 = C51120 + C51096;
    const double C675 = C667 + C649;
    const double C961 = C960 + C957;
    const double C1455 =
        (2 * (2 * ae * C150729 + C150614 * C150661) + C150822 + C150822 +
         C150614 * (C150661 + C150819 + C150819 +
                    C150614 * (2 * ae * C150751 + C150614 * C150676))) /
        C150509;
    const double C1464 = C135 * C1447;
    const double C6572 = C6226 * C1447;
    const double C6568 = C6228 * C1447;
    const double C23599 = C23277 * C1447;
    const double C25481 = C23275 * C1447;
    const double C51388 = C51066 * C1447;
    const double C53270 = C51064 * C1447;
    const double C59629 = C59615 * C1447;
    const double C60109 = C59613 * C1447;
    const double C73972 = C73626 * C1447;
    const double C73968 = C73628 * C1447;
    const double C1658 = C135 * C1633;
    const double C6870 = C6228 * C1633;
    const double C7648 = C6226 * C1633;
    const double C24665 = C23277 * C1633;
    const double C25793 = C23275 * C1633;
    const double C52454 = C51066 * C1633;
    const double C53582 = C51064 * C1633;
    const double C60243 = C59613 * C1633;
    const double C74270 = C73628 * C1633;
    const double C75048 = C73626 * C1633;
    const double C1665 = C135 * C1640;
    const double C6875 = C6228 * C1640;
    const double C26876 = C23277 * C1640;
    const double C54665 = C51066 * C1640;
    const double C74275 = C73628 * C1640;
    const double C2804 = C2801 + C2792;
    const double C23942 = C23930 + C23900;
    const double C51731 = C51719 + C51689;
    const double C150925 = ae * C150924;
    const double C1453 = (3 * C150832 + C150614 * C150924 +
                          (2 * C150826 + C150614 * C150914) * ae) /
                         C150502;
    const double C2169 = (C150806 * C150924) / C150502;
    const double C9896 = (C150924 + C151319 * C150950) / C150502;
    const double C7640 = C6220 * C2173;
    const double C25786 = C152198 * C2173;
    const double C33764 = C152146 * C2173;
    const double C53575 = C152198 * C2173;
    const double C75040 = C73620 * C2173;
    const double C15116 = C15114 + C1664;
    const double C6897 = C6885 + C6862;
    const double C26881 = C26877 + C25261;
    const double C54670 = C54666 + C53050;
    const double C74297 = C74285 + C74262;
    const double C16094 = C16090 + C16078;
    const double C27101 = C27097 + C27084;
    const double C54890 = C54886 + C54873;
    const double C151067 = C151038 + C151065;
    const double C151235 = ae * C151230;
    const double C8284 = C6226 * C8255;
    const double C8268 = C6228 * C8255;
    const double C16437 = C135 * C8255;
    const double C25276 = C23277 * C8255;
    const double C43331 = C23275 * C8255;
    const double C53065 = C51066 * C8255;
    const double C59965 = C59615 * C8255;
    const double C61901 = C59613 * C8255;
    const double C67237 = C51064 * C8255;
    const double C75654 = C73626 * C8255;
    const double C75638 = C73628 * C8255;
    const double C9900 = C6220 * C8261;
    const double C16897 = C152146 * C8261;
    const double C42376 = C152198 * C8261;
    const double C67532 = C152198 * C8261;
    const double C77237 = C73620 * C8261;
    const double C10123 = C10114 + C9594;
    const double C16684 = C16673 + C16674;
    const double C44507 = C44502 + C27302;
    const double C68644 = C68637 + C55091;
    const double C77457 = C77448 + C76934;
    const double C18307 = C18306 + C16665;
    const double C44105 = C44099 + C26574;
    const double C68854 = C68852 + C54363;
    const double C151468 = C151461 + C151148;
    const double C151150 = C151149 + C151137;
    const double C151266 = ae * C151261;
    const double C10327 = (2 * C151243 + C150806 * C151261) / C150502;
    const double C10329 =
        (2 * (2 * ae * (2 * C151241 + C150806 * C151259) + C150614 * C151424) +
         C151426 + C151426 +
         C150614 *
             (C151424 + C151423 + C151423 +
              C150614 *
                  (2 * ae *
                       (2 * C151340 + C150806 * (C150720 + C150742 * C150950)) +
                   C150614 * (2 * C151341 +
                              C150806 * (C150657 + C150672 * C150950))))) /
        C150509;
    const double C9602 = C6228 * C9584;
    const double C16679 = C135 * C9584;
    const double C45036 = C23277 * C9584;
    const double C61703 = C59613 * C9584;
    const double C67014 = C51064 * C9584;
    const double C66998 = C51066 * C9584;
    const double C76942 = C73628 * C9584;
    const double C96805 = C73626 * C9584;
    const double C113304 = C6226 * C9584;
    const double C144102 = C23275 * C9584;
    const double C69057 = C152198 * C9590;
    const double C96094 = C73620 * C9590;
    const double C112593 = C6220 * C9590;
    const double C118979 = C152146 * C9590;
    const double C146058 = C152198 * C9590;
    const double C120295 = C120292 + C18714;
    const double C145370 = C145362 + C44094;
    const double C68334 = C68323 + C68324;
    const double C73666 = C73623 * C140;
    const double C73651 = C73623 * C139;
    const double C73648 = C73623 * C138;
    const double C73633 = C73623 * C137;
    const double C73965 = C73623 * C356;
    const double C73950 = C73623 * C351;
    const double C73941 = C73623 * C355;
    const double C73932 = C73623 * C352;
    const double C74267 = C73623 * C593;
    const double C74252 = C73623 * C588;
    const double C74243 = C73623 * C592;
    const double C74234 = C73623 * C589;
    const double C74510 = C73623 * C350;
    const double C74722 = C73623 * C587;
    const double C75044 = C73623 * C1157;
    const double C75029 = C73623 * C1156;
    const double C75854 = C73623 * C1441;
    const double C76162 = C73623 * C1623;
    const double C77240 = C73623 * C1619;
    const double C77452 = C73623 * C2563;
    const double C93511 = C73623 * C591;
    const double C93501 = C73623 * C590;
    const double C94209 = C73623 * C1155;
    const double C94801 = C73623 * C1625;
    const double C94791 = C73623 * C1624;
    const double C94785 = C73623 * C1620;
    const double C95511 = C73623 * C2163;
    const double C96097 = C73623 * C2565;
    const double C96087 = C73623 * C2564;
    const double C96802 = C73623 * C3089;
    const double C73663 = C73625 * C358;
    const double C73654 = C73625 * C350;
    const double C73645 = C73625 * C351;
    const double C73636 = C73625 * C352;
    const double C73962 = C73625 * C1440;
    const double C73953 = C73625 * C356;
    const double C73944 = C73625 * C1441;
    const double C73929 = C73625 * C355;
    const double C74264 = C73625 * C1618;
    const double C74255 = C73625 * C1157;
    const double C74246 = C73625 * C1619;
    const double C74231 = C73625 * C1156;
    const double C74508 = C73625 * C357;
    const double C74720 = C73625 * C1158;
    const double C75041 = C73625 * C1622;
    const double C75032 = C73625 * C1623;
    const double C75852 = C73625 * C1444;
    const double C76160 = C73625 * C2164;
    const double C77238 = C73625 * C1626;
    const double C77450 = C73625 * C3090;
    const double C93509 = C73625 * C1620;
    const double C93503 = C73625 * C1155;
    const double C94211 = C73625 * C1624;
    const double C94799 = C73625 * C8250;
    const double C94793 = C73625 * C2163;
    const double C94787 = C73625 * C1625;
    const double C95513 = C73625 * C8252;
    const double C96095 = C73625 * C9577;
    const double C96089 = C73625 * C3089;
    const double C96800 = C73625 * C9576;
    const double C6306 = C6294 + C6265;
    const double C6303 = C6291 + C6256;
    const double C6300 = C6288 + C6247;
    const double C6297 = C6285 + C6238;
    const double C6605 = C6593 + C6555;
    const double C6602 = C6590 + C6546;
    const double C6599 = C6587 + C6531;
    const double C6910 = C6898 + C6866;
    const double C6907 = C6895 + C6857;
    const double C6904 = C6892 + C6848;
    const double C6901 = C6889 + C6833;
    const double C7122 = C7119 + C7109;
    const double C7334 = C7331 + C7321;
    const double C7663 = C7657 + C7634;
    const double C9915 = C9912 + C9902;
    const double C10130 = C10127 + C10117;
    const double C110028 = C110022 + C110009;
    const double C110025 = C110019 + C110003;
    const double C110721 = C110718 + C110711;
    const double C111324 = C111315 + C111287;
    const double C112617 = C112611 + C112595;
    const double C112614 = C112608 + C112589;
    const double C23342 = C23332 + C23310;
    const double C23339 = C23329 + C23301;
    const double C23338 = C23328 + C23298;
    const double C23335 = C23325 + C23289;
    const double C23333 = C23323 + C23283;
    const double C23643 = C23631 + C23603;
    const double C23640 = C23628 + C23594;
    const double C23638 = C23626 + C23588;
    const double C23636 = C23624 + C23582;
    const double C23635 = C23623 + C23575;
    const double C23633 = C23621 + C23569;
    const double C23943 = C23931 + C23903;
    const double C23940 = C23928 + C23894;
    const double C23938 = C23926 + C23888;
    const double C23936 = C23924 + C23882;
    const double C23935 = C23923 + C23875;
    const double C23933 = C23921 + C23869;
    const double C24152 = C24150 + C24144;
    const double C24359 = C24357 + C24351;
    const double C24689 = C24683 + C24669;
    const double C24686 = C24680 + C24660;
    const double C24684 = C24678 + C24654;
    const double C25494 = C25490 + C25480;
    const double C25806 = C25802 + C25792;
    const double C26888 = C26884 + C26874;
    const double C26886 = C26882 + C26870;
    const double C27104 = C27100 + C27090;
    const double C27102 = C27098 + C27086;
    const double C40704 = C40700 + C40688;
    const double C40701 = C40697 + C40680;
    const double C41619 = C41617 + C41609;
    const double C42410 = C42402 + C42382;
    const double C42408 = C42400 + C42378;
    const double C42405 = C42397 + C42372;
    const double C42403 = C42395 + C42368;
    const double C44114 = C44108 + C44092;
    const double C44112 = C44106 + C44088;
    const double C44109 = C44103 + C44082;
    const double C44512 = C44510 + C44505;
    const double C45044 = C45042 + C45034;
    const double C145375 = C145373 + C145365;
    const double C146069 = C146067 + C146060;
    const double C51131 = C51121 + C51099;
    const double C51128 = C51118 + C51090;
    const double C51127 = C51117 + C51087;
    const double C51124 = C51114 + C51078;
    const double C51122 = C51112 + C51072;
    const double C51432 = C51420 + C51392;
    const double C51429 = C51417 + C51383;
    const double C51427 = C51415 + C51377;
    const double C51425 = C51413 + C51371;
    const double C51424 = C51412 + C51364;
    const double C51422 = C51410 + C51358;
    const double C51732 = C51720 + C51692;
    const double C51729 = C51717 + C51683;
    const double C51727 = C51715 + C51677;
    const double C51725 = C51713 + C51671;
    const double C51724 = C51712 + C51664;
    const double C51722 = C51710 + C51658;
    const double C51941 = C51939 + C51933;
    const double C52148 = C52146 + C52140;
    const double C52478 = C52472 + C52458;
    const double C52475 = C52469 + C52449;
    const double C52473 = C52467 + C52443;
    const double C53283 = C53279 + C53269;
    const double C53595 = C53591 + C53581;
    const double C54677 = C54673 + C54663;
    const double C54675 = C54671 + C54659;
    const double C54893 = C54889 + C54879;
    const double C54891 = C54887 + C54875;
    const double C65728 = C65722 + C65707;
    const double C65725 = C65719 + C65701;
    const double C65723 = C65717 + C65697;
    const double C66427 = C66423 + C66414;
    const double C66425 = C66421 + C66410;
    const double C67037 = C67029 + C67005;
    const double C67035 = C67027 + C67001;
    const double C67033 = C67025 + C66994;
    const double C67539 = C67537 + C67530;
    const double C68343 = C68339 + C68328;
    const double C68340 = C68336 + C68320;
    const double C68649 = C68647 + C68640;
    const double C68857 = C68855 + C68848;
    const double C69068 = C69066 + C69059;
    const double C16080 = C1198 * C151911;
    const double C32999 = C1198 * C152345;
    const double C32997 = C1198 * C23273;
    const double C102510 = C1198 * C51061;
    const double C102508 = C1198 * C51062;
    const double C135360 = C1198 * C151911;
    const double C1819 = C1816 + C1808;
    const double C6608 = C6596 + C6564;
    const double C6606 = C6594 + C6558;
    const double C23639 = C23627 + C23591;
    const double C25492 = C25488 + C25476;
    const double C51428 = C51416 + C51380;
    const double C53281 = C53277 + C53265;
    const double C74006 = C73994 + C73958;
    const double C2032 = C2029 + C2021;
    const double C6908 = C6896 + C6860;
    const double C7666 = C7660 + C7643;
    const double C24687 = C24681 + C24663;
    const double C25804 = C25800 + C25788;
    const double C52476 = C52470 + C52452;
    const double C53593 = C53589 + C53577;
    const double C74308 = C74296 + C74260;
    const double C6549 = C6220 * C1460;
    const double C8486 = C6219 * C1460;
    const double C25478 = C152198 * C1460;
    const double C53267 = C152198 * C1460;
    const double C73949 = C73620 * C1460;
    const double C75853 = C152362 * C1460;
    const double C6579 = C6547 + C6548;
    const double C8493 = C8485 + C8021;
    const double C25485 = C25477 + C25033;
    const double C53274 = C53266 + C52822;
    const double C73979 = C73947 + C73948;
    const double C16902 = C16898 + C2177;
    const double C7652 = C7635 + C7636;
    const double C8804 = C8796 + C8275;
    const double C25797 = C25789 + C25269;
    const double C42674 = C42671 + C26003;
    const double C53586 = C53578 + C53058;
    const double C84754 = C84751 + C53792;
    const double C75052 = C75035 + C75036;
    const double C18710 = C16696 + C16663;
    const double C137865 = C135921 + C135922;
    const double C151105 = ae * C151104;
    const double C8012 = (4 * C150878 + C150614 * C151104 +
                          (3 * C150868 + C150614 * C151093) * ae) /
                         C150502;
    const double C8258 = (C150806 * C151104) / C150502;
    const double C43328 = C152198 * C8264;
    const double C67738 = C152198 * C8264;
    const double C94796 = C73620 * C8264;
    const double C95514 = C152362 * C8264;
    const double C111295 = C6220 * C8264;
    const double C112013 = C6219 * C8264;
    const double C112615 = C112609 + C112591;
    const double C113313 = C113310 + C113300;
    const double C16695 = C16690 + C16678;
    const double C45043 = C45041 + C45032;
    const double C144111 = C144109 + C144101;
    const double C67034 = C67026 + C66996;
    const double C67040 = C67032 + C67013;
    const double C96116 = C96110 + C96092;
    const double C18719 = C18718 * C6221;
    const double C118974 = C18718 * C151906;
    const double C137867 = C18718 * C152258;
    const double C16669 = C2033 * C151911;
    const double C17197 = C2033 * C6221;
    const double C33564 = C2033 * C152345;
    const double C34058 = C2033 * C152344;
    const double C103074 = C2033 * C51061;
    const double C103563 = C2033 * C51060;
    const double C119309 = C2033 * C151906;
    const double C135925 = C2033 * C151911;
    const double C136415 = C2033 * C152258;
    const double C16672 = C15117 * C151911;
    const double C17199 = C15117 * C6221;
    const double C33567 = C15117 * C152345;
    const double C103077 = C15117 * C51061;
    const double C119310 = C15117 * C151906;
    const double C135927 = C15117 * C151911;
    const double C136417 = C15117 * C152258;
    const double C17406 = C17404 + C2176;
    const double C110719 = C110716 + C7628;
    const double C111318 = C111309 + C8278;
    const double C112022 = C112019 + C9012;
    const double C42398 = C42390 + C25271;
    const double C43335 = C43333 + C26001;
    const double C67028 = C67020 + C53060;
    const double C67749 = C67745 + C53790;
    const double C94220 = C94217 + C75028;
    const double C111321 = C111312 + C8281;
    const double C111316 = C111307 + C8271;
    const double C17407 = C17405 + C16438;
    const double C42401 = C42393 + C25274;
    const double C144798 = C144796 + C43329;
    const double C67030 = C67022 + C53063;
    const double C67751 = C67747 + C66770;
    const double C94817 = C94808 + C75641;
    const double C385 =
        (4 * C150661 + C150621 * C150678 + C150790 + C150790 +
         C150614 *
             (2 * ae * C150787 +
              C150614 *
                  (4 * C150676 +
                   C150621 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C414 = C135 * C373;
    const double C6271 = C6228 * C373;
    const double C24146 = C23277 * C373;
    const double C51935 = C51066 * C373;
    const double C73671 = C73628 * C373;
    const double C1187 = C135 * C1166;
    const double C24353 = C23277 * C1166;
    const double C52142 = C51066 * C1166;
    const double C150992 = ae * C150991;
    const double C1802 =
        (2 * C150757 + C150614 * C150991 + (C150752 + C150780 * C150618) * ae) /
        C150502;
    const double C2015 = (C150806 * C150991) / C150502;
    const double C150947 = C150946 + C150940;
    const double C2174 =
        (2 * (2 * ae * C150806 * C150751 + C150614 * C151015) + C151018 +
         C151018 +
         C150614 *
             (C151015 + C151019 + C151019 +
              C150614 * (2 * ae * C150806 * C150779 +
                         C150614 * C150806 *
                             (2 * C150621 * C150672 +
                              C150621 * (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C151322 = C151293 + C151320;
    const double C151333 = ae * C151328;
    const double C151203 = C151202 + C151191;
    const double C151284 = ae * C151279;
    const double C10328 = (2 * C151230 + C150806 * C151279) / C150502;
    const double C10330 =
        (2 * (2 * ae * (2 * C151228 + C150806 * C151277) + C150614 * C151433) +
         C151435 + C151435 +
         C150614 *
             (C151433 + C151432 + C151432 +
              C150614 *
                  (2 * ae *
                       (2 * C151359 + C150806 * (C150763 + C151164 * C150950)) +
                   C150614 *
                       (2 * C151360 +
                        C150806 * (C151160 + C150621 *
                                                 (C150666 * C150667 +
                                                  C150618 * bs[9] *
                                                      std::pow(C150616, 9)) *
                                                 C150617 * C150950))))) /
        C150509;
    const double C9605 = C6228 * C9586;
    const double C16680 = C135 * C9586;
    const double C45038 = C23277 * C9586;
    const double C68642 = C51066 * C9586;
    const double C76945 = C73628 * C9586;
    const double C151500 = ae * C151498;
    const double C151499 = C150614 * C151498;
    const double C151512 = C151498 * C150950;
    const double C151539 = C150806 * C151498;
    const double C151589 = C151584 + C151585;
    const double C151578 = ae * C151576;
    const double C69052 = (4 * C151425 + C150806 * C151576) / C150502;
    const double C69053 =
        (4 * C151424 + C150806 * C151575 + C151599 + C151599 +
         C150614 *
             (2 * ae *
                  (4 * C151588 +
                   C150806 *
                       (3 * C151517 +
                        C150806 * (2 * C151536 +
                                   C150806 * (C150742 + C150770 * C150950)))) +
              C150614 *
                  (4 * C151569 +
                   C150806 *
                       (3 * C151518 +
                        C150806 *
                            (2 * C151537 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150950)))))) /
        C150509;
    const double C68330 = C51066 * C68315;
    const double C120294 = C135 * C68315;
    const double C145367 = C23277 * C68315;
    const double C430 = C422 + C411;
    const double C6293 = C6281 + C6261;
    const double C24149 = C24147 + C23604;
    const double C51938 = C51936 + C51393;
    const double C73693 = C73681 + C73661;
    const double C1195 = C1191 + C1185;
    const double C24356 = C24354 + C23904;
    const double C52145 = C52143 + C51693;
    const double C15774 = C675 * C151911;
    const double C32308 = C675 * C23273;
    const double C101819 = C675 * C51062;
    const double C135060 = C675 * C151911;
    const double C32701 = C961 * C23273;
    const double C102212 = C961 * C51062;
    const double C1806 = C152146 * C1455;
    const double C7107 = C6220 * C1455;
    const double C23600 = C152198 * C1455;
    const double C51389 = C152198 * C1455;
    const double C74507 = C73620 * C1455;
    const double C1812 = C1805 + C1464;
    const double C7115 = C7106 + C6568;
    const double C23618 = C23598 + C23599;
    const double C51407 = C51387 + C51388;
    const double C74515 = C74506 + C73968;
    const double C2025 = C2018 + C1658;
    const double C7327 = C7318 + C6870;
    const double C24676 = C24664 + C24665;
    const double C52465 = C52453 + C52454;
    const double C74727 = C74718 + C74270;
    const double C16082 = C2804 * C151911;
    const double C35112 = C2804 * C23273;
    const double C104617 = C2804 * C51062;
    const double C135362 = C2804 * C151911;
    const double C1461 =
        (3 * (C150647 + C150830 + C150830 + C150614 * C150915) + C150925 +
         C150925 +
         C150614 *
             (2 * C150915 + C150922 + C150922 +
              C150614 * (C150659 + C150918 + C150918 +
                         C150614 * (2 * ae * C150747 + C150614 * C150674)))) /
        C150509;
    const double C1470 = C135 * C1453;
    const double C6560 = C6228 * C1453;
    const double C8490 = C6226 * C1453;
    const double C25041 = C23275 * C1453;
    const double C25031 = C23277 * C1453;
    const double C52830 = C51064 * C1453;
    const double C52820 = C51066 * C1453;
    const double C59805 = C59613 * C1453;
    const double C59799 = C59615 * C1453;
    const double C73960 = C73628 * C1453;
    const double C75857 = C73626 * C1453;
    const double C2178 = C135 * C2169;
    const double C7639 = C6228 * C2169;
    const double C8801 = C6226 * C2169;
    const double C25267 = C23277 * C2169;
    const double C26005 = C23275 * C2169;
    const double C53056 = C51066 * C2169;
    const double C53794 = C51064 * C2169;
    const double C59969 = C59615 * C2169;
    const double C60449 = C59613 * C2169;
    const double C75039 = C73628 * C2169;
    const double C76165 = C73626 * C2169;
    const double C9907 = C6228 * C9896;
    const double C16900 = C135 * C9896;
    const double C25278 = C23277 * C9896;
    const double C53067 = C51066 * C9896;
    const double C59976 = C59615 * C9896;
    const double C77244 = C73628 * C9896;
    const double C15118 = C15116 + C15112;
    const double C6909 = C6897 + C6863;
    const double C26885 = C26881 + C26868;
    const double C54674 = C54670 + C54657;
    const double C74309 = C74297 + C74263;
    const double C18303 = C16094 * C151911;
    const double C35506 = C16094 * C23273;
    const double C105011 = C16094 * C51062;
    const double C118598 = C16094 * C151906;
    const double C137472 = C16094 * C151911;
    const double C151068 = C151067 + C151060;
    const double C8263 =
        (3 * (C151003 + C151007 + C151007 + C150614 * C151239) + C151235 +
         C151235 +
         C150614 * (2 * C151239 + C151236 + C151236 +
                    C150614 * (C151229 + C151237 + C151237 +
                               C150614 * (2 * ae * C150806 * C150763 +
                                          C150614 * C150806 * C151160)))) /
        C150509;
    const double C9908 = C9899 + C8268;
    const double C16901 = C16896 + C16437;
    const double C42391 = C42375 + C25276;
    const double C67536 = C67531 + C53065;
    const double C77245 = C77236 + C75638;
    const double C10126 = C10123 + C9594;
    const double C16689 = C16684 + C16674;
    const double C44509 = C44507 + C27302;
    const double C68646 = C68644 + C55091;
    const double C77460 = C77457 + C76934;
    const double C18308 = C18307 + C18301;
    const double C44111 = C44105 + C44086;
    const double C68856 = C68854 + C68846;
    const double C151493 = C151468 + C151490;
    const double C151152 = ae * C151150;
    const double C151151 = C150614 * C151150;
    const double C151342 = C150806 * C151150;
    const double C151450 = 5 * C151150;
    const double C8259 = (C151104 + C151150 * C150950) / C150502;
    const double C8265 =
        (3 * (C151222 + C151226 + C151226 + C150614 * C151270) + C151266 +
         C151266 +
         C150614 *
             (2 * C151270 + C151267 + C151267 +
              C150614 *
                  (C151260 + C151268 + C151268 +
                   C150614 * (2 * ae * (C150720 + C150742 * C150950) +
                              C150614 * (C150657 + C150672 * C150950))))) /
        C150509;
    const double C10334 = C6228 * C10327;
    const double C17402 = C135 * C10327;
    const double C42384 = C23277 * C10327;
    const double C61697 = C59615 * C10327;
    const double C62172 = C59613 * C10327;
    const double C67009 = C51066 * C10327;
    const double C67743 = C51064 * C10327;
    const double C77662 = C73628 * C10327;
    const double C94804 = C73626 * C10327;
    const double C111303 = C6226 * C10327;
    const double C144794 = C23275 * C10327;
    const double C67010 = C152198 * C10329;
    const double C96799 = C73620 * C10329;
    const double C113298 = C6220 * C10329;
    const double C119445 = C152146 * C10329;
    const double C144099 = C152198 * C10329;
    const double C112604 = C112592 + C9602;
    const double C118981 = C118978 + C16679;
    const double C146064 = C146057 + C45036;
    const double C69063 = C69056 + C66998;
    const double C96105 = C96093 + C76942;
    const double C120296 = C120295 + C18714;
    const double C145372 = C145370 + C44094;
    const double C68338 = C68334 + C68324;
    const double C73683 = C73666 + C73667;
    const double C73678 = C73651 + C73652;
    const double C73677 = C73648 + C73649;
    const double C73672 = C73633 + C73634;
    const double C73985 = C73965 + C73966;
    const double C73980 = C73950 + C73951;
    const double C73977 = C73941 + C73942;
    const double C73976 = C73932 + C73933;
    const double C74287 = C74267 + C74268;
    const double C74282 = C74252 + C74253;
    const double C74279 = C74243 + C74244;
    const double C74278 = C74234 + C74235;
    const double C74517 = C74510 + C73970;
    const double C74729 = C74722 + C74272;
    const double C75055 = C75044 + C75045;
    const double C75050 = C75029 + C75030;
    const double C75861 = C75854 + C75410;
    const double C76169 = C76162 + C75646;
    const double C77247 = C77240 + C75640;
    const double C77459 = C77452 + C76936;
    const double C93518 = C93511 + C74240;
    const double C93513 = C93501 + C74239;
    const double C94215 = C94209 + C75026;
    const double C94814 = C94801 + C75650;
    const double C94809 = C94791 + C75649;
    const double C94806 = C94785 + C75643;
    const double C95520 = C95511 + C76370;
    const double C96107 = C96097 + C76940;
    const double C96102 = C96087 + C76939;
    const double C96809 = C96802 + C77660;
    const double C73682 = C73663 + C73664;
    const double C73679 = C73654 + C73655;
    const double C73676 = C73645 + C73646;
    const double C73673 = C73636 + C73637;
    const double C73984 = C73962 + C73963;
    const double C73981 = C73953 + C73954;
    const double C73978 = C73944 + C73945;
    const double C73975 = C73929 + C73930;
    const double C74286 = C74264 + C74265;
    const double C74283 = C74255 + C74256;
    const double C74280 = C74246 + C74247;
    const double C74277 = C74231 + C74232;
    const double C74516 = C74508 + C73969;
    const double C74728 = C74720 + C74271;
    const double C75054 = C75041 + C75042;
    const double C75051 = C75032 + C75033;
    const double C75860 = C75852 + C75409;
    const double C76168 = C76160 + C75645;
    const double C77246 = C77238 + C75639;
    const double C77458 = C77450 + C76935;
    const double C93517 = C93509 + C74241;
    const double C93514 = C93503 + C74238;
    const double C94216 = C94211 + C75027;
    const double C94813 = C94799 + C75651;
    const double C94810 = C94793 + C75648;
    const double C94807 = C94787 + C75642;
    const double C96106 = C96095 + C76941;
    const double C96103 = C96089 + C76938;
    const double C96808 = C96800 + C77661;
    const double C23345 = C23339 + C23340;
    const double C23344 = C23337 + C23338;
    const double C23343 = C23335 + C23336;
    const double C24140 = C23640 + C23641;
    const double C23644 = C23632 + C23633;
    const double C24347 = C23940 + C23941;
    const double C41221 = C23941 + C23940;
    const double C23945 = C23938 + C23939;
    const double C40692 = C23939 + C23938;
    const double C40690 = C23936 + C23937;
    const double C40684 = C23937 + C23936;
    const double C40689 = C23934 + C23935;
    const double C40683 = C23935 + C23934;
    const double C23944 = C23932 + C23933;
    const double C40691 = C23933 + C23932;
    const double C41613 = C24685 + C24684;
    const double C41612 = C24684 + C24685;
    const double C44506 = C26887 + C26888;
    const double C44501 = C26888 + C26887;
    const double C44772 = C27103 + C27104;
    const double C44771 = C27104 + C27103;
    const double C142854 = C40704 + C40703;
    const double C144096 = C42404 + C42403;
    const double C145361 = C44114 + C44113;
    const double C145360 = C44110 + C44109;
    const double C51134 = C51128 + C51129;
    const double C51133 = C51126 + C51127;
    const double C51132 = C51124 + C51125;
    const double C51929 = C51429 + C51430;
    const double C51433 = C51421 + C51422;
    const double C52136 = C51729 + C51730;
    const double C83357 = C51730 + C51729;
    const double C51734 = C51727 + C51728;
    const double C82840 = C51728 + C51727;
    const double C65708 = C51726 + C51725;
    const double C82838 = C51725 + C51726;
    const double C82837 = C51723 + C51724;
    const double C82836 = C51724 + C51723;
    const double C51733 = C51721 + C51722;
    const double C82839 = C51722 + C51721;
    const double C83745 = C52474 + C52473;
    const double C83744 = C52473 + C52474;
    const double C68636 = C54677 + C54676;
    const double C86533 = C54676 + C54677;
    const double C68844 = C54893 + C54892;
    const double C86792 = C54892 + C54893;
    const double C68318 = C65727 + C65728;
    const double C65729 = C65725 + C65726;
    const double C66997 = C66428 + C66427;
    const double C68344 = C68340 + C68341;
    const double C23645 = C23638 + C23639;
    const double C51434 = C51427 + C51428;
    const double C17198 = C2032 * C151911;
    const double C33565 = C2032 * C23273;
    const double C34059 = C2032 * C152345;
    const double C103075 = C2032 * C51062;
    const double C103564 = C2032 * C51061;
    const double C136416 = C2032 * C151911;
    const double C24690 = C24686 + C24687;
    const double C41614 = C24687 + C24686;
    const double C52479 = C52475 + C52476;
    const double C83746 = C52476 + C52475;
    const double C6591 = C6579 + C6548;
    const double C8496 = C8493 + C8021;
    const double C25489 = C25485 + C25033;
    const double C53278 = C53274 + C52822;
    const double C73991 = C73979 + C73948;
    const double C16904 = C16902 + C2177;
    const double C7658 = C7652 + C7636;
    const double C8807 = C8804 + C8275;
    const double C25801 = C25797 + C25269;
    const double C42676 = C42674 + C26003;
    const double C53590 = C53586 + C53058;
    const double C84756 = C84754 + C53792;
    const double C75058 = C75052 + C75036;
    const double C8016 =
        (4 * (2 * C150869 + C150876 + C150876 + C150614 * C151094) + C151105 +
         C151105 +
         C150614 * (3 * C151094 + C151102 + C151102 +
                    C150614 * (2 * C151086 + C151098 + C151098 +
                               C150614 * (C150645 + C151090 + C151090 +
                                          C150614 * (2 * ae * C150720 +
                                                     C150614 * C150657))))) /
        C150509;
    const double C8027 = C6226 * C8012;
    const double C8023 = C6228 * C8012;
    const double C25038 = C23277 * C8012;
    const double C52827 = C51066 * C8012;
    const double C59790 = C59615 * C8012;
    const double C60687 = C59611 * C8012;
    const double C60683 = C59613 * C8012;
    const double C75415 = C73626 * C8012;
    const double C75411 = C73628 * C8012;
    const double C8277 = C6228 * C8258;
    const double C9013 = C6226 * C8258;
    const double C16439 = C135 * C8258;
    const double C26002 = C23277 * C8258;
    const double C42073 = C23275 * C8258;
    const double C53791 = C51066 * C8258;
    const double C60442 = C59615 * C8258;
    const double C60844 = C59613 * C8258;
    const double C61317 = C59611 * C8258;
    const double C66771 = C51064 * C8258;
    const double C75647 = C73628 * C8258;
    const double C76371 = C73626 * C8258;
    const double C94564 = C73624 * C8258;
    const double C111063 = C6224 * C8258;
    const double C16700 = C16695 * C6221;
    const double C118977 = C16695 * C151906;
    const double C135929 = C16695 * C152258;
    const double C146056 = C45044 + C45043;
    const double C69055 = C67033 + C67034;
    const double C16701 = C16698 + C16672;
    const double C135930 = C135926 + C135927;
    const double C17408 = C17406 + C17397;
    const double C110722 = C110719 + C110713;
    const double C111327 = C111318 + C111293;
    const double C112025 = C112022 + C112011;
    const double C42406 = C42398 + C42374;
    const double C43337 = C43335 + C43326;
    const double C67036 = C67028 + C67003;
    const double C67753 = C67749 + C67736;
    const double C94223 = C94220 + C94214;
    const double C111330 = C111321 + C111299;
    const double C111325 = C111316 + C111289;
    const double C17409 = C17407 + C17400;
    const double C42409 = C42401 + C42380;
    const double C144800 = C144798 + C144791;
    const double C67038 = C67030 + C67007;
    const double C67755 = C67751 + C67740;
    const double C94826 = C94817 + C94790;
    const double C1803 =
        (2 * (2 * ae * C150755 + C150614 * C150678) + C150992 + C150992 +
         C150614 *
             (C150678 + C150989 + C150989 +
              C150614 *
                  (2 * ae * C150783 +
                   C150614 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C1811 = C135 * C1802;
    const double C7114 = C6228 * C1802;
    const double C23607 = C23277 * C1802;
    const double C51396 = C51066 * C1802;
    const double C59636 = C59615 * C1802;
    const double C74514 = C73628 * C1802;
    const double C2024 = C135 * C2015;
    const double C7326 = C6228 * C2015;
    const double C24671 = C23277 * C2015;
    const double C52460 = C51066 * C2015;
    const double C74726 = C73628 * C2015;
    const double C150948 = ae * C150947;
    const double C1454 = (3 * C150821 + C150614 * C150947 +
                          (2 * C150815 + C150614 * C150937) * ae) /
                         C150502;
    const double C2170 = (C150806 * C150947) / C150502;
    const double C151323 = C151322 + C151315;
    const double C8792 =
        (3 * (C151009 + C151013 + C151013 + C150614 * C151337) + C151333 +
         C151333 +
         C150614 *
             (2 * C151337 + C151334 + C151334 +
              C150614 * (C151327 + C151335 + C151335 +
                         C150614 * (2 * ae * C150806 * C150775 +
                                    C150614 * C150806 *
                                        (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C151205 = ae * C151203;
    const double C151204 = C150614 * C151203;
    const double C151361 = C150806 * C151203;
    const double C8266 =
        (3 * (C151213 + C151217 + C151217 + C150614 * C151288) + C151284 +
         C151284 +
         C150614 *
             (2 * C151288 + C151285 + C151285 +
              C150614 * (C151278 + C151286 + C151286 +
                         C150614 * (2 * ae * (C150763 + C151164 * C150950) +
                                    C150614 * (C151160 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150950))))) /
        C150509;
    const double C10337 = C6228 * C10328;
    const double C17403 = C135 * C10328;
    const double C42386 = C23277 * C10328;
    const double C62036 = C59615 * C10328;
    const double C67534 = C51066 * C10328;
    const double C77665 = C73628 * C10328;
    const double C151501 = C151451 + C151499;
    const double C151519 = C151150 + C151512;
    const double C151548 = ae * C151539;
    const double C151591 = ae * C151589;
    const double C61694 = (3 * C151261 + C150806 * C151589) / C150502;
    const double C61695 =
        (2 * (2 * ae *
                  (3 * C151259 + C150806 * (2 * C151340 + C150806 * C151517)) +
              C150614 * C151575) +
         C151578 + C151578 +
         C150614 *
             (C151575 + C151579 + C151579 +
              C150614 *
                  (2 * ae *
                       (3 * C151517 +
                        C150806 * (2 * C151536 +
                                   C150806 * (C150742 + C150770 * C150950))) +
                   C150614 *
                       (3 * C151518 +
                        C150806 *
                            (2 * C151537 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150950)))))) /
        C150509;
    const double C69061 = C51066 * C69052;
    const double C96101 = C73628 * C69052;
    const double C112600 = C6228 * C69052;
    const double C118980 = C135 * C69052;
    const double C146062 = C23277 * C69052;
    const double C438 = C430 + C412;
    const double C6305 = C6293 + C6262;
    const double C24151 = C24149 + C24142;
    const double C51940 = C51938 + C51931;
    const double C73705 = C73693 + C73662;
    const double C1199 = C1195 + C1186;
    const double C24358 = C24356 + C24349;
    const double C52147 = C52145 + C52138;
    const double C1815 = C1812 + C1464;
    const double C7118 = C7115 + C6568;
    const double C23630 = C23618 + C23599;
    const double C51419 = C51407 + C51388;
    const double C74518 = C74515 + C73968;
    const double C2028 = C2025 + C1658;
    const double C7330 = C7327 + C6870;
    const double C24682 = C24676 + C24665;
    const double C52471 = C52465 + C52454;
    const double C74730 = C74727 + C74270;
    const double C6561 = C6220 * C1461;
    const double C25474 = C152198 * C1461;
    const double C53263 = C152198 * C1461;
    const double C73961 = C73620 * C1461;
    const double C6583 = C6559 + C6560;
    const double C25483 = C25473 + C25031;
    const double C53272 = C53262 + C52820;
    const double C73983 = C73959 + C73960;
    const double C33765 = C33763 + C2178;
    const double C7653 = C7638 + C7639;
    const double C25795 = C25785 + C25267;
    const double C53584 = C53574 + C53056;
    const double C75053 = C75038 + C75039;
    const double C17200 = C15118 * C151911;
    const double C33566 = C15118 * C23273;
    const double C103076 = C15118 * C51062;
    const double C136418 = C15118 * C151911;
    const double C151069 = ae * C151068;
    const double C8011 = (4 * C150901 + C150614 * C151068 +
                          (3 * C150891 + C150614 * C151057) * ae) /
                         C150502;
    const double C8257 = (C150806 * C151068) / C150502;
    const double C8260 = (C151068 + C151203 * C150950) / C150502;
    const double C8795 = C6220 * C8263;
    const double C42670 = C152198 * C8263;
    const double C76159 = C73620 * C8263;
    const double C84750 = C152198 * C8263;
    const double C9911 = C9908 + C8268;
    const double C16903 = C16901 + C16437;
    const double C42399 = C42391 + C25276;
    const double C67538 = C67536 + C53065;
    const double C77248 = C77245 + C75638;
    const double C10129 = C10126 + C10115;
    const double C16694 = C16689 + C16675;
    const double C44511 = C44509 + C44503;
    const double C68648 = C68646 + C68638;
    const double C77463 = C77460 + C77449;
    const double C18711 = C18308 * C151911;
    const double C120030 = C18308 * C151906;
    const double C137866 = C18308 * C151911;
    const double C151153 = C151111 + C151151;
    const double C151349 = ae * C151342;
    const double C8282 = C6228 * C8259;
    const double C16441 = C135 * C8259;
    const double C43330 = C23277 * C8259;
    const double C60849 = C59613 * C8259;
    const double C60839 = C59615 * C8259;
    const double C66773 = C51064 * C8259;
    const double C66769 = C51066 * C8259;
    const double C75652 = C73628 * C8259;
    const double C95518 = C73626 * C8259;
    const double C112017 = C6226 * C8259;
    const double C143876 = C23275 * C8259;
    const double C67742 = C152198 * C8265;
    const double C94798 = C73620 * C8265;
    const double C111297 = C6220 * C8265;
    const double C144793 = C152198 * C8265;
    const double C113306 = C113297 + C10334;
    const double C119447 = C119444 + C17402;
    const double C144106 = C144098 + C42384;
    const double C67023 = C67008 + C67009;
    const double C96807 = C96798 + C77662;
    const double C112610 = C112604 + C9602;
    const double C118982 = C118981 + C16679;
    const double C146066 = C146064 + C45036;
    const double C69065 = C69063 + C66998;
    const double C96111 = C96105 + C76942;
    const double C120297 = C120296 + C120293;
    const double C145374 = C145372 + C145363;
    const double C68342 = C68338 + C68325;
    const double C73695 = C73683 + C73667;
    const double C73690 = C73678 + C73652;
    const double C73689 = C73677 + C73649;
    const double C73684 = C73672 + C73634;
    const double C73997 = C73985 + C73966;
    const double C73992 = C73980 + C73951;
    const double C73989 = C73977 + C73942;
    const double C73988 = C73976 + C73933;
    const double C74299 = C74287 + C74268;
    const double C74294 = C74282 + C74253;
    const double C74291 = C74279 + C74244;
    const double C74290 = C74278 + C74235;
    const double C74520 = C74517 + C73970;
    const double C74732 = C74729 + C74272;
    const double C75061 = C75055 + C75045;
    const double C75056 = C75050 + C75030;
    const double C75864 = C75861 + C75410;
    const double C76172 = C76169 + C75646;
    const double C77250 = C77247 + C75640;
    const double C77462 = C77459 + C76936;
    const double C93524 = C93518 + C74240;
    const double C93519 = C93513 + C74239;
    const double C94218 = C94215 + C75026;
    const double C94823 = C94814 + C75650;
    const double C94818 = C94809 + C75649;
    const double C94815 = C94806 + C75643;
    const double C95523 = C95520 + C76370;
    const double C96113 = C96107 + C76940;
    const double C96108 = C96102 + C76939;
    const double C96812 = C96809 + C77660;
    const double C73694 = C73682 + C73664;
    const double C73691 = C73679 + C73655;
    const double C73688 = C73676 + C73646;
    const double C73685 = C73673 + C73637;
    const double C73996 = C73984 + C73963;
    const double C73993 = C73981 + C73954;
    const double C73990 = C73978 + C73945;
    const double C73987 = C73975 + C73930;
    const double C74298 = C74286 + C74265;
    const double C74295 = C74283 + C74256;
    const double C74292 = C74280 + C74247;
    const double C74289 = C74277 + C74232;
    const double C74519 = C74516 + C73969;
    const double C74731 = C74728 + C74271;
    const double C75060 = C75054 + C75042;
    const double C75057 = C75051 + C75033;
    const double C75863 = C75860 + C75409;
    const double C76171 = C76168 + C75645;
    const double C77249 = C77246 + C75639;
    const double C77461 = C77458 + C76935;
    const double C93523 = C93517 + C74241;
    const double C93520 = C93514 + C74238;
    const double C94219 = C94216 + C75027;
    const double C94822 = C94813 + C75651;
    const double C94819 = C94810 + C75648;
    const double C94816 = C94807 + C75642;
    const double C96112 = C96106 + C76941;
    const double C96109 = C96103 + C76938;
    const double C96811 = C96808 + C77661;
    const double C142856 = C23945 * C151906;
    const double C142855 = C40684 * C151906;
    const double C145666 = C44501 * C151906;
    const double C145861 = C44771 * C151906;
    const double C142857 = C142854 * C151906;
    const double C144104 = C144096 * C151906;
    const double C145369 = C145361 * C151906;
    const double C145368 = C145360 * C151906;
    const double C65709 = C51734 * C151906;
    const double C65716 = C65708 * C151906;
    const double C68643 = C68636 * C151906;
    const double C68851 = C68844 * C151906;
    const double C68331 = C68318 * C151906;
    const double C65730 = C65729 * C151906;
    const double C67018 = C66997 * C151906;
    const double C68345 = C68344 * C151906;
    const double C6603 = C6591 + C6549;
    const double C8499 = C8496 + C8486;
    const double C25493 = C25489 + C25478;
    const double C53282 = C53278 + C53267;
    const double C74003 = C73991 + C73949;
    const double C16906 = C16904 + C16899;
    const double C7664 = C7658 + C7637;
    const double C8810 = C8807 + C8797;
    const double C25805 = C25801 + C25790;
    const double C42678 = C42676 + C42672;
    const double C53594 = C53590 + C53579;
    const double C84758 = C84756 + C84752;
    const double C75064 = C75058 + C75037;
    const double C111310 = C111294 + C8277;
    const double C112020 = C112012 + C9013;
    const double C43334 = C43327 + C26002;
    const double C67746 = C67737 + C53791;
    const double C94811 = C94795 + C75647;
    const double C95521 = C95513 + C76371;
    const double C146063 = C146056 * C151906;
    const double C69062 = C69055 * C151906;
    const double C17410 = C17408 * C6221;
    const double C34255 = C17408 * C152344;
    const double C103760 = C17408 * C51060;
    const double C119442 = C17408 * C151906;
    const double C136613 = C17408 * C152258;
    const double C17411 = C17409 * C6221;
    const double C119443 = C17409 * C151906;
    const double C136615 = C17409 * C152258;
    const double C144097 = C42410 + C42409;
    const double C67041 = C67037 + C67038;
    const double C1462 =
        (3 * (C150661 + C150819 + C150819 + C150614 * C150938) + C150948 +
         C150948 +
         C150614 *
             (2 * C150938 + C150945 + C150945 +
              C150614 *
                  (C150676 + C150941 + C150941 +
                   C150614 *
                       (2 * ae * C150779 +
                        C150614 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C1471 = C135 * C1454;
    const double C6573 = C6228 * C1454;
    const double C25482 = C23277 * C1454;
    const double C53271 = C51066 * C1454;
    const double C60110 = C59615 * C1454;
    const double C73973 = C73628 * C1454;
    const double C2179 = C135 * C2170;
    const double C7649 = C6228 * C2170;
    const double C25794 = C23277 * C2170;
    const double C53583 = C51066 * C2170;
    const double C60244 = C59615 * C2170;
    const double C75049 = C73628 * C2170;
    const double C151324 = ae * C151323;
    const double C8480 = (4 * C150924 + C150614 * C151323 +
                          (3 * C150914 + C150614 * C151312) * ae) /
                         C150502;
    const double C8791 = (C150806 * C151323) / C150502;
    const double C151206 = C151161 + C151204;
    const double C151368 = ae * C151361;
    const double C151502 = C151501 + C151488;
    const double C151525 = ae * C151519;
    const double C62167 = (2 * C151342 + C150806 * C151519) / C150502;
    const double C62168 =
        (3 * (C151424 + C151423 + C151423 + C150614 * C151593) + C151591 +
         C151591 +
         C150614 *
             (2 * C151593 + C151586 + C151586 +
              C150614 *
                  (C151569 + C151587 + C151587 +
                   C150614 *
                       (2 * ae *
                            (2 * C151536 +
                             C150806 * (C150742 + C150770 * C150950)) +
                        C150614 *
                            (2 * C151537 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150950)))))) /
        C150509;
    const double C61704 = C59615 * C61694;
    const double C67015 = C51066 * C61694;
    const double C96806 = C73628 * C61694;
    const double C113305 = C6228 * C61694;
    const double C119446 = C135 * C61694;
    const double C144103 = C23277 * C61694;
    const double C33000 = C1199 * C23273;
    const double C102511 = C1199 * C51062;
    const double C1818 = C1815 + C1806;
    const double C7121 = C7118 + C7107;
    const double C23642 = C23630 + C23600;
    const double C51431 = C51419 + C51389;
    const double C74521 = C74518 + C74507;
    const double C2031 = C2028 + C2019;
    const double C7333 = C7330 + C7319;
    const double C24688 = C24682 + C24666;
    const double C52477 = C52471 + C52455;
    const double C74733 = C74730 + C74719;
    const double C6595 = C6583 + C6560;
    const double C25487 = C25483 + C25031;
    const double C53276 = C53272 + C52820;
    const double C73995 = C73983 + C73960;
    const double C33766 = C33765 + C2178;
    const double C7659 = C7653 + C7639;
    const double C25799 = C25795 + C25267;
    const double C53588 = C53584 + C53056;
    const double C75059 = C75053 + C75039;
    const double C8015 =
        (4 * (2 * C150892 + C150899 + C150899 + C150614 * C151058) + C151069 +
         C151069 +
         C150614 * (3 * C151058 + C151066 + C151066 +
                    C150614 * (2 * C151050 + C151062 + C151062 +
                               C150614 * (C150664 + C151054 + C151054 +
                                          C150614 * (2 * ae * C150763 +
                                                     C150614 * C150621 *
                                                         C150672))))) /
        C150509;
    const double C8030 = C6226 * C8011;
    const double C8020 = C6228 * C8011;
    const double C25040 = C23277 * C8011;
    const double C52829 = C51066 * C8011;
    const double C59795 = C59615 * C8011;
    const double C60983 = C59613 * C8011;
    const double C75418 = C73626 * C8011;
    const double C75408 = C73628 * C8011;
    const double C8274 = C6228 * C8257;
    const double C9016 = C6226 * C8257;
    const double C16440 = C135 * C8257;
    const double C26004 = C23277 * C8257;
    const double C42075 = C23275 * C8257;
    const double C53793 = C51066 * C8257;
    const double C60443 = C59615 * C8257;
    const double C61181 = C59613 * C8257;
    const double C75644 = C73628 * C8257;
    const double C76374 = C73626 * C8257;
    const double C84199 = C51064 * C8257;
    const double C8285 = C6228 * C8260;
    const double C16442 = C135 * C8260;
    const double C43332 = C23277 * C8260;
    const double C61902 = C59615 * C8260;
    const double C67238 = C51066 * C8260;
    const double C75655 = C73628 * C8260;
    const double C9914 = C9911 + C9900;
    const double C16905 = C16903 + C16897;
    const double C42407 = C42399 + C42376;
    const double C67540 = C67538 + C67532;
    const double C77251 = C77248 + C77237;
    const double C16699 = C16694 * C151911;
    const double C119311 = C16694 * C151906;
    const double C135928 = C16694 * C151911;
    const double C151154 = C151153 + C151145;
    const double C9009 =
        (4 * (2 * C151252 + C151249 + C151249 + C150614 * C151356) + C151349 +
         C151349 +
         C150614 *
             (3 * C151356 + C151350 + C151350 +
              C150614 *
                  (2 * C151354 + C151351 + C151351 +
                   C150614 * (C151341 + C151352 + C151352 +
                              C150614 * (2 * ae * C150806 * C150742 +
                                         C150614 * C150806 * C150672))))) /
        C150509;
    const double C111311 = C111296 + C8282;
    const double C144797 = C144792 + C43330;
    const double C67748 = C67741 + C66769;
    const double C94812 = C94797 + C75652;
    const double C113309 = C113306 + C10334;
    const double C119448 = C119447 + C17402;
    const double C144108 = C144106 + C42384;
    const double C67031 = C67023 + C67009;
    const double C96810 = C96807 + C77662;
    const double C112616 = C112610 + C112593;
    const double C118983 = C118982 + C118979;
    const double C146068 = C146066 + C146058;
    const double C69067 = C69065 + C69057;
    const double C96117 = C96111 + C96094;
    const double C120298 = C120297 * C151906;
    const double C73707 = C73695 + C73668;
    const double C73702 = C73690 + C73653;
    const double C73701 = C73689 + C73650;
    const double C73696 = C73684 + C73635;
    const double C74009 = C73997 + C73967;
    const double C74004 = C73992 + C73952;
    const double C74001 = C73989 + C73943;
    const double C74000 = C73988 + C73934;
    const double C74311 = C74299 + C74269;
    const double C74306 = C74294 + C74254;
    const double C74303 = C74291 + C74245;
    const double C74302 = C74290 + C74236;
    const double C74523 = C74520 + C74511;
    const double C74735 = C74732 + C74723;
    const double C75067 = C75061 + C75046;
    const double C75062 = C75056 + C75031;
    const double C75867 = C75864 + C75855;
    const double C76175 = C76172 + C76163;
    const double C77253 = C77250 + C77241;
    const double C77465 = C77462 + C77453;
    const double C93530 = C93524 + C93512;
    const double C93525 = C93519 + C93502;
    const double C94221 = C94218 + C94210;
    const double C94832 = C94823 + C94802;
    const double C94827 = C94818 + C94792;
    const double C94824 = C94815 + C94786;
    const double C95526 = C95523 + C95512;
    const double C96119 = C96113 + C96098;
    const double C96114 = C96108 + C96088;
    const double C96815 = C96812 + C96803;
    const double C73706 = C73694 + C73665;
    const double C73703 = C73691 + C73656;
    const double C73700 = C73688 + C73647;
    const double C73697 = C73685 + C73638;
    const double C74008 = C73996 + C73964;
    const double C74005 = C73993 + C73955;
    const double C74002 = C73990 + C73946;
    const double C73999 = C73987 + C73931;
    const double C74310 = C74298 + C74266;
    const double C74307 = C74295 + C74257;
    const double C74304 = C74292 + C74248;
    const double C74301 = C74289 + C74233;
    const double C74522 = C74519 + C74509;
    const double C74734 = C74731 + C74721;
    const double C75066 = C75060 + C75043;
    const double C75063 = C75057 + C75034;
    const double C75866 = C75863 + C75853;
    const double C76174 = C76171 + C76161;
    const double C77252 = C77249 + C77239;
    const double C77464 = C77461 + C77451;
    const double C93529 = C93523 + C93510;
    const double C93526 = C93520 + C93504;
    const double C94222 = C94219 + C94212;
    const double C94831 = C94822 + C94800;
    const double C94828 = C94819 + C94794;
    const double C94825 = C94816 + C94788;
    const double C96118 = C96112 + C96096;
    const double C96115 = C96109 + C96090;
    const double C96814 = C96811 + C96801;
    const double C17398 = C16906 * C151911;
    const double C34256 = C16906 * C152345;
    const double C103761 = C16906 * C51061;
    const double C136614 = C16906 * C151911;
    const double C43066 = C25805 + C25806;
    const double C43065 = C25806 + C25805;
    const double C85146 = C53594 + C53595;
    const double C85145 = C53595 + C53594;
    const double C111319 = C111310 + C8277;
    const double C112023 = C112020 + C9013;
    const double C43336 = C43334 + C26002;
    const double C67750 = C67746 + C53791;
    const double C94820 = C94811 + C75647;
    const double C95524 = C95521 + C76371;
    const double C144105 = C144097 * C151906;
    const double C67042 = C67041 * C151906;
    const double C8481 =
        (4 * (2 * C150915 + C150922 + C150922 + C150614 * C151313) + C151324 +
         C151324 +
         C150614 *
             (3 * C151313 + C151321 + C151321 +
              C150614 *
                  (2 * C151305 + C151317 + C151317 +
                   C150614 *
                       (C150674 + C151309 + C151309 +
                        C150614 *
                            (2 * ae * C150775 +
                             C150614 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C8491 = C6228 * C8480;
    const double C25042 = C23277 * C8480;
    const double C52831 = C51066 * C8480;
    const double C59806 = C59615 * C8480;
    const double C75858 = C73628 * C8480;
    const double C8802 = C6228 * C8791;
    const double C26006 = C23277 * C8791;
    const double C33341 = C135 * C8791;
    const double C53795 = C51066 * C8791;
    const double C60450 = C59615 * C8791;
    const double C76166 = C73628 * C8791;
    const double C151207 = C151206 + C151198;
    const double C9010 =
        (4 * (2 * C151239 + C151236 + C151236 + C150614 * C151375) + C151368 +
         C151368 +
         C150614 *
             (3 * C151375 + C151369 + C151369 +
              C150614 * (2 * C151373 + C151370 + C151370 +
                         C150614 * (C151360 + C151371 + C151371 +
                                    C150614 * (2 * ae * C150806 * C151164 +
                                               C150614 * C150806 * C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617))))) /
        C150509;
    const double C151504 = ae * C151502;
    const double C151503 = C150614 * C151502;
    const double C151538 = C150806 * C151502;
    const double C60837 =
        (4 * (2 * C151270 + C151267 + C151267 + C150614 * C151532) + C151525 +
         C151525 +
         C150614 *
             (3 * C151532 + C151526 + C151526 +
              C150614 *
                  (2 * C151530 + C151527 + C151527 +
                   C150614 *
                       (C151518 + C151528 + C151528 +
                        C150614 *
                            (2 * ae * (C150742 + C150770 * C150950) +
                             C150614 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150950)))))) /
        C150509;
    const double C62173 = C59615 * C62167;
    const double C67744 = C51066 * C62167;
    const double C94805 = C73628 * C62167;
    const double C111304 = C6228 * C62167;
    const double C118827 = C135 * C62167;
    const double C144795 = C23277 * C62167;
    const double C34060 = C2031 * C23273;
    const double C103565 = C2031 * C51062;
    const double C6607 = C6595 + C6561;
    const double C25491 = C25487 + C25474;
    const double C53280 = C53276 + C53263;
    const double C74007 = C73995 + C73961;
    const double C33767 = C33766 + C33764;
    const double C7665 = C7659 + C7640;
    const double C25803 = C25799 + C25786;
    const double C53592 = C53588 + C53575;
    const double C75065 = C75059 + C75040;
    const double C8484 = C6220 * C8015;
    const double C75851 = C73620 * C8015;
    const double C8492 = C8483 + C8020;
    const double C75859 = C75850 + C75408;
    const double C8803 = C8794 + C8274;
    const double C42673 = C42669 + C26004;
    const double C84753 = C84749 + C53793;
    const double C76167 = C76158 + C75644;
    const double C17401 = C16905 * C151911;
    const double C136616 = C16905 * C151911;
    const double C151155 = ae * C151154;
    const double C8013 = (5 * C151104 + C150614 * C151154 +
                          (4 * C151093 + C150614 * C151141) * ae) /
                         C150502;
    const double C9007 = (C150806 * C151154) / C150502;
    const double C60836 = (C151154 + C151502 * C150950) / C150502;
    const double C95516 = C73620 * C9009;
    const double C112015 = C6220 * C9009;
    const double C111320 = C111311 + C8282;
    const double C144799 = C144797 + C43330;
    const double C67752 = C67748 + C66769;
    const double C94821 = C94812 + C75652;
    const double C113312 = C113309 + C113298;
    const double C119449 = C119448 + C119445;
    const double C144110 = C144108 + C144099;
    const double C67039 = C67031 + C67010;
    const double C96813 = C96810 + C96799;
    const double C118984 = C118983 * C151906;
    const double C111328 = C111319 + C111295;
    const double C112026 = C112023 + C112013;
    const double C43338 = C43336 + C43328;
    const double C67754 = C67750 + C67738;
    const double C94829 = C94820 + C94796;
    const double C95527 = C95524 + C95514;
    const double C151208 = ae * C151207;
    const double C8014 = (5 * C151068 + C150614 * C151207 +
                          (4 * C151057 + C150614 * C151195) * ae) /
                         C150502;
    const double C9008 = (C150806 * C151207) / C150502;
    const double C151505 = C151450 + C151503;
    const double C151547 = ae * C151538;
    const double C34257 = C33767 * C23273;
    const double C103762 = C33767 * C51062;
    const double C8495 = C8492 + C8020;
    const double C75862 = C75859 + C75408;
    const double C8806 = C8803 + C8274;
    const double C42675 = C42673 + C26004;
    const double C84755 = C84753 + C53793;
    const double C76170 = C76167 + C75644;
    const double C8017 =
        (5 * (3 * C151094 + C151102 + C151102 + C150614 * C151143) + C151155 +
         C151155 +
         C150614 *
             (4 * C151143 + C151152 + C151152 +
              C150614 *
                  (3 * C151135 + C151148 + C151148 +
                   C150614 * (2 * C151127 + C151142 + C151142 +
                              C150614 * (C150657 + C151131 + C151131 +
                                         C150614 * (2 * ae * C150742 +
                                                    C150614 * C150672)))))) /
        C150509;
    const double C8028 = C6228 * C8013;
    const double C60688 = C59613 * C8013;
    const double C60682 = C59615 * C8013;
    const double C75416 = C73628 * C8013;
    const double C9014 = C6228 * C9007;
    const double C42074 = C23277 * C9007;
    const double C60843 = C59615 * C9007;
    const double C61318 = C59613 * C9007;
    const double C66772 = C51066 * C9007;
    const double C76372 = C73628 * C9007;
    const double C94565 = C73626 * C9007;
    const double C111064 = C6226 * C9007;
    const double C60850 = C59615 * C60836;
    const double C66774 = C51066 * C60836;
    const double C95519 = C73628 * C60836;
    const double C112018 = C6228 * C60836;
    const double C143877 = C23277 * C60836;
    const double C111329 = C111320 + C111297;
    const double C144801 = C144799 + C144793;
    const double C67756 = C67752 + C67742;
    const double C94830 = C94821 + C94798;
    const double C119450 = C119449 * C151906;
    const double C8018 =
        (5 * (3 * C151058 + C151066 + C151066 + C150614 * C151193) + C151208 +
         C151208 +
         C150614 *
             (4 * C151193 + C151205 + C151205 +
              C150614 *
                  (3 * C151186 + C151201 + C151201 +
                   C150614 *
                       (2 * C151177 + C151196 + C151196 +
                        C150614 * (C151160 + C151185 + C151185 +
                                   C150614 * (2 * ae * C151164 +
                                              C150614 * C150621 *
                                                  (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                  C150617)))))) /
        C150509;
    const double C8031 = C6228 * C8014;
    const double C60984 = C59615 * C8014;
    const double C75419 = C73628 * C8014;
    const double C9017 = C6228 * C9008;
    const double C42076 = C23277 * C9008;
    const double C61182 = C59615 * C9008;
    const double C76375 = C73628 * C9008;
    const double C84200 = C51066 * C9008;
    const double C151506 = C151505 + C151495;
    const double C61314 =
        (5 * (3 * C151356 + C151350 + C151350 + C150614 * C151558) + C151547 +
         C151547 +
         C150614 *
             (4 * C151558 + C151548 + C151548 +
              C150614 *
                  (3 * C151556 + C151549 + C151549 +
                   C150614 *
                       (2 * C151554 + C151550 + C151550 +
                        C150614 * (C151537 + C151551 + C151551 +
                                   C150614 * (2 * ae * C150806 * C150770 +
                                              C150614 * C150806 *
                                                  (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                  C150617)))))) /
        C150509;
    const double C8498 = C8495 + C8484;
    const double C75865 = C75862 + C75851;
    const double C8809 = C8806 + C8795;
    const double C42677 = C42675 + C42670;
    const double C84757 = C84755 + C84750;
    const double C76173 = C76170 + C76159;
    const double C112021 = C112014 + C9014;
    const double C95522 = C95515 + C76372;
    const double C151507 = ae * C151506;
    const double C60679 = (6 * C151154 + C150614 * C151506 +
                           (5 * C151141 + C150614 * C151492) * ae) /
                          C150502;
    const double C61313 = (C150806 * C151506) / C150502;
    const double C112024 = C112021 + C9014;
    const double C95525 = C95522 + C76372;
    const double C60680 =
        (6 * (4 * C151143 + C151152 + C151152 + C150614 * C151493) + C151507 +
         C151507 +
         C150614 *
             (5 * C151493 + C151504 + C151504 +
              C150614 *
                  (4 * C151486 + C151500 + C151500 +
                   C150614 *
                       (3 * C151478 + C151496 + C151496 +
                        C150614 *
                            (2 * C151470 + C151485 + C151485 +
                             C150614 *
                                 (C150672 + C151474 + C151474 +
                                  C150614 * (2 * ae * C150770 +
                                             C150614 *
                                                 (C150666 * C150667 +
                                                  C150618 * bs[9] *
                                                      std::pow(C150616, 9)) *
                                                 C150617))))))) /
        C150509;
    const double C60689 = C59615 * C60679;
    const double C61319 = C59615 * C61313;
    const double C94566 = C73628 * C61313;
    const double C111065 = C6228 * C61313;
    const double C112027 = C112024 + C112015;
    const double C95528 = C95525 + C95516;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152022 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152029 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C3719) *
              C151940 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152029 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152022 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C3719) *
              C151949 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C152022 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C152029 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                     C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                        C152344 +
                    (C23333 + C23334) * C152345 + C23343 * C23273) *
                       C152162 * C152280 -
                   (C23944 * C23273 + (C23934 + C23935) * C152345 +
                    (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
                     C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                        C152344) *
                       C152162 * C152068) *
                      C152022 +
                  (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
                     C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                        C152344 +
                    (C24684 + C24685) * C152345 + C24690 * C23273) *
                       C152162 * C152068 -
                   (C23644 * C23273 + (C23634 + C23635) * C152345 +
                    (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                     C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                        C152344) *
                       C152162 * C152280) *
                      C152029 +
                  (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                     C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                        C152344 +
                    (C23636 + C23637) * C152345 + C23645 * C23273) *
                       C152162 * C152280 -
                   ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
                    (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
                     C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                        C152344) *
                       C152162 * C152068) *
                      C3719) *
                     C3375 +
                 ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
                    C24347 * C23273) *
                       C152162 * C152068 -
                   (C23344 * C23273 + (C23336 + C23335) * C152345 +
                    (C23334 + C23333) * C152344) *
                       C152162 * C152280) *
                      C152022 +
                  (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
                    C24140 * C23273) *
                       C152162 * C152280 -
                   ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
                    (C24685 + C24684) * C152344) *
                       C152162 * C152068) *
                      C152029 +
                  (((C25806 + C25805) * C152344 + (C25804 + C25803) * C152345 +
                    (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
                     C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                        C23273) *
                       C152162 * C152068 -
                   ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
                    (C23637 + C23636) * C152344) *
                       C152162 * C152280) *
                      C3719) *
                     C151946)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152375 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152371 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152357 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152371 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152375 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152357 +
           ((C25494 + C25493) * C152344 + (C25492 + C25491) * C152345 +
            (C23274 * C1439 + C25481 + C25481 + C152296 * C1455 +
             C23276 * C1446 + C25482 + C25482 + C152198 * C1462) *
                C23273) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C3235 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152026 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C3235) *
              C152367 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C3235 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C152026) *
              C152350 +
          ((C24140 * C152344 + (C24152 + C24151) * C152345 +
            (C23274 * C360 + C24145 + C24145 + C152296 * C384 + C23276 * C361 +
             C24146 + C24146 + C152198 * C385) *
                C23273) *
               C152162 * C151981 * C152026 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C152369 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152354 +
            ((C23274 * C591 + C23878 + C23878 + C152296 * C615 +
              C23276 * C1620 + C23879 + C23879 + C152198 * C1644) *
                 C152344 +
             (C23936 + C23937) * C152345 + C23945 * C23273) *
                C152162 * C152324) *
               C3235 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152354 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C152369 -
            ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
             (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
              C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                 C152344) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152354 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C152369 -
            ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
             (C23937 + C23936) * C152344) *
                C152162 * C152324) *
               C3235 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C152369 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152354 +
            ((C26888 + C26887) * C152344 + (C26886 + C26885) * C152345 +
             (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
              C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                 C23273) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C152280 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C3235 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C152280) *
               C3235 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C152280 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
                C152162 * C152280 -
            ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
             C23944 * C152344) *
                C152162 * C152068) *
               C3235 +
           ((C24690 * C152344 + (C24689 + C24688) * C152345 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C23273) *
                C152162 * C152068 -
            ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
             C23644 * C152344) *
                C152162 * C152280) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C3235 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152026 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C3235) *
              C152367 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C3235 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C152026) *
              C152350 +
          ((C24140 * C152344 + (C24152 + C24151) * C152345 +
            (C23274 * C360 + C24145 + C24145 + C152296 * C384 + C23276 * C361 +
             C24146 + C24146 + C152198 * C385) *
                C23273) *
               C152162 * C151981 * C152026 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152375 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152371 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152357 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152371 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152375 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152357 +
           ((C25494 + C25493) * C152344 + (C25492 + C25491) * C152345 +
            (C23274 * C1439 + C25481 + C25481 + C152296 * C1455 +
             C23276 * C1446 + C25482 + C25482 + C152198 * C1462) *
                C23273) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                     C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                        C152344 +
                    (C23333 + C23334) * C152345 + C23343 * C23273) *
                       C152162 * C4241 -
                   (C23944 * C23273 + (C23934 + C23935) * C152345 +
                    (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
                     C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                        C152344) *
                       C152162 * C152068) *
                      C152022 +
                  (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
                     C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                        C152344 +
                    (C24684 + C24685) * C152345 + C24690 * C23273) *
                       C152162 * C152068 -
                   (C23644 * C23273 + (C23634 + C23635) * C152345 +
                    (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                     C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                        C152344) *
                       C152162 * C4241) *
                      C152029 +
                  (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                     C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                        C152344 +
                    (C23636 + C23637) * C152345 + C23645 * C23273) *
                       C152162 * C4241 -
                   ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
                    (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
                     C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                        C152344) *
                       C152162 * C152068) *
                      C3719) *
                     C152265 +
                 ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
                    C24347 * C23273) *
                       C152162 * C152068 -
                   (C23344 * C23273 + (C23336 + C23335) * C152345 +
                    (C23334 + C23333) * C152344) *
                       C152162 * C4241) *
                      C152022 +
                  (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
                    C24140 * C23273) *
                       C152162 * C4241 -
                   ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
                    (C24685 + C24684) * C152344) *
                       C152162 * C152068) *
                      C152029 +
                  (((C25806 + C25805) * C152344 + (C25804 + C25803) * C152345 +
                    (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
                     C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                        C23273) *
                       C152162 * C152068 -
                   ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
                    (C23637 + C23636) * C152344) *
                       C152162 * C4241) *
                      C3719) *
                     C151946)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                    C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                       C152344 +
                   (C23333 + C23334) * C152345 + C23343 * C23273) *
                      C152162 * C152064 -
                  (C23944 * C23273 + (C23934 + C23935) * C152345 +
                   (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
                    C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                       C152344) *
                      C152162 * C152071 +
                  ((C23274 * C591 + C23878 + C23878 + C152296 * C615 +
                    C23276 * C1620 + C23879 + C23879 + C152198 * C1644) *
                       C152344 +
                   (C23936 + C23937) * C152345 + C23945 * C23273) *
                      C152162 * C4913) *
                     C152022 +
                 (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
                    C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                       C152344 +
                   (C24684 + C24685) * C152345 + C24690 * C23273) *
                      C152162 * C152071 -
                  (C23644 * C23273 + (C23634 + C23635) * C152345 +
                   (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                    C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                       C152344) *
                      C152162 * C152064 -
                  ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
                   (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
                    C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                       C152344) *
                      C152162 * C4913) *
                     C152029 +
                 (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                    C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                       C152344 +
                   (C23636 + C23637) * C152345 + C23645 * C23273) *
                      C152162 * C152064 -
                  ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
                   (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
                    C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                       C152344) *
                      C152162 * C152071 +
                  ((C23274 * C1625 + C25273 + C25273 + C152296 * C1649 +
                    C23276 * C8250 + C25274 + C25274 + C152198 * C8262) *
                       C152344 +
                   (C23274 * C1626 + C25275 + C25275 + C152296 * C1650 +
                    C23276 * C8249 + C25276 + C25276 + C152198 * C8261) *
                       C152345 +
                   (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                    C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                       C23273) *
                      C152162 * C4913) *
                     C3719) *
                C151935) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C4241 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C152375 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152068 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C4241) *
              C152371 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C4241 -
           ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C152068) *
              C152357 +
          (((C23274 * C2163 + C26001 + C26001 + C152296 * C2171 +
             C23276 * C8252 + C26002 + C26002 + C152198 * C8264) *
                C152344 +
            (C23274 * C2164 + C26003 + C26003 + C152296 * C2172 +
             C23276 * C8251 + C26004 + C26004 + C152198 * C8263) *
                C152345 +
            (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
             C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                C23273) *
               C152162 * C152068 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C4241 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C3235 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C4241) *
               C3235 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C4241 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
                C152162 * C4241 -
            ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
             C23944 * C152344) *
                C152162 * C152068) *
               C3235 +
           ((C24690 * C152344 + (C24689 + C24688) * C152345 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C23273) *
                C152162 * C152068 -
            ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
             C23644 * C152344) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152376 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152373 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152360 -
           ((C27101 + C27102) * C23273 + (C27103 + C27104) * C152345 +
            (C23276 * C3089 + C26569 + C26569 + C152198 * C3097 +
             C23274 * C2564 + C26570 + C26570 + C152296 * C2580) *
                C152344) *
               C152162 * C152337) *
              C3235 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152373 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C152376 -
           ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
            (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
             C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                C152344) *
               C152162 * C152360 +
           ((C23274 * C3089 + C27299 + C27299 + C152296 * C3097 +
             C23276 * C9576 + C27300 + C27300 + C152198 * C9588) *
                C152344 +
            (C23274 * C3090 + C27301 + C27301 + C152296 * C3098 +
             C23276 * C9575 + C27302 + C27302 + C152198 * C9587) *
                C152345 +
            (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
             C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                C23273) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                     C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                        C152344 +
                    (C23333 + C23334) * C152345 + C23343 * C23273) *
                       C152162 * C152064 -
                   (C23944 * C23273 + (C23934 + C23935) * C152345 +
                    (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
                     C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                        C152344) *
                       C152162 * C152071 +
                   ((C23274 * C591 + C23878 + C23878 + C152296 * C615 +
                     C23276 * C1620 + C23879 + C23879 + C152198 * C1644) *
                        C152344 +
                    (C23936 + C23937) * C152345 + C23945 * C23273) *
                       C152162 * C4913) *
                      C3235 +
                  (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
                     C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                        C152344 +
                    (C24684 + C24685) * C152345 + C24690 * C23273) *
                       C152162 * C152071 -
                   (C23644 * C23273 + (C23634 + C23635) * C152345 +
                    (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                     C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                        C152344) *
                       C152162 * C152064 -
                   ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
                    (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
                     C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                        C152344) *
                       C152162 * C4913) *
                      C152026) *
                     C152265 +
                 ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
                    C24347 * C23273) *
                       C152162 * C152071 -
                   (C23344 * C23273 + (C23336 + C23335) * C152345 +
                    (C23334 + C23333) * C152344) *
                       C152162 * C152064 -
                   ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
                    (C23937 + C23936) * C152344) *
                       C152162 * C4913) *
                      C3235 +
                  (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
                    C24140 * C23273) *
                       C152162 * C152064 -
                   ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
                    (C24685 + C24684) * C152344) *
                       C152162 * C152071 +
                   ((C26888 + C26887) * C152344 + (C26886 + C26885) * C152345 +
                    (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                     C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                        C23273) *
                       C152162 * C4913) *
                      C152026) *
                     C151946)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C4241 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C3235 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C4241) *
               C3235 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C4241 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
                C152162 * C4241 -
            ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
             C23944 * C152344) *
                C152162 * C152068) *
               C3235 +
           ((C24690 * C152344 + (C24689 + C24688) * C152345 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C23273) *
                C152162 * C152068 -
            ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
             C23644 * C152344) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C4241 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C152375 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152068 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C4241) *
              C152371 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C4241 -
           ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C152068) *
              C152357 +
          (((C23274 * C2163 + C26001 + C26001 + C152296 * C2171 +
             C23276 * C8252 + C26002 + C26002 + C152198 * C8264) *
                C152344 +
            (C23274 * C2164 + C26003 + C26003 + C152296 * C2172 +
             C23276 * C8251 + C26004 + C26004 + C152198 * C8263) *
                C152345 +
            (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
             C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                C23273) *
               C152162 * C152068 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C1795 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C1796 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C1797 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C1796 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C1795 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C1797 +
           ((C25494 + C25493) * C152344 + (C25492 + C25491) * C152345 +
            (C23274 * C1439 + C25481 + C25481 + C152296 * C1455 +
             C23276 * C1446 + C25482 + C25482 + C152198 * C1462) *
                C23273) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152279 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152026 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152279) *
              C808 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C152279 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C152026) *
              C809 +
          ((C24140 * C152344 + (C24152 + C24151) * C152345 +
            (C23274 * C360 + C24145 + C24145 + C152296 * C384 + C23276 * C361 +
             C24146 + C24146 + C152198 * C385) *
                C23273) *
               C152162 * C151981 * C152026 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C2325 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C2326 +
            ((C23274 * C591 + C23878 + C23878 + C152296 * C615 +
              C23276 * C1620 + C23879 + C23879 + C152198 * C1644) *
                 C152344 +
             (C23936 + C23937) * C152345 + C23945 * C23273) *
                C152162 * C152324) *
               C152279 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C2326 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C2325 -
            ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
             (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
              C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                 C152344) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C2326 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C2325 -
            ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
             (C23937 + C23936) * C152344) *
                C152162 * C152324) *
               C152279 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C2325 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C2326 +
            ((C26888 + C26887) * C152344 + (C26886 + C26885) * C152345 +
             (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
              C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                 C23273) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152280 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C1795 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152068 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C152280) *
              C1796 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C152280 -
           ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C152068) *
              C1797 +
          (((C23274 * C2163 + C26001 + C26001 + C152296 * C2171 +
             C23276 * C8252 + C26002 + C26002 + C152198 * C8264) *
                C152344 +
            (C23274 * C2164 + C26003 + C26003 + C152296 * C2172 +
             C23276 * C8251 + C26004 + C26004 + C152198 * C8263) *
                C152345 +
            (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
             C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                C23273) *
               C152162 * C152068 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C152280 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C152279 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C152280) *
               C152279 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C152280 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
                C152162 * C152280 -
            ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
             C23944 * C152344) *
                C152162 * C152068) *
               C152279 +
           ((C24690 * C152344 + (C24689 + C24688) * C152345 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C23273) *
                C152162 * C152068 -
            ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
             C23644 * C152344) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C2936 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C2937 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C2938 -
           ((C27101 + C27102) * C23273 + (C27103 + C27104) * C152345 +
            (C23276 * C3089 + C26569 + C26569 + C152198 * C3097 +
             C23274 * C2564 + C26570 + C26570 + C152296 * C2580) *
                C152344) *
               C152162 * C152337) *
              C152279 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C2937 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C2936 -
           ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
            (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
             C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                C152344) *
               C152162 * C2938 +
           ((C23274 * C3089 + C27299 + C27299 + C152296 * C3097 +
             C23276 * C9576 + C27300 + C27300 + C152198 * C9588) *
                C152344 +
            (C23274 * C3090 + C27301 + C27301 + C152296 * C3098 +
             C23276 * C9575 + C27302 + C27302 + C152198 * C9587) *
                C152345 +
            (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
             C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                C23273) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                   C152344 +
               (C23333 + C23334) * C152345 + C23343 * C23273) *
                  C152162 * C151981 * C151963 * C129 -
              (C23344 * C23273 + (C23336 + C23335) * C152345 +
               (C23334 + C23333) * C152344) *
                  C152162 * C151981 * C151963 * C130 +
              (C23343 * C152344 + (C23338 + C23337) * C152345 +
               C23345 * C23273) *
                  C152162 * C151981 * C151963 * C131 -
              ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
               C23344 * C152344) *
                  C152162 * C151981 * C151963 * C132 +
              (C23345 * C152344 + (C23342 + C23341) * C152345 +
               (C23274 * C142 + C23311 + C23311 + C152296 * C158 +
                C23276 * C811 + C23312 + C23312 + C152198 * C813) *
                   C23273) *
                  C152162 * C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                 C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                    C152344 +
                (C23333 + C23334) * C152345 + C23343 * C23273) *
                   C152162 * C151981 * C152368 -
               (C23644 * C23273 + (C23634 + C23635) * C152345 +
                (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                 C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                    C152344) *
                   C152162 * C151981 * C152352 +
               ((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                 C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                    C152344 +
                (C23636 + C23637) * C152345 + C23645 * C23273) *
                   C152162 * C151981 * C152321) *
                  C347 +
              (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
                (C23640 + C23641) * C23273) *
                   C152162 * C151981 * C152352 -
               (C23344 * C23273 + (C23336 + C23335) * C152345 +
                (C23334 + C23333) * C152344) *
                   C152162 * C151981 * C152368 -
               ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
                (C23637 + C23636) * C152344) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C23343 * C152344 + (C23338 + C23337) * C152345 +
                C23345 * C23273) *
                   C152162 * C151981 * C152368 -
               ((C23276 * C359 + C23604 + C23604 + C152198 * C383 +
                 C23274 * C358 + C23605 + C23605 + C152296 * C382) *
                    C23273 +
                (C23641 + C23640) * C152345 + C23644 * C152344) *
                   C152162 * C151981 * C152352 +
               (C23645 * C152344 + (C23643 + C23642) * C152345 +
                (C23274 * C359 + C23606 + C23606 + C152296 * C383 +
                 C23276 * C1801 + C23607 + C23607 + C152198 * C1803) *
                    C23273) *
                   C152162 * C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152369 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152354 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            (C23940 + C23941) * C23273) *
               C152162 * C152354 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C152369 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C152324) *
              C151963 * C348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C152369 -
           ((C23276 * C1159 + C23904 + C23904 + C152198 * C1171 +
             C23274 * C595 + C23905 + C23905 + C152296 * C619) *
                C23273 +
            (C23941 + C23940) * C152345 + C23944 * C152344) *
               C152162 * C152354 +
           (C23945 * C152344 + (C23943 + C23942) * C152345 +
            (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
             C23907 + C23907 + C152198 * C2789) *
                C23273) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C1345 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C1346 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C1345 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C1345 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C1346 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C1433 -
          (C23644 * C23273 + (C23634 + C23635) * C152345 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C152344) *
              C152162 * C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C152344 +
           (C23636 + C23637) * C152345 + C23645 * C23273) *
              C152162 * C151981 * C1435 -
          ((C23276 * C1445 + C25031 + C25031 + C152198 * C1461 +
            C23274 * C1440 + C25032 + C25032 + C152296 * C1456) *
               C23273 +
           (C23276 * C1444 + C25033 + C25033 + C152198 * C1460 +
            C23274 * C1441 + C25034 + C25034 + C152296 * C1457) *
               C152345 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C152344) *
              C152162 * C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C152344 +
           (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
            C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
               C152345 +
           (C23274 * C1445 + C25041 + C25041 + C152296 * C1461 +
            C23276 * C8479 + C25042 + C25042 + C152198 * C8481) *
               C23273) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152369 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152354 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C1345 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152354 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C152369 -
           ((C23276 * C1627 + C25261 + C25261 + C152198 * C1651 +
             C23274 * C1618 + C25262 + C25262 + C152296 * C1642) *
                C23273 +
            (C23276 * C1626 + C25263 + C25263 + C152198 * C1650 +
             C23274 * C1619 + C25264 + C25264 + C152296 * C1643) *
                C152345 +
            (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
             C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                C152344) *
               C152162 * C152324) *
              C1346 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C152369 -
           ((C23276 * C2165 + C25267 + C25267 + C152198 * C2173 +
             C23274 * C1622 + C25268 + C25268 + C152296 * C1646) *
                C23273 +
            (C23276 * C2164 + C25269 + C25269 + C152198 * C2172 +
             C23274 * C1623 + C25270 + C25270 + C152296 * C1647) *
                C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C152354 +
           ((C23274 * C1625 + C25273 + C25273 + C152296 * C1649 +
             C23276 * C8250 + C25274 + C25274 + C152198 * C8262) *
                C152344 +
            (C23274 * C1626 + C25275 + C25275 + C152296 * C1650 +
             C23276 * C8249 + C25276 + C25276 + C152198 * C8261) *
                C152345 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C23273) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C2325 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C2326 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C2326 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C2325 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C152324) *
              C151963 * C152348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C2325 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C2326 +
           (C23945 * C152344 + (C23943 + C23942) * C152345 +
            (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
             C23907 + C23907 + C152198 * C2789) *
                C23273) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C2325 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C2326 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C152368 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C2326 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C2325 -
           ((C23276 * C1627 + C25261 + C25261 + C152198 * C1651 +
             C23274 * C1618 + C25262 + C25262 + C152296 * C1642) *
                C23273 +
            (C23276 * C1626 + C25263 + C25263 + C152198 * C1650 +
             C23274 * C1619 + C25264 + C25264 + C152296 * C1643) *
                C152345 +
            (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
             C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                C152344) *
               C152162 * C152324) *
              C152352 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C2325 -
           ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C2326 +
           ((C23274 * C1625 + C25273 + C25273 + C152296 * C1649 +
             C23276 * C8250 + C25274 + C25274 + C152198 * C8262) *
                C152344 +
            (C23274 * C1626 + C25275 + C25275 + C152296 * C1650 +
             C23276 * C8249 + C25276 + C25276 + C152198 * C8261) *
                C152345 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C23273) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C2556 -
          (C23944 * C23273 + (C23934 + C23935) * C152345 +
           (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 + C23274 * C590 +
            C23877 + C23877 + C152296 * C614) *
               C152344) *
              C152162 * C2557 +
          ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
            C23879 + C23879 + C152198 * C1644) *
               C152344 +
           (C23936 + C23937) * C152345 + C23945 * C23273) *
              C152162 * C2558 -
          ((C23276 * C3091 + C26565 + C26565 + C152198 * C3099 +
            C23274 * C2562 + C26566 + C26566 + C152296 * C2578) *
               C23273 +
           (C23276 * C3090 + C26567 + C26567 + C152198 * C3098 +
            C23274 * C2563 + C26568 + C26568 + C152296 * C2579) *
               C152345 +
           (C23276 * C3089 + C26569 + C26569 + C152198 * C3097 +
            C23274 * C2564 + C26570 + C26570 + C152296 * C2580) *
               C152344) *
              C152162 * C2559 +
          ((C23274 * C2565 + C26571 + C26571 + C152296 * C2581 +
            C23276 * C9577 + C26572 + C26572 + C152198 * C9589) *
               C152344 +
           (C23274 * C2566 + C26573 + C26573 + C152296 * C2582 +
            C23276 * C9579 + C26574 + C26574 + C152198 * C9591) *
               C152345 +
           (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
            C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
               C23273) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C152280 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C1345 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C152280) *
               C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152344 +
             (C23636 + C23637) * C152345 + C23645 * C23273) *
                C152162 * C152280 -
            ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
             (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
              C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                 C152344) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C152280) *
               C1345 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C152280 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C1346 +
           (((C25806 + C25805) * C152344 + (C25804 + C25803) * C152345 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C23273) *
                C152162 * C152068 -
            ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
             (C23637 + C23636) * C152344) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152280 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C152068 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C152280) *
              C151963 * C808 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C152280 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C152068) *
              C151963 * C809 +
          ((C24347 * C152344 + (C24359 + C24358) * C152345 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C23273) *
               C152162 * C152068 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C2936 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C2937 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C2938 -
           ((C27101 + C27102) * C23273 + (C27103 + C27104) * C152345 +
            (C23276 * C3089 + C26569 + C26569 + C152198 * C3097 +
             C23274 * C2564 + C26570 + C26570 + C152296 * C2580) *
                C152344) *
               C152162 * C152337) *
              C151963 * C152265 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C2937 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C2936 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C2938 +
           ((C27104 + C27103) * C152344 + (C27102 + C27101) * C152345 +
            (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
             C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                C23273) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152368 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152352 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            (C23640 + C23641) * C23273) *
               C152162 * C151981 * C152352 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152368 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C152368 -
           ((C23276 * C359 + C23604 + C23604 + C152198 * C383 + C23274 * C358 +
             C23605 + C23605 + C152296 * C382) *
                C23273 +
            (C23641 + C23640) * C152345 + C23644 * C152344) *
               C152162 * C151981 * C152352 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C151963 * C129 -
          (C23344 * C23273 + (C23336 + C23335) * C152345 +
           (C23334 + C23333) * C152344) *
              C152162 * C151981 * C151963 * C130 +
          (C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
              C152162 * C151981 * C151963 * C131 -
          ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
           C23344 * C152344) *
              C152162 * C151981 * C151963 * C132 +
          (C23345 * C152344 + (C23342 + C23341) * C152345 +
           (C23274 * C142 + C23311 + C23311 + C152296 * C158 + C23276 * C811 +
            C23312 + C23312 + C152198 * C813) *
               C23273) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C1345 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C1346 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C1345 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C1345 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C1346 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C1433 -
          (C23644 * C23273 + (C23634 + C23635) * C152345 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C152344) *
              C152162 * C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C152344 +
           (C23636 + C23637) * C152345 + C23645 * C23273) *
              C152162 * C151981 * C1435 -
          ((C23276 * C1445 + C25031 + C25031 + C152198 * C1461 +
            C23274 * C1440 + C25032 + C25032 + C152296 * C1456) *
               C23273 +
           (C23276 * C1444 + C25033 + C25033 + C152198 * C1460 +
            C23274 * C1441 + C25034 + C25034 + C152296 * C1457) *
               C152345 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C152344) *
              C152162 * C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C152344 +
           (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
            C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
               C152345 +
           (C23274 * C1445 + C25041 + C25041 + C152296 * C1461 +
            C23276 * C8479 + C25042 + C25042 + C152198 * C8481) *
               C23273) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C2325 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C2326 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C2326 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C2325 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C152324) *
              C151963 * C152348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C2325 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C2326 +
           (C23945 * C152344 + (C23943 + C23942) * C152345 +
            (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
             C23907 + C23907 + C152198 * C2789) *
                C23273) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C2325 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C2326 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C152368 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C2326 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C2325 -
           ((C23276 * C1627 + C25261 + C25261 + C152198 * C1651 +
             C23274 * C1618 + C25262 + C25262 + C152296 * C1642) *
                C23273 +
            (C23276 * C1626 + C25263 + C25263 + C152198 * C1650 +
             C23274 * C1619 + C25264 + C25264 + C152296 * C1643) *
                C152345 +
            (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
             C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                C152344) *
               C152162 * C152324) *
              C152352 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C2325 -
           ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C2326 +
           ((C23274 * C1625 + C25273 + C25273 + C152296 * C1649 +
             C23276 * C8250 + C25274 + C25274 + C152198 * C8262) *
                C152344 +
            (C23274 * C1626 + C25275 + C25275 + C152296 * C1650 +
             C23276 * C8249 + C25276 + C25276 + C152198 * C8261) *
                C152345 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C23273) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C4241 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C152279 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C4241) *
               C152279 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C4241 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
                C152162 * C4241 -
            ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
             C23944 * C152344) *
                C152162 * C152068) *
               C152279 +
           ((C24690 * C152344 + (C24689 + C24688) * C152345 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C23273) *
                C152162 * C152068 -
            ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
             C23644 * C152344) *
                C152162 * C4241) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C152344 +
                     (C23333 + C23334) * C152345 + C23343 * C23273) *
                        C152162 * C152064 -
                    (C23944 * C23273 + (C23934 + C23935) * C152345 +
                     (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
                      C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                         C152344) *
                        C152162 * C152071 +
                    ((C23274 * C591 + C23878 + C23878 + C152296 * C615 +
                      C23276 * C1620 + C23879 + C23879 + C152198 * C1644) *
                         C152344 +
                     (C23936 + C23937) * C152345 + C23945 * C23273) *
                        C152162 * C4913) *
                       C152279 +
                   (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
                      C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                         C152344 +
                     (C24684 + C24685) * C152345 + C24690 * C23273) *
                        C152162 * C152071 -
                    (C23644 * C23273 + (C23634 + C23635) * C152345 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C152344) *
                        C152162 * C152064 -
                    ((C26885 + C26886) * C23273 + (C26887 + C26888) * C152345 +
                     (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
                      C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                         C152344) *
                        C152162 * C4913) *
                       C152026) *
                      C3375 +
                  ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
                     C24347 * C23273) *
                        C152162 * C152071 -
                    (C23344 * C23273 + (C23336 + C23335) * C152345 +
                     (C23334 + C23333) * C152344) *
                        C152162 * C152064 -
                    ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
                     (C23937 + C23936) * C152344) *
                        C152162 * C4913) *
                       C152279 +
                   (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
                     C24140 * C23273) *
                        C152162 * C152064 -
                    ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
                     (C24685 + C24684) * C152344) *
                        C152162 * C152071 +
                    ((C26888 + C26887) * C152344 + (C26886 + C26885) * C152345 +
                     (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                      C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                         C23273) *
                        C152162 * C4913) *
                       C152026) *
                      C151946)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C4241 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C152368 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C4241) *
               C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152344 +
             (C23636 + C23637) * C152345 + C23645 * C23273) *
                C152162 * C4241 -
            ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
             (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
              C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                 C152344) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C4241) *
               C152368 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C4241 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152352 +
           (((C25806 + C25805) * C152344 + (C25804 + C25803) * C152345 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C23273) *
                C152162 * C152068 -
            ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
             (C23637 + C23636) * C152344) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C4241 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C152068 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C4241) *
              C151963 * C152367 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C4241 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C152068) *
              C151963 * C152350 +
          ((C24347 * C152344 + (C24359 + C24358) * C152345 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C23273) *
               C152162 * C152068 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152376 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152373 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152360 -
           ((C27101 + C27102) * C23273 + (C27103 + C27104) * C152345 +
            (C23276 * C3089 + C26569 + C26569 + C152198 * C3097 +
             C23274 * C2564 + C26570 + C26570 + C152296 * C2580) *
                C152344) *
               C152162 * C152337) *
              C151963 * C3375 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C152373 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C152376 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C152360 +
           ((C27104 + C27103) * C152344 + (C27102 + C27101) * C152345 +
            (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
             C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                C23273) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152064 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152071 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C4913) *
              C151963 * C151940 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C152071 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C152064 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C4913) *
              C151963 * C151949 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C152064 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C152071 +
           (C23945 * C152344 + (C23943 + C23942) * C152345 +
            (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
             C23907 + C23907 + C152198 * C2789) *
                C23273) *
               C152162 * C4913) *
              C151963 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C4241 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C152068 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C4241) *
              C151963 * C152367 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C4241 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C152068) *
              C151963 * C152350 +
          ((C24347 * C152344 + (C24359 + C24358) * C152345 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C23273) *
               C152162 * C152068 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C4241 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C152368 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C4241) *
               C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152344 +
             (C23636 + C23637) * C152345 + C23645 * C23273) *
                C152162 * C4241 -
            ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
             (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
              C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                 C152344) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C4241) *
               C152368 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C4241 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152352 +
           (((C25806 + C25805) * C152344 + (C25804 + C25803) * C152345 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C23273) *
                C152162 * C152068 -
            ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
             (C23637 + C23636) * C152344) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152279 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C152026 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152279) *
              C808 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C152279 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C152026) *
              C809 +
          ((C24140 * C152344 + (C24152 + C24151) * C152345 +
            (C23274 * C360 + C24145 + C24145 + C152296 * C384 + C23276 * C361 +
             C24146 + C24146 + C152198 * C385) *
                C23273) *
               C152162 * C151981 * C152026 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C1795 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C1796 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C1797 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C1796 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C1795 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C1797 +
           ((C25494 + C25493) * C152344 + (C25492 + C25491) * C152345 +
            (C23274 * C1439 + C25481 + C25481 + C152296 * C1455 +
             C23276 * C1446 + C25482 + C25482 + C152198 * C1462) *
                C23273) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C152280 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C152279 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C152280) *
               C152279 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C152280 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
                C152162 * C152280 -
            ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
             C23944 * C152344) *
                C152162 * C152068) *
               C152279 +
           ((C24690 * C152344 + (C24689 + C24688) * C152345 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C23273) *
                C152162 * C152068 -
            ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
             C23644 * C152344) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152280 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C1795 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152068 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C152280) *
              C1796 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C152280 -
           ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C152068) *
              C1797 +
          (((C23274 * C2163 + C26001 + C26001 + C152296 * C2171 +
             C23276 * C8252 + C26002 + C26002 + C152198 * C8264) *
                C152344 +
            (C23274 * C2164 + C26003 + C26003 + C152296 * C2172 +
             C23276 * C8251 + C26004 + C26004 + C152198 * C8263) *
                C152345 +
            (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
             C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                C23273) *
               C152162 * C152068 -
           ((C25491 + C25492) * C23273 + (C25493 + C25494) * C152345 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152344) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152368 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152352 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            (C23640 + C23641) * C23273) *
               C152162 * C151981 * C152352 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152368 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C152368 -
           ((C23276 * C359 + C23604 + C23604 + C152198 * C383 + C23274 * C358 +
             C23605 + C23605 + C152296 * C382) *
                C23273 +
            (C23641 + C23640) * C152345 + C23644 * C152344) *
               C152162 * C151981 * C152352 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C151963 * C129 -
          (C23344 * C23273 + (C23336 + C23335) * C152345 +
           (C23334 + C23333) * C152344) *
              C152162 * C151981 * C151963 * C130 +
          (C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
              C152162 * C151981 * C151963 * C131 -
          ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
           C23344 * C152344) *
              C152162 * C151981 * C151963 * C132 +
          (C23345 * C152344 + (C23342 + C23341) * C152345 +
           (C23274 * C142 + C23311 + C23311 + C152296 * C158 + C23276 * C811 +
            C23312 + C23312 + C152198 * C813) *
               C23273) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152369 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152354 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            (C23940 + C23941) * C23273) *
               C152162 * C152354 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C152369 -
           ((C23942 + C23943) * C23273 + (C23939 + C23938) * C152345 +
            (C23937 + C23936) * C152344) *
               C152162 * C152324) *
              C151963 * C348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C152369 -
           ((C23276 * C1159 + C23904 + C23904 + C152198 * C1171 +
             C23274 * C595 + C23905 + C23905 + C152296 * C619) *
                C23273 +
            (C23941 + C23940) * C152345 + C23944 * C152344) *
               C152162 * C152354 +
           (C23945 * C152344 + (C23943 + C23942) * C152345 +
            (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
             C23907 + C23907 + C152198 * C2789) *
                C23273) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C1345 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C1346 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C1345 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C1345 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C1346 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C1433 -
          (C23644 * C23273 + (C23634 + C23635) * C152345 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C152344) *
              C152162 * C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C152344 +
           (C23636 + C23637) * C152345 + C23645 * C23273) *
              C152162 * C151981 * C1435 -
          ((C23276 * C1445 + C25031 + C25031 + C152198 * C1461 +
            C23274 * C1440 + C25032 + C25032 + C152296 * C1456) *
               C23273 +
           (C23276 * C1444 + C25033 + C25033 + C152198 * C1460 +
            C23274 * C1441 + C25034 + C25034 + C152296 * C1457) *
               C152345 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C152344) *
              C152162 * C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C152344 +
           (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
            C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
               C152345 +
           (C23274 * C1445 + C25041 + C25041 + C152296 * C1461 +
            C23276 * C8479 + C25042 + C25042 + C152198 * C8481) *
               C23273) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152369 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152354 +
           ((C23274 * C591 + C23878 + C23878 + C152296 * C615 + C23276 * C1620 +
             C23879 + C23879 + C152198 * C1644) *
                C152344 +
            (C23936 + C23937) * C152345 + C23945 * C23273) *
               C152162 * C152324) *
              C1345 +
          (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
             C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                C152344 +
            (C24684 + C24685) * C152345 + C24690 * C23273) *
               C152162 * C152354 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C152369 -
           ((C23276 * C1627 + C25261 + C25261 + C152198 * C1651 +
             C23274 * C1618 + C25262 + C25262 + C152296 * C1642) *
                C23273 +
            (C23276 * C1626 + C25263 + C25263 + C152198 * C1650 +
             C23274 * C1619 + C25264 + C25264 + C152296 * C1643) *
                C152345 +
            (C23276 * C1625 + C25265 + C25265 + C152198 * C1649 +
             C23274 * C1620 + C25266 + C25266 + C152296 * C1644) *
                C152344) *
               C152162 * C152324) *
              C1346 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C152369 -
           ((C23276 * C2165 + C25267 + C25267 + C152198 * C2173 +
             C23274 * C1622 + C25268 + C25268 + C152296 * C1646) *
                C23273 +
            (C23276 * C2164 + C25269 + C25269 + C152198 * C2172 +
             C23274 * C1623 + C25270 + C25270 + C152296 * C1647) *
                C152345 +
            (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
             C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                C152344) *
               C152162 * C152354 +
           ((C23274 * C1625 + C25273 + C25273 + C152296 * C1649 +
             C23276 * C8250 + C25274 + C25274 + C152198 * C8262) *
                C152344 +
            (C23274 * C1626 + C25275 + C25275 + C152296 * C1650 +
             C23276 * C8249 + C25276 + C25276 + C152198 * C8261) *
                C152345 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C23273) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C152280 -
           (C23944 * C23273 + (C23934 + C23935) * C152345 +
            (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
             C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                C152344) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
            C24347 * C23273) *
               C152162 * C152068 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C152280) *
              C151963 * C808 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C152280 -
           ((C24358 + C24359) * C23273 + (C23941 + C23940) * C152345 +
            C23944 * C152344) *
               C152162 * C152068) *
              C151963 * C809 +
          ((C24347 * C152344 + (C24359 + C24358) * C152345 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C23273) *
               C152162 * C152068 -
           ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
            C23344 * C152344) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152344 +
             (C23333 + C23334) * C152345 + C23343 * C23273) *
                C152162 * C152280 -
            (C23944 * C23273 + (C23934 + C23935) * C152345 +
             (C23276 * C1155 + C23876 + C23876 + C152198 * C1167 +
              C23274 * C590 + C23877 + C23877 + C152296 * C614) *
                 C152344) *
                C152162 * C152068) *
               C1345 +
           (((C23274 * C1155 + C24650 + C24650 + C152296 * C1167 +
              C23276 * C1624 + C24651 + C24651 + C152198 * C1648) *
                 C152344 +
             (C24684 + C24685) * C152345 + C24690 * C23273) *
                C152162 * C152068 -
            (C23644 * C23273 + (C23634 + C23635) * C152345 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152344) *
                C152162 * C152280) *
               C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152344 +
             (C23636 + C23637) * C152345 + C23645 * C23273) *
                C152162 * C152280 -
            ((C25803 + C25804) * C23273 + (C25805 + C25806) * C152345 +
             (C23276 * C2163 + C25271 + C25271 + C152198 * C2171 +
              C23274 * C1624 + C25272 + C25272 + C152296 * C1648) *
                 C152344) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C23935 + C23934) * C152344 + (C23933 + C23932) * C152345 +
             C24347 * C23273) *
                C152162 * C152068 -
            (C23344 * C23273 + (C23336 + C23335) * C152345 +
             (C23334 + C23333) * C152344) *
                C152162 * C152280) *
               C1345 +
           (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
             C24140 * C23273) *
                C152162 * C152280 -
            ((C24688 + C24689) * C23273 + (C24687 + C24686) * C152345 +
             (C24685 + C24684) * C152344) *
                C152162 * C152068) *
               C1346 +
           (((C25806 + C25805) * C152344 + (C25804 + C25803) * C152345 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C23273) *
                C152162 * C152068 -
            ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
             (C23637 + C23636) * C152344) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C151963 * C129 -
          (C23344 * C23273 + (C23336 + C23335) * C152345 +
           (C23334 + C23333) * C152344) *
              C152162 * C151981 * C151963 * C130 +
          (C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
              C152162 * C151981 * C151963 * C131 -
          ((C23341 + C23342) * C23273 + (C23340 + C23339) * C152345 +
           C23344 * C152344) *
              C152162 * C151981 * C151963 * C132 +
          (C23345 * C152344 + (C23342 + C23341) * C152345 +
           (C23274 * C142 + C23311 + C23311 + C152296 * C158 + C23276 * C811 +
            C23312 + C23312 + C152198 * C813) *
               C23273) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C152368 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C152352 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            (C23640 + C23641) * C23273) *
               C152162 * C151981 * C152352 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C152368 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C152368 -
           ((C23276 * C359 + C23604 + C23604 + C152198 * C383 + C23274 * C358 +
             C23605 + C23605 + C152296 * C382) *
                C23273 +
            (C23641 + C23640) * C152345 + C23644 * C152344) *
               C152162 * C151981 * C152352 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152344 +
            (C23333 + C23334) * C152345 + C23343 * C23273) *
               C152162 * C151981 * C1345 -
           (C23644 * C23273 + (C23634 + C23635) * C152345 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152344) *
               C152162 * C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152344 +
            (C23636 + C23637) * C152345 + C23645 * C23273) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C152344 + (C23633 + C23632) * C152345 +
            C24140 * C23273) *
               C152162 * C151981 * C1346 -
           (C23344 * C23273 + (C23336 + C23335) * C152345 +
            (C23334 + C23333) * C152344) *
               C152162 * C151981 * C1345 -
           ((C23642 + C23643) * C23273 + (C23639 + C23638) * C152345 +
            (C23637 + C23636) * C152344) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C23343 * C152344 + (C23338 + C23337) * C152345 + C23345 * C23273) *
               C152162 * C151981 * C1345 -
           ((C24151 + C24152) * C23273 + (C23641 + C23640) * C152345 +
            C23644 * C152344) *
               C152162 * C151981 * C1346 +
           (C23645 * C152344 + (C23643 + C23642) * C152345 +
            (C23274 * C359 + C23606 + C23606 + C152296 * C383 + C23276 * C1801 +
             C23607 + C23607 + C152198 * C1803) *
                C23273) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C152344 +
           (C23333 + C23334) * C152345 + C23343 * C23273) *
              C152162 * C151981 * C1433 -
          (C23644 * C23273 + (C23634 + C23635) * C152345 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C152344) *
              C152162 * C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C152344 +
           (C23636 + C23637) * C152345 + C23645 * C23273) *
              C152162 * C151981 * C1435 -
          ((C23276 * C1445 + C25031 + C25031 + C152198 * C1461 +
            C23274 * C1440 + C25032 + C25032 + C152296 * C1456) *
               C23273 +
           (C23276 * C1444 + C25033 + C25033 + C152198 * C1460 +
            C23274 * C1441 + C25034 + C25034 + C152296 * C1457) *
               C152345 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C152344) *
              C152162 * C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C152344 +
           (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
            C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
               C152345 +
           (C23274 * C1445 + C25041 + C25041 + C152296 * C1461 +
            C23276 * C8479 + C25042 + C25042 + C152198 * C8481) *
               C23273) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C152022 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152029 +
                   (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C151981 * C3719) *
                      C151940 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152029 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C152022 -
                   (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                    ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                        C152297) *
                       C151981 * C3719) *
                      C151949 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C151981 * C152022 -
                   (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                    ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                       C151981 * C152029 +
                   ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
                    ((C25804 + C25803) * C6221 +
                     (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
                      C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                         C151911) *
                        C152226) *
                       C151981 * C3719) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152280 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152022 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152280) *
                       C152029 +
                   ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                       C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                          C6221 +
                      (C23636 + C23637) * C151911) *
                         C152297 +
                     ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                        C152280 -
                    (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                         C152226 +
                     (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                        C152068) *
                       C3719) *
                      C3375 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152280) *
                       C152022 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152280 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152029 +
                   (((C43065 * C6221 + (C25804 + C25803) * C151911) * C152297 +
                     ((C42408 + C42407) * C6221 +
                      (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                       C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                     ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                         C152297) *
                        C152280) *
                       C3719) *
                      C151946)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C152375 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152371 +
                   (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C151981 * C152357 -
                   (((C42677 + C42678) * C151911 + (C43338 + C43337) * C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C151981 * C152331) *
                      C3375 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152371 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C152375 -
                   (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                    ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                        C152297) *
                       C151981 * C152357 +
                   (((C25494 + C25493) * C6221 + (C25492 + C25491) * C151911) *
                        C152297 +
                    ((C42678 + C42677) * C6221 +
                     (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
                      C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                         C151911) *
                        C152226) *
                       C151981 * C152331) *
                      C151946)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C3235 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152026) *
                      C152374 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152026 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C3235) *
                      C152367 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C151981 * C3235 -
                   (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                    ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                       C151981 * C152026) *
                      C152350 +
                  (((C24140 * C6221 + (C24152 + C24151) * C151911) * C152297 +
                    ((C24689 + C24688) * C6221 +
                     (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
                      C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                         C151911) *
                        C152226) *
                       C151981 * C152026 -
                   (((C24358 + C24359) * C151911 + C41221 * C6221) * C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C151981 * C3235) *
                      C152325)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152369 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152354 +
                    (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                     ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                        C152324) *
                       C3235 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152354 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152369 -
                    (((C44511 + C44512) * C151911 + (C45043 + C45044) * C6221) *
                         C152226 +
                     (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                        C152324) *
                       C152026) *
                      C3375 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152354 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152369 -
                    (((C27101 + C27102) * C151911 + C44772 * C6221) * C152226 +
                     (C40692 * C151911 + C40684 * C6221) * C152297) *
                        C152324) *
                       C3235 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152369 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152354 +
                    ((C44501 * C6221 + (C26886 + C26885) * C151911) * C152297 +
                     ((C44512 + C44511) * C6221 +
                      (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
                       C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                          C151911) *
                         C152226) *
                        C152324) *
                       C152026) *
                      C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152280 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C3235 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152280) *
                       C152026) *
                      C151940 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152280) *
                       C3235 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152280 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152026) *
                      C151949 +
                  ((((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                     (C40691 * C6221 + C24347 * C151911) * C152226) *
                        C152280 -
                    (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                     (C41221 * C151911 + C23944 * C6221) * C152297) *
                        C152068) *
                       C3235 +
                   (((C24690 * C6221 + (C24689 + C24688) * C151911) * C152297 +
                     ((C26886 + C26885) * C6221 +
                      (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                       C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                     ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                        C152280) *
                       C152026) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C3235 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152026) *
                      C152374 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152026 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C3235) *
                      C152367 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C151981 * C3235 -
                   (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                    ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                       C151981 * C152026) *
                      C152350 +
                  (((C24140 * C6221 + (C24152 + C24151) * C151911) * C152297 +
                    ((C24689 + C24688) * C6221 +
                     (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
                      C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                         C151911) *
                        C152226) *
                       C151981 * C152026 -
                   (((C24358 + C24359) * C151911 + C41221 * C6221) * C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C151981 * C3235) *
                      C152325)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C152375 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152371 +
                   (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C151981 * C152357 -
                   (((C42677 + C42678) * C151911 + (C43338 + C43337) * C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C151981 * C152331) *
                      C3375 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152371 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C152375 -
                   (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                    ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                        C152297) *
                       C151981 * C152357 +
                   (((C25494 + C25493) * C6221 + (C25492 + C25491) * C151911) *
                        C152297 +
                    ((C42678 + C42677) * C6221 +
                     (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
                      C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                         C151911) *
                        C152226) *
                       C151981 * C152331) *
                      C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C4241 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152022 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C4241) *
                       C152029 +
                   ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                       C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                          C6221 +
                      (C23636 + C23637) * C151911) *
                         C152297 +
                     ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                        C4241 -
                    (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                         C152226 +
                     (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                        C152068) *
                       C3719) *
                      C152265 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C4241) *
                       C152022 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C4241 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152029 +
                   (((C43065 * C6221 + (C25804 + C25803) * C151911) * C152297 +
                     ((C42408 + C42407) * C6221 +
                      (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                       C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                     ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                         C152297) *
                        C4241) *
                       C3719) *
                      C151946)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152064 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152071 +
                   (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                    ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                       C4913) *
                      C152022 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                       C152071 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C152064 -
                   (((C44511 + C44512) * C151911 + (C45043 + C45044) * C6221) *
                        C152226 +
                    (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                       C4913) *
                      C152029 +
                  ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C152064 -
                   (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                        C152226 +
                    (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                       C152071 +
                   (((C42410 + C42409) * C6221 + (C42408 + C42407) * C151911) *
                        C152297 +
                    ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
                      C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                         C6221 +
                     (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
                      C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                         C151911) *
                        C152226) *
                       C4913) *
                      C3719) *
                 C151935) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C4241 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C152375 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                       C152068 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C4241) *
                      C152371 +
                  ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C4241 -
                   (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                        C152226 +
                    (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                       C152068) *
                      C152357 +
                  ((((C43337 + C43338) * C6221 + (C42678 + C42677) * C151911) *
                        C152297 +
                    ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
                      C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                         C6221 +
                     (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
                      C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C42677 + C42678) * C151911 + (C43338 + C43337) * C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C4241) *
                      C152331) *
                 C151935) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C4241 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C3235 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C4241) *
                       C152026) *
                      C152365 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C4241) *
                       C3235 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C4241 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152026) *
                      C152348 +
                  ((((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                     (C40691 * C6221 + C24347 * C151911) * C152226) *
                        C4241 -
                    (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                     (C41221 * C151911 + C23944 * C6221) * C152297) *
                        C152068) *
                       C3235 +
                   (((C24690 * C6221 + (C24689 + C24688) * C151911) * C152297 +
                     ((C26886 + C26885) * C6221 +
                      (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                       C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                     ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                        C4241) *
                       C152026) *
                      C152315)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152376 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152373 +
                   (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                    ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                       C152360 -
                   (((C44111 + C44112) * C151911 + (C44113 + C44114) * C6221) *
                        C152226 +
                    (C44772 * C151911 + (C44110 + C44109) * C6221) * C152297) *
                       C152337) *
                      C3235 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                       C152373 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C152376 -
                   (((C44511 + C44512) * C151911 + (C45043 + C45044) * C6221) *
                        C152226 +
                    (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                       C152360 +
                   (((C45044 + C45043) * C6221 + (C44512 + C44511) * C151911) *
                        C152297 +
                    ((C23274 * C9577 + C45035 + C45035 + C152296 * C9589 +
                      C23276 * C9578 + C45036 + C45036 + C152198 * C9590) *
                         C6221 +
                     (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
                      C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                         C151911) *
                        C152226) *
                       C152337) *
                      C152026) *
                 C151935) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152064 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152071 +
                    (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                     ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                        C4913) *
                       C3235 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152071 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152064 -
                    (((C44511 + C44512) * C151911 + (C45043 + C45044) * C6221) *
                         C152226 +
                     (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                        C4913) *
                       C152026) *
                      C152265 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152071 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152064 -
                    (((C27101 + C27102) * C151911 + C44772 * C6221) * C152226 +
                     (C40692 * C151911 + C40684 * C6221) * C152297) *
                        C4913) *
                       C3235 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152064 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152071 +
                    ((C44501 * C6221 + (C26886 + C26885) * C151911) * C152297 +
                     ((C44512 + C44511) * C6221 +
                      (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
                       C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                          C151911) *
                         C152226) *
                        C4913) *
                       C152026) *
                      C151946)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C4241 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C3235 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C4241) *
                       C152026) *
                      C152365 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C4241) *
                       C3235 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C4241 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152026) *
                      C152348 +
                  ((((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                     (C40691 * C6221 + C24347 * C151911) * C152226) *
                        C4241 -
                    (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                     (C41221 * C151911 + C23944 * C6221) * C152297) *
                        C152068) *
                       C3235 +
                   (((C24690 * C6221 + (C24689 + C24688) * C151911) * C152297 +
                     ((C26886 + C26885) * C6221 +
                      (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                       C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                     ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                        C4241) *
                       C152026) *
                      C152315)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C4241 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C152375 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                       C152068 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C4241) *
                      C152371 +
                  ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C4241 -
                   (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                        C152226 +
                    (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                       C152068) *
                      C152357 +
                  ((((C43337 + C43338) * C6221 + (C42678 + C42677) * C151911) *
                        C152297 +
                    ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
                      C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                         C6221 +
                     (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
                      C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C42677 + C42678) * C151911 + (C43338 + C43337) * C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C4241) *
                      C152331) *
                 C151935) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C1795 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C1796 +
                   (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + (C25806 + C25805) * C151911) *
                        C152226) *
                       C151981 * C1797 -
                   (((C42677 + C42678) * C151911 +
                     (C23276 * C8252 + C26002 + C26002 + C152198 * C8264 +
                      C23274 * C2163 + C26001 + C26001 + C152296 * C2171) *
                         C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C151981 * C152331) *
                      C152265 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C1796 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C1795 -
                   (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                        C152226 +
                    ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                        C152297) *
                       C151981 * C1797 +
                   (((C25494 + C25493) * C6221 + (C25492 + C25491) * C151911) *
                        C152297 +
                    ((C42678 + C42677) * C6221 +
                     (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
                      C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                         C151911) *
                        C152226) *
                       C151981 * C152331) *
                      C151946)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C152279 -
                   (((C24685 + C24684) * C151911 +
                     (C23276 * C1624 + C24651 + C24651 + C152198 * C1648 +
                      C23274 * C1155 + C24650 + C24650 + C152296 * C1167) *
                         C6221) *
                        C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152026) *
                      C807 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    ((C24684 + C24685) * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152026 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C152279) *
                      C808 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C151981 * C152279 -
                   (((C24688 + C24689) * C151911 + (C24687 + C24686) * C6221) *
                        C152226 +
                    ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                       C151981 * C152026) *
                      C809 +
                  (((C24140 * C6221 + (C24152 + C24151) * C151911) * C152297 +
                    ((C24689 + C24688) * C6221 +
                     (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
                      C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                         C151911) *
                        C152226) *
                       C151981 * C152026 -
                   (((C24358 + C24359) * C151911 + (C23941 + C23940) * C6221) *
                        C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C151981 * C152279) *
                      C152325)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C2325 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C2326 +
                    (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                     ((C44109 + C44110) * C6221 + (C27104 + C27103) * C151911) *
                         C152226) *
                        C152324) *
                       C152279 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C2326 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C2325 -
                    (((C44511 + C44512) * C151911 +
                      (C23276 * C9576 + C27300 + C27300 + C152198 * C9588 +
                       C23274 * C3089 + C27299 + C27299 + C152296 * C3097) *
                          C6221) *
                         C152226 +
                     (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                        C152324) *
                       C152026) *
                      C152265 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C2326 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C2325 -
                    (((C27101 + C27102) * C151911 + (C27103 + C27104) * C6221) *
                         C152226 +
                     (C40692 * C151911 + C40684 * C6221) * C152297) *
                        C152324) *
                       C152279 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C2325 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C2326 +
                    ((C44501 * C6221 + (C26886 + C26885) * C151911) * C152297 +
                     ((C44512 + C44511) * C6221 +
                      (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
                       C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                          C151911) *
                         C152226) *
                        C152324) *
                       C152026) *
                      C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152280 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C1795 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                        C152226) *
                       C152068 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C152280) *
                      C1796 +
                  ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C152280 -
                   (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                        C152226 +
                    (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                       C152068) *
                      C1797 +
                  ((((C43337 + C43338) * C6221 + (C42678 + C42677) * C151911) *
                        C152297 +
                    ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
                      C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                         C6221 +
                     (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
                      C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C42677 + C42678) * C151911 + (C43338 + C43337) * C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C152280) *
                      C152331) *
                 C151935) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152280 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152279 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C23274 * C1620 + C25266 + C25266 + C152296 * C1644 +
                       C23276 * C1625 + C25265 + C25265 + C152198 * C1649) *
                          C6221 +
                      (C26888 + C26887) * C151911) *
                         C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152280) *
                       C152026) *
                      C347 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152280) *
                       C152279 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152280 -
                    (((C26885 + C26886) * C151911 + (C26887 + C26888) * C6221) *
                         C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152026) *
                      C348 +
                  ((((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                     (C40691 * C6221 + C24347 * C151911) * C152226) *
                        C152280 -
                    (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                     (C41221 * C151911 + C23944 * C6221) * C152297) *
                        C152068) *
                       C152279 +
                   (((C24690 * C6221 + (C24689 + C24688) * C151911) * C152297 +
                     ((C26886 + C26885) * C6221 +
                      (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                       C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                     ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                        C152280) *
                       C152026) *
                      C152315)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C2936 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C2937 +
                   (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                    ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                       C2938 -
                   (((C44111 + C44112) * C151911 + (C44113 + C44114) * C6221) *
                        C152226 +
                    (C44772 * C151911 + (C44110 + C44109) * C6221) * C152297) *
                       C152337) *
                      C152279 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                       C2937 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C2936 -
                   (((C44511 + C44512) * C151911 + (C45043 + C45044) * C6221) *
                        C152226 +
                    (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                       C2938 +
                   (((C45044 + C45043) * C6221 + (C44512 + C44511) * C151911) *
                        C152297 +
                    ((C23274 * C9577 + C45035 + C45035 + C152296 * C9589 +
                      C23276 * C9578 + C45036 + C45036 + C152198 * C9590) *
                         C6221 +
                     (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
                      C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                         C151911) *
                        C152226) *
                       C152337) *
                      C152026) *
                 C151935) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                 C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                    C6221 +
                (C23333 + C23334) * C151911) *
                   C152297 +
               ((C23274 * C590 + C23877 + C23877 + C152296 * C614 +
                 C23276 * C1155 + C23876 + C23876 + C152198 * C1167) *
                    C6221 +
                (C23935 + C23934) * C151911) *
                   C152226) *
                  C151981 * C151963 * C129 -
              ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
               ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                   C152297) *
                  C151981 * C151963 * C130 +
              ((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
               ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
                  C151981 * C151963 * C131 -
              (((C24358 + C24359) * C151911 + (C23941 + C23940) * C6221) *
                   C152226 +
               ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                  C151981 * C151963 * C132 +
              ((C23345 * C6221 + (C23342 + C23341) * C151911) * C152297 +
               ((C24359 + C24358) * C6221 +
                (C23274 * C597 + C24352 + C24352 + C152296 * C621 +
                 C23276 * C1160 + C24353 + C24353 + C152198 * C1172) *
                    C151911) *
                   C152226) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                  C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                     C6221 +
                 (C23333 + C23334) * C151911) *
                    C152297 +
                ((C23274 * C590 + C23877 + C23877 + C152296 * C614 +
                  C23276 * C1155 + C23876 + C23876 + C152198 * C1167) *
                     C6221 +
                 (C23935 + C23934) * C151911) *
                    C152226) *
                   C151981 * C152368 -
               (((C24685 + C24684) * C151911 +
                 (C23276 * C1624 + C24651 + C24651 + C152198 * C1648 +
                  C23274 * C1155 + C24650 + C24650 + C152296 * C1167) *
                     C6221) *
                    C152226 +
                ((C23634 + C23635) * C151911 +
                 (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                  C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                     C6221) *
                    C152297) *
                   C151981 * C152352 +
               (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                  C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                     C6221 +
                 (C23636 + C23637) * C151911) *
                    C152297 +
                ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
                  C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                     C6221 +
                 (C25806 + C25805) * C151911) *
                    C152226) *
                   C151981 * C152321) *
                  C347 +
              ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                    C152297 +
                ((C24684 + C24685) * C6221 + C24690 * C151911) * C152226) *
                   C151981 * C152352 -
               ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
                ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                    C152297) *
                   C151981 * C152368 -
               (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                    C152226 +
                ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                    C152297) *
                   C151981 * C152321) *
                  C348 +
              (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
                   C151981 * C152368 -
               (((C24688 + C24689) * C151911 + (C24687 + C24686) * C6221) *
                    C152226 +
                ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                   C151981 * C152352 +
               ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
                ((C25804 + C25803) * C6221 +
                 (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
                  C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                     C151911) *
                    C152226) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C152354 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C151963 * C347 +
          (((C40683 * C6221 + C40691 * C151911) * C152297 +
            (C40690 * C6221 + C23945 * C151911) * C152226) *
               C152354 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C152369 -
           (((C27101 + C27102) * C151911 + (C27103 + C27104) * C6221) *
                C152226 +
            (C40692 * C151911 + C40684 * C6221) * C152297) *
               C152324) *
              C151963 * C348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C152369 -
           (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
            ((C23941 + C23940) * C151911 + C23944 * C6221) * C152297) *
               C152354 +
           ((C23945 * C6221 + (C23943 + C23942) * C151911) * C152297 +
            ((C27102 + C27101) * C6221 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            (C41612 * C6221 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C1346 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C6221) *
               C152297) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C6221 +
            (C23636 + C23637) * C151911) *
               C152297 +
           ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
             C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                C6221 +
            (C25806 + C25805) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C23276 * C8251 + C26004 + C26004 + C152198 * C8263 +
             C23274 * C2164 + C26003 + C26003 + C152296 * C2172) *
                C151911 +
            (C23276 * C8252 + C26002 + C26002 + C152198 * C8264 +
             C23274 * C2163 + C26001 + C26001 + C152296 * C2171) *
                C6221) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C6221) *
               C152297) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C6221 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C6221 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C152354 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C1345 +
          ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
            ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                C152226) *
               C152354 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C152369 -
           (((C23276 * C9575 + C27302 + C27302 + C152198 * C9587 +
              C23274 * C3090 + C27301 + C27301 + C152296 * C3098) *
                 C151911 +
             (C23276 * C9576 + C27300 + C27300 + C152198 * C9588 +
              C23274 * C3089 + C27299 + C27299 + C152296 * C3097) *
                 C6221) *
                C152226 +
            ((C26887 + C26888) * C151911 + (C42404 + C42403) * C6221) *
                C152297) *
               C152324) *
              C1346 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C42405 + C42406) * C6221 + (C25806 + C25805) * C151911) *
                C152226) *
               C152369 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                C152226 +
            ((C25805 + C25806) * C151911 + (C42406 + C42405) * C6221) *
                C152297) *
               C152354 +
           (((C42410 + C42409) * C6221 + (C42408 + C42407) * C151911) *
                C152297 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C6221 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C2326 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C151963 * C152365 +
          (((C40683 * C6221 + C40691 * C151911) * C152297 +
            (C40690 * C6221 + C23945 * C151911) * C152226) *
               C2326 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C2325 -
           (((C27101 + C27102) * C151911 + (C27103 + C27104) * C6221) *
                C152226 +
            (C40692 * C151911 + C40684 * C6221) * C152297) *
               C152324) *
              C151963 * C152348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C2325 -
           (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
            (C41221 * C151911 + C23944 * C6221) * C152297) *
               C2326 +
           ((C23945 * C6221 + (C23943 + C23942) * C151911) * C152297 +
            ((C27102 + C27101) * C6221 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C2326 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C152368 +
          ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
            ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                C152226) *
               C2326 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C2325 -
           (((C23276 * C9575 + C27302 + C27302 + C152198 * C9587 +
              C23274 * C3090 + C27301 + C27301 + C152296 * C3098) *
                 C151911 +
             (C23276 * C9576 + C27300 + C27300 + C152198 * C9588 +
              C23274 * C3089 + C27299 + C27299 + C152296 * C3097) *
                 C6221) *
                C152226 +
            ((C26887 + C26888) * C151911 + (C42404 + C42403) * C6221) *
                C152297) *
               C152324) *
              C152352 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
               C2325 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
               C2326 +
           (((C42410 + C42409) * C6221 + (C42408 + C42407) * C151911) *
                C152297 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C6221 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
              C2556 -
          ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
           (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
              C2557 +
          (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
           ((C44109 + C44110) * C6221 + (C27104 + C27103) * C151911) *
               C152226) *
              C2558 -
          (((C44111 + C44112) * C151911 + (C44113 + C44114) * C6221) * C152226 +
           ((C27103 + C27104) * C151911 + (C44110 + C44109) * C6221) *
               C152297) *
              C2559 +
          (((C44114 + C44113) * C6221 + (C44112 + C44111) * C151911) * C152297 +
           ((C23274 * C17970 + C44093 + C44093 + C152296 * C17978 +
             C23276 * C18703 + C44094 + C44094 + C152198 * C18707) *
                C6221 +
            (C23274 * C17969 + C44095 + C44095 + C152296 * C17977 +
             C23276 * C18704 + C44096 + C44096 + C152198 * C18708) *
                C151911) *
               C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152280 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C1345 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                         C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152280) *
                       C1346 +
                   ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                       C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                          C6221 +
                      (C23636 + C23637) * C151911) *
                         C152297 +
                     ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                        C152280 -
                    (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                         C152226 +
                     (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                        C152068) *
                       C152321) *
                      C152265 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152280) *
                       C1345 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152280 -
                    (((C26885 + C26886) * C151911 + (C26887 + C26888) * C6221) *
                         C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C1346 +
                   (((C43065 * C6221 + (C25804 + C25803) * C151911) * C152297 +
                     ((C42408 + C42407) * C6221 +
                      (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                       C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                     ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                         C152297) *
                        C152280) *
                       C152321) *
                      C151946)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152280 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C151963 * C807 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C152068 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C152280) *
                      C151963 * C808 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C152280 -
                   (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                    (C41221 * C151911 + C23944 * C6221) * C152297) *
                       C152068) *
                      C151963 * C809 +
                  (((C24347 * C6221 + (C24359 + C24358) * C151911) * C152297 +
                    ((C23943 + C23942) * C6221 +
                     (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
                      C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C24358 + C24359) * C151911 + C41221 * C6221) * C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C152280) *
                      C151963 * C152325)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C2936 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C2937 +
                   (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                    ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                       C2938 -
                   (((C44111 + C44112) * C151911 + (C44113 + C44114) * C6221) *
                        C152226 +
                    (C44772 * C151911 + (C44110 + C44109) * C6221) * C152297) *
                       C152337) *
                      C151963 * C152265 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C2937 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C2936 -
                   (((C27101 + C27102) * C151911 + C44772 * C6221) * C152226 +
                    (C40692 * C151911 + C40684 * C6221) * C152297) *
                       C2938 +
                   ((C44771 * C6221 + (C27102 + C27101) * C151911) * C152297 +
                    ((C44112 + C44111) * C6221 +
                     (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
                      C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                         C151911) *
                        C152226) *
                       C152337) *
                      C151963 * C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C23274 * C590 + C23877 + C23877 + C152296 * C614 +
              C23276 * C1155 + C23876 + C23876 + C152198 * C1167) *
                 C6221 +
             (C23935 + C23934) * C151911) *
                C152226) *
               C151981 * C152368 -
           (((C24685 + C24684) * C151911 +
             (C23276 * C1624 + C24651 + C24651 + C152198 * C1648 +
              C23274 * C1155 + C24650 + C24650 + C152296 * C1167) *
                 C6221) *
                C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C347 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            ((C24684 + C24685) * C6221 + C24690 * C151911) * C152226) *
               C151981 * C152352 -
           ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C152368 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
               C151981 * C152368 -
           (((C24688 + C24689) * C151911 + (C24687 + C24686) * C6221) *
                C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C152352 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C23274 * C590 + C23877 + C23877 + C152296 * C614 + C23276 * C1155 +
             C23876 + C23876 + C152198 * C1167) *
                C6221 +
            (C23935 + C23934) * C151911) *
               C152226) *
              C151981 * C151963 * C129 -
          ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
           ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
               C152297) *
              C151981 * C151963 * C130 +
          ((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
           ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C24358 + C24359) * C151911 + (C23941 + C23940) * C6221) * C152226 +
           ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
              C151981 * C151963 * C132 +
          ((C23345 * C6221 + (C23342 + C23341) * C151911) * C152297 +
           ((C24359 + C24358) * C6221 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            (C41612 * C6221 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C1346 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C6221) *
               C152297) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C6221 +
            (C23636 + C23637) * C151911) *
               C152297 +
           ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
             C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                C6221 +
            (C25806 + C25805) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C23276 * C8251 + C26004 + C26004 + C152198 * C8263 +
             C23274 * C2164 + C26003 + C26003 + C152296 * C2172) *
                C151911 +
            (C23276 * C8252 + C26002 + C26002 + C152198 * C8264 +
             C23274 * C2163 + C26001 + C26001 + C152296 * C2171) *
                C6221) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C6221) *
               C152297) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C6221 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C6221 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C2326 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C151963 * C152365 +
          (((C40683 * C6221 + C40691 * C151911) * C152297 +
            (C40690 * C6221 + C23945 * C151911) * C152226) *
               C2326 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C2325 -
           (((C27101 + C27102) * C151911 + (C27103 + C27104) * C6221) *
                C152226 +
            (C40692 * C151911 + C40684 * C6221) * C152297) *
               C152324) *
              C151963 * C152348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C2325 -
           (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
            (C41221 * C151911 + C23944 * C6221) * C152297) *
               C2326 +
           ((C23945 * C6221 + (C23943 + C23942) * C151911) * C152297 +
            ((C27102 + C27101) * C6221 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C2326 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C152368 +
          ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
            ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                C152226) *
               C2326 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C2325 -
           (((C23276 * C9575 + C27302 + C27302 + C152198 * C9587 +
              C23274 * C3090 + C27301 + C27301 + C152296 * C3098) *
                 C151911 +
             (C23276 * C9576 + C27300 + C27300 + C152198 * C9588 +
              C23274 * C3089 + C27299 + C27299 + C152296 * C3097) *
                 C6221) *
                C152226 +
            ((C26887 + C26888) * C151911 + (C42404 + C42403) * C6221) *
                C152297) *
               C152324) *
              C152352 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
               C2325 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
               C2326 +
           (((C42410 + C42409) * C6221 + (C42408 + C42407) * C151911) *
                C152297 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C6221 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C4241 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152279 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C4241) *
                       C152026) *
                      C151940 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C4241) *
                       C152279 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C4241 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152026) *
                      C151949 +
                  ((((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                     (C40691 * C6221 + C24347 * C151911) * C152226) *
                        C4241 -
                    (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                     (C41221 * C151911 + C23944 * C6221) * C152297) *
                        C152068) *
                       C152279 +
                   (((C24690 * C6221 + (C24689 + C24688) * C151911) * C152297 +
                     ((C26886 + C26885) * C6221 +
                      (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                       C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                     ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                        C4241) *
                       C152026) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152064 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152071 +
                    (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                     ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                        C4913) *
                       C152279 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152071 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152064 -
                    (((C44511 + C44512) * C151911 + (C45043 + C45044) * C6221) *
                         C152226 +
                     (C44506 * C151911 + (C42404 + C42403) * C6221) * C152297) *
                        C4913) *
                       C152026) *
                      C3375 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152071 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152064 -
                    (((C27101 + C27102) * C151911 + C44772 * C6221) * C152226 +
                     (C40692 * C151911 + C40684 * C6221) * C152297) *
                        C4913) *
                       C152279 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152064 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152071 +
                    ((C44501 * C6221 + (C26886 + C26885) * C151911) * C152297 +
                     ((C44512 + C44511) * C6221 +
                      (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
                       C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                          C151911) *
                         C152226) *
                        C4913) *
                       C152026) *
                      C151946)) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C4241 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152368 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C4241) *
                       C152352 +
                   ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                       C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                          C6221 +
                      (C23636 + C23637) * C151911) *
                         C152297 +
                     ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                        C4241 -
                    (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                         C152226 +
                     (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                        C152068) *
                       C152321) *
                      C3375 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C4241) *
                       C152368 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C4241 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152352 +
                   (((C43065 * C6221 + (C25804 + C25803) * C151911) * C152297 +
                     ((C42408 + C42407) * C6221 +
                      (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                       C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                     ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                         C152297) *
                        C4241) *
                       C152321) *
                      C151946)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C4241 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C151963 * C152374 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C152068 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C4241) *
                      C151963 * C152367 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C4241 -
                   (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                    (C41221 * C151911 + C23944 * C6221) * C152297) *
                       C152068) *
                      C151963 * C152350 +
                  (((C24347 * C6221 + (C24359 + C24358) * C151911) * C152297 +
                    ((C23943 + C23942) * C6221 +
                     (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
                      C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C24358 + C24359) * C151911 + C41221 * C6221) * C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C4241) *
                      C151963 * C152325)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152376 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152373 +
                   (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                    ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                       C152360 -
                   (((C44111 + C44112) * C151911 + (C44113 + C44114) * C6221) *
                        C152226 +
                    (C44772 * C151911 + (C44110 + C44109) * C6221) * C152297) *
                       C152337) *
                      C151963 * C3375 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C152373 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C152376 -
                   (((C27101 + C27102) * C151911 + C44772 * C6221) * C152226 +
                    (C40692 * C151911 + C40684 * C6221) * C152297) *
                       C152360 +
                   ((C44771 * C6221 + (C27102 + C27101) * C151911) * C152297 +
                    ((C44112 + C44111) * C6221 +
                     (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
                      C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                         C151911) *
                        C152226) *
                       C152337) *
                      C151963 * C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152064 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152071 +
                   (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
                    ((C44109 + C44110) * C6221 + C44771 * C151911) * C152226) *
                       C4913) *
                      C151963 * C151940 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C152071 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C152064 -
                   (((C27101 + C27102) * C151911 + C44772 * C6221) * C152226 +
                    (C40692 * C151911 + C40684 * C6221) * C152297) *
                       C4913) *
                      C151963 * C151949 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C152064 -
                   (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                    (C41221 * C151911 + C23944 * C6221) * C152297) *
                       C152071 +
                   ((C23945 * C6221 + (C23943 + C23942) * C151911) * C152297 +
                    ((C27102 + C27101) * C6221 +
                     (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
                      C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                         C151911) *
                        C152226) *
                       C4913) *
                      C151963 * C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C4241 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C151963 * C152374 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C152068 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C4241) *
                      C151963 * C152367 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C4241 -
                   (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                    (C41221 * C151911 + C23944 * C6221) * C152297) *
                       C152068) *
                      C151963 * C152350 +
                  (((C24347 * C6221 + (C24359 + C24358) * C151911) * C152297 +
                    ((C23943 + C23942) * C6221 +
                     (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
                      C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C24358 + C24359) * C151911 + C41221 * C6221) * C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C4241) *
                      C151963 * C152325)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C4241 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152368 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + C44501 * C151911) * C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C4241) *
                       C152352 +
                   ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                       C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                          C6221 +
                      (C23636 + C23637) * C151911) *
                         C152297 +
                     ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                        C4241 -
                    (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                         C152226 +
                     (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                        C152068) *
                       C152321) *
                      C3375 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C4241) *
                       C152368 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C4241 -
                    (((C26885 + C26886) * C151911 + C44506 * C6221) * C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152352 +
                   (((C43065 * C6221 + (C25804 + C25803) * C151911) * C152297 +
                     ((C42408 + C42407) * C6221 +
                      (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                       C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                     ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                         C152297) *
                        C4241) *
                       C152321) *
                      C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C152279 -
                   (((C24685 + C24684) * C151911 +
                     (C23276 * C1624 + C24651 + C24651 + C152198 * C1648 +
                      C23274 * C1155 + C24650 + C24650 + C152296 * C1167) *
                         C6221) *
                        C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C152026) *
                      C807 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    ((C24684 + C24685) * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C152026 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C152279) *
                      C808 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C151981 * C152279 -
                   (((C24688 + C24689) * C151911 + (C24687 + C24686) * C6221) *
                        C152226 +
                    ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                       C151981 * C152026) *
                      C809 +
                  (((C24140 * C6221 + (C24152 + C24151) * C151911) * C152297 +
                    ((C24689 + C24688) * C6221 +
                     (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
                      C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                         C151911) *
                        C152226) *
                       C151981 * C152026 -
                   (((C24358 + C24359) * C151911 + (C23941 + C23940) * C6221) *
                        C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C151981 * C152279) *
                      C152325)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C151981 * C1795 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C151981 * C1796 +
                   (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + (C25806 + C25805) * C151911) *
                        C152226) *
                       C151981 * C1797 -
                   (((C42677 + C42678) * C151911 +
                     (C23276 * C8252 + C26002 + C26002 + C152198 * C8264 +
                      C23274 * C2163 + C26001 + C26001 + C152296 * C2171) *
                         C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C151981 * C152331) *
                      C152265 +
                  ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                        C152297 +
                    (C41612 * C6221 + C24690 * C151911) * C152226) *
                       C151981 * C1796 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C151981 * C1795 -
                   (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                        C152226 +
                    ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                        C152297) *
                       C151981 * C1797 +
                   (((C25494 + C25493) * C6221 + (C25492 + C25491) * C151911) *
                        C152297 +
                    ((C42678 + C42677) * C6221 +
                     (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
                      C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                         C151911) *
                        C152226) *
                       C151981 * C152331) *
                      C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152280 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C152279 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C23274 * C1620 + C25266 + C25266 + C152296 * C1644 +
                       C23276 * C1625 + C25265 + C25265 + C152198 * C1649) *
                          C6221 +
                      (C26888 + C26887) * C151911) *
                         C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152280) *
                       C152026) *
                      C347 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152280) *
                       C152279 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152280 -
                    (((C26885 + C26886) * C151911 + (C26887 + C26888) * C6221) *
                         C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C152026) *
                      C348 +
                  ((((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                     (C40691 * C6221 + C24347 * C151911) * C152226) *
                        C152280 -
                    (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                     (C41221 * C151911 + C23944 * C6221) * C152297) *
                        C152068) *
                       C152279 +
                   (((C24690 * C6221 + (C24689 + C24688) * C151911) * C152297 +
                     ((C26886 + C26885) * C6221 +
                      (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
                       C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
                     ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
                        C152280) *
                       C152026) *
                      C152315)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152280 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C1795 +
                  ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                    ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                        C152226) *
                       C152068 -
                   ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                    ((C23634 + C23635) * C151911 +
                     (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                      C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                         C6221) *
                        C152297) *
                       C152280) *
                      C1796 +
                  ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                      C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                         C6221 +
                     (C23636 + C23637) * C151911) *
                        C152297 +
                    ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                       C152280 -
                   (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                        C152226 +
                    (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                       C152068) *
                      C1797 +
                  ((((C43337 + C43338) * C6221 + (C42678 + C42677) * C151911) *
                        C152297 +
                    ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
                      C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                         C6221 +
                     (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
                      C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C42677 + C42678) * C151911 + (C43338 + C43337) * C6221) *
                        C152226 +
                    ((C25493 + C25494) * C151911 +
                     (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
                      C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                         C6221) *
                        C152297) *
                       C152280) *
                      C152331) *
                 C151935) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C23274 * C590 + C23877 + C23877 + C152296 * C614 +
              C23276 * C1155 + C23876 + C23876 + C152198 * C1167) *
                 C6221 +
             (C23935 + C23934) * C151911) *
                C152226) *
               C151981 * C152368 -
           (((C24685 + C24684) * C151911 +
             (C23276 * C1624 + C24651 + C24651 + C152198 * C1648 +
              C23274 * C1155 + C24650 + C24650 + C152296 * C1167) *
                 C6221) *
                C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C347 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            ((C24684 + C24685) * C6221 + C24690 * C151911) * C152226) *
               C151981 * C152352 -
           ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C152368 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
               C151981 * C152368 -
           (((C24688 + C24689) * C151911 + (C24687 + C24686) * C6221) *
                C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C152352 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C23274 * C590 + C23877 + C23877 + C152296 * C614 + C23276 * C1155 +
             C23876 + C23876 + C152198 * C1167) *
                C6221 +
            (C23935 + C23934) * C151911) *
               C152226) *
              C151981 * C151963 * C129 -
          ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
           ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
               C152297) *
              C151981 * C151963 * C130 +
          ((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
           ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C24358 + C24359) * C151911 + (C23941 + C23940) * C6221) * C152226 +
           ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
              C151981 * C151963 * C132 +
          ((C23345 * C6221 + (C23342 + C23341) * C151911) * C152297 +
           ((C24359 + C24358) * C6221 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C152354 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C151963 * C347 +
          (((C40683 * C6221 + C40691 * C151911) * C152297 +
            (C40690 * C6221 + C23945 * C151911) * C152226) *
               C152354 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C152369 -
           (((C27101 + C27102) * C151911 + (C27103 + C27104) * C6221) *
                C152226 +
            (C40692 * C151911 + C40684 * C6221) * C152297) *
               C152324) *
              C151963 * C348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C152369 -
           (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
            ((C23941 + C23940) * C151911 + C23944 * C6221) * C152297) *
               C152354 +
           ((C23945 * C6221 + (C23943 + C23942) * C151911) * C152297 +
            ((C27102 + C27101) * C6221 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            (C41612 * C6221 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C1346 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C6221) *
               C152297) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C6221 +
            (C23636 + C23637) * C151911) *
               C152297 +
           ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
             C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                C6221 +
            (C25806 + C25805) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C23276 * C8251 + C26004 + C26004 + C152198 * C8263 +
             C23274 * C2164 + C26003 + C26003 + C152296 * C2172) *
                C151911 +
            (C23276 * C8252 + C26002 + C26002 + C152198 * C8264 +
             C23274 * C2163 + C26001 + C26001 + C152296 * C2171) *
                C6221) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C6221) *
               C152297) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C6221 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C6221 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
               C152354 +
           (((C40704 + C40703) * C6221 + C40690 * C151911) * C152297 +
            ((C23274 * C2564 + C26570 + C26570 + C152296 * C2580 +
              C23276 * C3089 + C26569 + C26569 + C152198 * C3097) *
                 C6221 +
             (C27104 + C27103) * C151911) *
                C152226) *
               C152324) *
              C1345 +
          ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
            ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                C152226) *
               C152354 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C152369 -
           (((C23276 * C9575 + C27302 + C27302 + C152198 * C9587 +
              C23274 * C3090 + C27301 + C27301 + C152296 * C3098) *
                 C151911 +
             (C23276 * C9576 + C27300 + C27300 + C152198 * C9588 +
              C23274 * C3089 + C27299 + C27299 + C152296 * C3097) *
                 C6221) *
                C152226 +
            ((C26887 + C26888) * C151911 + (C42404 + C42403) * C6221) *
                C152297) *
               C152324) *
              C1346 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C42405 + C42406) * C6221 + (C25806 + C25805) * C151911) *
                C152226) *
               C152369 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                C152226 +
            ((C25805 + C25806) * C151911 + (C42406 + C42405) * C6221) *
                C152297) *
               C152354 +
           (((C42410 + C42409) * C6221 + (C42408 + C42407) * C151911) *
                C152297 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C6221 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                      C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                         C6221 +
                     (C23333 + C23334) * C151911) *
                        C152297 +
                    ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                       C152280 -
                   ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                    (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                       C152068) *
                      C151963 * C807 +
                  (((C40683 * C6221 + C40691 * C151911) * C152297 +
                    (C40690 * C6221 + C23945 * C151911) * C152226) *
                       C152068 -
                   ((C23944 * C151911 + C40689 * C6221) * C152226 +
                    ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                        C152297) *
                       C152280) *
                      C151963 * C808 +
                  (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
                    (C40691 * C6221 + C24347 * C151911) * C152226) *
                       C152280 -
                   (((C23942 + C23943) * C151911 + C40692 * C6221) * C152226 +
                    (C41221 * C151911 + C23944 * C6221) * C152297) *
                       C152068) *
                      C151963 * C809 +
                  (((C24347 * C6221 + (C24359 + C24358) * C151911) * C152297 +
                    ((C23943 + C23942) * C6221 +
                     (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
                      C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                         C151911) *
                        C152226) *
                       C152068 -
                   (((C24358 + C24359) * C151911 + C41221 * C6221) * C152226 +
                    ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
                       C152280) *
                      C151963 * C152325)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                       C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                          C6221 +
                      (C23333 + C23334) * C151911) *
                         C152297 +
                     ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
                        C152280 -
                    ((C40684 * C151911 + (C40703 + C40704) * C6221) * C152226 +
                     (C40689 * C151911 + (C40702 + C40701) * C6221) * C152297) *
                        C152068) *
                       C1345 +
                   ((((C41619 + C41620) * C6221 + C41612 * C151911) * C152297 +
                     ((C42403 + C42404) * C6221 + (C26888 + C26887) * C151911) *
                         C152226) *
                        C152068 -
                    ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
                     ((C23634 + C23635) * C151911 +
                      (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                       C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                          C6221) *
                         C152297) *
                        C152280) *
                       C1346 +
                   ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                       C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                          C6221 +
                      (C23636 + C23637) * C151911) *
                         C152297 +
                     ((C42405 + C42406) * C6221 + C43065 * C151911) * C152226) *
                        C152280 -
                    (((C42407 + C42408) * C151911 + (C42409 + C42410) * C6221) *
                         C152226 +
                     (C43066 * C151911 + (C42406 + C42405) * C6221) * C152297) *
                        C152068) *
                       C152321) *
                      C152265 +
                  ((((C40683 * C6221 + C40691 * C151911) * C152297 +
                     (C40690 * C6221 + C23945 * C151911) * C152226) *
                        C152068 -
                    ((C23944 * C151911 + C40689 * C6221) * C152226 +
                     ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                         C152297) *
                        C152280) *
                       C1345 +
                   ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                         C152297 +
                     (C41612 * C6221 + C24690 * C151911) * C152226) *
                        C152280 -
                    (((C26885 + C26886) * C151911 + (C26887 + C26888) * C6221) *
                         C152226 +
                     (C41614 * C151911 + C41613 * C6221) * C152297) *
                        C152068) *
                       C1346 +
                   (((C43065 * C6221 + (C25804 + C25803) * C151911) * C152297 +
                     ((C42408 + C42407) * C6221 +
                      (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                       C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                          C151911) *
                         C152226) *
                        C152068 -
                    (((C25803 + C25804) * C151911 + C43066 * C6221) * C152226 +
                     ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                         C152297) *
                        C152280) *
                       C152321) *
                      C151946)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C23274 * C590 + C23877 + C23877 + C152296 * C614 + C23276 * C1155 +
             C23876 + C23876 + C152198 * C1167) *
                C6221 +
            (C23935 + C23934) * C151911) *
               C152226) *
              C151981 * C151963 * C129 -
          ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
           ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
               C152297) *
              C151981 * C151963 * C130 +
          ((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
           ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C24358 + C24359) * C151911 + (C23941 + C23940) * C6221) * C152226 +
           ((C23340 + C23339) * C151911 + C23344 * C6221) * C152297) *
              C151981 * C151963 * C132 +
          ((C23345 * C6221 + (C23342 + C23341) * C151911) * C152297 +
           ((C24359 + C24358) * C6221 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C23274 * C590 + C23877 + C23877 + C152296 * C614 +
              C23276 * C1155 + C23876 + C23876 + C152198 * C1167) *
                 C6221 +
             (C23935 + C23934) * C151911) *
                C152226) *
               C151981 * C152368 -
           (((C24685 + C24684) * C151911 +
             (C23276 * C1624 + C24651 + C24651 + C152198 * C1648 +
              C23274 * C1155 + C24650 + C24650 + C152296 * C1167) *
                 C6221) *
                C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C347 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            ((C24684 + C24685) * C6221 + C24690 * C151911) * C152226) *
               C151981 * C152352 -
           ((C23944 * C151911 + (C23934 + C23935) * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C152368 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            ((C23933 + C23932) * C6221 + C24347 * C151911) * C152226) *
               C151981 * C152368 -
           (((C24688 + C24689) * C151911 + (C24687 + C24686) * C6221) *
                C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C152352 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C6221 +
             (C23333 + C23334) * C151911) *
                C152297 +
            ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C6221) *
                C152297) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C6221 +
             (C23636 + C23637) * C151911) *
                C152297 +
            ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
              C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                 C6221 +
             (C25806 + C25805) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C6221 + (C23633 + C23632) * C151911) *
                C152297 +
            (C41612 * C6221 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C6221) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C6221) *
                C152297) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + (C25805 + C25806) * C6221) *
                C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C6221) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C6221 + (C23338 + C23337) * C151911) * C152297 +
            (C40691 * C6221 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C6221) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C6221) * C152297) *
               C151981 * C1346 +
           ((C23645 * C6221 + (C23643 + C23642) * C151911) * C152297 +
            ((C25804 + C25803) * C6221 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C6221 +
            (C23333 + C23334) * C151911) *
               C152297 +
           ((C40701 + C40702) * C6221 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C6221) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C6221) *
               C152297) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C6221 +
            (C23636 + C23637) * C151911) *
               C152297 +
           ((C23274 * C1624 + C25272 + C25272 + C152296 * C1648 +
             C23276 * C2163 + C25271 + C25271 + C152198 * C2171) *
                C6221 +
            (C25806 + C25805) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C23276 * C8251 + C26004 + C26004 + C152198 * C8263 +
             C23274 * C2164 + C26003 + C26003 + C152296 * C2172) *
                C151911 +
            (C23276 * C8252 + C26002 + C26002 + C152198 * C8264 +
             C23274 * C2163 + C26001 + C26001 + C152296 * C2171) *
                C6221) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C6221) *
               C152297) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C6221 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C6221 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152022 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152029 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C3719) *
              C151940 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152029 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152022 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C3719) *
              C151949 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152022 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152029 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152022 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152029 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C3719) *
              C151940 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152029 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152022 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C3719) *
              C151949 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C152022 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C152029 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C152022 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C151981 * C3719) *
              C151940 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + C18302 * C14889) *
               C151981 * C152029 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152022 -
           ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C3719) *
              C151949 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C152022 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152029 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152022 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C152280 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C3719) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C152022 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152022 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C152280 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C3719) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C152022 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152029 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152280 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152022 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152280) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
              C434 * C151911) *
                 C14887 +
             (C16697 + C16669) * C14888 + C16701 * C14889) *
                C152280 -
            ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
             (C16669 + C16697) * C14887) *
                C152068) *
               C3719) *
              C3375 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152280) *
               C152022 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C152280 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152029 +
           (((C17197 + C17198) * C14887 + (C17199 + C17200) * C14888 +
             (C16694 * C6221 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C14889) *
                C152068 -
            ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
             (C435 * C151911 + C434 * C6221) * C14887) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C3235 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C152026) *
                  C152374 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C152026 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C3235) *
                  C152367 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C151981 * C3235 -
               (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                   C152162 * C151981 * C152026) *
                  C152350 +
              ((C431 * C122 + C437 * C123 + C820 * C124 +
                (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
                   C152162 * C151981 * C152026 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152162 * C151981 * C3235) *
                  C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C152375 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C152371 +
               ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C151981 * C152357 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                   C152162 * C151981 * C152331) *
                  C3375 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C152371 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C152375 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152162 * C151981 * C152357 +
               (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
                   C152162 * C151981 * C152331) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152369 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152354 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C152324) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152354 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152369 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152354 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152369 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C152324) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152369 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152354 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C3235 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152026 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C3235 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C6221 +
            (C6223 * C358 + C7112 + C7112 + C6218 * C382 + C6225 * C359 +
             C7113 + C7113 + C6219 * C383 + C6227 * C1801 + C7114 + C7114 +
             C6220 * C1803) *
                C151911) *
               C152162 * C151981 * C152026 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152375 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152357 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152371 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152375 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C6221 +
            (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 + C6225 * C1445 +
             C8490 + C8490 + C6219 * C1461 + C6227 * C8479 + C8491 + C8491 +
             C6220 * C8481) *
                C151911) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152369 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152354 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C152324) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152354 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152369 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152354 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152369 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C152324) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152369 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152354 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C3235 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + C18302 * C14889) *
               C151981 * C152026 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C3235 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C6221 + C437 * C151911) * C14887 +
            (C1198 * C6221 + C1199 * C151911) * C14888 +
            (C2804 * C6221 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C14889) *
               C151981 * C152026 -
           ((C15774 + C15773) * C14889 + (C15772 + C15771) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C152375 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C151981 * C152357 -
           ((C17401 + C17411) * C14889 + (C17398 + C17410) * C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + C18302 * C14889) *
               C151981 * C152371 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152375 -
           ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152357 +
           ((C1820 * C6221 + C1819 * C151911) * C14887 +
            (C16906 * C6221 +
             (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C151911) *
                C14888 +
            (C16905 * C6221 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152369 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152354 +
            (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
                C152324) *
               C3235 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152354 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152369 -
            ((C18711 + C18719) * C14889 + (C16663 + C16696) * C14888 +
             C16664 * C14887) *
                C152324) *
               C152026) *
              C3375 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152354 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152369 -
            ((C18507 + C18508) * C14889 + (C15353 + C15352) * C14888 +
             C15366 * C14887) *
                C152324) *
               C3235 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C152369 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152354 +
            (C18302 * C14887 + (C18304 + C18303) * C14888 +
             (C18308 * C6221 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C14889) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C152280 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C152280 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152280 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C3235 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152280) *
               C152026) *
              C151940 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152280) *
               C3235 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C152280 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C6221 + C195 * C151911) * C14887 +
             (C15356 + C15357) * C14888 + C15368 * C14889) *
                C152280 -
            ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
             (C15357 + C15356) * C14887) *
                C152068) *
               C3235 +
           (((C16079 + C16080) * C14887 + (C16081 + C16082) * C14888 +
             (C16094 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C14889) *
                C152068 -
            ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
             (C431 * C151911 + C432 * C6221) * C14887) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152375 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152371 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152357 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C151981 * C152331) *
              C3375 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152371 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152375 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152357 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C3235 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152026) *
              C152374 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152026 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C3235) *
              C152367 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C3235 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C152026) *
              C152350 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
               C152162 * C151981 * C152026 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C3235 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152026 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C3235 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C6221 +
            (C6223 * C358 + C7112 + C7112 + C6218 * C382 + C6225 * C359 +
             C7113 + C7113 + C6219 * C383 + C6227 * C1801 + C7114 + C7114 +
             C6220 * C1803) *
                C151911) *
               C152162 * C151981 * C152026 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152375 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152357 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152371 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152375 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C6221 +
            (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 + C6225 * C1445 +
             C8490 + C8490 + C6219 * C1461 + C6227 * C8479 + C8491 + C8491 +
             C6220 * C8481) *
                C151911) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C3235 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + C18302 * C14889) *
               C151981 * C152026 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C3235 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C6221 + C437 * C151911) * C14887 +
            (C1198 * C6221 + C1199 * C151911) * C14888 +
            (C2804 * C6221 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C14889) *
               C151981 * C152026 -
           ((C15774 + C15773) * C14889 + (C15772 + C15771) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C152375 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C151981 * C152357 -
           ((C17401 + C17411) * C14889 + (C17398 + C17410) * C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + C18302 * C14889) *
               C151981 * C152371 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152375 -
           ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152357 +
           ((C1820 * C6221 + C1819 * C151911) * C14887 +
            (C16906 * C6221 +
             (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C151911) *
                C14888 +
            (C16905 * C6221 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152022 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C4241 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C3719) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152022 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152022 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C3719) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152022 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152029 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C4241 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152022 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C4241) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
              C434 * C151911) *
                 C14887 +
             (C16697 + C16669) * C14888 + C16701 * C14889) *
                C4241 -
            ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
             (C16669 + C16697) * C14887) *
                C152068) *
               C3719) *
              C152265 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C4241) *
               C152022 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C4241 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152029 +
           (((C17197 + C17198) * C14887 + (C17199 + C17200) * C14888 +
             (C16694 * C6221 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C14889) *
                C152068 -
            ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
             (C435 * C151911 + C434 * C6221) * C14887) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152064 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152071 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C4913) *
              C152022 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152071 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152064 -
           ((C9914 + C9915 + C9916) * C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C4913) *
              C152029 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152064 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152071 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152064 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152071 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C4913) *
              C152022 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152071 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152064 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C4913) *
              C152029 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C152064 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152071 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
               C152162 * C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152064 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152071 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
               C4913) *
              C152022 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            C18710 * C14889) *
               C152071 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C152064 -
           ((C18711 + C18719) * C14889 + (C16663 + C16696) * C14888 +
            C16664 * C14887) *
               C4913) *
              C152029 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C152064 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152071 +
           (C16701 * C14887 + (C16700 + C16699) * C14888 +
            ((C134 * C9578 + C16679 + C16679 + C152146 * C9590) * C6221 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C14889) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152162 * C4241 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                    C152162 * C152068) *
                   C3235 +
               (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152162 * C152068 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                    C152162 * C4241) *
                   C152026) *
                  C152365 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152162 * C152068 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152162 * C4241) *
                   C3235 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152162 * C4241 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152162 * C152068) *
                   C152026) *
                  C152348 +
              (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                    C152162 * C4241 -
                (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                    C152162 * C152068) *
                   C3235 +
               ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
                 (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                    C152162 * C152068 -
                (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                    C152162 * C4241) *
                   C152026) *
                  C152315) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C4241 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C152068) *
                  C152375 +
              (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152162 * C152068 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C4241) *
                  C152371 +
              (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C4241 -
               (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                   C152162 * C152068) *
                  C152357 +
              (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
                (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
                (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
                (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
                   C152162 * C152068 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                   C152162 * C4241) *
                  C152331) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152376 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152373 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152360 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C3235 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152373 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152376 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C152360 +
           ((C134 * C3089 + C3102 + C3102 + C152146 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152146 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152146 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C125) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C4241 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C152375 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C4241 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C152357 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152376 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152373 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152360 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C3235 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152373 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152376 -
           ((C9914 + C9915 + C9916) * C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152360 +
           ((C6223 * C3089 + C10332 + C10332 + C6218 * C3097 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6227 * C10325 + C10334 +
             C10334 + C6220 * C10329) *
                C6221 +
            (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
             C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
             C10337 + C6220 * C10330) *
                C151911) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C4241 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C3235 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C4241) *
               C152026) *
              C152365 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C4241) *
               C3235 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C4241 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C6221 + C195 * C151911) * C14887 +
             (C15356 + C15357) * C14888 + C15368 * C14889) *
                C4241 -
            ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
             (C15357 + C15356) * C14887) *
                C152068) *
               C3235 +
           (((C16079 + C16080) * C14887 + (C16081 + C16082) * C14888 +
             (C16094 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C14889) *
                C152068 -
            ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
             (C431 * C151911 + C432 * C6221) * C14887) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C4241 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C152375 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            C18710 * C14889) *
               C152068 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C4241 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152068) *
              C152357 +
          (((C17410 + C17398) * C14887 + (C17411 + C17401) * C14888 +
            ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C6221 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C14889) *
               C152068 -
           ((C17401 + C17411) * C14889 + (C17398 + C17410) * C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152376 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152373 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
               C152360 -
           ((C18004 + C18005) * C14889 + (C17985 + C18003) * C14888 +
            C17982 * C14887) *
               C152337) *
              C3235 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            C18710 * C14889) *
               C152373 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C152376 -
           ((C18711 + C18719) * C14889 + (C16663 + C16696) * C14888 +
            C16664 * C14887) *
               C152360 +
           (C18710 * C14887 + (C18719 + C18711) * C14888 +
            ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C6221 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151911) *
                C14889) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152064 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152071 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C4913) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152071 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152064 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C4913) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152071 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152064 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C4913) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152064 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152071 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152064 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152071 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C4913) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152071 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152064 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C4913) *
               C152026) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152071 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152064 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C4913) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152064 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152071 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152064 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152071 +
            (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
                C4913) *
               C3235 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152071 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152064 -
            ((C18711 + C18719) * C14889 + (C16663 + C16696) * C14888 +
             C16664 * C14887) *
                C4913) *
               C152026) *
              C152265 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152071 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152064 -
            ((C18507 + C18508) * C14889 + (C15353 + C15352) * C14888 +
             C15366 * C14887) *
                C4913) *
               C3235 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C152064 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152071 +
            (C18302 * C14887 + (C18304 + C18303) * C14888 +
             (C18308 * C6221 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C14889) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C152375 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152068 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C4241) *
              C152371 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C4241 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152068) *
              C152357 +
          (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
               C152162 * C152068 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C4241 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C152375 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C4241 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C152357 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C4241 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C3235 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C4241) *
               C152026) *
              C152365 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C4241) *
               C3235 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C4241 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C6221 + C195 * C151911) * C14887 +
             (C15356 + C15357) * C14888 + C15368 * C14889) *
                C4241 -
            ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
             (C15357 + C15356) * C14887) *
                C152068) *
               C3235 +
           (((C16079 + C16080) * C14887 + (C16081 + C16082) * C14888 +
             (C16094 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C14889) *
                C152068 -
            ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
             (C431 * C151911 + C432 * C6221) * C14887) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C4241 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C152375 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            C18710 * C14889) *
               C152068 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C4241 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152068) *
              C152357 +
          (((C17410 + C17398) * C14887 + (C17411 + C17401) * C14888 +
            ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C6221 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C14889) *
               C152068 -
           ((C17401 + C17411) * C14889 + (C17398 + C17410) * C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C152279 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C152026) *
                  C807 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C152026 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C152279) *
                  C808 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C151981 * C152279 -
               (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                   C152162 * C151981 * C152026) *
                  C809 +
              ((C431 * C122 + C437 * C123 + C820 * C124 +
                (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
                   C152162 * C151981 * C152026 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152162 * C151981 * C152279) *
                  C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C1795 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C1796 +
               ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C151981 * C1797 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                   C152162 * C151981 * C152331) *
                  C152265 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C1796 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C1795 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152162 * C151981 * C1797 +
               (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
                   C152162 * C151981 * C152331) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C2325 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C2326 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C152324) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C2326 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C2325 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C2326 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C2325 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C152324) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C2325 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C2326 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152279 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152026 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152279 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C6221 +
            (C6223 * C358 + C7112 + C7112 + C6218 * C382 + C6225 * C359 +
             C7113 + C7113 + C6219 * C383 + C6227 * C1801 + C7114 + C7114 +
             C6220 * C1803) *
                C151911) *
               C152162 * C151981 * C152026 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1795 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C1797 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1796 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1795 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C6221 +
            (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 + C6225 * C1445 +
             C8490 + C8490 + C6219 * C1461 + C6227 * C8479 + C8491 + C8491 +
             C6220 * C8481) *
                C151911) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C2325 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C2326 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C152324) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C2326 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C2325 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C2326 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C2325 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C152324) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C2325 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C2326 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C152279 -
           ((C2806 * C151911 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C6221) *
                C14889 +
            (C1196 * C151911 +
             (C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C6221) *
                C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152026) *
              C807 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C1196 * C6221 + C1197 * C151911) * C14888 +
            (C2806 * C6221 + C2805 * C151911) * C14889) *
               C151981 * C152026 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152279) *
              C808 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C152279 -
           ((C2804 * C151911 + C2805 * C6221) * C14889 +
            (C1198 * C151911 + C1197 * C6221) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152026) *
              C809 +
          (((C431 * C6221 + C437 * C151911) * C14887 +
            (C1198 * C6221 + C1199 * C151911) * C14888 +
            (C2804 * C6221 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C14889) *
               C151981 * C152026 -
           ((C675 * C151911 + C673 * C6221) * C14889 +
            (C674 * C151911 + C668 * C6221) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C1795 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C151981 * C1797 -
           ((C16905 * C151911 +
             (C134 * C8250 + C16438 + C16438 + C152146 * C8262) * C6221) *
                C14889 +
            (C16906 * C151911 +
             (C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C6221) *
                C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
               C151981 * C1796 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C1795 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C1797 +
           ((C1820 * C6221 + C1819 * C151911) * C14887 +
            (C16906 * C6221 +
             (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C151911) *
                C14888 +
            (C16905 * C6221 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C2325 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C2326 +
            (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
                C152324) *
               C152279 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             (C16696 + C16663) * C14889) *
                C2326 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C2325 -
            ((C18308 * C151911 +
              (C134 * C9577 + C16666 + C16666 + C152146 * C9589) * C6221) *
                 C14889 +
             (C16663 + C16696) * C14888 + C16664 * C14887) *
                C152324) *
               C152026) *
              C152265 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             (C15352 + C15353) * C14889) *
                C2326 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C2325 -
            ((C15378 * C151911 + C15377 * C6221) * C14889 +
             (C15353 + C15352) * C14888 + C15366 * C14887) *
                C152324) *
               C152279 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C2325 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C2326 +
            (C18302 * C14887 + (C18304 + C18303) * C14888 +
             (C18308 * C6221 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C14889) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152162 * C152280 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                    C152162 * C152068) *
                   C152279 +
               (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152162 * C152068 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                    C152162 * C152280) *
                   C152026) *
                  C347 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152162 * C152068 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152162 * C152280) *
                   C152279 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152162 * C152280 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152162 * C152068) *
                   C152026) *
                  C348 +
              (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                    C152162 * C152280 -
                (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                    C152162 * C152068) *
                   C152279 +
               ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
                 (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                    C152162 * C152068 -
                (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                    C152162 * C152280) *
                   C152026) *
                  C152315) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C152280 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C152068) *
                  C1795 +
              (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152162 * C152068 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C152280) *
                  C1796 +
              (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C152280 -
               (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                   C152162 * C152068) *
                  C1797 +
              (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
                (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
                (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
                (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
                   C152162 * C152068 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                   C152162 * C152280) *
                  C152331) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2937 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C152279 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C2937 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C2936 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C2938 +
           ((C134 * C3089 + C3102 + C3102 + C152146 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152146 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152146 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C125) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C152280 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C1795 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152280 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C1797 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2936 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2937 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C2938 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C152279 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C2937 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C2936 -
           ((C9914 + C9915 + C9916) * C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C2938 +
           ((C6223 * C3089 + C10332 + C10332 + C6218 * C3097 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6227 * C10325 + C10334 +
             C10334 + C6220 * C10329) *
                C6221 +
            (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
             C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
             C10337 + C6220 * C10330) *
                C151911) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152280 -
            ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152279 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             ((C134 * C3089 + C3102 + C3102 + C152146 * C3097) * C6221 +
              C16093 * C151911) *
                 C14889) *
                C152068 -
            ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152280) *
               C152026) *
              C347 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             (C15352 + C15353) * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152280) *
               C152279 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
                C152280 -
            ((C16094 * C151911 + C16093 * C6221) * C14889 +
             (C16076 + C16075) * C14888 + (C16074 + C16073) * C14887) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C6221 + C195 * C151911) * C14887 +
             (C15356 + C15357) * C14888 + C15368 * C14889) *
                C152280 -
            ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
             (C15357 + C15356) * C14887) *
                C152068) *
               C152279 +
           (((C16079 + C16080) * C14887 + (C16081 + C16082) * C14888 +
             (C16094 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C14889) *
                C152068 -
            ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
             (C431 * C151911 + C432 * C6221) * C14887) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152280 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C1795 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            (C16696 + C16663) * C14889) *
               C152068 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C152280 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152068) *
              C1797 +
          (((C17410 + C17398) * C14887 + (C17411 + C17401) * C14888 +
            ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C6221 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C14889) *
               C152068 -
           ((C17401 + C17411) * C14889 + (C17398 + C17410) * C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C2936 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C2937 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
               C2938 -
           ((C18004 + C18005) * C14889 + (C17985 + C18003) * C14888 +
            C17982 * C14887) *
               C152337) *
              C152279 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            C18710 * C14889) *
               C2937 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C2936 -
           ((C18711 + C18719) * C14889 + (C16663 + C16696) * C14888 +
            C16664 * C14887) *
               C2938 +
           (C18710 * C14887 + (C18719 + C18711) * C14888 +
            ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C6221 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151911) *
                C14889) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152162 * C151981 * C151963 * C129 -
              (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                  C152162 * C151981 * C151963 * C130 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                  C152162 * C151981 * C151963 * C131 -
              (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C152162 * C151981 * C151963 * C132 +
              (C196 * C122 + C197 * C123 + C198 * C124 +
               (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
                  C152162 * C151981 * C151963 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C152368 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C152352 +
               ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C151981 * C152321) *
                  C347 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C152352 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C152368 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C151981 * C152368 -
               ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 +
                C437 * C124 + C431 * C123 + C432 * C122) *
                   C152162 * C151981 * C152352 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                   C152162 * C151981 * C152321) *
                  C152315) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C152369 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C152354 +
               ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152162 * C152324) *
                  C151963 * C347 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152162 * C152354 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C152369 -
               (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                   C152162 * C152324) *
                  C151963 * C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C152369 -
               ((C134 * C597 + C650 + C650 + C152146 * C621) * C125 +
                C674 * C124 + C668 * C123 + C669 * C122) *
                   C152162 * C152354 +
               (C672 * C122 + C673 * C123 + C675 * C124 +
                (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
                   C152162 * C152324) *
                  C151963 * C152315) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C1345 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C1346 +
               ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C151981 * C152321) *
                  C152365 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C1346 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C1345 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152162 * C151981 * C152321) *
                  C152348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C151981 * C1345 -
               (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                   C152162 * C151981 * C1346 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                   C152162 * C151981 * C152321) *
                  C152315) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152162 * C151981 * C1433 -
              (C431 * C125 + C432 * C124 + C433 * C123 +
               (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                  C152162 * C151981 * C1434 +
              ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
               C434 * C123 + C435 * C124 + C436 * C125) *
                  C152162 * C151981 * C1435 -
              ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
               (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
               (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
               (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                  C152162 * C151981 * C1436 +
              ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
               (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
               (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
               (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
                  C152162 * C151981 * C1437) *
             C151935 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C152369 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C152354 +
               ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152162 * C152324) *
                  C1345 +
              (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152162 * C152354 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C152369 -
               ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
                (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
                (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
                (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                   C152162 * C152324) *
                  C1346 +
              (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C152369 -
               ((C134 * C1621 + C1658 + C1658 + C152146 * C1645) * C125 +
                (C134 * C1622 + C1659 + C1659 + C152146 * C1646) * C124 +
                (C134 * C1623 + C1660 + C1660 + C152146 * C1647) * C123 +
                (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                   C152162 * C152354 +
               ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
                (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
                (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
                (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
                   C152162 * C152324) *
                  C152321) *
             C151935 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C2325 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C2326 +
               ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152162 * C152324) *
                  C151963 * C152365 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152162 * C2326 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C2325 -
               (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                   C152162 * C152324) *
                  C151963 * C152348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C2325 -
               (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                   C152162 * C2326 +
               (C672 * C122 + C673 * C123 + C675 * C124 +
                (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
                   C152162 * C152324) *
                  C151963 * C152315) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C2325 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C2326 +
               ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152162 * C152324) *
                  C152368 +
              (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152162 * C2326 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C2325 -
               ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
                (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
                (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
                (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                   C152162 * C152324) *
                  C152352 +
              (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C2325 -
               (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                   C152162 * C2326 +
               ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
                (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
                (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
                (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
                   C152162 * C152324) *
                  C152321) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C2556 -
          (C668 * C125 + C669 * C124 + C670 * C123 +
           (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
              C152162 * C2557 +
          ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
           C672 * C124 + C673 * C125) *
              C152162 * C2558 -
          ((C134 * C2561 + C2586 + C2586 + C152146 * C2577) * C125 +
           (C134 * C2562 + C2587 + C2587 + C152146 * C2578) * C124 +
           (C134 * C2563 + C2588 + C2588 + C152146 * C2579) * C123 +
           (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
              C152162 * C2559 +
          ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C122 +
           (C134 * C2566 + C2591 + C2591 + C152146 * C2582) * C123 +
           (C134 * C2567 + C2592 + C2592 + C152146 * C2583) * C124 +
           (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C125) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C151963 * C129 -
          ((C6299 + C6300 + C6301) * C151911 +
           (C6298 + C6297 + C6296) * C6221) *
              C152162 * C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C6221 +
           (C6302 + C6303 + C6304) * C151911) *
              C152162 * C151981 * C151963 * C131 -
          ((C6305 + C6306 + C6307) * C151911 +
           (C6304 + C6303 + C6302) * C6221) *
              C152162 * C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C6221 +
           (C6223 * C141 + C6269 + C6269 + C6218 * C157 + C6225 * C360 + C6270 +
            C6270 + C6219 * C384 + C6227 * C361 + C6271 + C6271 +
            C6220 * C385) *
               C151911) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152352 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152368 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 + C6225 * C357 +
             C6569 + C6569 + C6219 * C381 + C6223 * C350 + C6570 + C6570 +
             C6218 * C374) *
                C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152369 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152354 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152369 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152369 -
           ((C6227 * C1621 + C6870 + C6870 + C6220 * C1645 + C6225 * C1158 +
             C6871 + C6871 + C6219 * C1170 + C6223 * C587 + C6872 + C6872 +
             C6218 * C611) *
                C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152354 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1345 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1346 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1345 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C1345 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C1433 -
          ((C6598 + C6599 + C6600) * C151911 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C6221) *
              C152162 * C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C6221 +
           (C6601 + C6602 + C6603) * C151911) *
              C152162 * C151981 * C1435 -
          ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 + C6225 * C1444 +
            C8021 + C8021 + C6219 * C1460 + C6223 * C1441 + C8022 + C8022 +
            C6218 * C1457) *
               C151911 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C6221) *
              C152162 * C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C6221 +
           (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 + C6225 * C8007 +
            C8030 + C8030 + C6219 * C8015 + C6227 * C8010 + C8031 + C8031 +
            C6220 * C8018) *
               C151911) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152369 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C1345 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152354 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152369 -
           ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 + C6225 * C1626 +
             C8269 + C8269 + C6219 * C1650 + C6223 * C1619 + C8270 + C8270 +
             C6218 * C1643) *
                C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152369 -
           ((C6227 * C8251 + C8274 + C8274 + C6220 * C8263 + C6225 * C2164 +
             C8275 + C8275 + C6219 * C2172 + C6223 * C1623 + C8276 + C8276 +
             C6218 * C1647) *
                C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2325 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C2326 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C2325 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C2325 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C2326 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2325 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C152368 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C2326 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C2325 -
           ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 + C6225 * C1626 +
             C8269 + C8269 + C6219 * C1650 + C6223 * C1619 + C8270 + C8270 +
             C6218 * C1643) *
                C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C2325 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C2556 -
          ((C6900 + C6901 + C6902) * C151911 +
           (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
            C6218 * C614) *
               C6221) *
              C152162 * C2557 +
          ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
            C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
            C6220 * C1649) *
               C6221 +
           (C6903 + C6904 + C6905) * C151911) *
              C152162 * C2558 -
          ((C6227 * C9575 + C9594 + C9594 + C6220 * C9587 + C6225 * C3090 +
            C9595 + C9595 + C6219 * C3098 + C6223 * C2563 + C9596 + C9596 +
            C6218 * C2579) *
               C151911 +
           (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
            C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
            C6218 * C2580) *
               C6221) *
              C152162 * C2559 +
          ((C6223 * C2565 + C9600 + C9600 + C6218 * C2581 + C6225 * C9577 +
            C9601 + C9601 + C6219 * C9589 + C6227 * C9578 + C9602 + C9602 +
            C6220 * C9590) *
               C6221 +
           (C6223 * C2566 + C9603 + C9603 + C6218 * C2582 + C6225 * C9579 +
            C9604 + C9604 + C6219 * C9591 + C6227 * C9580 + C9605 + C9605 +
            C6220 * C9592) *
               C151911) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
            C670 * C151911) *
               C14888 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
            C671 * C151911) *
               C14889) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C6221) * C14889 +
           (C669 * C151911 + C670 * C6221) * C14888 +
           (C194 * C151911 + C193 * C6221) * C14887) *
              C151981 * C151963 * C130 +
          ((C194 * C6221 + C195 * C151911) * C14887 +
           (C669 * C6221 + C668 * C151911) * C14888 +
           (C672 * C6221 + C673 * C151911) * C14889) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C6221) * C14889 +
           (C674 * C151911 + C668 * C6221) * C14888 +
           (C196 * C151911 + C195 * C6221) * C14887) *
              C151981 * C151963 * C132 +
          ((C196 * C6221 + C197 * C151911) * C14887 +
           (C674 * C6221 + C961 * C151911) * C14888 +
           (C675 * C6221 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
             C670 * C151911) *
                C14888 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
             C671 * C151911) *
                C14889) *
               C151981 * C152368 -
           ((C2806 * C151911 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C6221) *
                C14889 +
            (C1196 * C151911 +
             (C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C6221) *
                C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C347 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C1196 * C6221 + C1197 * C151911) * C14888 +
            (C2806 * C6221 + C2805 * C151911) * C14889) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C6221) * C14889 +
            (C669 * C151911 + C670 * C6221) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C669 * C6221 + C668 * C151911) * C14888 +
            (C672 * C6221 + C673 * C151911) * C14889) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C6221) * C14889 +
            (C1198 * C151911 + C1197 * C6221) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152352 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152369 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152354 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C151963 * C347 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            (C15352 + C15353) * C14889) *
               C152354 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C152369 -
           ((C15378 * C151911 + C15377 * C6221) * C14889 +
            (C15353 + C15352) * C14888 + C15366 * C14887) *
               C152324) *
              C151963 * C348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C152369 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152354 +
           (C15368 * C14887 + (C15361 + C15360) * C14888 +
            (C15378 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C1345 -
           ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
               C151981 * C1346 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C1345 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C1346 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           (C15379 + C15339) * C14888 + C15382 * C14889) *
              C151981 * C1433 -
          ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
               C14887) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
            C434 * C151911) *
               C14887 +
           ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
            C2033 * C151911) *
               C14888 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
            C15117 * C151911) *
               C14889) *
              C151981 * C1435 -
          (((C134 * C8249 + C16437 + C16437 + C152146 * C8261) * C151911 +
            (C134 * C8250 + C16438 + C16438 + C152146 * C8262) * C6221) *
               C14889 +
           ((C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C151911 +
            (C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C6221) *
               C14888 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
               C14887) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C6221 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C14887 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C6221 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C14888 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C6221 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152369 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152354 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C1345 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            (C16696 + C16663) * C14889) *
               C152354 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C152369 -
           (((C134 * C9579 + C16665 + C16665 + C152146 * C9591) * C151911 +
             (C134 * C9577 + C16666 + C16666 + C152146 * C9589) * C6221) *
                C14889 +
            (C16663 + C16696) * C14888 + C16664 * C14887) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C152369 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152354 +
           (C16701 * C14887 + (C16700 + C16699) * C14888 +
            ((C134 * C9578 + C16679 + C16679 + C152146 * C9590) * C6221 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C2325 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C2326 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C151963 * C152365 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            (C15352 + C15353) * C14889) *
               C2326 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C2325 -
           ((C15378 * C151911 + C15377 * C6221) * C14889 +
            (C15353 + C15352) * C14888 + C15366 * C14887) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C2325 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C2326 +
           (C15368 * C14887 + (C15361 + C15360) * C14888 +
            (C15378 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C2325 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C2326 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C152368 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            (C16696 + C16663) * C14889) *
               C2326 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C2325 -
           (((C134 * C9579 + C16665 + C16665 + C152146 * C9591) * C151911 +
             (C134 * C9577 + C16666 + C16666 + C152146 * C9589) * C6221) *
                C14889 +
            (C16663 + C16696) * C14888 + C16664 * C14887) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C2325 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C2326 +
           (C16701 * C14887 + (C16700 + C16699) * C14888 +
            ((C134 * C9578 + C16679 + C16679 + C152146 * C9590) * C6221 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           (C15379 + C15339) * C14888 + C15382 * C14889) *
              C2556 -
          (C17982 * C14889 + (C15342 + C15380) * C14888 +
           (C15339 + C15379) * C14887) *
              C2557 +
          (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
              C2558 -
          ((C18004 + C18005) * C14889 + (C17985 + C18003) * C14888 +
           C17982 * C14887) *
              C2559 +
          (C18006 * C14887 + (C18005 + C18004) * C14888 +
           ((C134 * C17971 + C17992 + C17992 + C152146 * C17979) * C6221 +
            (C134 * C17972 + C17993 + C17993 + C152146 * C17980) * C151911) *
               C14889) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C152280 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C152068) *
                  C151963 * C807 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152162 * C152068 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C152280) *
                  C151963 * C808 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C152280 -
               (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                   C152162 * C152068) *
                  C151963 * C809 +
              ((C668 * C122 + C674 * C123 + C961 * C124 +
                (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
                   C152162 * C152068 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152162 * C152280) *
                  C151963 * C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152162 * C152280 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                    C152162 * C152068) *
                   C1345 +
               (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152162 * C152068 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                    C152162 * C152280) *
                   C1346 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                 C434 * C123 + C435 * C124 + C436 * C125) *
                    C152162 * C152280 -
                (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                 (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                    C152162 * C152068) *
                   C152321) *
                  C152265 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152162 * C152068 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152162 * C152280) *
                   C1345 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152162 * C152280 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152162 * C152068) *
                   C1346 +
               ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                    C152162 * C152068 -
                (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                    C152162 * C152280) *
                   C152321) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2937 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C151963 * C152265 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C2937 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C2936 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C2938 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C125) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152280 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C1345 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C152280 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2936 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2937 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C2938 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C151963 * C152265 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C2937 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C2936 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C2938 +
           ((C10131 + C10130 + C10129) * C6221 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151911) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152280 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C151963 * C807 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            (C15352 + C15353) * C14889) *
               C152068 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C152280) *
              C151963 * C808 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C152280 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152068) *
              C151963 * C809 +
          (((C15771 + C15772) * C14887 + (C15773 + C15774) * C14888 +
            (C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C14889) *
               C152068 -
           ((C15774 + C15773) * C14889 + (C15772 + C15771) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152280 -
            ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C1345 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             (C16696 + C16663) * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
              C434 * C151911) *
                 C14887 +
             (C16697 + C16669) * C14888 + C16701 * C14889) *
                C152280 -
            ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
             (C16669 + C16697) * C14887) *
                C152068) *
               C152321) *
              C152265 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             (C15352 + C15353) * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152280) *
               C1345 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
                C152280 -
            ((C16094 * C151911 + C16093 * C6221) * C14889 +
             (C16076 + C16075) * C14888 + (C16074 + C16073) * C14887) *
                C152068) *
               C1346 +
           (((C17197 + C17198) * C14887 + (C17199 + C17200) * C14888 +
             (C16694 * C6221 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C14889) *
                C152068 -
            ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
             (C435 * C151911 + C434 * C6221) * C14887) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C2936 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C2937 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
               C2938 -
           ((C18004 + C18005) * C14889 + (C17985 + C18003) * C14888 +
            C17982 * C14887) *
               C152337) *
              C151963 * C152265 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            C18506 * C14889) *
               C2937 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C2936 -
           ((C18507 + C18508) * C14889 + (C15353 + C15352) * C14888 +
            C15366 * C14887) *
               C2938 +
           (C18506 * C14887 + (C18508 + C18507) * C14888 +
            (C18001 * C6221 +
             (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151911) *
                C14889) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C151981 * C151963 * C129 -
          (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
              C151981 * C151963 * C130 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
              C151981 * C151963 * C131 -
          (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
              C151981 * C151963 * C132 +
          (C196 * C122 + C197 * C123 + C198 * C124 +
           (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152368 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152352 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152321) *
              C347 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152352 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152368 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152321) *
              C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C152368 -
           ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 + C437 * C124 +
            C431 * C123 + C432 * C122) *
               C152162 * C151981 * C152352 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152321) *
              C152365 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152321) *
              C152348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C151981 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
              C152162 * C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152162 * C151981 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
              C152162 * C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2326 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C151963 * C152365 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C2326 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C2325 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C152324) *
              C151963 * C152348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C2325 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C2326 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2326 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C152368 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C2326 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C2325 -
           ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C152324) *
              C152352 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C2325 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C2326 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C151963 * C129 -
          ((C6299 + C6300 + C6301) * C151911 +
           (C6298 + C6297 + C6296) * C6221) *
              C152162 * C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C6221 +
           (C6302 + C6303 + C6304) * C151911) *
              C152162 * C151981 * C151963 * C131 -
          ((C6305 + C6306 + C6307) * C151911 +
           (C6304 + C6303 + C6302) * C6221) *
              C152162 * C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C6221 +
           (C6223 * C141 + C6269 + C6269 + C6218 * C157 + C6225 * C360 + C6270 +
            C6270 + C6219 * C384 + C6227 * C361 + C6271 + C6271 +
            C6220 * C385) *
               C151911) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152352 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152368 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 + C6225 * C357 +
             C6569 + C6569 + C6219 * C381 + C6223 * C350 + C6570 + C6570 +
             C6218 * C374) *
                C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1345 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1346 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1345 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C1345 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C1433 -
          ((C6598 + C6599 + C6600) * C151911 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C6221) *
              C152162 * C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C6221 +
           (C6601 + C6602 + C6603) * C151911) *
              C152162 * C151981 * C1435 -
          ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 + C6225 * C1444 +
            C8021 + C8021 + C6219 * C1460 + C6223 * C1441 + C8022 + C8022 +
            C6218 * C1457) *
               C151911 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C6221) *
              C152162 * C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C6221 +
           (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 + C6225 * C8007 +
            C8030 + C8030 + C6219 * C8015 + C6227 * C8010 + C8031 + C8031 +
            C6220 * C8018) *
               C151911) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2325 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C2326 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C2325 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C2325 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C2326 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2325 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C152368 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C2326 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C2325 -
           ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 + C6225 * C1626 +
             C8269 + C8269 + C6219 * C1650 + C6223 * C1619 + C8270 + C8270 +
             C6218 * C1643) *
                C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C2325 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
            C670 * C151911) *
               C14888 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
            C671 * C151911) *
               C14889) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C6221) * C14889 +
           (C669 * C151911 + C670 * C6221) * C14888 +
           (C194 * C151911 + C193 * C6221) * C14887) *
              C151981 * C151963 * C130 +
          ((C194 * C6221 + C195 * C151911) * C14887 +
           (C669 * C6221 + C668 * C151911) * C14888 +
           (C672 * C6221 + C673 * C151911) * C14889) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C6221) * C14889 +
           (C674 * C151911 + C668 * C6221) * C14888 +
           (C196 * C151911 + C195 * C6221) * C14887) *
              C151981 * C151963 * C132 +
          ((C196 * C6221 + C197 * C151911) * C14887 +
           (C674 * C6221 + C961 * C151911) * C14888 +
           (C675 * C6221 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
             C670 * C151911) *
                C14888 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
             C671 * C151911) *
                C14889) *
               C151981 * C152368 -
           ((C2806 * C151911 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C6221) *
                C14889 +
            (C1196 * C151911 +
             (C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C6221) *
                C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C347 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C1196 * C6221 + C1197 * C151911) * C14888 +
            (C2806 * C6221 + C2805 * C151911) * C14889) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C6221) * C14889 +
            (C669 * C151911 + C670 * C6221) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C669 * C6221 + C668 * C151911) * C14888 +
            (C672 * C6221 + C673 * C151911) * C14889) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C6221) * C14889 +
            (C1198 * C151911 + C1197 * C6221) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152352 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C1345 -
           ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
               C151981 * C1346 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C1345 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C1346 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           (C15379 + C15339) * C14888 + C15382 * C14889) *
              C151981 * C1433 -
          ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
               C14887) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
            C434 * C151911) *
               C14887 +
           ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
            C2033 * C151911) *
               C14888 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
            C15117 * C151911) *
               C14889) *
              C151981 * C1435 -
          (((C134 * C8249 + C16437 + C16437 + C152146 * C8261) * C151911 +
            (C134 * C8250 + C16438 + C16438 + C152146 * C8262) * C6221) *
               C14889 +
           ((C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C151911 +
            (C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C6221) *
               C14888 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
               C14887) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C6221 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C14887 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C6221 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C14888 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C6221 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C2325 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C2326 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C151963 * C152365 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            (C15352 + C15353) * C14889) *
               C2326 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C2325 -
           ((C15378 * C151911 + C15377 * C6221) * C14889 +
            (C15353 + C15352) * C14888 + C15366 * C14887) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C2325 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C2326 +
           (C15368 * C14887 + (C15361 + C15360) * C14888 +
            (C15378 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C2325 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C2326 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C152368 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            (C16696 + C16663) * C14889) *
               C2326 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C2325 -
           (((C134 * C9579 + C16665 + C16665 + C152146 * C9591) * C151911 +
             (C134 * C9577 + C16666 + C16666 + C152146 * C9589) * C6221) *
                C14889 +
            (C16663 + C16696) * C14888 + C16664 * C14887) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C2325 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C2326 +
           (C16701 * C14887 + (C16700 + C16699) * C14888 +
            ((C134 * C9578 + C16679 + C16679 + C152146 * C9590) * C6221 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C4241 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C152279 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C4241 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152279 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C4241) *
               C152026) *
              C151940 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C4241) *
               C152279 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C4241 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C6221 + C195 * C151911) * C14887 +
             (C15356 + C15357) * C14888 + C15368 * C14889) *
                C4241 -
            ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
             (C15357 + C15356) * C14887) *
                C152068) *
               C152279 +
           (((C16079 + C16080) * C14887 + (C16081 + C16082) * C14888 +
             (C16094 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C14889) *
                C152068 -
            ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
             (C431 * C151911 + C432 * C6221) * C14887) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152064 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152071 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C4913) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152071 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152064 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C4913) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152071 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152064 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C4913) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152064 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152071 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152064 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152071 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C4913) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152071 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152064 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C4913) *
               C152026) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152071 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152064 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C4913) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152064 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152071 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152064 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152071 +
            (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
                C4913) *
               C152279 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152071 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152064 -
            ((C18711 + C18719) * C14889 + (C16663 + C16696) * C14888 +
             C16664 * C14887) *
                C4913) *
               C152026) *
              C3375 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152071 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152064 -
            ((C18507 + C18508) * C14889 + (C15353 + C15352) * C14888 +
             C15366 * C14887) *
                C4913) *
               C152279 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C152064 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152071 +
            (C18302 * C14887 + (C18304 + C18303) * C14888 +
             (C18308 * C6221 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C14889) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C4241 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                   C152162 * C152068) *
                  C151963 * C152374 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152162 * C152068 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C4241) *
                  C151963 * C152367 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C4241 -
               (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                   C152162 * C152068) *
                  C151963 * C152350 +
              ((C668 * C122 + C674 * C123 + C961 * C124 +
                (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
                   C152162 * C152068 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152162 * C4241) *
                  C151963 * C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152162 * C4241 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                    C152162 * C152068) *
                   C152368 +
               (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152162 * C152068 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                    C152162 * C4241) *
                   C152352 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                 C434 * C123 + C435 * C124 + C436 * C125) *
                    C152162 * C4241 -
                (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                 (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                    C152162 * C152068) *
                   C152321) *
                  C3375 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152162 * C152068 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152162 * C4241) *
                   C152368 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152162 * C4241 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152162 * C152068) *
                   C152352 +
               ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                    C152162 * C152068 -
                (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                    C152162 * C4241) *
                   C152321) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152376 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152373 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152360 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C151963 * C3375 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152373 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152376 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C152360 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C125) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C4241 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152368 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C4241 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152376 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152373 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152360 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C151963 * C3375 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152373 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152376 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152360 +
           ((C10131 + C10130 + C10129) * C6221 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151911) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C4241 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C151963 * C152374 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            C18506 * C14889) *
               C152068 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C4241 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152068) *
              C151963 * C152350 +
          (((C15771 + C15772) * C14887 + (C15773 + C15774) * C14888 +
            (C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C14889) *
               C152068 -
           ((C15774 + C15773) * C14889 + (C15772 + C15771) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C4241 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152368 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
              C434 * C151911) *
                 C14887 +
             (C16697 + C16669) * C14888 + C16701 * C14889) *
                C4241 -
            ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
             (C16669 + C16697) * C14887) *
                C152068) *
               C152321) *
              C3375 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C4241) *
               C152368 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C4241 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152352 +
           (((C17197 + C17198) * C14887 + (C17199 + C17200) * C14888 +
             (C16694 * C6221 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C14889) *
                C152068 -
            ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
             (C435 * C151911 + C434 * C6221) * C14887) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152376 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152373 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
               C152360 -
           ((C18004 + C18005) * C14889 + (C17985 + C18003) * C14888 +
            C17982 * C14887) *
               C152337) *
              C151963 * C3375 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            C18506 * C14889) *
               C152373 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C152376 -
           ((C18507 + C18508) * C14889 + (C15353 + C15352) * C14888 +
            C15366 * C14887) *
               C152360 +
           (C18506 * C14887 + (C18508 + C18507) * C14888 +
            (C18001 * C6221 +
             (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151911) *
                C14889) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152064 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152071 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C4913) *
              C151963 * C151940 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152071 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152064 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C4913) *
              C151963 * C151949 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152064 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152071 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152064 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152071 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C4913) *
              C151963 * C151940 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152071 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152064 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C4913) *
              C151963 * C151949 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C152064 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152071 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
               C152162 * C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152064 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152071 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 + C18006 * C14889) *
               C4913) *
              C151963 * C151940 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            C18506 * C14889) *
               C152071 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C152064 -
           ((C18507 + C18508) * C14889 + (C15353 + C15352) * C14888 +
            C15366 * C14887) *
               C4913) *
              C151963 * C151949 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C152064 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152071 +
           (C15368 * C14887 + (C15361 + C15360) * C14888 +
            (C15378 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C14889) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152368 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152368 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152352 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C151963 * C152374 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152068 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C4241) *
              C151963 * C152367 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C4241 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152068) *
              C151963 * C152350 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
               C152162 * C152068 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C4241 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152368 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C4241 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C4241 -
           (C17982 * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C151963 * C152374 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            C18506 * C14889) *
               C152068 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C4241 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152068) *
              C151963 * C152350 +
          (((C15771 + C15772) * C14887 + (C15773 + C15774) * C14888 +
            (C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C14889) *
               C152068 -
           ((C15774 + C15773) * C14889 + (C15772 + C15771) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C4241 -
            (C17982 * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152368 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             C18710 * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
              C434 * C151911) *
                 C14887 +
             (C16697 + C16669) * C14888 + C16701 * C14889) *
                C4241 -
            ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
             (C16669 + C16697) * C14887) *
                C152068) *
               C152321) *
              C3375 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             C18506 * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C4241) *
               C152368 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + C18302 * C14889) *
                C4241 -
            ((C18303 + C18304) * C14889 + (C16076 + C16075) * C14888 +
             (C16074 + C16073) * C14887) *
                C152068) *
               C152352 +
           (((C17197 + C17198) * C14887 + (C17199 + C17200) * C14888 +
             (C16694 * C6221 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C14889) *
                C152068 -
            ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
             (C435 * C151911 + C434 * C6221) * C14887) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C1795 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C1796 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C1797 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C151981 * C152331) *
              C152265 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C1796 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C1795 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C1797 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152279 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152026) *
              C807 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152026 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152279) *
              C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C152279 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C152026) *
              C809 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
               C152162 * C151981 * C152026 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152279 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152026 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152279 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C6221 +
            (C6223 * C358 + C7112 + C7112 + C6218 * C382 + C6225 * C359 +
             C7113 + C7113 + C6219 * C383 + C6227 * C1801 + C7114 + C7114 +
             C6220 * C1803) *
                C151911) *
               C152162 * C151981 * C152026 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1795 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C1797 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1796 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1795 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C6221 +
            (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 + C6225 * C1445 +
             C8490 + C8490 + C6219 * C1461 + C6227 * C8479 + C8491 + C8491 +
             C6220 * C8481) *
                C151911) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C152279 -
           ((C2806 * C151911 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C6221) *
                C14889 +
            (C1196 * C151911 +
             (C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C6221) *
                C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152026) *
              C807 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C1196 * C6221 + C1197 * C151911) * C14888 +
            (C2806 * C6221 + C2805 * C151911) * C14889) *
               C151981 * C152026 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152279) *
              C808 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C152279 -
           ((C2804 * C151911 + C2805 * C6221) * C14889 +
            (C1198 * C151911 + C1197 * C6221) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152026) *
              C809 +
          (((C431 * C6221 + C437 * C151911) * C14887 +
            (C1198 * C6221 + C1199 * C151911) * C14888 +
            (C2804 * C6221 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C14889) *
               C151981 * C152026 -
           ((C675 * C151911 + C673 * C6221) * C14889 +
            (C674 * C151911 + C668 * C6221) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C1795 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C151981 * C1797 -
           ((C16905 * C151911 +
             (C134 * C8250 + C16438 + C16438 + C152146 * C8262) * C6221) *
                C14889 +
            (C16906 * C151911 +
             (C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C6221) *
                C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
               C151981 * C1796 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C1795 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C1797 +
           ((C1820 * C6221 + C1819 * C151911) * C14887 +
            (C16906 * C6221 +
             (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C151911) *
                C14888 +
            (C16905 * C6221 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152280 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C1795 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152068 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152280) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C152280 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152068) *
              C1797 +
          (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
               C152162 * C152068 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152026) *
              C347 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C152280 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C152279 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C152280 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C1795 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152280 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C1797 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152280 -
            ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C152279 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             ((C134 * C3089 + C3102 + C3102 + C152146 * C3097) * C6221 +
              C16093 * C151911) *
                 C14889) *
                C152068 -
            ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152280) *
               C152026) *
              C347 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             (C15352 + C15353) * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152280) *
               C152279 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
                C152280 -
            ((C16094 * C151911 + C16093 * C6221) * C14889 +
             (C16076 + C16075) * C14888 + (C16074 + C16073) * C14887) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C6221 + C195 * C151911) * C14887 +
             (C15356 + C15357) * C14888 + C15368 * C14889) *
                C152280 -
            ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
             (C15357 + C15356) * C14887) *
                C152068) *
               C152279 +
           (((C16079 + C16080) * C14887 + (C16081 + C16082) * C14888 +
             (C16094 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C14889) *
                C152068 -
            ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
             (C431 * C151911 + C432 * C6221) * C14887) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152280 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C1795 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            (C16696 + C16663) * C14889) *
               C152068 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C152280 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152068) *
              C1797 +
          (((C17410 + C17398) * C14887 + (C17411 + C17401) * C14888 +
            ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C6221 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C14889) *
               C152068 -
           ((C17401 + C17411) * C14889 + (C17398 + C17410) * C14888 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
                C14887) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152162 * C151981 * C151963 * C129 -
              (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                  C152162 * C151981 * C151963 * C130 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                  C152162 * C151981 * C151963 * C131 -
              (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C152162 * C151981 * C151963 * C132 +
              (C196 * C122 + C197 * C123 + C198 * C124 +
               (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
                  C152162 * C151981 * C151963 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C152368 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C152352 +
               ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C151981 * C152321) *
                  C347 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C152352 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C152368 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C151981 * C152368 -
               ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 +
                C437 * C124 + C431 * C123 + C432 * C122) *
                   C152162 * C151981 * C152352 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                   C152162 * C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152369 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152354 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C151963 * C347 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152354 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152369 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C152324) *
              C151963 * C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C152369 -
           ((C134 * C597 + C650 + C650 + C152146 * C621) * C125 + C674 * C124 +
            C668 * C123 + C669 * C122) *
               C152162 * C152354 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152321) *
              C152365 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152321) *
              C152348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C151981 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
              C152162 * C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152162 * C151981 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
              C152162 * C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152369 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152354 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C1345 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152354 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152369 -
           ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C152324) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C152369 -
           ((C134 * C1621 + C1658 + C1658 + C152146 * C1645) * C125 +
            (C134 * C1622 + C1659 + C1659 + C152146 * C1646) * C124 +
            (C134 * C1623 + C1660 + C1660 + C152146 * C1647) * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152354 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C151963 * C129 -
          ((C6299 + C6300 + C6301) * C151911 +
           (C6298 + C6297 + C6296) * C6221) *
              C152162 * C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C6221 +
           (C6302 + C6303 + C6304) * C151911) *
              C152162 * C151981 * C151963 * C131 -
          ((C6305 + C6306 + C6307) * C151911 +
           (C6304 + C6303 + C6302) * C6221) *
              C152162 * C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C6221 +
           (C6223 * C141 + C6269 + C6269 + C6218 * C157 + C6225 * C360 + C6270 +
            C6270 + C6219 * C384 + C6227 * C361 + C6271 + C6271 +
            C6220 * C385) *
               C151911) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152352 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152368 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 + C6225 * C357 +
             C6569 + C6569 + C6219 * C381 + C6223 * C350 + C6570 + C6570 +
             C6218 * C374) *
                C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152369 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152354 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152369 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152369 -
           ((C6227 * C1621 + C6870 + C6870 + C6220 * C1645 + C6225 * C1158 +
             C6871 + C6871 + C6219 * C1170 + C6223 * C587 + C6872 + C6872 +
             C6218 * C611) *
                C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152354 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1345 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1346 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1345 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C1345 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C1433 -
          ((C6598 + C6599 + C6600) * C151911 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C6221) *
              C152162 * C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C6221 +
           (C6601 + C6602 + C6603) * C151911) *
              C152162 * C151981 * C1435 -
          ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 + C6225 * C1444 +
            C8021 + C8021 + C6219 * C1460 + C6223 * C1441 + C8022 + C8022 +
            C6218 * C1457) *
               C151911 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C6221) *
              C152162 * C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C6221 +
           (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 + C6225 * C8007 +
            C8030 + C8030 + C6219 * C8015 + C6227 * C8010 + C8031 + C8031 +
            C6220 * C8018) *
               C151911) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152369 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C1345 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152354 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152369 -
           ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 + C6225 * C1626 +
             C8269 + C8269 + C6219 * C1650 + C6223 * C1619 + C8270 + C8270 +
             C6218 * C1643) *
                C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152369 -
           ((C6227 * C8251 + C8274 + C8274 + C6220 * C8263 + C6225 * C2164 +
             C8275 + C8275 + C6219 * C2172 + C6223 * C1623 + C8276 + C8276 +
             C6218 * C1647) *
                C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
            C670 * C151911) *
               C14888 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
            C671 * C151911) *
               C14889) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C6221) * C14889 +
           (C669 * C151911 + C670 * C6221) * C14888 +
           (C194 * C151911 + C193 * C6221) * C14887) *
              C151981 * C151963 * C130 +
          ((C194 * C6221 + C195 * C151911) * C14887 +
           (C669 * C6221 + C668 * C151911) * C14888 +
           (C672 * C6221 + C673 * C151911) * C14889) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C6221) * C14889 +
           (C674 * C151911 + C668 * C6221) * C14888 +
           (C196 * C151911 + C195 * C6221) * C14887) *
              C151981 * C151963 * C132 +
          ((C196 * C6221 + C197 * C151911) * C14887 +
           (C674 * C6221 + C961 * C151911) * C14888 +
           (C675 * C6221 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
             C670 * C151911) *
                C14888 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
             C671 * C151911) *
                C14889) *
               C151981 * C152368 -
           ((C2806 * C151911 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C6221) *
                C14889 +
            (C1196 * C151911 +
             (C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C6221) *
                C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C347 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C1196 * C6221 + C1197 * C151911) * C14888 +
            (C2806 * C6221 + C2805 * C151911) * C14889) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C6221) * C14889 +
            (C669 * C151911 + C670 * C6221) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C669 * C6221 + C668 * C151911) * C14888 +
            (C672 * C6221 + C673 * C151911) * C14889) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C6221) * C14889 +
            (C1198 * C151911 + C1197 * C6221) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152352 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152369 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152354 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C151963 * C347 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            (C15352 + C15353) * C14889) *
               C152354 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C152369 -
           ((C15378 * C151911 + C15377 * C6221) * C14889 +
            (C15353 + C15352) * C14888 + C15366 * C14887) *
               C152324) *
              C151963 * C348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C152369 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152354 +
           (C15368 * C14887 + (C15361 + C15360) * C14888 +
            (C15378 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C1345 -
           ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
               C151981 * C1346 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C1345 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C1346 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           (C15379 + C15339) * C14888 + C15382 * C14889) *
              C151981 * C1433 -
          ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
               C14887) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
            C434 * C151911) *
               C14887 +
           ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
            C2033 * C151911) *
               C14888 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
            C15117 * C151911) *
               C14889) *
              C151981 * C1435 -
          (((C134 * C8249 + C16437 + C16437 + C152146 * C8261) * C151911 +
            (C134 * C8250 + C16438 + C16438 + C152146 * C8262) * C6221) *
               C14889 +
           ((C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C151911 +
            (C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C6221) *
               C14888 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
               C14887) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C6221 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C14887 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C6221 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C14888 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C6221 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152369 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152354 +
           (C15382 * C14887 + (C15381 + C15343) * C14888 +
            ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C6221 +
             C15377 * C151911) *
                C14889) *
               C152324) *
              C1345 +
          (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
            (C16696 + C16663) * C14889) *
               C152354 -
           (C16664 * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C152369 -
           (((C134 * C9579 + C16665 + C16665 + C152146 * C9591) * C151911 +
             (C134 * C9577 + C16666 + C16666 + C152146 * C9589) * C6221) *
                C14889 +
            (C16663 + C16696) * C14888 + C16664 * C14887) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            (C16697 + C16669) * C14888 + C16701 * C14889) *
               C152369 -
           ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
            (C16669 + C16697) * C14887) *
               C152354 +
           (C16701 * C14887 + (C16700 + C16699) * C14888 +
            ((C134 * C9578 + C16679 + C16679 + C152146 * C9590) * C6221 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C1345 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C152280 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C1345 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C1346 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152280 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C151963 * C807 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152068 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152280) *
              C151963 * C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C152280 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152068) *
              C151963 * C809 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
               C152162 * C152068 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152280 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C1345 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C152280 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C152280 -
           ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
            (C15339 + C15379) * C14887) *
               C152068) *
              C151963 * C807 +
          (((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
            (C15352 + C15353) * C14889) *
               C152068 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C152280) *
              C151963 * C808 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C152280 -
           ((C15360 + C15361) * C14889 + (C15359 + C15358) * C14888 +
            (C15357 + C15356) * C14887) *
               C152068) *
              C151963 * C809 +
          (((C15771 + C15772) * C14887 + (C15773 + C15774) * C14888 +
            (C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C14889) *
               C152068 -
           ((C15774 + C15773) * C14889 + (C15772 + C15771) * C14888 +
            (C196 * C151911 + C195 * C6221) * C14887) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
              C193 * C151911) *
                 C14887 +
             (C15379 + C15339) * C14888 + C15382 * C14889) *
                C152280 -
            ((C15343 + C15381) * C14889 + (C15342 + C15380) * C14888 +
             (C15339 + C15379) * C14887) *
                C152068) *
               C1345 +
           (((C16095 + C16067) * C14887 + (C16096 + C16070) * C14888 +
             (C16696 + C16663) * C14889) *
                C152068 -
            (C16664 * C14889 + (C16067 + C16095) * C14888 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                 C14887) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
              C434 * C151911) *
                 C14887 +
             (C16697 + C16669) * C14888 + C16701 * C14889) *
                C152280 -
            ((C16699 + C16700) * C14889 + (C16672 + C16698) * C14888 +
             (C16669 + C16697) * C14887) *
                C152068) *
               C152321) *
              C152265 +
          ((((C15348 + C15349) * C14887 + (C15350 + C15351) * C14888 +
             (C15352 + C15353) * C14889) *
                C152068 -
            (C15366 * C14889 + (C15349 + C15348) * C14888 +
             (C194 * C151911 + C193 * C6221) * C14887) *
                C152280) *
               C1345 +
           (((C433 * C6221 + C432 * C151911) * C14887 +
             (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
                C152280 -
            ((C16094 * C151911 + C16093 * C6221) * C14889 +
             (C16076 + C16075) * C14888 + (C16074 + C16073) * C14887) *
                C152068) *
               C1346 +
           (((C17197 + C17198) * C14887 + (C17199 + C17200) * C14888 +
             (C16694 * C6221 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C14889) *
                C152068 -
            ((C17200 + C17199) * C14889 + (C17198 + C17197) * C14888 +
             (C435 * C151911 + C434 * C6221) * C14887) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152368 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152352 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152321) *
              C347 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152352 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152368 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152321) *
              C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C152368 -
           ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 + C437 * C124 +
            C431 * C123 + C432 * C122) *
               C152162 * C151981 * C152352 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C151981 * C151963 * C129 -
          (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
              C151981 * C151963 * C130 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
              C151981 * C151963 * C131 -
          (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
              C151981 * C151963 * C132 +
          (C196 * C122 + C197 * C123 + C198 * C124 +
           (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152321) *
              C152365 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152321) *
              C152348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C151981 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
              C152162 * C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152162 * C151981 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
              C152162 * C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C151963 * C129 -
          ((C6299 + C6300 + C6301) * C151911 +
           (C6298 + C6297 + C6296) * C6221) *
              C152162 * C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C6221 +
           (C6302 + C6303 + C6304) * C151911) *
              C152162 * C151981 * C151963 * C131 -
          ((C6305 + C6306 + C6307) * C151911 +
           (C6304 + C6303 + C6302) * C6221) *
              C152162 * C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C6221 +
           (C6223 * C141 + C6269 + C6269 + C6218 * C157 + C6225 * C360 + C6270 +
            C6270 + C6219 * C384 + C6227 * C361 + C6271 + C6271 +
            C6220 * C385) *
               C151911) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152352 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152368 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 + C6225 * C357 +
             C6569 + C6569 + C6219 * C381 + C6223 * C350 + C6570 + C6570 +
             C6218 * C374) *
                C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1345 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1346 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1345 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C1345 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C1433 -
          ((C6598 + C6599 + C6600) * C151911 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C6221) *
              C152162 * C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C6221 +
           (C6601 + C6602 + C6603) * C151911) *
              C152162 * C151981 * C1435 -
          ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 + C6225 * C1444 +
            C8021 + C8021 + C6219 * C1460 + C6223 * C1441 + C8022 + C8022 +
            C6218 * C1457) *
               C151911 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C6221) *
              C152162 * C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C6221 +
           (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 + C6225 * C8007 +
            C8030 + C8030 + C6219 * C8015 + C6227 * C8010 + C8031 + C8031 +
            C6220 * C8018) *
               C151911) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
            C670 * C151911) *
               C14888 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
            C671 * C151911) *
               C14889) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C6221) * C14889 +
           (C669 * C151911 + C670 * C6221) * C14888 +
           (C194 * C151911 + C193 * C6221) * C14887) *
              C151981 * C151963 * C130 +
          ((C194 * C6221 + C195 * C151911) * C14887 +
           (C669 * C6221 + C668 * C151911) * C14888 +
           (C672 * C6221 + C673 * C151911) * C14889) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C6221) * C14889 +
           (C674 * C151911 + C668 * C6221) * C14888 +
           (C196 * C151911 + C195 * C6221) * C14887) *
              C151981 * C151963 * C132 +
          ((C196 * C6221 + C197 * C151911) * C14887 +
           (C674 * C6221 + C961 * C151911) * C14888 +
           (C675 * C6221 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            ((C134 * C590 + C633 + C633 + C152146 * C614) * C6221 +
             C670 * C151911) *
                C14888 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C6221 +
             C671 * C151911) *
                C14889) *
               C151981 * C152368 -
           ((C2806 * C151911 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C6221) *
                C14889 +
            (C1196 * C151911 +
             (C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C6221) *
                C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C347 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C1196 * C6221 + C1197 * C151911) * C14888 +
            (C2806 * C6221 + C2805 * C151911) * C14889) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C6221) * C14889 +
            (C669 * C151911 + C670 * C6221) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C669 * C6221 + C668 * C151911) * C14888 +
            (C672 * C6221 + C673 * C151911) * C14889) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C6221) * C14889 +
            (C1198 * C151911 + C1197 * C6221) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C152352 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
             C193 * C151911) *
                C14887 +
            (C15379 + C15339) * C14888 + C15382 * C14889) *
               C151981 * C1345 -
           ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
                C14887) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
             C434 * C151911) *
                C14887 +
            ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
             C2033 * C151911) *
                C14888 +
            ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
             C15117 * C151911) *
                C14889) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C6221 + C432 * C151911) * C14887 +
            (C16073 + C16074) * C14888 + (C16075 + C16076) * C14889) *
               C151981 * C1346 -
           (C15366 * C14889 + (C15349 + C15348) * C14888 +
            (C194 * C151911 + C193 * C6221) * C14887) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C6221) * C14889 +
            (C2032 * C151911 + C2033 * C6221) * C14888 +
            (C435 * C151911 + C434 * C6221) * C14887) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C6221 + C195 * C151911) * C14887 +
            (C15356 + C15357) * C14888 + C15368 * C14889) *
               C151981 * C1345 -
           ((C16082 + C16081) * C14889 + (C16080 + C16079) * C14888 +
            (C431 * C151911 + C432 * C6221) * C14887) *
               C151981 * C1346 +
           ((C435 * C6221 + C436 * C151911) * C14887 +
            (C2032 * C6221 + C2031 * C151911) * C14888 +
            (C15118 * C6221 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C6221 +
            C193 * C151911) *
               C14887 +
           (C15379 + C15339) * C14888 + C15382 * C14889) *
              C151981 * C1433 -
          ((C16070 + C16096) * C14889 + (C16067 + C16095) * C14888 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C6221) *
               C14887) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C6221 +
            C434 * C151911) *
               C14887 +
           ((C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C6221 +
            C2033 * C151911) *
               C14888 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C6221 +
            C15117 * C151911) *
               C14889) *
              C151981 * C1435 -
          (((C134 * C8249 + C16437 + C16437 + C152146 * C8261) * C151911 +
            (C134 * C8250 + C16438 + C16438 + C152146 * C8262) * C6221) *
               C14889 +
           ((C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C151911 +
            (C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C6221) *
               C14888 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C6221) *
               C14887) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C6221 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C14887 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C6221 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C14888 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C6221 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C152022 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C151981 * C3719) *
              C151940 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C152029 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152022 -
           ((C34060 + C34059 + C34058) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C3719) *
              C151949 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C152022 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152029 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152280 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152022 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152280) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
              C434 * C152345 + C435 * C23273) *
                 C152297 +
             (C33563 + C33564 + C33565) * C152226) *
                C152280 -
            ((C33566 + C33567 + C33568) * C152226 +
             (C33565 + C33564 + C33563) * C152297) *
                C152068) *
               C3719) *
              C3375 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152280) *
               C152022 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152280 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152029 +
           (((C34058 + C34059 + C34060) * C152297 +
             (C15117 * C152344 + C15118 * C152345 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C23273) *
                 C152226) *
                C152068 -
            ((C34060 + C34059 + C34058) * C152226 +
             (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                C152280) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C152375 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C151981 * C152357 -
           ((C34257 + C34256 + C34255) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C152371 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152375 -
           ((C34060 + C34059 + C34058) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152357 +
           ((C1820 * C152344 + C1819 * C152345 + C1818 * C23273) * C152297 +
            (C16906 * C152344 + C33767 * C152345 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C23273) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C3235 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C152026 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C3235 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C152344 + C437 * C152345 + C820 * C23273) * C152297 +
            (C1198 * C152344 + C1199 * C152345 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C23273) *
                C152226) *
               C151981 * C152026 -
           ((C32701 + C32700 + C32699) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152369 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152354 +
            ((C32298 + C32297 + C32296) * C152297 +
             (C34816 + C34817 + C34818) * C152226) *
                C152324) *
               C3235 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152354 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152369 -
            ((C35506 + C35507 + C35508) * C152226 +
             (C33562 + C33561 + C33560) * C152297) *
                C152324) *
               C152026) *
              C3375 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152354 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152369 -
            ((C35309 + C35310 + C35311) * C152226 +
             (C32304 + C32303 + C32302) * C152297) *
                C152324) *
               C3235 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152369 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152354 +
            ((C35114 + C35113 + C35112) * C152297 +
             (C16093 * C152344 + C16094 * C152345 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C23273) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152280 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C3235 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152280) *
               C152026) *
              C151940 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152280) *
               C3235 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152280 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
             (C32305 + C32306 + C32307) * C152226) *
                C152280 -
            ((C32308 + C32309 + C32310) * C152226 +
             (C32307 + C32306 + C32305) * C152297) *
                C152068) *
               C3235 +
           (((C32998 + C32999 + C33000) * C152297 +
             (C2805 * C152344 + C2804 * C152345 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C23273) *
                 C152226) *
                C152068 -
            ((C33000 + C32999 + C32998) * C152226 +
             (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                C152280) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C3235 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C152026 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C3235 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C152344 + C437 * C152345 + C820 * C23273) * C152297 +
            (C1198 * C152344 + C1199 * C152345 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C23273) *
                C152226) *
               C151981 * C152026 -
           ((C32701 + C32700 + C32699) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C152375 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C151981 * C152357 -
           ((C34257 + C34256 + C34255) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C152371 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152375 -
           ((C34060 + C34059 + C34058) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152357 +
           ((C1820 * C152344 + C1819 * C152345 + C1818 * C23273) * C152297 +
            (C16906 * C152344 + C33767 * C152345 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C23273) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C4241 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152022 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C4241) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
              C434 * C152345 + C435 * C23273) *
                 C152297 +
             (C33563 + C33564 + C33565) * C152226) *
                C4241 -
            ((C33566 + C33567 + C33568) * C152226 +
             (C33565 + C33564 + C33563) * C152297) *
                C152068) *
               C3719) *
              C152265 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C4241) *
               C152022 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C4241 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152029 +
           (((C34058 + C34059 + C34060) * C152297 +
             (C15117 * C152344 + C15118 * C152345 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C23273) *
                 C152226) *
                C152068 -
            ((C34060 + C34059 + C34058) * C152226 +
             (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                C4241) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152064 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152071 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C34816 + C34817 + C34818) * C152226) *
               C4913) *
              C152022 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152071 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C152064 -
           ((C35506 + C35507 + C35508) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C4913) *
              C152029 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C152064 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152071 +
           ((C33568 + C33567 + C33566) * C152297 +
            (C16695 * C152344 + C16694 * C152345 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C23273) *
                C152226) *
               C4913) *
              C3719) *
         C151935) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C4241 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C152375 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152068 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C4241 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152068) *
              C152357 +
          (((C34255 + C34256 + C34257) * C152297 +
            (C17409 * C152344 + C16905 * C152345 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C23273) *
                C152226) *
               C152068 -
           ((C34257 + C34256 + C34255) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C4241 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C3235 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C4241) *
               C152026) *
              C152365 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C4241) *
               C3235 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C4241 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
             (C32305 + C32306 + C32307) * C152226) *
                C4241 -
            ((C32308 + C32309 + C32310) * C152226 +
             (C32307 + C32306 + C32305) * C152297) *
                C152068) *
               C3235 +
           (((C32998 + C32999 + C33000) * C152297 +
             (C2805 * C152344 + C2804 * C152345 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C23273) *
                 C152226) *
                C152068 -
            ((C33000 + C32999 + C32998) * C152226 +
             (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152376 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152373 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C34816 + C34817 + C34818) * C152226) *
               C152360 -
           ((C34819 + C34820 + C34821) * C152226 +
            (C34818 + C34817 + C34816) * C152297) *
               C152337) *
              C3235 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152373 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C152376 -
           ((C35506 + C35507 + C35508) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C152360 +
           ((C35508 + C35507 + C35506) * C152297 +
            (C18718 * C152344 + C18308 * C152345 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C23273) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152064 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152071 +
            ((C32298 + C32297 + C32296) * C152297 +
             (C34816 + C34817 + C34818) * C152226) *
                C4913) *
               C3235 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152071 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152064 -
            ((C35506 + C35507 + C35508) * C152226 +
             (C33562 + C33561 + C33560) * C152297) *
                C4913) *
               C152026) *
              C152265 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152071 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152064 -
            ((C35309 + C35310 + C35311) * C152226 +
             (C32304 + C32303 + C32302) * C152297) *
                C4913) *
               C3235 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152064 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152071 +
            ((C35114 + C35113 + C35112) * C152297 +
             (C16093 * C152344 + C16094 * C152345 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C23273) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C4241 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C3235 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C4241) *
               C152026) *
              C152365 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C4241) *
               C3235 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C4241 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
             (C32305 + C32306 + C32307) * C152226) *
                C4241 -
            ((C32308 + C32309 + C32310) * C152226 +
             (C32307 + C32306 + C32305) * C152297) *
                C152068) *
               C3235 +
           (((C32998 + C32999 + C33000) * C152297 +
             (C2805 * C152344 + C2804 * C152345 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C23273) *
                 C152226) *
                C152068 -
            ((C33000 + C32999 + C32998) * C152226 +
             (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C4241 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C152375 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152068 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C4241 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152068) *
              C152357 +
          (((C34255 + C34256 + C34257) * C152297 +
            (C17409 * C152344 + C16905 * C152345 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C23273) *
                C152226) *
               C152068 -
           ((C34257 + C34256 + C34255) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C1795 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C151981 * C1797 -
           ((C33767 * C23273 + C16906 * C152345 + C17408 * C152344) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C1796 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C1795 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C1797 +
           ((C1820 * C152344 + C1819 * C152345 + C1818 * C23273) * C152297 +
            (C16906 * C152344 + C33767 * C152345 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C23273) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C152279 -
           ((C1197 * C23273 + C1196 * C152345 + C16091 * C152344) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152026) *
              C807 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C1196 * C152344 + C1197 * C152345 + C1198 * C23273) * C152226) *
               C151981 * C152026 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152279) *
              C808 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C152279 -
           ((C1199 * C23273 + C1198 * C152345 + C1197 * C152344) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152026) *
              C809 +
          (((C431 * C152344 + C437 * C152345 + C820 * C23273) * C152297 +
            (C1198 * C152344 + C1199 * C152345 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C23273) *
                C152226) *
               C151981 * C152026 -
           ((C961 * C23273 + C674 * C152345 + C668 * C152344) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C2325 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C2326 +
            ((C32298 + C32297 + C32296) * C152297 +
             (C34816 + C34817 + C34818) * C152226) *
                C152324) *
               C152279 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C2326 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C2325 -
            ((C16094 * C23273 + C16093 * C152345 + C16691 * C152344) * C152226 +
             (C33562 + C33561 + C33560) * C152297) *
                C152324) *
               C152026) *
              C152265 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C2326 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C2325 -
            ((C2957 * C23273 + C2958 * C152345 + C2959 * C152344) * C152226 +
             (C32304 + C32303 + C32302) * C152297) *
                C152324) *
               C152279 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C2325 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C2326 +
            ((C35114 + C35113 + C35112) * C152297 +
             (C16093 * C152344 + C16094 * C152345 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C23273) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152280 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C1795 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152068 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C152280 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152068) *
              C1797 +
          (((C34255 + C34256 + C34257) * C152297 +
            (C17409 * C152344 + C16905 * C152345 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C23273) *
                C152226) *
               C152068 -
           ((C34257 + C34256 + C34255) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152280 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152279 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C16092 * C152344 + C2806 * C152345 + C2805 * C23273) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152280) *
               C152026) *
              C347 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152280) *
               C152279 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152280 -
            ((C2804 * C23273 + C2805 * C152345 + C2806 * C152344) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
             (C32305 + C32306 + C32307) * C152226) *
                C152280 -
            ((C32308 + C32309 + C32310) * C152226 +
             (C32307 + C32306 + C32305) * C152297) *
                C152068) *
               C152279 +
           (((C32998 + C32999 + C33000) * C152297 +
             (C2805 * C152344 + C2804 * C152345 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C23273) *
                 C152226) *
                C152068 -
            ((C33000 + C32999 + C32998) * C152226 +
             (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C2936 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C2937 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C34816 + C34817 + C34818) * C152226) *
               C2938 -
           ((C34819 + C34820 + C34821) * C152226 +
            (C34818 + C34817 + C34816) * C152297) *
               C152337) *
              C152279 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C2937 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C2936 -
           ((C35506 + C35507 + C35508) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C2938 +
           ((C35508 + C35507 + C35506) * C152297 +
            (C18718 * C152344 + C18308 * C152345 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C23273) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
                C193 * C152345 + C194 * C23273) *
                   C152297 +
               (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
                  C151981 * C151963 * C129 -
              ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
               (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                  C151981 * C151963 * C130 +
              ((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
               (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
                  C151981 * C151963 * C131 -
              ((C961 * C23273 + C674 * C152345 + C668 * C152344) * C152226 +
               (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
                  C151981 * C151963 * C132 +
              ((C196 * C152344 + C197 * C152345 + C198 * C23273) * C152297 +
               (C674 * C152344 + C961 * C152345 +
                (C134 * C952 + C958 + C958 + C152146 * C954) * C23273) *
                   C152226) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
                 C193 * C152345 + C194 * C23273) *
                    C152297 +
                (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
                   C151981 * C152368 -
               ((C1197 * C23273 + C1196 * C152345 + C16091 * C152344) *
                    C152226 +
                (C432 * C23273 + C433 * C152345 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                    C152297) *
                   C151981 * C152352 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
                 C434 * C152345 + C435 * C23273) *
                    C152297 +
                (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) *
                    C152226) *
                   C151981 * C152321) *
                  C347 +
              (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
                (C1196 * C152344 + C1197 * C152345 + C1198 * C23273) *
                    C152226) *
                   C151981 * C152352 -
               ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
                (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                   C151981 * C152368 -
               ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
                (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                   C151981 * C152321) *
                  C348 +
              (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
                (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
                   C151981 * C152368 -
               ((C1199 * C23273 + C1198 * C152345 + C1197 * C152344) * C152226 +
                (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                   C151981 * C152352 +
               ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
                (C2032 * C152344 + C2031 * C152345 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                    C152226) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152369 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152354 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152354 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C152369 -
           ((C2957 * C23273 + C2958 * C152345 + C2959 * C152344) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C152324) *
              C151963 * C348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C152369 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152354 +
           ((C32310 + C32309 + C32308) * C152297 +
            (C2958 * C152344 + C2957 * C152345 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C23273) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C1345 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C1346 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C1345 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C1345 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C1346 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C32293 + C32294 + C32295) * C152226) *
              C151981 * C1433 -
          ((C32994 + C32993 + C32992) * C152226 +
           (C432 * C23273 + C433 * C152345 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
               C152297) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
            C434 * C152345 + C435 * C23273) *
               C152297 +
           (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
              C151981 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C23273 +
            C16906 * C152345 + C17408 * C152344) *
               C152226 +
           (C1819 * C23273 + C1820 * C152345 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
               C152297) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152344 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C152345 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C23273) *
               C152297 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152344 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C152345 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C23273) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152369 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152354 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C1345 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152354 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C152369 -
           ((C16094 * C23273 + C16093 * C152345 + C16691 * C152344) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C152369 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152354 +
           ((C33568 + C33567 + C33566) * C152297 +
            (C16695 * C152344 + C16694 * C152345 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C23273) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C2325 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C2326 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C2326 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C2325 -
           ((C2957 * C23273 + C2958 * C152345 + C2959 * C152344) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C2325 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C2326 +
           ((C32310 + C32309 + C32308) * C152297 +
            (C2958 * C152344 + C2957 * C152345 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C23273) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C2325 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C2326 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C152368 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C2326 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C2325 -
           ((C16094 * C23273 + C16093 * C152345 + C16691 * C152344) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C2325 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C2326 +
           ((C33568 + C33567 + C33566) * C152297 +
            (C16695 * C152344 + C16694 * C152345 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C23273) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C32293 + C32294 + C32295) * C152226) *
              C2556 -
          ((C32296 + C32297 + C32298) * C152226 +
           (C32295 + C32294 + C32293) * C152297) *
              C2557 +
          ((C32298 + C32297 + C32296) * C152297 +
           (C34816 + C34817 + C34818) * C152226) *
              C2558 -
          ((C34819 + C34820 + C34821) * C152226 +
           (C34818 + C34817 + C34816) * C152297) *
              C2559 +
          ((C34821 + C34820 + C34819) * C152297 +
           (C18002 * C152344 + C18001 * C152345 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C23273) *
               C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152280 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C1345 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
              C434 * C152345 + C435 * C23273) *
                 C152297 +
             (C33563 + C33564 + C33565) * C152226) *
                C152280 -
            ((C33566 + C33567 + C33568) * C152226 +
             (C33565 + C33564 + C33563) * C152297) *
                C152068) *
               C152321) *
              C152265 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152280) *
               C1345 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152280 -
            ((C2804 * C23273 + C2805 * C152345 + C2806 * C152344) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C1346 +
           (((C34058 + C34059 + C34060) * C152297 +
             (C15117 * C152344 + C15118 * C152345 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C23273) *
                 C152226) *
                C152068 -
            ((C34060 + C34059 + C34058) * C152226 +
             (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152280 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C151963 * C807 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152068 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C152280) *
              C151963 * C808 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C152280 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152068) *
              C151963 * C809 +
          (((C32699 + C32700 + C32701) * C152297 +
            (C673 * C152344 + C675 * C152345 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C23273) *
                C152226) *
               C152068 -
           ((C32701 + C32700 + C32699) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C2936 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C2937 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C34816 + C34817 + C34818) * C152226) *
               C2938 -
           ((C34819 + C34820 + C34821) * C152226 +
            (C34818 + C34817 + C34816) * C152297) *
               C152337) *
              C151963 * C152265 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C2937 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C2936 -
           ((C35309 + C35310 + C35311) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C2938 +
           ((C35311 + C35310 + C35309) * C152297 +
            (C15377 * C152344 + C15378 * C152345 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C23273) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
               C151981 * C152368 -
           ((C1197 * C23273 + C1196 * C152345 + C16091 * C152344) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C1196 * C152344 + C1197 * C152345 + C1198 * C23273) * C152226) *
               C151981 * C152352 -
           ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152368 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
               C151981 * C152368 -
           ((C1199 * C23273 + C1198 * C152345 + C1197 * C152344) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152352 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
           (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
              C151981 * C151963 * C130 +
          ((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
           (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C23273 + C674 * C152345 + C668 * C152344) * C152226 +
           (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
              C151981 * C151963 * C132 +
          ((C196 * C152344 + C197 * C152345 + C198 * C23273) * C152297 +
           (C674 * C152344 + C961 * C152345 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C23273) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C1345 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C1346 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C1345 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C1345 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C1346 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C32293 + C32294 + C32295) * C152226) *
              C151981 * C1433 -
          ((C32994 + C32993 + C32992) * C152226 +
           (C432 * C23273 + C433 * C152345 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
               C152297) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
            C434 * C152345 + C435 * C23273) *
               C152297 +
           (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
              C151981 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C23273 +
            C16906 * C152345 + C17408 * C152344) *
               C152226 +
           (C1819 * C23273 + C1820 * C152345 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
               C152297) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152344 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C152345 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C23273) *
               C152297 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152344 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C152345 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C23273) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C2325 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C2326 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C2326 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C2325 -
           ((C2957 * C23273 + C2958 * C152345 + C2959 * C152344) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C2325 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C2326 +
           ((C32310 + C32309 + C32308) * C152297 +
            (C2958 * C152344 + C2957 * C152345 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C23273) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C2325 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C2326 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C152368 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C2326 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C2325 -
           ((C16094 * C23273 + C16093 * C152345 + C16691 * C152344) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C2325 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C2326 +
           ((C33568 + C33567 + C33566) * C152297 +
            (C16695 * C152344 + C16694 * C152345 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C23273) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C4241 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152279 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C4241) *
               C152026) *
              C151940 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C4241) *
               C152279 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C4241 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
             (C32305 + C32306 + C32307) * C152226) *
                C4241 -
            ((C32308 + C32309 + C32310) * C152226 +
             (C32307 + C32306 + C32305) * C152297) *
                C152068) *
               C152279 +
           (((C32998 + C32999 + C33000) * C152297 +
             (C2805 * C152344 + C2804 * C152345 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C23273) *
                 C152226) *
                C152068 -
            ((C33000 + C32999 + C32998) * C152226 +
             (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                C4241) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152064 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152071 +
            ((C32298 + C32297 + C32296) * C152297 +
             (C34816 + C34817 + C34818) * C152226) *
                C4913) *
               C152279 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152071 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152064 -
            ((C35506 + C35507 + C35508) * C152226 +
             (C33562 + C33561 + C33560) * C152297) *
                C4913) *
               C152026) *
              C3375 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152071 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152064 -
            ((C35309 + C35310 + C35311) * C152226 +
             (C32304 + C32303 + C32302) * C152297) *
                C4913) *
               C152279 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152064 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152071 +
            ((C35114 + C35113 + C35112) * C152297 +
             (C16093 * C152344 + C16094 * C152345 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C23273) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C4241 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152368 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
              C434 * C152345 + C435 * C23273) *
                 C152297 +
             (C33563 + C33564 + C33565) * C152226) *
                C4241 -
            ((C33566 + C33567 + C33568) * C152226 +
             (C33565 + C33564 + C33563) * C152297) *
                C152068) *
               C152321) *
              C3375 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C4241) *
               C152368 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C4241 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152352 +
           (((C34058 + C34059 + C34060) * C152297 +
             (C15117 * C152344 + C15118 * C152345 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C23273) *
                 C152226) *
                C152068 -
            ((C34060 + C34059 + C34058) * C152226 +
             (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C4241 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C151963 * C152374 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152068 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C4241 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152068) *
              C151963 * C152350 +
          (((C32699 + C32700 + C32701) * C152297 +
            (C673 * C152344 + C675 * C152345 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C23273) *
                C152226) *
               C152068 -
           ((C32701 + C32700 + C32699) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152376 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152373 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C34816 + C34817 + C34818) * C152226) *
               C152360 -
           ((C34819 + C34820 + C34821) * C152226 +
            (C34818 + C34817 + C34816) * C152297) *
               C152337) *
              C151963 * C3375 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152373 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C152376 -
           ((C35309 + C35310 + C35311) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C152360 +
           ((C35311 + C35310 + C35309) * C152297 +
            (C15377 * C152344 + C15378 * C152345 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C23273) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152064 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152071 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C34816 + C34817 + C34818) * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152071 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C152064 -
           ((C35309 + C35310 + C35311) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C4913) *
              C151963 * C151949 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C152064 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152071 +
           ((C32310 + C32309 + C32308) * C152297 +
            (C2958 * C152344 + C2957 * C152345 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C23273) *
                C152226) *
               C4913) *
              C151963 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C4241 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C151963 * C152374 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152068 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C4241 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152068) *
              C151963 * C152350 +
          (((C32699 + C32700 + C32701) * C152297 +
            (C673 * C152344 + C675 * C152345 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C23273) *
                C152226) *
               C152068 -
           ((C32701 + C32700 + C32699) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C4241 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152368 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
              C434 * C152345 + C435 * C23273) *
                 C152297 +
             (C33563 + C33564 + C33565) * C152226) *
                C4241 -
            ((C33566 + C33567 + C33568) * C152226 +
             (C33565 + C33564 + C33563) * C152297) *
                C152068) *
               C152321) *
              C3375 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C4241) *
               C152368 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C4241 -
            ((C35112 + C35113 + C35114) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152352 +
           (((C34058 + C34059 + C34060) * C152297 +
             (C15117 * C152344 + C15118 * C152345 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C23273) *
                 C152226) *
                C152068 -
            ((C34060 + C34059 + C34058) * C152226 +
             (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C152279 -
           ((C1197 * C23273 + C1196 * C152345 + C16091 * C152344) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152026) *
              C807 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C1196 * C152344 + C1197 * C152345 + C1198 * C23273) * C152226) *
               C151981 * C152026 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152279) *
              C808 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C152279 -
           ((C1199 * C23273 + C1198 * C152345 + C1197 * C152344) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152026) *
              C809 +
          (((C431 * C152344 + C437 * C152345 + C820 * C23273) * C152297 +
            (C1198 * C152344 + C1199 * C152345 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C23273) *
                C152226) *
               C151981 * C152026 -
           ((C961 * C23273 + C674 * C152345 + C668 * C152344) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C1795 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C151981 * C1797 -
           ((C33767 * C23273 + C16906 * C152345 + C17408 * C152344) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C1796 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C1795 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C1797 +
           ((C1820 * C152344 + C1819 * C152345 + C1818 * C23273) * C152297 +
            (C16906 * C152344 + C33767 * C152345 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C23273) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152280 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C152279 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C16092 * C152344 + C2806 * C152345 + C2805 * C23273) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152280) *
               C152026) *
              C347 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152280) *
               C152279 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152280 -
            ((C2804 * C23273 + C2805 * C152345 + C2806 * C152344) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
             (C32305 + C32306 + C32307) * C152226) *
                C152280 -
            ((C32308 + C32309 + C32310) * C152226 +
             (C32307 + C32306 + C32305) * C152297) *
                C152068) *
               C152279 +
           (((C32998 + C32999 + C33000) * C152297 +
             (C2805 * C152344 + C2804 * C152345 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C23273) *
                 C152226) *
                C152068 -
            ((C33000 + C32999 + C32998) * C152226 +
             (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152280 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C1795 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152068 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C152280 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152068) *
              C1797 +
          (((C34255 + C34256 + C34257) * C152297 +
            (C17409 * C152344 + C16905 * C152345 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C23273) *
                C152226) *
               C152068 -
           ((C34257 + C34256 + C34255) * C152226 +
            (C1819 * C23273 + C1820 * C152345 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
                C152297) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
               C151981 * C152368 -
           ((C1197 * C23273 + C1196 * C152345 + C16091 * C152344) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C1196 * C152344 + C1197 * C152345 + C1198 * C23273) * C152226) *
               C151981 * C152352 -
           ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152368 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
               C151981 * C152368 -
           ((C1199 * C23273 + C1198 * C152345 + C1197 * C152344) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152352 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
           (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
              C151981 * C151963 * C130 +
          ((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
           (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C23273 + C674 * C152345 + C668 * C152344) * C152226 +
           (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
              C151981 * C151963 * C132 +
          ((C196 * C152344 + C197 * C152345 + C198 * C23273) * C152297 +
           (C674 * C152344 + C961 * C152345 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C23273) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152369 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152354 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152354 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C152369 -
           ((C2957 * C23273 + C2958 * C152345 + C2959 * C152344) * C152226 +
            (C32304 + C32303 + C32302) * C152297) *
               C152324) *
              C151963 * C348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C152369 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152354 +
           ((C32310 + C32309 + C32308) * C152297 +
            (C2958 * C152344 + C2957 * C152345 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C23273) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C1345 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C1346 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C1345 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C1345 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C1346 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C32293 + C32294 + C32295) * C152226) *
              C151981 * C1433 -
          ((C32994 + C32993 + C32992) * C152226 +
           (C432 * C23273 + C433 * C152345 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
               C152297) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
            C434 * C152345 + C435 * C23273) *
               C152297 +
           (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
              C151981 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C23273 +
            C16906 * C152345 + C17408 * C152344) *
               C152226 +
           (C1819 * C23273 + C1820 * C152345 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
               C152297) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152344 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C152345 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C23273) *
               C152297 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152344 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C152345 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C23273) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152369 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152354 +
           ((C32298 + C32297 + C32296) * C152297 +
            (C15376 * C152344 + C2959 * C152345 + C2958 * C23273) * C152226) *
               C152324) *
              C1345 +
          (((C32992 + C32993 + C32994) * C152297 +
            (C33560 + C33561 + C33562) * C152226) *
               C152354 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C152369 -
           ((C16094 * C23273 + C16093 * C152345 + C16691 * C152344) * C152226 +
            (C33562 + C33561 + C33560) * C152297) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C33563 + C33564 + C33565) * C152226) *
               C152369 -
           ((C33566 + C33567 + C33568) * C152226 +
            (C33565 + C33564 + C33563) * C152297) *
               C152354 +
           ((C33568 + C33567 + C33566) * C152297 +
            (C16695 * C152344 + C16694 * C152345 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C23273) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C152280 -
           ((C32296 + C32297 + C32298) * C152226 +
            (C32295 + C32294 + C32293) * C152297) *
               C152068) *
              C151963 * C807 +
          (((C32299 + C32300 + C32301) * C152297 +
            (C32302 + C32303 + C32304) * C152226) *
               C152068 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C152280) *
              C151963 * C808 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C152280 -
           ((C32308 + C32309 + C32310) * C152226 +
            (C32307 + C32306 + C32305) * C152297) *
               C152068) *
              C151963 * C809 +
          (((C32699 + C32700 + C32701) * C152297 +
            (C673 * C152344 + C675 * C152345 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C23273) *
                C152226) *
               C152068 -
           ((C32701 + C32700 + C32699) * C152226 +
            (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
              C193 * C152345 + C194 * C23273) *
                 C152297 +
             (C32293 + C32294 + C32295) * C152226) *
                C152280 -
            ((C32296 + C32297 + C32298) * C152226 +
             (C32295 + C32294 + C32293) * C152297) *
                C152068) *
               C1345 +
           (((C32992 + C32993 + C32994) * C152297 +
             (C33560 + C33561 + C33562) * C152226) *
                C152068 -
            ((C32994 + C32993 + C32992) * C152226 +
             (C432 * C23273 + C433 * C152345 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                 C152297) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
              C434 * C152345 + C435 * C23273) *
                 C152297 +
             (C33563 + C33564 + C33565) * C152226) *
                C152280 -
            ((C33566 + C33567 + C33568) * C152226 +
             (C33565 + C33564 + C33563) * C152297) *
                C152068) *
               C152321) *
              C152265 +
          ((((C32299 + C32300 + C32301) * C152297 +
             (C32302 + C32303 + C32304) * C152226) *
                C152068 -
            ((C32301 + C32300 + C32299) * C152226 +
             (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
                C152280) *
               C1345 +
           (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
             (C32995 + C32996 + C32997) * C152226) *
                C152280 -
            ((C2804 * C23273 + C2805 * C152345 + C2806 * C152344) * C152226 +
             (C32997 + C32996 + C32995) * C152297) *
                C152068) *
               C1346 +
           (((C34058 + C34059 + C34060) * C152297 +
             (C15117 * C152344 + C15118 * C152345 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C23273) *
                 C152226) *
                C152068 -
            ((C34060 + C34059 + C34058) * C152226 +
             (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
           (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
              C151981 * C151963 * C130 +
          ((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
           (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C23273 + C674 * C152345 + C668 * C152344) * C152226 +
           (C197 * C23273 + C196 * C152345 + C195 * C152344) * C152297) *
              C151981 * C151963 * C132 +
          ((C196 * C152344 + C197 * C152345 + C198 * C23273) * C152297 +
           (C674 * C152344 + C961 * C152345 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C23273) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C15374 * C152344 + C670 * C152345 + C669 * C23273) * C152226) *
               C151981 * C152368 -
           ((C1197 * C23273 + C1196 * C152345 + C16091 * C152344) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C1196 * C152344 + C1197 * C152345 + C1198 * C23273) * C152226) *
               C151981 * C152352 -
           ((C668 * C23273 + C669 * C152345 + C670 * C152344) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C152368 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C669 * C152344 + C668 * C152345 + C674 * C23273) * C152226) *
               C151981 * C152368 -
           ((C1199 * C23273 + C1198 * C152345 + C1197 * C152344) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C152352 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
             C193 * C152345 + C194 * C23273) *
                C152297 +
            (C32293 + C32294 + C32295) * C152226) *
               C151981 * C1345 -
           ((C32994 + C32993 + C32992) * C152226 +
            (C432 * C23273 + C433 * C152345 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
                C152297) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
             C434 * C152345 + C435 * C23273) *
                C152297 +
            (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152344 + C432 * C152345 + C431 * C23273) * C152297 +
            (C32995 + C32996 + C32997) * C152226) *
               C151981 * C1346 -
           ((C32301 + C32300 + C32299) * C152226 +
            (C195 * C23273 + C194 * C152345 + C193 * C152344) * C152297) *
               C151981 * C1345 -
           ((C2031 * C23273 + C2032 * C152345 + C2033 * C152344) * C152226 +
            (C436 * C23273 + C435 * C152345 + C434 * C152344) * C152297) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152344 + C195 * C152345 + C196 * C23273) * C152297 +
            (C32305 + C32306 + C32307) * C152226) *
               C151981 * C1345 -
           ((C33000 + C32999 + C32998) * C152226 +
            (C437 * C23273 + C431 * C152345 + C432 * C152344) * C152297) *
               C151981 * C1346 +
           ((C435 * C152344 + C436 * C152345 + C438 * C23273) * C152297 +
            (C2032 * C152344 + C2031 * C152345 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C23273) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152344 +
            C193 * C152345 + C194 * C23273) *
               C152297 +
           (C32293 + C32294 + C32295) * C152226) *
              C151981 * C1433 -
          ((C32994 + C32993 + C32992) * C152226 +
           (C432 * C23273 + C433 * C152345 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152344) *
               C152297) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152344 +
            C434 * C152345 + C435 * C23273) *
               C152297 +
           (C16692 * C152344 + C2033 * C152345 + C2032 * C23273) * C152226) *
              C151981 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C23273 +
            C16906 * C152345 + C17408 * C152344) *
               C152226 +
           (C1819 * C23273 + C1820 * C152345 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152344) *
               C152297) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152344 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C152345 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C23273) *
               C152297 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152344 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C152345 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C23273) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C152022 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152029 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C3719) *
                       C151940 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152029 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C152022 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C3719) *
                       C151949 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C152022 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C152029 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C3719) *
                       C3722)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C152022 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152029 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C3719) *
                       C151940 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152029 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C152022 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C3719) *
                       C151949 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C152022 -
                    ((C7121 + C7122 + C7123) * C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C152029 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C3719) *
                       C3722)) /
                     (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152022 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C152280 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C3719) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C152022 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152029 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152022 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C152280 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C3719) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C152022 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152375 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152371 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152357 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C151981 * C152331) *
              C3375 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152371 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152375 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152357 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C3235 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152026) *
              C152374 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152026 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C3235) *
              C152367 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C3235 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C152026) *
              C152350 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
               C152162 * C151981 * C152026 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152369 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152354 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C152324) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152354 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152369 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152354 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152369 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C152324) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152369 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152354 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C3235 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152026 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C3235 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C6221 +
            (C6223 * C358 + C7112 + C7112 + C6218 * C382 + C6225 * C359 +
             C7113 + C7113 + C6219 * C383 + C6227 * C1801 + C7114 + C7114 +
             C6220 * C1803) *
                C151911) *
               C152162 * C151981 * C152026 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152375 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152357 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152371 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152375 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C6221 +
            (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 + C6225 * C1445 +
             C8490 + C8490 + C6219 * C1461 + C6227 * C8479 + C8491 + C8491 +
             C6220 * C8481) *
                C151911) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152369 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152354 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C152324) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152354 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152369 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152354 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152369 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C152324) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152369 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152354 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C152280 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C152280 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C3235 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152026) *
                       C152374 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152026 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C3235) *
                       C152367 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C3235 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C152026) *
                       C152350 +
                   ((C431 * C122 + C437 * C123 + C820 * C124 +
                     (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
                        C152162 * C151981 * C152026 -
                    (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                        C152162 * C151981 * C3235) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C152375 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152371 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152357 -
                    (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                     (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                        C152162 * C151981 * C152331) *
                       C3375 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152371 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C152375 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152357 +
                    (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                     (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C3235 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152026) *
                       C152374 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152026 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C3235) *
                       C152367 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C3235 -
                    ((C7121 + C7122 + C7123) * C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C152026) *
                       C152350 +
                   (((C7123 + C7122 + C7121) * C6221 +
                     (C6223 * C358 + C7112 + C7112 + C6218 * C382 +
                      C6225 * C359 + C7113 + C7113 + C6219 * C383 +
                      C6227 * C1801 + C7114 + C7114 + C6220 * C1803) *
                         C151911) *
                        C152162 * C151981 * C152026 -
                    ((C6305 + C6306 + C6307) * C151911 +
                     (C6304 + C6303 + C6302) * C6221) *
                        C152162 * C151981 * C3235) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C152375 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152371 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152357 -
                    ((C8498 + C8499 + C8500) * C151911 +
                     (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 +
                      C6225 * C1443 + C8024 + C8024 + C6219 * C1459 +
                      C6223 * C1442 + C8025 + C8025 + C6218 * C1458) *
                         C6221) *
                        C152162 * C151981 * C152331) *
                       C3375 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152371 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C152375 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152357 +
                    ((C8500 + C8499 + C8498) * C6221 +
                     (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 +
                      C6225 * C1445 + C8490 + C8490 + C6219 * C1461 +
                      C6227 * C8479 + C8491 + C8491 + C6220 * C8481) *
                         C151911) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152022 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C3719) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152022 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152029 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152022 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C4241 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C3719) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152022 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C152064 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                        C152162 * C152071 +
                    ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152162 * C4913) *
                       C152022 +
                   (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                     C1196 * C123 + C1197 * C124 + C1198 * C125) *
                        C152162 * C152071 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C152064 -
                    (C2804 * C125 + C2805 * C124 + C2806 * C123 +
                     (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                        C152162 * C4913) *
                       C152029 +
                   (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C152064 -
                    (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                     (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                        C152162 * C152071 +
                    ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
                     (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
                     (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
                     (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
                        C152162 * C4913) *
                       C3719) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C152064 -
                    ((C6900 + C6901 + C6902) * C151911 +
                     (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 +
                      C6225 * C1155 + C6838 + C6838 + C6219 * C1167 +
                      C6223 * C590 + C6839 + C6839 + C6218 * C614) *
                         C6221) *
                        C152162 * C152071 +
                    ((C6223 * C591 + C6840 + C6840 + C6218 * C615 +
                      C6225 * C1620 + C6841 + C6841 + C6219 * C1644 +
                      C6227 * C1625 + C6842 + C6842 + C6220 * C1649) *
                         C6221 +
                     (C6903 + C6904 + C6905) * C151911) *
                        C152162 * C4913) *
                       C152022 +
                   (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 +
                      C6225 * C1624 + C7627 + C7627 + C6219 * C1648 +
                      C6227 * C2163 + C7628 + C7628 + C6220 * C2171) *
                         C6221 +
                     (C7662 + C7663 + C7664) * C151911) *
                        C152162 * C152071 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C152064 -
                    ((C9914 + C9915 + C9916) * C151911 +
                     (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 +
                      C6225 * C1625 + C8272 + C8272 + C6219 * C1649 +
                      C6223 * C1620 + C8273 + C8273 + C6218 * C1644) *
                         C6221) *
                        C152162 * C4913) *
                       C152029 +
                   (((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C152064 -
                    ((C8809 + C8810 + C8811) * C151911 +
                     (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 +
                      C6225 * C2163 + C8278 + C8278 + C6219 * C2171 +
                      C6223 * C1624 + C8279 + C8279 + C6218 * C1648) *
                         C6221) *
                        C152162 * C152071 +
                    ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 +
                      C6225 * C8250 + C8281 + C8281 + C6219 * C8262 +
                      C6227 * C8253 + C8282 + C8282 + C6220 * C8265) *
                         C6221 +
                     (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 +
                      C6225 * C8249 + C8284 + C8284 + C6219 * C8261 +
                      C6227 * C8254 + C8285 + C8285 + C6220 * C8266) *
                         C151911) *
                        C152162 * C4913) *
                       C3719) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C152375 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152068 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C4241) *
              C152371 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C4241 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152068) *
              C152357 +
          (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
               C152162 * C152068 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152376 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152373 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152360 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C3235 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152373 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152376 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C152360 +
           ((C134 * C3089 + C3102 + C3102 + C152146 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152146 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152146 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C125) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C4241 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C152375 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C4241 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C152357 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152376 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152373 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152360 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C3235 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152373 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152376 -
           ((C9914 + C9915 + C9916) * C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152360 +
           ((C6223 * C3089 + C10332 + C10332 + C6218 * C3097 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6227 * C10325 + C10334 +
             C10334 + C6220 * C10329) *
                C6221 +
            (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
             C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
             C10337 + C6220 * C10330) *
                C151911) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152064 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152071 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C4913) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152071 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152064 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C4913) *
               C152026) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152071 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152064 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C4913) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152064 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152071 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152064 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152071 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C4913) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152071 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152064 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C4913) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152071 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152064 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C4913) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152064 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152071 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C152375 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152068 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C4241) *
              C152371 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C4241 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152068) *
              C152357 +
          (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
               C152162 * C152068 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C3235 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C4241 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C152375 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C4241 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C152357 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C1795 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C1796 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C1797 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C151981 * C152331) *
              C152265 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C1796 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C1795 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C1797 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C152279 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C152026) *
              C807 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C152026 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C152279) *
              C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C152279 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C152026) *
              C809 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
               C152162 * C151981 * C152026 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C2325 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C2326 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C152324) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C2326 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C2325 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C2326 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C2325 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C152324) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C2325 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C2326 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152279 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152026 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152279 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C6221 +
            (C6223 * C358 + C7112 + C7112 + C6218 * C382 + C6225 * C359 +
             C7113 + C7113 + C6219 * C383 + C6227 * C1801 + C7114 + C7114 +
             C6220 * C1803) *
                C151911) *
               C152162 * C151981 * C152026 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1795 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C1797 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1796 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1795 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C6221 +
            (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 + C6225 * C1445 +
             C8490 + C8490 + C6219 * C1461 + C6227 * C8479 + C8491 + C8491 +
             C6220 * C8481) *
                C151911) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C2325 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C2326 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C152324) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C2326 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C2325 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C2326 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C2325 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C152324) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C2325 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C2326 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152280 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C1795 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152068 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152280) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C152280 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152068) *
              C1797 +
          (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
               C152162 * C152068 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152026) *
              C347 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C152280 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C152279 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2937 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C152279 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C2937 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C2936 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C2938 +
           ((C134 * C3089 + C3102 + C3102 + C152146 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152146 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152146 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C125) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C152280 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C1795 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152280 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C1797 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2936 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2937 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C2938 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C152279 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C2937 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C2936 -
           ((C9914 + C9915 + C9916) * C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C2938 +
           ((C6223 * C3089 + C10332 + C10332 + C6218 * C3097 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6227 * C10325 + C10334 +
             C10334 + C6220 * C10329) *
                C6221 +
            (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
             C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
             C10337 + C6220 * C10330) *
                C151911) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152162 * C151981 * C151963 * C129 -
              (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                  C152162 * C151981 * C151963 * C130 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                  C152162 * C151981 * C151963 * C131 -
              (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C152162 * C151981 * C151963 * C132 +
              (C196 * C122 + C197 * C123 + C198 * C124 +
               (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
                  C152162 * C151981 * C151963 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152162 * C151981 * C152368 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                   C152162 * C151981 * C152352 +
               ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152162 * C151981 * C152321) *
                  C347 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152162 * C151981 * C152352 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152162 * C151981 * C152368 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152162 * C151981 * C152368 -
               ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 +
                C437 * C124 + C431 * C123 + C432 * C122) *
                   C152162 * C151981 * C152352 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                   C152162 * C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152369 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152354 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C151963 * C347 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152354 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152369 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C152324) *
              C151963 * C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C152369 -
           ((C134 * C597 + C650 + C650 + C152146 * C621) * C125 + C674 * C124 +
            C668 * C123 + C669 * C122) *
               C152162 * C152354 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C151981 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C151981 * C152321) *
              C152365 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
               C151981 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C151981 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
               C151981 * C152321) *
              C152348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C151981 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
               C151981 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C151981 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
              C152162 * C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152162 * C151981 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
              C152162 * C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152369 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152354 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C1345 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152354 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152369 -
           ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C152324) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C152369 -
           ((C134 * C1621 + C1658 + C1658 + C152146 * C1645) * C125 +
            (C134 * C1622 + C1659 + C1659 + C152146 * C1646) * C124 +
            (C134 * C1623 + C1660 + C1660 + C152146 * C1647) * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152354 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2326 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C151963 * C152365 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C2326 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C2325 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C152324) *
              C151963 * C152348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C2325 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C2326 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2326 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152324) *
              C152368 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C2326 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C2325 -
           ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
               C152162 * C152324) *
              C152352 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C2325 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C2326 +
           ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152162 * C2556 -
          (C668 * C125 + C669 * C124 + C670 * C123 +
           (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
              C152162 * C2557 +
          ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
           C672 * C124 + C673 * C125) *
              C152162 * C2558 -
          ((C134 * C2561 + C2586 + C2586 + C152146 * C2577) * C125 +
           (C134 * C2562 + C2587 + C2587 + C152146 * C2578) * C124 +
           (C134 * C2563 + C2588 + C2588 + C152146 * C2579) * C123 +
           (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
              C152162 * C2559 +
          ((C134 * C2565 + C2590 + C2590 + C152146 * C2581) * C122 +
           (C134 * C2566 + C2591 + C2591 + C152146 * C2582) * C123 +
           (C134 * C2567 + C2592 + C2592 + C152146 * C2583) * C124 +
           (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C125) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C151963 * C129 -
          ((C6299 + C6300 + C6301) * C151911 +
           (C6298 + C6297 + C6296) * C6221) *
              C152162 * C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C6221 +
           (C6302 + C6303 + C6304) * C151911) *
              C152162 * C151981 * C151963 * C131 -
          ((C6305 + C6306 + C6307) * C151911 +
           (C6304 + C6303 + C6302) * C6221) *
              C152162 * C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C6221 +
           (C6223 * C141 + C6269 + C6269 + C6218 * C157 + C6225 * C360 + C6270 +
            C6270 + C6219 * C384 + C6227 * C361 + C6271 + C6271 +
            C6220 * C385) *
               C151911) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C152352 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C152368 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C152368 -
           ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 + C6225 * C357 +
             C6569 + C6569 + C6219 * C381 + C6223 * C350 + C6570 + C6570 +
             C6218 * C374) *
                C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152369 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152354 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152369 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152369 -
           ((C6227 * C1621 + C6870 + C6870 + C6220 * C1645 + C6225 * C1158 +
             C6871 + C6871 + C6219 * C1170 + C6223 * C587 + C6872 + C6872 +
             C6218 * C611) *
                C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152354 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C151981 * C1345 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C6221 +
            (C6604 + C6605 + C6606) * C151911) *
               C152162 * C151981 * C1346 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C151981 * C1345 -
           ((C6607 + C6608 + C6609) * C151911 +
            (C6603 + C6602 + C6601) * C6221) *
               C152162 * C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C151981 * C1345 -
           ((C7121 + C7122 + C7123) * C151911 +
            (C6606 + C6605 + C6604) * C6221) *
               C152162 * C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C6221 +
            (C6223 * C357 + C6571 + C6571 + C6218 * C381 + C6225 * C1439 +
             C6572 + C6572 + C6219 * C1455 + C6227 * C1446 + C6573 + C6573 +
             C6220 * C1462) *
                C151911) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C151981 * C1433 -
          ((C6598 + C6599 + C6600) * C151911 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C6221) *
              C152162 * C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C6221 +
           (C6601 + C6602 + C6603) * C151911) *
              C152162 * C151981 * C1435 -
          ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 + C6225 * C1444 +
            C8021 + C8021 + C6219 * C1460 + C6223 * C1441 + C8022 + C8022 +
            C6218 * C1457) *
               C151911 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C6221) *
              C152162 * C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C6221 +
           (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 + C6225 * C8007 +
            C8030 + C8030 + C6219 * C8015 + C6227 * C8010 + C8031 + C8031 +
            C6220 * C8018) *
               C151911) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152369 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C1345 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152354 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152369 -
           ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 + C6225 * C1626 +
             C8269 + C8269 + C6219 * C1650 + C6223 * C1619 + C8270 + C8270 +
             C6218 * C1643) *
                C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152369 -
           ((C6227 * C8251 + C8274 + C8274 + C6220 * C8263 + C6225 * C2164 +
             C8275 + C8275 + C6219 * C2172 + C6223 * C1623 + C8276 + C8276 +
             C6218 * C1647) *
                C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152354 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2325 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C2326 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C2325 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C2325 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C2326 +
           ((C6911 + C6910 + C6909) * C6221 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151911) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2325 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152324) *
              C152368 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C2326 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C2325 -
           ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 + C6225 * C1626 +
             C8269 + C8269 + C6219 * C1650 + C6223 * C1619 + C8270 + C8270 +
             C6218 * C1643) *
                C151911 +
            (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
             C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
             C6218 * C1644) *
                C6221) *
               C152162 * C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C2325 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C2326 +
           ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 + C6225 * C8250 +
             C8281 + C8281 + C6219 * C8262 + C6227 * C8253 + C8282 + C8282 +
             C6220 * C8265) *
                C6221 +
            (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
             C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
             C6220 * C8266) *
                C151911) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C6221 +
           (C6296 + C6297 + C6298) * C151911) *
              C152162 * C2556 -
          ((C6900 + C6901 + C6902) * C151911 +
           (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
            C6218 * C614) *
               C6221) *
              C152162 * C2557 +
          ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
            C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
            C6220 * C1649) *
               C6221 +
           (C6903 + C6904 + C6905) * C151911) *
              C152162 * C2558 -
          ((C6227 * C9575 + C9594 + C9594 + C6220 * C9587 + C6225 * C3090 +
            C9595 + C9595 + C6219 * C3098 + C6223 * C2563 + C9596 + C9596 +
            C6218 * C2579) *
               C151911 +
           (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
            C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
            C6218 * C2580) *
               C6221) *
              C152162 * C2559 +
          ((C6223 * C2565 + C9600 + C9600 + C6218 * C2581 + C6225 * C9577 +
            C9601 + C9601 + C6219 * C9589 + C6227 * C9578 + C9602 + C9602 +
            C6220 * C9590) *
               C6221 +
           (C6223 * C2566 + C9603 + C9603 + C6218 * C2582 + C6225 * C9579 +
            C9604 + C9604 + C6219 * C9591 + C6227 * C9580 + C9605 + C9605 +
            C6220 * C9592) *
               C151911) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C1345 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C152280 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C1345 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C1346 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152280 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C151963 * C807 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152068 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152280) *
              C151963 * C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C152280 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152068) *
              C151963 * C809 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
               C152162 * C152068 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C2937 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C151963 * C152265 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C2937 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C2936 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C2938 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C125) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152280 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C1345 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C152280 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C2936 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C2937 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C2938 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C151963 * C152265 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C2937 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C2936 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C2938 +
           ((C10131 + C10130 + C10129) * C6221 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151911) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] += (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C152368 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152352 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152352 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C152368 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C152368 -
                    ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 +
                     C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C152352 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152162 * C151981 * C151963 * C129 -
                   (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                       C152162 * C151981 * C151963 * C130 +
                   (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                       C152162 * C151981 * C151963 * C131 -
                   (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                       C152162 * C151981 * C151963 * C132 +
                   (C196 * C122 + C197 * C123 + C198 * C124 +
                    (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C1345 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C1346 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C1346 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C1345 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C1345 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C1346 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152162 * C151981 * C1433 -
                   (C431 * C125 + C432 * C124 + C433 * C123 +
                    (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                       C152162 * C151981 * C1434 +
                   ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                    C434 * C123 + C435 * C124 + C436 * C125) *
                       C152162 * C151981 * C1435 -
                   ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
                    (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
                    (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
                    (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                       C152162 * C151981 * C1436 +
                   ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
                    (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
                    (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
                    (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C2325 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                        C152162 * C2326 +
                    ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152162 * C152324) *
                       C151963 * C152365 +
                   ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                        C152162 * C2326 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C2325 -
                    (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                        C152162 * C152324) *
                       C151963 * C152348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C2325 -
                    (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                        C152162 * C2326 +
                    (C672 * C122 + C673 * C123 + C675 * C124 +
                     (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C2325 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                        C152162 * C2326 +
                    ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152162 * C152324) *
                       C152368 +
                   (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                     C1196 * C123 + C1197 * C124 + C1198 * C125) *
                        C152162 * C2326 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C2325 -
                    ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
                     (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
                     (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
                     (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                        C152162 * C152324) *
                       C152352 +
                   (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C2325 -
                    (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                     (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                        C152162 * C2326 +
                    ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
                     (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
                     (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
                     (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                     C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                     C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                        C6221 +
                    (C6296 + C6297 + C6298) * C151911) *
                       C152162 * C151981 * C151963 * C129 -
                   ((C6299 + C6300 + C6301) * C151911 +
                    (C6298 + C6297 + C6296) * C6221) *
                       C152162 * C151981 * C151963 * C130 +
                   ((C6301 + C6300 + C6299) * C6221 +
                    (C6302 + C6303 + C6304) * C151911) *
                       C152162 * C151981 * C151963 * C131 -
                   ((C6305 + C6306 + C6307) * C151911 +
                    (C6304 + C6303 + C6302) * C6221) *
                       C152162 * C151981 * C151963 * C132 +
                   ((C6307 + C6306 + C6305) * C6221 +
                    (C6223 * C141 + C6269 + C6269 + C6218 * C157 +
                     C6225 * C360 + C6270 + C6270 + C6219 * C384 +
                     C6227 * C361 + C6271 + C6271 + C6220 * C385) *
                        C151911) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152352 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152352 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C152368 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 +
                      C6225 * C357 + C6569 + C6569 + C6219 * C381 +
                      C6223 * C350 + C6570 + C6570 + C6218 * C374) *
                         C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C152352 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C1346 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C1345 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C7121 + C7122 + C7123) * C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C1346 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                     C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                     C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                        C6221 +
                    (C6296 + C6297 + C6298) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C6598 + C6599 + C6600) * C151911 +
                    (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                     C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                     C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                        C6221) *
                       C152162 * C151981 * C1434 +
                   ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                     C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                     C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                        C6221 +
                    (C6601 + C6602 + C6603) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 +
                     C6225 * C1444 + C8021 + C8021 + C6219 * C1460 +
                     C6223 * C1441 + C8022 + C8022 + C6218 * C1457) *
                        C151911 +
                    (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 +
                     C6225 * C1443 + C8024 + C8024 + C6219 * C1459 +
                     C6223 * C1442 + C8025 + C8025 + C6218 * C1458) *
                        C6221) *
                       C152162 * C151981 * C1436 +
                   ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 +
                     C6225 * C8008 + C8027 + C8027 + C6219 * C8016 +
                     C6227 * C8009 + C8028 + C8028 + C6220 * C8017) *
                        C6221 +
                    (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 +
                     C6225 * C8007 + C8030 + C8030 + C6219 * C8015 +
                     C6227 * C8010 + C8031 + C8031 + C6220 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C2325 -
                    ((C6900 + C6901 + C6902) * C151911 +
                     (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 +
                      C6225 * C1155 + C6838 + C6838 + C6219 * C1167 +
                      C6223 * C590 + C6839 + C6839 + C6218 * C614) *
                         C6221) *
                        C152162 * C2326 +
                    ((C6223 * C591 + C6840 + C6840 + C6218 * C615 +
                      C6225 * C1620 + C6841 + C6841 + C6219 * C1644 +
                      C6227 * C1625 + C6842 + C6842 + C6220 * C1649) *
                         C6221 +
                     (C6903 + C6904 + C6905) * C151911) *
                        C152162 * C152324) *
                       C151963 * C152365 +
                   (((C6902 + C6901 + C6900) * C6221 +
                     (C6906 + C6907 + C6908) * C151911) *
                        C152162 * C2326 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C2325 -
                    ((C6909 + C6910 + C6911) * C151911 +
                     (C6905 + C6904 + C6903) * C6221) *
                        C152162 * C152324) *
                       C151963 * C152348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C2325 -
                    ((C7333 + C7334 + C7335) * C151911 +
                     (C6908 + C6907 + C6906) * C6221) *
                        C152162 * C2326 +
                    ((C6911 + C6910 + C6909) * C6221 +
                     (C6223 * C594 + C6873 + C6873 + C6218 * C618 +
                      C6225 * C1617 + C6874 + C6874 + C6219 * C1641 +
                      C6227 * C1628 + C6875 + C6875 + C6220 * C1652) *
                         C151911) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C2325 -
                    ((C6900 + C6901 + C6902) * C151911 +
                     (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 +
                      C6225 * C1155 + C6838 + C6838 + C6219 * C1167 +
                      C6223 * C590 + C6839 + C6839 + C6218 * C614) *
                         C6221) *
                        C152162 * C2326 +
                    ((C6223 * C591 + C6840 + C6840 + C6218 * C615 +
                      C6225 * C1620 + C6841 + C6841 + C6219 * C1644 +
                      C6227 * C1625 + C6842 + C6842 + C6220 * C1649) *
                         C6221 +
                     (C6903 + C6904 + C6905) * C151911) *
                        C152162 * C152324) *
                       C152368 +
                   (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 +
                      C6225 * C1624 + C7627 + C7627 + C6219 * C1648 +
                      C6227 * C2163 + C7628 + C7628 + C6220 * C2171) *
                         C6221 +
                     (C7662 + C7663 + C7664) * C151911) *
                        C152162 * C2326 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C2325 -
                    ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 +
                      C6225 * C1626 + C8269 + C8269 + C6219 * C1650 +
                      C6223 * C1619 + C8270 + C8270 + C6218 * C1643) *
                         C151911 +
                     (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 +
                      C6225 * C1625 + C8272 + C8272 + C6219 * C1649 +
                      C6223 * C1620 + C8273 + C8273 + C6218 * C1644) *
                         C6221) *
                        C152162 * C152324) *
                       C152352 +
                   (((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C2325 -
                    ((C8809 + C8810 + C8811) * C151911 +
                     (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 +
                      C6225 * C2163 + C8278 + C8278 + C6219 * C2171 +
                      C6223 * C1624 + C8279 + C8279 + C6218 * C1648) *
                         C6221) *
                        C152162 * C2326 +
                    ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 +
                      C6225 * C8250 + C8281 + C8281 + C6219 * C8262 +
                      C6227 * C8253 + C8282 + C8282 + C6220 * C8265) *
                         C6221 +
                     (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 +
                      C6225 * C8249 + C8284 + C8284 + C6219 * C8261 +
                      C6227 * C8254 + C8285 + C8285 + C6220 * C8266) *
                         C151911) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C152279 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C4241 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152064 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152071 +
            ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152162 * C4913) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152071 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152064 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                C152162 * C4913) *
               C152026) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152071 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152064 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
                C4913) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152064 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152071 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C125) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152064 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152071 +
            ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
              C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
              C6220 * C1649) *
                 C6221 +
             (C6903 + C6904 + C6905) * C151911) *
                C152162 * C4913) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152071 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152064 -
            ((C9914 + C9915 + C9916) * C151911 +
             (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6223 * C1620 + C8273 + C8273 +
              C6218 * C1644) *
                 C6221) *
                C152162 * C4913) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152071 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152064 -
            ((C6909 + C6910 + C6911) * C151911 +
             (C6905 + C6904 + C6903) * C6221) *
                C152162 * C4913) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152064 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152071 +
            ((C9916 + C9915 + C9914) * C6221 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151911) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152368 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152368 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152352 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C151963 * C152374 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152068 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C4241) *
              C151963 * C152367 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C4241 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152068) *
              C151963 * C152350 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
               C152162 * C152068 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152376 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152373 +
           ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152162 * C152360 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152146 * C2580) * C122) *
               C152162 * C152337) *
              C151963 * C3375 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152373 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152376 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152162 *
               C152360 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C125) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C4241 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152368 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C4241 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152376 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152373 +
           ((C6223 * C591 + C6840 + C6840 + C6218 * C615 + C6225 * C1620 +
             C6841 + C6841 + C6219 * C1644 + C6227 * C1625 + C6842 + C6842 +
             C6220 * C1649) *
                C6221 +
            (C6903 + C6904 + C6905) * C151911) *
               C152162 * C152360 -
           ((C10129 + C10130 + C10131) * C151911 +
            (C6227 * C9576 + C9597 + C9597 + C6220 * C9588 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6223 * C2564 + C9599 + C9599 +
             C6218 * C2580) *
                C6221) *
               C152162 * C152337) *
              C151963 * C3375 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152373 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152376 -
           ((C6909 + C6910 + C6911) * C151911 +
            (C6905 + C6904 + C6903) * C6221) *
               C152162 * C152360 +
           ((C10131 + C10130 + C10129) * C6221 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151911) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C152064 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                        C152162 * C152071 +
                    ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152162 * C4913) *
                       C151963 * C151940 +
                   ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                        C152162 * C152071 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C152064 -
                    (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                        C152162 * C4913) *
                       C151963 * C151949 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C152064 -
                    (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                        C152162 * C152071 +
                    (C672 * C122 + C673 * C123 + C675 * C124 +
                     (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
                        C152162 * C4913) *
                       C151963 * C3722)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C152064 -
                    ((C6900 + C6901 + C6902) * C151911 +
                     (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 +
                      C6225 * C1155 + C6838 + C6838 + C6219 * C1167 +
                      C6223 * C590 + C6839 + C6839 + C6218 * C614) *
                         C6221) *
                        C152162 * C152071 +
                    ((C6223 * C591 + C6840 + C6840 + C6218 * C615 +
                      C6225 * C1620 + C6841 + C6841 + C6219 * C1644 +
                      C6227 * C1625 + C6842 + C6842 + C6220 * C1649) *
                         C6221 +
                     (C6903 + C6904 + C6905) * C151911) *
                        C152162 * C4913) *
                       C151963 * C151940 +
                   (((C6902 + C6901 + C6900) * C6221 +
                     (C6906 + C6907 + C6908) * C151911) *
                        C152162 * C152071 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C152064 -
                    ((C6909 + C6910 + C6911) * C151911 +
                     (C6905 + C6904 + C6903) * C6221) *
                        C152162 * C4913) *
                       C151963 * C151949 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C152064 -
                    ((C7333 + C7334 + C7335) * C151911 +
                     (C6908 + C6907 + C6906) * C6221) *
                        C152162 * C152071 +
                    ((C6911 + C6910 + C6909) * C6221 +
                     (C6223 * C594 + C6873 + C6873 + C6218 * C618 +
                      C6225 * C1617 + C6874 + C6874 + C6219 * C1641 +
                      C6227 * C1628 + C6875 + C6875 + C6220 * C1652) *
                         C151911) *
                        C152162 * C4913) *
                       C151963 * C3722)) /
                     (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C151963 * C152374 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152068 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C4241) *
              C151963 * C152367 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C4241 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152068) *
              C151963 * C152350 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
               C152162 * C152068 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152368 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C4241) *
               C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C4241) *
               C152368 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152352 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C4241 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C4241 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C4241 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152368 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C4241 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C4241 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C152279 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152026) *
                       C807 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152026 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C152279) *
                       C808 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C152279 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C152026) *
                       C809 +
                   ((C431 * C122 + C437 * C123 + C820 * C124 +
                     (C134 * C811 + C817 + C817 + C152146 * C813) * C125) *
                        C152162 * C151981 * C152026 -
                    (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                        C152162 * C151981 * C152279) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C1795 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C1796 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C1797 -
                    (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                     (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                        C152162 * C151981 * C152331) *
                       C152265 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C1796 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C1795 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C1797 +
                    (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                     (C134 * C1801 + C1811 + C1811 + C152146 * C1803) * C125) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C152279 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152026) *
                       C807 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152026 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C152279) *
                       C808 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C152279 -
                    ((C7121 + C7122 + C7123) * C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C152026) *
                       C809 +
                   (((C7123 + C7122 + C7121) * C6221 +
                     (C6223 * C358 + C7112 + C7112 + C6218 * C382 +
                      C6225 * C359 + C7113 + C7113 + C6219 * C383 +
                      C6227 * C1801 + C7114 + C7114 + C6220 * C1803) *
                         C151911) *
                        C152162 * C151981 * C152026 -
                    ((C6305 + C6306 + C6307) * C151911 +
                     (C6304 + C6303 + C6302) * C6221) *
                        C152162 * C151981 * C152279) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C1795 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C1796 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C1797 -
                    ((C8498 + C8499 + C8500) * C151911 +
                     (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 +
                      C6225 * C1443 + C8024 + C8024 + C6219 * C1459 +
                      C6223 * C1442 + C8025 + C8025 + C6218 * C1458) *
                         C6221) *
                        C152162 * C151981 * C152331) *
                       C152265 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C1796 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C1795 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C1797 +
                    ((C8500 + C8499 + C8498) * C6221 +
                     (C6223 * C1440 + C8489 + C8489 + C6218 * C1456 +
                      C6225 * C1445 + C8490 + C8490 + C6219 * C1461 +
                      C6227 * C8479 + C8491 + C8491 + C6220 * C8481) *
                         C151911) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C152279 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C152026) *
              C347 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C152279 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
                C152280 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
                C152068) *
               C152279 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C125) *
                C152162 * C152068 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152162 *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152280 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C1795 +
          (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152162 * C152068 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
               C152162 * C152280) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152162 * C152280 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
               C152162 * C152068) *
              C1797 +
          (((C134 * C2163 + C2176 + C2176 + C152146 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152146 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152146 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C125) *
               C152162 * C152068 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C152279 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C6221 +
             (C6302 + C6303 + C6304) * C151911) *
                C152162 * C152280 -
            ((C7333 + C7334 + C7335) * C151911 +
             (C6908 + C6907 + C6906) * C6221) *
                C152162 * C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C6221 +
             (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
              C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
              C6220 * C2174) *
                 C151911) *
                C152162 * C152068 -
            ((C7121 + C7122 + C7123) * C151911 +
             (C6606 + C6605 + C6604) * C6221) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C1795 +
          (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
             C6220 * C2171) *
                C6221 +
            (C7662 + C7663 + C7664) * C151911) *
               C152162 * C152068 -
           ((C6598 + C6599 + C6600) * C151911 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C6221) *
               C152162 * C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C6221 +
            (C6601 + C6602 + C6603) * C151911) *
               C152162 * C152280 -
           ((C8809 + C8810 + C8811) * C151911 +
            (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
             C6218 * C1648) *
                C6221) *
               C152162 * C152068) *
              C1797 +
          (((C6223 * C2163 + C9012 + C9012 + C6218 * C2171 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6227 * C9005 + C9014 + C9014 +
             C6220 * C9009) *
                C6221 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151911) *
               C152162 * C152068 -
           ((C8498 + C8499 + C8500) * C151911 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C6221) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[122] += (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C152368 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152352 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152352 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C152368 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C152368 -
                    ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 +
                     C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C152352 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152162 * C151981 * C151963 * C129 -
                   (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                       C152162 * C151981 * C151963 * C130 +
                   (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                       C152162 * C151981 * C151963 * C131 -
                   (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                       C152162 * C151981 * C151963 * C132 +
                   (C196 * C122 + C197 * C123 + C198 * C124 +
                    (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C152369 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                        C152162 * C152354 +
                    ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152162 * C152324) *
                       C151963 * C347 +
                   ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                        C152162 * C152354 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C152369 -
                    (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                        C152162 * C152324) *
                       C151963 * C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C152369 -
                    ((C134 * C597 + C650 + C650 + C152146 * C621) * C125 +
                     C674 * C124 + C668 * C123 + C669 * C122) *
                        C152162 * C152354 +
                    (C672 * C122 + C673 * C123 + C675 * C124 +
                     (C134 * C598 + C651 + C651 + C152146 * C622) * C125) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C1345 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C1346 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C1346 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C1345 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C1345 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C1346 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152162 * C151981 * C1433 -
                   (C431 * C125 + C432 * C124 + C433 * C123 +
                    (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                       C152162 * C151981 * C1434 +
                   ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                    C434 * C123 + C435 * C124 + C436 * C125) *
                       C152162 * C151981 * C1435 -
                   ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
                    (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
                    (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
                    (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                       C152162 * C151981 * C1436 +
                   ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
                    (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
                    (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
                    (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C152369 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                        C152162 * C152354 +
                    ((C134 * C591 + C634 + C634 + C152146 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152162 * C152324) *
                       C1345 +
                   (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
                     C1196 * C123 + C1197 * C124 + C1198 * C125) *
                        C152162 * C152354 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C152369 -
                    ((C134 * C1617 + C1654 + C1654 + C152146 * C1641) * C125 +
                     (C134 * C1618 + C1655 + C1655 + C152146 * C1642) * C124 +
                     (C134 * C1619 + C1656 + C1656 + C152146 * C1643) * C123 +
                     (C134 * C1620 + C1657 + C1657 + C152146 * C1644) * C122) *
                        C152162 * C152324) *
                       C1346 +
                   (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C152369 -
                    ((C134 * C1621 + C1658 + C1658 + C152146 * C1645) * C125 +
                     (C134 * C1622 + C1659 + C1659 + C152146 * C1646) * C124 +
                     (C134 * C1623 + C1660 + C1660 + C152146 * C1647) * C123 +
                     (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                        C152162 * C152354 +
                    ((C134 * C1625 + C1662 + C1662 + C152146 * C1649) * C122 +
                     (C134 * C1626 + C1663 + C1663 + C152146 * C1650) * C123 +
                     (C134 * C1627 + C1664 + C1664 + C152146 * C1651) * C124 +
                     (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C125) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                     C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                     C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                        C6221 +
                    (C6296 + C6297 + C6298) * C151911) *
                       C152162 * C151981 * C151963 * C129 -
                   ((C6299 + C6300 + C6301) * C151911 +
                    (C6298 + C6297 + C6296) * C6221) *
                       C152162 * C151981 * C151963 * C130 +
                   ((C6301 + C6300 + C6299) * C6221 +
                    (C6302 + C6303 + C6304) * C151911) *
                       C152162 * C151981 * C151963 * C131 -
                   ((C6305 + C6306 + C6307) * C151911 +
                    (C6304 + C6303 + C6302) * C6221) *
                       C152162 * C151981 * C151963 * C132 +
                   ((C6307 + C6306 + C6305) * C6221 +
                    (C6223 * C141 + C6269 + C6269 + C6218 * C157 +
                     C6225 * C360 + C6270 + C6270 + C6219 * C384 +
                     C6227 * C361 + C6271 + C6271 + C6220 * C385) *
                        C151911) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152352 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152352 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C152368 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 +
                      C6225 * C357 + C6569 + C6569 + C6219 * C381 +
                      C6223 * C350 + C6570 + C6570 + C6218 * C374) *
                         C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C152352 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C152369 -
                    ((C6900 + C6901 + C6902) * C151911 +
                     (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 +
                      C6225 * C1155 + C6838 + C6838 + C6219 * C1167 +
                      C6223 * C590 + C6839 + C6839 + C6218 * C614) *
                         C6221) *
                        C152162 * C152354 +
                    ((C6223 * C591 + C6840 + C6840 + C6218 * C615 +
                      C6225 * C1620 + C6841 + C6841 + C6219 * C1644 +
                      C6227 * C1625 + C6842 + C6842 + C6220 * C1649) *
                         C6221 +
                     (C6903 + C6904 + C6905) * C151911) *
                        C152162 * C152324) *
                       C151963 * C347 +
                   (((C6902 + C6901 + C6900) * C6221 +
                     (C6906 + C6907 + C6908) * C151911) *
                        C152162 * C152354 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C152369 -
                    ((C6909 + C6910 + C6911) * C151911 +
                     (C6905 + C6904 + C6903) * C6221) *
                        C152162 * C152324) *
                       C151963 * C348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C152369 -
                    ((C6227 * C1621 + C6870 + C6870 + C6220 * C1645 +
                      C6225 * C1158 + C6871 + C6871 + C6219 * C1170 +
                      C6223 * C587 + C6872 + C6872 + C6218 * C611) *
                         C151911 +
                     (C6908 + C6907 + C6906) * C6221) *
                        C152162 * C152354 +
                    ((C6911 + C6910 + C6909) * C6221 +
                     (C6223 * C594 + C6873 + C6873 + C6218 * C618 +
                      C6225 * C1617 + C6874 + C6874 + C6219 * C1641 +
                      C6227 * C1628 + C6875 + C6875 + C6220 * C1652) *
                         C151911) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C1346 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C1345 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C7121 + C7122 + C7123) * C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C1346 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                     C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                     C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                        C6221 +
                    (C6296 + C6297 + C6298) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C6598 + C6599 + C6600) * C151911 +
                    (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                     C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                     C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                        C6221) *
                       C152162 * C151981 * C1434 +
                   ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                     C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                     C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                        C6221 +
                    (C6601 + C6602 + C6603) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 +
                     C6225 * C1444 + C8021 + C8021 + C6219 * C1460 +
                     C6223 * C1441 + C8022 + C8022 + C6218 * C1457) *
                        C151911 +
                    (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 +
                     C6225 * C1443 + C8024 + C8024 + C6219 * C1459 +
                     C6223 * C1442 + C8025 + C8025 + C6218 * C1458) *
                        C6221) *
                       C152162 * C151981 * C1436 +
                   ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 +
                     C6225 * C8008 + C8027 + C8027 + C6219 * C8016 +
                     C6227 * C8009 + C8028 + C8028 + C6220 * C8017) *
                        C6221 +
                    (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 +
                     C6225 * C8007 + C8030 + C8030 + C6219 * C8015 +
                     C6227 * C8010 + C8031 + C8031 + C6220 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C152369 -
                    ((C6900 + C6901 + C6902) * C151911 +
                     (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 +
                      C6225 * C1155 + C6838 + C6838 + C6219 * C1167 +
                      C6223 * C590 + C6839 + C6839 + C6218 * C614) *
                         C6221) *
                        C152162 * C152354 +
                    ((C6223 * C591 + C6840 + C6840 + C6218 * C615 +
                      C6225 * C1620 + C6841 + C6841 + C6219 * C1644 +
                      C6227 * C1625 + C6842 + C6842 + C6220 * C1649) *
                         C6221 +
                     (C6903 + C6904 + C6905) * C151911) *
                        C152162 * C152324) *
                       C1345 +
                   (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 +
                      C6225 * C1624 + C7627 + C7627 + C6219 * C1648 +
                      C6227 * C2163 + C7628 + C7628 + C6220 * C2171) *
                         C6221 +
                     (C7662 + C7663 + C7664) * C151911) *
                        C152162 * C152354 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C152369 -
                    ((C6227 * C8249 + C8268 + C8268 + C6220 * C8261 +
                      C6225 * C1626 + C8269 + C8269 + C6219 * C1650 +
                      C6223 * C1619 + C8270 + C8270 + C6218 * C1643) *
                         C151911 +
                     (C6227 * C8250 + C8271 + C8271 + C6220 * C8262 +
                      C6225 * C1625 + C8272 + C8272 + C6219 * C1649 +
                      C6223 * C1620 + C8273 + C8273 + C6218 * C1644) *
                         C6221) *
                        C152162 * C152324) *
                       C1346 +
                   (((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C152369 -
                    ((C6227 * C8251 + C8274 + C8274 + C6220 * C8263 +
                      C6225 * C2164 + C8275 + C8275 + C6219 * C2172 +
                      C6223 * C1623 + C8276 + C8276 + C6218 * C1647) *
                         C151911 +
                     (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 +
                      C6225 * C2163 + C8278 + C8278 + C6219 * C2171 +
                      C6223 * C1624 + C8279 + C8279 + C6218 * C1648) *
                         C6221) *
                        C152162 * C152354 +
                    ((C6223 * C1625 + C8280 + C8280 + C6218 * C1649 +
                      C6225 * C8250 + C8281 + C8281 + C6219 * C8262 +
                      C6227 * C8253 + C8282 + C8282 + C6220 * C8265) *
                         C6221 +
                     (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 +
                      C6225 * C8249 + C8284 + C8284 + C6219 * C8261 +
                      C6227 * C8254 + C8285 + C8285 + C6220 * C8266) *
                         C151911) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152162 * C152280 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
               C152162 * C152068) *
              C151963 * C807 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
               C152068 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
               C152280) *
              C151963 * C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152162 *
               C152280 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152162 *
               C152068) *
              C151963 * C809 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C125) *
               C152162 * C152068 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152162 *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152162 * C152280 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152146 * C614) * C122) *
                C152162 * C152068) *
               C1345 +
           (((C134 * C1155 + C1174 + C1174 + C152146 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152162 * C152068 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                C152162 * C152280) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152162 * C152280 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152146 * C1648) * C122) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152162 *
                C152068 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152162 *
                C152280) *
               C1345 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152162 *
                C152280 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152162 * C152068) *
               C1346 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C125) *
                C152162 * C152068 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152162 *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C6221 +
            (C6296 + C6297 + C6298) * C151911) *
               C152162 * C152280 -
           ((C6900 + C6901 + C6902) * C151911 +
            (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
             C6218 * C614) *
                C6221) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C6221 +
            (C6906 + C6907 + C6908) * C151911) *
               C152162 * C152068 -
           ((C6299 + C6300 + C6301) * C151911 +
            (C6298 + C6297 + C6296) * C6221) *
               C152162 * C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C6221 +
            (C6302 + C6303 + C6304) * C151911) *
               C152162 * C152280 -
           ((C7333 + C7334 + C7335) * C151911 +
            (C6908 + C6907 + C6906) * C6221) *
               C152162 * C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C6221 +
            (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
             C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
             C6220 * C2016) *
                C151911) *
               C152162 * C152068 -
           ((C6305 + C6306 + C6307) * C151911 +
            (C6304 + C6303 + C6302) * C6221) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C6221 +
             (C6296 + C6297 + C6298) * C151911) *
                C152162 * C152280 -
            ((C6900 + C6901 + C6902) * C151911 +
             (C6227 * C1624 + C6837 + C6837 + C6220 * C1648 + C6225 * C1155 +
              C6838 + C6838 + C6219 * C1167 + C6223 * C590 + C6839 + C6839 +
              C6218 * C614) *
                 C6221) *
                C152162 * C152068) *
               C1345 +
           (((C6223 * C1155 + C7626 + C7626 + C6218 * C1167 + C6225 * C1624 +
              C7627 + C7627 + C6219 * C1648 + C6227 * C2163 + C7628 + C7628 +
              C6220 * C2171) *
                 C6221 +
             (C7662 + C7663 + C7664) * C151911) *
                C152162 * C152068 -
            ((C6598 + C6599 + C6600) * C151911 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C6221) *
                C152162 * C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C6221 +
             (C6601 + C6602 + C6603) * C151911) *
                C152162 * C152280 -
            ((C8809 + C8810 + C8811) * C151911 +
             (C6227 * C8252 + C8277 + C8277 + C6220 * C8264 + C6225 * C2163 +
              C8278 + C8278 + C6219 * C2171 + C6223 * C1624 + C8279 + C8279 +
              C6218 * C1648) *
                 C6221) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C6221 +
             (C6906 + C6907 + C6908) * C151911) *
                C152162 * C152068 -
            ((C6299 + C6300 + C6301) * C151911 +
             (C6298 + C6297 + C6296) * C6221) *
                C152162 * C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C6221 +
             (C6604 + C6605 + C6606) * C151911) *
                C152162 * C152280 -
            ((C7665 + C7666 + C7667) * C151911 +
             (C7664 + C7663 + C7662) * C6221) *
                C152162 * C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C6221 +
             (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
              C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
              C6220 * C8792) *
                 C151911) *
                C152162 * C152068 -
            ((C6607 + C6608 + C6609) * C151911 +
             (C6603 + C6602 + C6601) * C6221) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] += (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152162 * C151981 * C151963 * C129 -
                   (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                       C152162 * C151981 * C151963 * C130 +
                   (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                       C152162 * C151981 * C151963 * C131 -
                   (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                       C152162 * C151981 * C151963 * C132 +
                   (C196 * C122 + C197 * C123 + C198 * C124 +
                    (C134 * C143 + C180 + C180 + C152146 * C159) * C125) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C152368 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C152352 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C152352 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C152368 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C152368 -
                    ((C134 * C360 + C413 + C413 + C152146 * C384) * C125 +
                     C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C152352 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152162 * C151981 * C1345 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                        C152162 * C151981 * C1346 +
                    ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152162 * C151981 * C1346 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152162 * C151981 * C1345 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152162 * C151981 * C1345 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152162 * C151981 * C1346 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152146 * C385) * C125) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152146 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152162 * C151981 * C1433 -
                   (C431 * C125 + C432 * C124 + C433 * C123 +
                    (C134 * C353 + C396 + C396 + C152146 * C377) * C122) *
                       C152162 * C151981 * C1434 +
                   ((C134 * C354 + C397 + C397 + C152146 * C378) * C122 +
                    C434 * C123 + C435 * C124 + C436 * C125) *
                       C152162 * C151981 * C1435 -
                   ((C134 * C1439 + C1464 + C1464 + C152146 * C1455) * C125 +
                    (C134 * C1440 + C1465 + C1465 + C152146 * C1456) * C124 +
                    (C134 * C1441 + C1466 + C1466 + C152146 * C1457) * C123 +
                    (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C122) *
                       C152162 * C151981 * C1436 +
                   ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C122 +
                    (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C123 +
                    (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C124 +
                    (C134 * C1446 + C1471 + C1471 + C152146 * C1462) * C125) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                     C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                     C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                        C6221 +
                    (C6296 + C6297 + C6298) * C151911) *
                       C152162 * C151981 * C151963 * C129 -
                   ((C6299 + C6300 + C6301) * C151911 +
                    (C6298 + C6297 + C6296) * C6221) *
                       C152162 * C151981 * C151963 * C130 +
                   ((C6301 + C6300 + C6299) * C6221 +
                    (C6302 + C6303 + C6304) * C151911) *
                       C152162 * C151981 * C151963 * C131 -
                   ((C6305 + C6306 + C6307) * C151911 +
                    (C6304 + C6303 + C6302) * C6221) *
                       C152162 * C151981 * C151963 * C132 +
                   ((C6307 + C6306 + C6305) * C6221 +
                    (C6223 * C141 + C6269 + C6269 + C6218 * C157 +
                     C6225 * C360 + C6270 + C6270 + C6219 * C384 +
                     C6227 * C361 + C6271 + C6271 + C6220 * C385) *
                        C151911) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C152352 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C152352 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C152368 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C6227 * C1439 + C6568 + C6568 + C6220 * C1455 +
                      C6225 * C357 + C6569 + C6569 + C6219 * C381 +
                      C6223 * C350 + C6570 + C6570 + C6218 * C374) *
                         C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C152352 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                      C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                      C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                         C6221 +
                     (C6296 + C6297 + C6298) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C6598 + C6599 + C6600) * C151911 +
                     (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                      C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                      C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                         C6221) *
                        C152162 * C151981 * C1346 +
                    ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                      C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                      C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                         C6221 +
                     (C6601 + C6602 + C6603) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C6600 + C6599 + C6598) * C6221 +
                     (C6604 + C6605 + C6606) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C6299 + C6300 + C6301) * C151911 +
                     (C6298 + C6297 + C6296) * C6221) *
                        C152162 * C151981 * C1345 -
                    ((C6607 + C6608 + C6609) * C151911 +
                     (C6603 + C6602 + C6601) * C6221) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C6301 + C6300 + C6299) * C6221 +
                     (C6302 + C6303 + C6304) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C7121 + C7122 + C7123) * C151911 +
                     (C6606 + C6605 + C6604) * C6221) *
                        C152162 * C151981 * C1346 +
                    ((C6609 + C6608 + C6607) * C6221 +
                     (C6223 * C357 + C6571 + C6571 + C6218 * C381 +
                      C6225 * C1439 + C6572 + C6572 + C6219 * C1455 +
                      C6227 * C1446 + C6573 + C6573 + C6220 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C6223 * C136 + C6230 + C6230 + C6218 * C152 +
                     C6225 * C353 + C6231 + C6231 + C6219 * C377 +
                     C6227 * C354 + C6232 + C6232 + C6220 * C378) *
                        C6221 +
                    (C6296 + C6297 + C6298) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C6598 + C6599 + C6600) * C151911 +
                    (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 +
                     C6225 * C354 + C6536 + C6536 + C6219 * C378 +
                     C6223 * C353 + C6537 + C6537 + C6218 * C377) *
                        C6221) *
                       C152162 * C151981 * C1434 +
                   ((C6223 * C354 + C6538 + C6538 + C6218 * C378 +
                     C6225 * C1442 + C6539 + C6539 + C6219 * C1458 +
                     C6227 * C1443 + C6540 + C6540 + C6220 * C1459) *
                        C6221 +
                    (C6601 + C6602 + C6603) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C6227 * C8007 + C8020 + C8020 + C6220 * C8015 +
                     C6225 * C1444 + C8021 + C8021 + C6219 * C1460 +
                     C6223 * C1441 + C8022 + C8022 + C6218 * C1457) *
                        C151911 +
                    (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 +
                     C6225 * C1443 + C8024 + C8024 + C6219 * C1459 +
                     C6223 * C1442 + C8025 + C8025 + C6218 * C1458) *
                        C6221) *
                       C152162 * C151981 * C1436 +
                   ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 +
                     C6225 * C8008 + C8027 + C8027 + C6219 * C8016 +
                     C6227 * C8009 + C8028 + C8028 + C6220 * C8017) *
                        C6221 +
                    (C6223 * C1444 + C8029 + C8029 + C6218 * C1460 +
                     C6225 * C8007 + C8030 + C8030 + C6219 * C8015 +
                     C6227 * C8010 + C8031 + C8031 + C6220 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[125] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152022 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152029 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C3719) *
                       C151940 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152029 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152022 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C3719) *
                       C151949 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C152022 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152029 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C3719) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[126] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152280 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152022 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152280) *
                        C152029 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C152258 +
                      (C74001 + C74002 + C74003) * C151911) *
                         C152162 * C152280 -
                     ((C76173 + C76174 + C76175) * C151911 +
                      (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                       C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                       C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                          C152258) *
                         C152162 * C152068) *
                        C3719) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152280) *
                        C152022 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152280 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152029 +
                    (((C76175 + C76174 + C76173) * C152258 +
                      (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                       C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                       C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74007 + C74008 + C74009) * C151911 +
                      (C74003 + C74002 + C74001) * C152258) *
                         C152162 * C152280) *
                        C3719) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[127] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152375 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152371 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152357 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C151981 * C152331) *
                       C3375 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152371 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152375 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152357 +
                    ((C75867 + C75866 + C75865) * C152258 +
                     (C73623 * C1440 + C75856 + C75856 + C152361 * C1456 +
                      C73625 * C1445 + C75857 + C75857 + C152362 * C1461 +
                      C73627 * C8479 + C75858 + C75858 + C73620 * C8481) *
                         C151911) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C3235 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152026) *
                       C152374 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C3235) *
                       C152367 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C3235 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152026) *
                       C152350 +
                   (((C74523 + C74522 + C74521) * C152258 +
                     (C73623 * C358 + C74512 + C74512 + C152361 * C382 +
                      C73625 * C359 + C74513 + C74513 + C152362 * C383 +
                      C73627 * C1801 + C74514 + C74514 + C73620 * C1803) *
                         C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C151981 * C3235) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152369 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152354 +
                     ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                       C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                       C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                          C152258 +
                      (C74303 + C74304 + C74305) * C151911) *
                         C152162 * C152324) *
                        C3235 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152354 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152369 -
                     ((C77251 + C77252 + C77253) * C151911 +
                      (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                       C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                       C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                          C152258) *
                         C152162 * C152324) *
                        C152026) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152354 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152369 -
                     ((C74309 + C74310 + C74311) * C151911 +
                      (C74305 + C74304 + C74303) * C152258) *
                         C152162 * C152324) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152369 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152354 +
                     ((C77253 + C77252 + C77251) * C152258 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151911) *
                         C152162 * C152324) *
                        C152026) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[128] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152280 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C3235 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152280) *
                        C152026) *
                       C151940 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152280) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152280 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152026) *
                       C151949 +
                   ((((C73701 + C73700 + C73699) * C152258 +
                      (C73702 + C73703 + C73704) * C151911) *
                         C152162 * C152280 -
                     ((C74733 + C74734 + C74735) * C151911 +
                      (C74308 + C74307 + C74306) * C152258) *
                         C152162 * C152068) *
                        C3235 +
                    (((C75067 + C75066 + C75065) * C152258 +
                      (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                       C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                       C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74521 + C74522 + C74523) * C151911 +
                      (C74006 + C74005 + C74004) * C152258) *
                         C152162 * C152280) *
                        C152026) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[129] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C3235 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152026) *
                       C152374 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C3235) *
                       C152367 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C3235 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152026) *
                       C152350 +
                   (((C74523 + C74522 + C74521) * C152258 +
                     (C73623 * C358 + C74512 + C74512 + C152361 * C382 +
                      C73625 * C359 + C74513 + C74513 + C152362 * C383 +
                      C73627 * C1801 + C74514 + C74514 + C73620 * C1803) *
                         C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C151981 * C3235) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152375 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152371 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152357 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C151981 * C152331) *
                       C3375 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152371 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152375 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152357 +
                    ((C75867 + C75866 + C75865) * C152258 +
                     (C73623 * C1440 + C75856 + C75856 + C152361 * C1456 +
                      C73625 * C1445 + C75857 + C75857 + C152362 * C1461 +
                      C73627 * C8479 + C75858 + C75858 + C73620 * C8481) *
                         C151911) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[130] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C4241 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152022 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C4241) *
                        C152029 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C152258 +
                      (C74001 + C74002 + C74003) * C151911) *
                         C152162 * C4241 -
                     ((C76173 + C76174 + C76175) * C151911 +
                      (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                       C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                       C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                          C152258) *
                         C152162 * C152068) *
                        C3719) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C4241) *
                        C152022 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C4241 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152029 +
                    (((C76175 + C76174 + C76173) * C152258 +
                      (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                       C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                       C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74007 + C74008 + C74009) * C151911 +
                      (C74003 + C74002 + C74001) * C152258) *
                         C152162 * C4241) *
                        C3719) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[131] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152064 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152071 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C4913) *
                       C152022 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152071 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C152064 -
                    ((C77251 + C77252 + C77253) * C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C4913) *
                       C152029 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C152064 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152071 +
                    ((C73623 * C1625 + C75650 + C75650 + C152361 * C1649 +
                      C73625 * C8250 + C75651 + C75651 + C152362 * C8262 +
                      C73627 * C8253 + C75652 + C75652 + C73620 * C8265) *
                         C152258 +
                     (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                      C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                      C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                         C151911) *
                        C152162 * C4913) *
                       C3719) *
                  C151935) /
                 (p * q * std::sqrt(p + q));
    d2ee[132] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C4241 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C152375 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152068 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C4241) *
                       C152371 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C4241 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152068) *
                       C152357 +
                   (((C73623 * C2163 + C76370 + C76370 + C152361 * C2171 +
                      C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                      C73627 * C9005 + C76372 + C76372 + C73620 * C9009) *
                         C152258 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151911) *
                        C152162 * C152068 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C4241) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C4241 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C3235 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C4241) *
                        C152026) *
                       C152365 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C4241) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C4241 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152026) *
                       C152348 +
                   ((((C73701 + C73700 + C73699) * C152258 +
                      (C73702 + C73703 + C73704) * C151911) *
                         C152162 * C4241 -
                     ((C74733 + C74734 + C74735) * C151911 +
                      (C74308 + C74307 + C74306) * C152258) *
                         C152162 * C152068) *
                        C3235 +
                    (((C75067 + C75066 + C75065) * C152258 +
                      (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                       C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                       C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74521 + C74522 + C74523) * C151911 +
                      (C74006 + C74005 + C74004) * C152258) *
                         C152162 * C4241) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152376 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152373 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152360 -
                    ((C77463 + C77464 + C77465) * C151911 +
                     (C73627 * C9576 + C76937 + C76937 + C73620 * C9588 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73623 * C2564 + C76939 + C76939 + C152361 * C2580) *
                         C152258) *
                        C152162 * C152337) *
                       C3235 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152373 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C152376 -
                    ((C77251 + C77252 + C77253) * C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C152360 +
                    ((C73623 * C3089 + C77660 + C77660 + C152361 * C3097 +
                      C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                      C73627 * C10325 + C77662 + C77662 + C73620 * C10329) *
                         C152258 +
                     (C73623 * C3090 + C77663 + C77663 + C152361 * C3098 +
                      C73625 * C9575 + C77664 + C77664 + C152362 * C9587 +
                      C73627 * C10326 + C77665 + C77665 + C73620 * C10330) *
                         C151911) *
                        C152162 * C152337) *
                       C152026) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[133] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152064 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152071 +
                     ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                       C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                       C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                          C152258 +
                      (C74303 + C74304 + C74305) * C151911) *
                         C152162 * C4913) *
                        C3235 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152071 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152064 -
                     ((C77251 + C77252 + C77253) * C151911 +
                      (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                       C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                       C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                          C152258) *
                         C152162 * C4913) *
                        C152026) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152071 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152064 -
                     ((C74309 + C74310 + C74311) * C151911 +
                      (C74305 + C74304 + C74303) * C152258) *
                         C152162 * C4913) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152064 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152071 +
                     ((C77253 + C77252 + C77251) * C152258 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151911) *
                         C152162 * C4913) *
                        C152026) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[134] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C4241 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C3235 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C4241) *
                        C152026) *
                       C152365 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C4241) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C4241 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152026) *
                       C152348 +
                   ((((C73701 + C73700 + C73699) * C152258 +
                      (C73702 + C73703 + C73704) * C151911) *
                         C152162 * C4241 -
                     ((C74733 + C74734 + C74735) * C151911 +
                      (C74308 + C74307 + C74306) * C152258) *
                         C152162 * C152068) *
                        C3235 +
                    (((C75067 + C75066 + C75065) * C152258 +
                      (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                       C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                       C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74521 + C74522 + C74523) * C151911 +
                      (C74006 + C74005 + C74004) * C152258) *
                         C152162 * C4241) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C4241 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C152375 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152068 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C4241) *
                       C152371 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C4241 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152068) *
                       C152357 +
                   (((C73623 * C2163 + C76370 + C76370 + C152361 * C2171 +
                      C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                      C73627 * C9005 + C76372 + C76372 + C73620 * C9009) *
                         C152258 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151911) *
                        C152162 * C152068 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C4241) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[135] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C1795 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C1796 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C1797 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C151981 * C152331) *
                       C152265 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C1796 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C1795 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C1797 +
                    ((C75867 + C75866 + C75865) * C152258 +
                     (C73623 * C1440 + C75856 + C75856 + C152361 * C1456 +
                      C73625 * C1445 + C75857 + C75857 + C152362 * C1461 +
                      C73627 * C8479 + C75858 + C75858 + C73620 * C8481) *
                         C151911) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152279 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152026) *
                       C807 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152279) *
                       C808 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C152279 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152026) *
                       C809 +
                   (((C74523 + C74522 + C74521) * C152258 +
                     (C73623 * C358 + C74512 + C74512 + C152361 * C382 +
                      C73625 * C359 + C74513 + C74513 + C152362 * C383 +
                      C73627 * C1801 + C74514 + C74514 + C73620 * C1803) *
                         C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C151981 * C152279) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C2325 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C2326 +
                     ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                       C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                       C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                          C152258 +
                      (C74303 + C74304 + C74305) * C151911) *
                         C152162 * C152324) *
                        C152279 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C2326 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C2325 -
                     ((C77251 + C77252 + C77253) * C151911 +
                      (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                       C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                       C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                          C152258) *
                         C152162 * C152324) *
                        C152026) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C2326 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C2325 -
                     ((C74309 + C74310 + C74311) * C151911 +
                      (C74305 + C74304 + C74303) * C152258) *
                         C152162 * C152324) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C2325 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C2326 +
                     ((C77253 + C77252 + C77251) * C152258 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151911) *
                         C152162 * C152324) *
                        C152026) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[136] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152280 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C1795 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152068 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C152280) *
                       C1796 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C152280 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152068) *
                       C1797 +
                   (((C73623 * C2163 + C76370 + C76370 + C152361 * C2171 +
                      C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                      C73627 * C9005 + C76372 + C76372 + C73620 * C9009) *
                         C152258 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151911) *
                        C152162 * C152068 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C152280) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152280 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152279 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152280) *
                        C152026) *
                       C347 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152280) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152280 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152026) *
                       C348 +
                   ((((C73701 + C73700 + C73699) * C152258 +
                      (C73702 + C73703 + C73704) * C151911) *
                         C152162 * C152280 -
                     ((C74733 + C74734 + C74735) * C151911 +
                      (C74308 + C74307 + C74306) * C152258) *
                         C152162 * C152068) *
                        C152279 +
                    (((C75067 + C75066 + C75065) * C152258 +
                      (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                       C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                       C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74521 + C74522 + C74523) * C151911 +
                      (C74006 + C74005 + C74004) * C152258) *
                         C152162 * C152280) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C2936 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C2937 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C2938 -
                    ((C77463 + C77464 + C77465) * C151911 +
                     (C73627 * C9576 + C76937 + C76937 + C73620 * C9588 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73623 * C2564 + C76939 + C76939 + C152361 * C2580) *
                         C152258) *
                        C152162 * C152337) *
                       C152279 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C2937 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C2936 -
                    ((C77251 + C77252 + C77253) * C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C2938 +
                    ((C73623 * C3089 + C77660 + C77660 + C152361 * C3097 +
                      C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                      C73627 * C10325 + C77662 + C77662 + C73620 * C10329) *
                         C152258 +
                     (C73623 * C3090 + C77663 + C77663 + C152361 * C3098 +
                      C73625 * C9575 + C77664 + C77664 + C152362 * C9587 +
                      C73627 * C10326 + C77665 + C77665 + C73620 * C10330) *
                         C151911) *
                        C152162 * C152337) *
                       C152026) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                         C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                         C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                            C152258 +
                        (C73696 + C73697 + C73698) * C151911) *
                           C152162 * C151981 * C151963 * C129 -
                       ((C73699 + C73700 + C73701) * C151911 +
                        (C73698 + C73697 + C73696) * C152258) *
                           C152162 * C151981 * C151963 * C130 +
                       ((C73701 + C73700 + C73699) * C152258 +
                        (C73702 + C73703 + C73704) * C151911) *
                           C152162 * C151981 * C151963 * C131 -
                       ((C73705 + C73706 + C73707) * C151911 +
                        (C73704 + C73703 + C73702) * C152258) *
                           C152162 * C151981 * C151963 * C132 +
                       ((C73707 + C73706 + C73705) * C152258 +
                        (C73623 * C141 + C73669 + C73669 + C152361 * C157 +
                         C73625 * C360 + C73670 + C73670 + C152362 * C384 +
                         C73627 * C361 + C73671 + C73671 + C73620 * C385) *
                            C151911) *
                           C152162 * C151981 * C151963 * C133) +
                  std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                          C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                          C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                             C152258 +
                         (C73696 + C73697 + C73698) * C151911) *
                            C152162 * C151981 * C152368 -
                        ((C73998 + C73999 + C74000) * C151911 +
                         (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                          C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                          C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                             C152258) *
                            C152162 * C151981 * C152352 +
                        ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                          C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                          C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                             C152258 +
                         (C74001 + C74002 + C74003) * C151911) *
                            C152162 * C151981 * C152321) *
                           C347 +
                       (((C74000 + C73999 + C73998) * C152258 +
                         (C74004 + C74005 + C74006) * C151911) *
                            C152162 * C151981 * C152352 -
                        ((C73699 + C73700 + C73701) * C151911 +
                         (C73698 + C73697 + C73696) * C152258) *
                            C152162 * C151981 * C152368 -
                        ((C74007 + C74008 + C74009) * C151911 +
                         (C74003 + C74002 + C74001) * C152258) *
                            C152162 * C151981 * C152321) *
                           C348 +
                       (((C73701 + C73700 + C73699) * C152258 +
                         (C73702 + C73703 + C73704) * C151911) *
                            C152162 * C151981 * C152368 -
                        ((C73627 * C1439 + C73968 + C73968 + C73620 * C1455 +
                          C73625 * C357 + C73969 + C73969 + C152362 * C381 +
                          C73623 * C350 + C73970 + C73970 + C152361 * C374) *
                             C151911 +
                         (C74006 + C74005 + C74004) * C152258) *
                            C152162 * C151981 * C152352 +
                        ((C74009 + C74008 + C74007) * C152258 +
                         (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                          C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                          C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                             C151911) *
                            C152162 * C151981 * C152321) *
                           C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152369 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152354 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C151963 * C347 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152354 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C152369 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C152324) *
                       C151963 * C348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C152369 -
                    ((C73627 * C1621 + C74270 + C74270 + C73620 * C1645 +
                      C73625 * C1158 + C74271 + C74271 + C152362 * C1170 +
                      C73623 * C587 + C74272 + C74272 + C152361 * C611) *
                         C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152354 +
                    ((C74311 + C74310 + C74309) * C152258 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151911) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C1345 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C73998 + C73999 + C74000) * C151911 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C152258) *
                       C152162 * C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C152258 +
                    (C74001 + C74002 + C74003) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C73627 * C8007 + C75408 + C75408 + C73620 * C8015 +
                     C73625 * C1444 + C75409 + C75409 + C152362 * C1460 +
                     C73623 * C1441 + C75410 + C75410 + C152361 * C1457) *
                        C151911 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C152258) *
                       C152162 * C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C152258 +
                    (C73623 * C1444 + C75417 + C75417 + C152361 * C1460 +
                     C73625 * C8007 + C75418 + C75418 + C152362 * C8015 +
                     C73627 * C8010 + C75419 + C75419 + C73620 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152369 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152354 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C1345 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152354 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C152369 -
                    ((C73627 * C8249 + C75638 + C75638 + C73620 * C8261 +
                      C73625 * C1626 + C75639 + C75639 + C152362 * C1650 +
                      C73623 * C1619 + C75640 + C75640 + C152361 * C1643) *
                         C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C152324) *
                       C1346 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C152369 -
                    ((C73627 * C8251 + C75644 + C75644 + C73620 * C8263 +
                      C73625 * C2164 + C75645 + C75645 + C152362 * C2172 +
                      C73623 * C1623 + C75646 + C75646 + C152361 * C1647) *
                         C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152354 +
                    ((C73623 * C1625 + C75650 + C75650 + C152361 * C1649 +
                      C73625 * C8250 + C75651 + C75651 + C152362 * C8262 +
                      C73627 * C8253 + C75652 + C75652 + C73620 * C8265) *
                         C152258 +
                     (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                      C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                      C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                         C151911) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C2325 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C2326 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C151963 * C152365 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C2326 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C2325 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C152324) *
                       C151963 * C152348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C2325 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C2326 +
                    ((C74311 + C74310 + C74309) * C152258 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151911) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C2325 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C2326 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C152368 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C2326 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C2325 -
                    ((C73627 * C8249 + C75638 + C75638 + C73620 * C8261 +
                      C73625 * C1626 + C75639 + C75639 + C152362 * C1650 +
                      C73623 * C1619 + C75640 + C75640 + C152361 * C1643) *
                         C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C152324) *
                       C152352 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C2325 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C2326 +
                    ((C73623 * C1625 + C75650 + C75650 + C152361 * C1649 +
                      C73625 * C8250 + C75651 + C75651 + C152362 * C8262 +
                      C73627 * C8253 + C75652 + C75652 + C73620 * C8265) *
                         C152258 +
                     (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                      C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                      C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                         C151911) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C2556 -
                   ((C74300 + C74301 + C74302) * C151911 +
                    (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                     C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                     C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                        C152258) *
                       C152162 * C2557 +
                   ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                     C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                     C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                        C152258 +
                    (C74303 + C74304 + C74305) * C151911) *
                       C152162 * C2558 -
                   ((C73627 * C9575 + C76934 + C76934 + C73620 * C9587 +
                     C73625 * C3090 + C76935 + C76935 + C152362 * C3098 +
                     C73623 * C2563 + C76936 + C76936 + C152361 * C2579) *
                        C151911 +
                    (C73627 * C9576 + C76937 + C76937 + C73620 * C9588 +
                     C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                     C73623 * C2564 + C76939 + C76939 + C152361 * C2580) *
                        C152258) *
                       C152162 * C2559 +
                   ((C73623 * C2565 + C76940 + C76940 + C152361 * C2581 +
                     C73625 * C9577 + C76941 + C76941 + C152362 * C9589 +
                     C73627 * C9578 + C76942 + C76942 + C73620 * C9590) *
                        C152258 +
                    (C73623 * C2566 + C76943 + C76943 + C152361 * C2582 +
                     C73625 * C9579 + C76944 + C76944 + C152362 * C9591 +
                     C73627 * C9580 + C76945 + C76945 + C73620 * C9592) *
                        C151911) *
                       C152162 * C2560) *
                  C151963 * C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152280 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C1345 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152280) *
                        C1346 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C152258 +
                      (C74001 + C74002 + C74003) * C151911) *
                         C152162 * C152280 -
                     ((C76173 + C76174 + C76175) * C151911 +
                      (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                       C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                       C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                          C152258) *
                         C152162 * C152068) *
                        C152321) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152280) *
                        C1345 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152280 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C1346 +
                    (((C76175 + C76174 + C76173) * C152258 +
                      (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                       C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                       C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74007 + C74008 + C74009) * C151911 +
                      (C74003 + C74002 + C74001) * C152258) *
                         C152162 * C152280) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152280 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C151963 * C807 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152068 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C152280) *
                       C151963 * C808 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C152280 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152068) *
                       C151963 * C809 +
                   (((C74735 + C74734 + C74733) * C152258 +
                     (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                      C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                      C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                         C151911) *
                        C152162 * C152068 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C152280) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C2936 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C2937 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C2938 -
                    ((C77463 + C77464 + C77465) * C151911 +
                     (C73627 * C9576 + C76937 + C76937 + C73620 * C9588 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73623 * C2564 + C76939 + C76939 + C152361 * C2580) *
                         C152258) *
                        C152162 * C152337) *
                       C151963 * C152265 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C2937 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C2936 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C2938 +
                    ((C77465 + C77464 + C77463) * C152258 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151911) *
                        C152162 * C152337) *
                       C151963 * C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152352 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152352 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152368 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C73627 * C1439 + C73968 + C73968 + C73620 * C1455 +
                      C73625 * C357 + C73969 + C73969 + C152362 * C381 +
                      C73623 * C350 + C73970 + C73970 + C152361 * C374) *
                         C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152352 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C151963 * C129 -
                   ((C73699 + C73700 + C73701) * C151911 +
                    (C73698 + C73697 + C73696) * C152258) *
                       C152162 * C151981 * C151963 * C130 +
                   ((C73701 + C73700 + C73699) * C152258 +
                    (C73702 + C73703 + C73704) * C151911) *
                       C152162 * C151981 * C151963 * C131 -
                   ((C73705 + C73706 + C73707) * C151911 +
                    (C73704 + C73703 + C73702) * C152258) *
                       C152162 * C151981 * C151963 * C132 +
                   ((C73707 + C73706 + C73705) * C152258 +
                    (C73623 * C141 + C73669 + C73669 + C152361 * C157 +
                     C73625 * C360 + C73670 + C73670 + C152362 * C384 +
                     C73627 * C361 + C73671 + C73671 + C73620 * C385) *
                        C151911) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C1345 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C73998 + C73999 + C74000) * C151911 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C152258) *
                       C152162 * C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C152258 +
                    (C74001 + C74002 + C74003) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C73627 * C8007 + C75408 + C75408 + C73620 * C8015 +
                     C73625 * C1444 + C75409 + C75409 + C152362 * C1460 +
                     C73623 * C1441 + C75410 + C75410 + C152361 * C1457) *
                        C151911 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C152258) *
                       C152162 * C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C152258 +
                    (C73623 * C1444 + C75417 + C75417 + C152361 * C1460 +
                     C73625 * C8007 + C75418 + C75418 + C152362 * C8015 +
                     C73627 * C8010 + C75419 + C75419 + C73620 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C2325 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C2326 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C151963 * C152365 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C2326 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C2325 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C152324) *
                       C151963 * C152348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C2325 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C2326 +
                    ((C74311 + C74310 + C74309) * C152258 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151911) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C2325 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C2326 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C152368 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C2326 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C2325 -
                    ((C73627 * C8249 + C75638 + C75638 + C73620 * C8261 +
                      C73625 * C1626 + C75639 + C75639 + C152362 * C1650 +
                      C73623 * C1619 + C75640 + C75640 + C152361 * C1643) *
                         C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C152324) *
                       C152352 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C2325 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C2326 +
                    ((C73623 * C1625 + C75650 + C75650 + C152361 * C1649 +
                      C73625 * C8250 + C75651 + C75651 + C152362 * C8262 +
                      C73627 * C8253 + C75652 + C75652 + C73620 * C8265) *
                         C152258 +
                     (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                      C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                      C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                         C151911) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C4241 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152279 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C4241) *
                        C152026) *
                       C151940 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C4241) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C4241 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152026) *
                       C151949 +
                   ((((C73701 + C73700 + C73699) * C152258 +
                      (C73702 + C73703 + C73704) * C151911) *
                         C152162 * C4241 -
                     ((C74733 + C74734 + C74735) * C151911 +
                      (C74308 + C74307 + C74306) * C152258) *
                         C152162 * C152068) *
                        C152279 +
                    (((C75067 + C75066 + C75065) * C152258 +
                      (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                       C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                       C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74521 + C74522 + C74523) * C151911 +
                      (C74006 + C74005 + C74004) * C152258) *
                         C152162 * C4241) *
                        C152026) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152064 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152071 +
                     ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                       C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                       C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                          C152258 +
                      (C74303 + C74304 + C74305) * C151911) *
                         C152162 * C4913) *
                        C152279 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152071 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152064 -
                     ((C77251 + C77252 + C77253) * C151911 +
                      (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                       C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                       C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                          C152258) *
                         C152162 * C4913) *
                        C152026) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152071 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152064 -
                     ((C74309 + C74310 + C74311) * C151911 +
                      (C74305 + C74304 + C74303) * C152258) *
                         C152162 * C4913) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152064 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152071 +
                     ((C77253 + C77252 + C77251) * C152258 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151911) *
                         C152162 * C4913) *
                        C152026) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C4241 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152368 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C4241) *
                        C152352 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C152258 +
                      (C74001 + C74002 + C74003) * C151911) *
                         C152162 * C4241 -
                     ((C76173 + C76174 + C76175) * C151911 +
                      (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                       C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                       C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                          C152258) *
                         C152162 * C152068) *
                        C152321) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C4241) *
                        C152368 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C4241 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152352 +
                    (((C76175 + C76174 + C76173) * C152258 +
                      (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                       C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                       C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74007 + C74008 + C74009) * C151911 +
                      (C74003 + C74002 + C74001) * C152258) *
                         C152162 * C4241) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C4241 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C151963 * C152374 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152068 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C4241) *
                       C151963 * C152367 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C4241 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152068) *
                       C151963 * C152350 +
                   (((C74735 + C74734 + C74733) * C152258 +
                     (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                      C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                      C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                         C151911) *
                        C152162 * C152068 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C4241) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152376 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152373 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152360 -
                    ((C77463 + C77464 + C77465) * C151911 +
                     (C73627 * C9576 + C76937 + C76937 + C73620 * C9588 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73623 * C2564 + C76939 + C76939 + C152361 * C2580) *
                         C152258) *
                        C152162 * C152337) *
                       C151963 * C3375 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152373 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C152376 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C152360 +
                    ((C77465 + C77464 + C77463) * C152258 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151911) *
                        C152162 * C152337) *
                       C151963 * C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152064 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152071 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C4913) *
                       C151963 * C151940 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152071 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C152064 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C4913) *
                       C151963 * C151949 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C152064 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152071 +
                    ((C74311 + C74310 + C74309) * C152258 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151911) *
                        C152162 * C4913) *
                       C151963 * C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C4241 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C151963 * C152374 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152068 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C4241) *
                       C151963 * C152367 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C4241 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152068) *
                       C151963 * C152350 +
                   (((C74735 + C74734 + C74733) * C152258 +
                     (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                      C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                      C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                         C151911) *
                        C152162 * C152068 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C4241) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C4241 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152368 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C4241) *
                        C152352 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C152258 +
                      (C74001 + C74002 + C74003) * C151911) *
                         C152162 * C4241 -
                     ((C76173 + C76174 + C76175) * C151911 +
                      (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                       C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                       C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                          C152258) *
                         C152162 * C152068) *
                        C152321) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C4241) *
                        C152368 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C4241 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152352 +
                    (((C76175 + C76174 + C76173) * C152258 +
                      (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                       C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                       C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74007 + C74008 + C74009) * C151911 +
                      (C74003 + C74002 + C74001) * C152258) *
                         C152162 * C4241) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152279 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152026) *
                       C807 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152279) *
                       C808 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C152279 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152026) *
                       C809 +
                   (((C74523 + C74522 + C74521) * C152258 +
                     (C73623 * C358 + C74512 + C74512 + C152361 * C382 +
                      C73625 * C359 + C74513 + C74513 + C152362 * C383 +
                      C73627 * C1801 + C74514 + C74514 + C73620 * C1803) *
                         C151911) *
                        C152162 * C151981 * C152026 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C151981 * C152279) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C1795 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C1796 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C1797 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C151981 * C152331) *
                       C152265 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C1796 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C1795 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C1797 +
                    ((C75867 + C75866 + C75865) * C152258 +
                     (C73623 * C1440 + C75856 + C75856 + C152361 * C1456 +
                      C73625 * C1445 + C75857 + C75857 + C152362 * C1461 +
                      C73627 * C8479 + C75858 + C75858 + C73620 * C8481) *
                         C151911) *
                        C152162 * C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152280 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C152279 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152280) *
                        C152026) *
                       C347 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152280) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152280 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C152026) *
                       C348 +
                   ((((C73701 + C73700 + C73699) * C152258 +
                      (C73702 + C73703 + C73704) * C151911) *
                         C152162 * C152280 -
                     ((C74733 + C74734 + C74735) * C151911 +
                      (C74308 + C74307 + C74306) * C152258) *
                         C152162 * C152068) *
                        C152279 +
                    (((C75067 + C75066 + C75065) * C152258 +
                      (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                       C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                       C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74521 + C74522 + C74523) * C151911 +
                      (C74006 + C74005 + C74004) * C152258) *
                         C152162 * C152280) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152280 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C1795 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152068 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C152280) *
                       C1796 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C152280 -
                    ((C76173 + C76174 + C76175) * C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152068) *
                       C1797 +
                   (((C73623 * C2163 + C76370 + C76370 + C152361 * C2171 +
                      C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                      C73627 * C9005 + C76372 + C76372 + C73620 * C9009) *
                         C152258 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151911) *
                        C152162 * C152068 -
                    ((C75865 + C75866 + C75867) * C151911 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C152258) *
                        C152162 * C152280) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152352 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152352 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152368 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C73627 * C1439 + C73968 + C73968 + C73620 * C1455 +
                      C73625 * C357 + C73969 + C73969 + C152362 * C381 +
                      C73623 * C350 + C73970 + C73970 + C152361 * C374) *
                         C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152352 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C151963 * C129 -
                   ((C73699 + C73700 + C73701) * C151911 +
                    (C73698 + C73697 + C73696) * C152258) *
                       C152162 * C151981 * C151963 * C130 +
                   ((C73701 + C73700 + C73699) * C152258 +
                    (C73702 + C73703 + C73704) * C151911) *
                       C152162 * C151981 * C151963 * C131 -
                   ((C73705 + C73706 + C73707) * C151911 +
                    (C73704 + C73703 + C73702) * C152258) *
                       C152162 * C151981 * C151963 * C132 +
                   ((C73707 + C73706 + C73705) * C152258 +
                    (C73623 * C141 + C73669 + C73669 + C152361 * C157 +
                     C73625 * C360 + C73670 + C73670 + C152362 * C384 +
                     C73627 * C361 + C73671 + C73671 + C73620 * C385) *
                        C151911) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152369 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152354 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C151963 * C347 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152354 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C152369 -
                    ((C74309 + C74310 + C74311) * C151911 +
                     (C74305 + C74304 + C74303) * C152258) *
                        C152162 * C152324) *
                       C151963 * C348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C152369 -
                    ((C73627 * C1621 + C74270 + C74270 + C73620 * C1645 +
                      C73625 * C1158 + C74271 + C74271 + C152362 * C1170 +
                      C73623 * C587 + C74272 + C74272 + C152361 * C611) *
                         C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152354 +
                    ((C74311 + C74310 + C74309) * C152258 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151911) *
                        C152162 * C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C1345 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C73998 + C73999 + C74000) * C151911 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C152258) *
                       C152162 * C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C152258 +
                    (C74001 + C74002 + C74003) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C73627 * C8007 + C75408 + C75408 + C73620 * C8015 +
                     C73625 * C1444 + C75409 + C75409 + C152362 * C1460 +
                     C73623 * C1441 + C75410 + C75410 + C152361 * C1457) *
                        C151911 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C152258) *
                       C152162 * C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C152258 +
                    (C73623 * C1444 + C75417 + C75417 + C152361 * C1460 +
                     C73625 * C8007 + C75418 + C75418 + C152362 * C8015 +
                     C73627 * C8010 + C75419 + C75419 + C73620 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152369 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152354 +
                    ((C73623 * C591 + C74240 + C74240 + C152361 * C615 +
                      C73625 * C1620 + C74241 + C74241 + C152362 * C1644 +
                      C73627 * C1625 + C74242 + C74242 + C73620 * C1649) *
                         C152258 +
                     (C74303 + C74304 + C74305) * C151911) *
                        C152162 * C152324) *
                       C1345 +
                   (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                         C152258 +
                     (C75062 + C75063 + C75064) * C151911) *
                        C152162 * C152354 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C152369 -
                    ((C73627 * C8249 + C75638 + C75638 + C73620 * C8261 +
                      C73625 * C1626 + C75639 + C75639 + C152362 * C1650 +
                      C73623 * C1619 + C75640 + C75640 + C152361 * C1643) *
                         C151911 +
                     (C73627 * C8250 + C75641 + C75641 + C73620 * C8262 +
                      C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                      C73623 * C1620 + C75643 + C75643 + C152361 * C1644) *
                         C152258) *
                        C152162 * C152324) *
                       C1346 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C152369 -
                    ((C73627 * C8251 + C75644 + C75644 + C73620 * C8263 +
                      C73625 * C2164 + C75645 + C75645 + C152362 * C2172 +
                      C73623 * C1623 + C75646 + C75646 + C152361 * C1647) *
                         C151911 +
                     (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                         C152258) *
                        C152162 * C152354 +
                    ((C73623 * C1625 + C75650 + C75650 + C152361 * C1649 +
                      C73625 * C8250 + C75651 + C75651 + C152362 * C8262 +
                      C73627 * C8253 + C75652 + C75652 + C73620 * C8265) *
                         C152258 +
                     (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                      C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                      C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                         C151911) *
                        C152162 * C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C152280 -
                    ((C74300 + C74301 + C74302) * C151911 +
                     (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                         C152258) *
                        C152162 * C152068) *
                       C151963 * C807 +
                   (((C74302 + C74301 + C74300) * C152258 +
                     (C74306 + C74307 + C74308) * C151911) *
                        C152162 * C152068 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C152280) *
                       C151963 * C808 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C152280 -
                    ((C74733 + C74734 + C74735) * C151911 +
                     (C74308 + C74307 + C74306) * C152258) *
                        C152162 * C152068) *
                       C151963 * C809 +
                   (((C74735 + C74734 + C74733) * C152258 +
                     (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                      C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                      C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                         C151911) *
                        C152162 * C152068 -
                    ((C73705 + C73706 + C73707) * C151911 +
                     (C73704 + C73703 + C73702) * C152258) *
                        C152162 * C152280) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C152258 +
                      (C73696 + C73697 + C73698) * C151911) *
                         C152162 * C152280 -
                     ((C74300 + C74301 + C74302) * C151911 +
                      (C73627 * C1624 + C74237 + C74237 + C73620 * C1648 +
                       C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                       C73623 * C590 + C74239 + C74239 + C152361 * C614) *
                          C152258) *
                         C152162 * C152068) *
                        C1345 +
                    (((C73623 * C1155 + C75026 + C75026 + C152361 * C1167 +
                       C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                       C73627 * C2163 + C75028 + C75028 + C73620 * C2171) *
                          C152258 +
                      (C75062 + C75063 + C75064) * C151911) *
                         C152162 * C152068 -
                     ((C73998 + C73999 + C74000) * C151911 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C152258) *
                         C152162 * C152280) *
                        C1346 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C152258 +
                      (C74001 + C74002 + C74003) * C151911) *
                         C152162 * C152280 -
                     ((C76173 + C76174 + C76175) * C151911 +
                      (C73627 * C8252 + C75647 + C75647 + C73620 * C8264 +
                       C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                       C73623 * C1624 + C75649 + C75649 + C152361 * C1648) *
                          C152258) *
                         C152162 * C152068) *
                        C152321) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C152258 +
                      (C74306 + C74307 + C74308) * C151911) *
                         C152162 * C152068 -
                     ((C73699 + C73700 + C73701) * C151911 +
                      (C73698 + C73697 + C73696) * C152258) *
                         C152162 * C152280) *
                        C1345 +
                    (((C74000 + C73999 + C73998) * C152258 +
                      (C74004 + C74005 + C74006) * C151911) *
                         C152162 * C152280 -
                     ((C75065 + C75066 + C75067) * C151911 +
                      (C75064 + C75063 + C75062) * C152258) *
                         C152162 * C152068) *
                        C1346 +
                    (((C76175 + C76174 + C76173) * C152258 +
                      (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                       C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                       C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                          C151911) *
                         C152162 * C152068 -
                     ((C74007 + C74008 + C74009) * C151911 +
                      (C74003 + C74002 + C74001) * C152258) *
                         C152162 * C152280) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C151963 * C129 -
                   ((C73699 + C73700 + C73701) * C151911 +
                    (C73698 + C73697 + C73696) * C152258) *
                       C152162 * C151981 * C151963 * C130 +
                   ((C73701 + C73700 + C73699) * C152258 +
                    (C73702 + C73703 + C73704) * C151911) *
                       C152162 * C151981 * C151963 * C131 -
                   ((C73705 + C73706 + C73707) * C151911 +
                    (C73704 + C73703 + C73702) * C152258) *
                       C152162 * C151981 * C151963 * C132 +
                   ((C73707 + C73706 + C73705) * C152258 +
                    (C73623 * C141 + C73669 + C73669 + C152361 * C157 +
                     C73625 * C360 + C73670 + C73670 + C152362 * C384 +
                     C73627 * C361 + C73671 + C73671 + C73620 * C385) *
                        C151911) *
                       C152162 * C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C152352 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C347 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C152352 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C152368 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C152368 -
                    ((C73627 * C1439 + C73968 + C73968 + C73620 * C1455 +
                      C73625 * C357 + C73969 + C73969 + C152362 * C381 +
                      C73623 * C350 + C73970 + C73970 + C152361 * C374) *
                         C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C152352 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C152258 +
                     (C73696 + C73697 + C73698) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C73998 + C73999 + C74000) * C151911 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C152258) *
                        C152162 * C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C152258 +
                     (C74001 + C74002 + C74003) * C151911) *
                        C152162 * C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C152258 +
                     (C74004 + C74005 + C74006) * C151911) *
                        C152162 * C151981 * C1346 -
                    ((C73699 + C73700 + C73701) * C151911 +
                     (C73698 + C73697 + C73696) * C152258) *
                        C152162 * C151981 * C1345 -
                    ((C74007 + C74008 + C74009) * C151911 +
                     (C74003 + C74002 + C74001) * C152258) *
                        C152162 * C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C152258 +
                     (C73702 + C73703 + C73704) * C151911) *
                        C152162 * C151981 * C1345 -
                    ((C74521 + C74522 + C74523) * C151911 +
                     (C74006 + C74005 + C74004) * C152258) *
                        C152162 * C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C152258 +
                     (C73623 * C357 + C73971 + C73971 + C152361 * C381 +
                      C73625 * C1439 + C73972 + C73972 + C152362 * C1455 +
                      C73627 * C1446 + C73973 + C73973 + C73620 * C1462) *
                         C151911) *
                        C152162 * C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C152258 +
                    (C73696 + C73697 + C73698) * C151911) *
                       C152162 * C151981 * C1433 -
                   ((C73998 + C73999 + C74000) * C151911 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C152258) *
                       C152162 * C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C152258 +
                    (C74001 + C74002 + C74003) * C151911) *
                       C152162 * C151981 * C1435 -
                   ((C73627 * C8007 + C75408 + C75408 + C73620 * C8015 +
                     C73625 * C1444 + C75409 + C75409 + C152362 * C1460 +
                     C73623 * C1441 + C75410 + C75410 + C152361 * C1457) *
                        C151911 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C152258) *
                       C152162 * C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C152258 +
                    (C73623 * C1444 + C75417 + C75417 + C152361 * C1460 +
                     C73625 * C8007 + C75418 + C75418 + C152362 * C8015 +
                     C73627 * C8010 + C75419 + C75419 + C73620 * C8018) *
                        C151911) *
                       C152162 * C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C152022 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152029 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C151981 * C3719) *
                       C151940 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152029 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152022 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C3719) *
                       C151949 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C152022 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152029 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C3719) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[151] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152280 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152022 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152280) *
                        C152029 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C151906 * C152297 +
                      (C94827 + C94828 + C94829) * C151906 * C152226) *
                         C152280 -
                     ((C94830 + C94831 + C94832) * C151906 * C152226 +
                      (C94829 + C94828 + C94827) * C151906 * C152297) *
                         C152068) *
                        C3719) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152280) *
                        C152022 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152280 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152029 +
                    (((C76175 + C76174 + C76173) * C151906 * C152297 +
                      (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                       C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                       C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                          C151906 * C152226) *
                         C152068 -
                     ((C76173 + C76174 + C76175) * C151906 * C152226 +
                      (C74003 + C74002 + C74001) * C151906 * C152297) *
                         C152280) *
                        C3719) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[152] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C152375 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152371 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C151981 * C152357 -
                    ((C95528 + C95527 + C95526) * C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C151981 * C152331) *
                       C3375 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152371 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152375 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152357 +
                    ((C75867 + C75866 + C75865) * C151906 * C152297 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151906 * C152226) *
                        C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C3235 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152026) *
                       C152374 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C3235) *
                       C152367 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C3235 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152026) *
                       C152350 +
                   (((C74523 + C74522 + C74521) * C151906 * C152297 +
                     (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                      C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                      C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                         C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C151981 * C3235) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152369 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152354 +
                     ((C93530 + C93529 + C93528) * C151906 * C152297 +
                      (C96114 + C96115 + C96116) * C151906 * C152226) *
                         C152324) *
                        C3235 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152354 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152369 -
                     ((C96813 + C96814 + C96815) * C151906 * C152226 +
                      (C94826 + C94825 + C94824) * C151906 * C152297) *
                         C152324) *
                        C152026) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152354 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152369 -
                     ((C77463 + C77464 + C77465) * C151906 * C152226 +
                      (C74305 + C74304 + C74303) * C151906 * C152297) *
                         C152324) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152369 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152354 +
                     ((C77253 + C77252 + C77251) * C151906 * C152297 +
                      (C73623 * C3090 + C77663 + C77663 + C152361 * C3098 +
                       C73625 * C9575 + C77664 + C77664 + C152362 * C9587 +
                       C73627 * C10326 + C77665 + C77665 + C73620 * C10330) *
                          C151906 * C152226) *
                         C152324) *
                        C152026) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[153] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152280 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C3235 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152280) *
                        C152026) *
                       C151940 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152280) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152280 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152026) *
                       C151949 +
                   ((((C73701 + C73700 + C73699) * C151906 * C152297 +
                      (C74306 + C74307 + C74308) * C151906 * C152226) *
                         C152280 -
                     ((C74309 + C74310 + C74311) * C151906 * C152226 +
                      (C74308 + C74307 + C74306) * C151906 * C152297) *
                         C152068) *
                        C3235 +
                    (((C75067 + C75066 + C75065) * C151906 * C152297 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151906 * C152226) *
                         C152068 -
                     ((C75065 + C75066 + C75067) * C151906 * C152226 +
                      (C74006 + C74005 + C74004) * C151906 * C152297) *
                         C152280) *
                        C152026) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[154] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C3235 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152026) *
                       C152374 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C3235) *
                       C152367 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C3235 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152026) *
                       C152350 +
                   (((C74523 + C74522 + C74521) * C151906 * C152297 +
                     (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                      C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                      C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                         C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C151981 * C3235) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C152375 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152371 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C151981 * C152357 -
                    ((C95528 + C95527 + C95526) * C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C151981 * C152331) *
                       C3375 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152371 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152375 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152357 +
                    ((C75867 + C75866 + C75865) * C151906 * C152297 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151906 * C152226) *
                        C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[155] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C4241 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152022 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C4241) *
                        C152029 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C151906 * C152297 +
                      (C94827 + C94828 + C94829) * C151906 * C152226) *
                         C4241 -
                     ((C94830 + C94831 + C94832) * C151906 * C152226 +
                      (C94829 + C94828 + C94827) * C151906 * C152297) *
                         C152068) *
                        C3719) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C4241) *
                        C152022 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C4241 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152029 +
                    (((C76175 + C76174 + C76173) * C151906 * C152297 +
                      (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                       C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                       C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                          C151906 * C152226) *
                         C152068 -
                     ((C76173 + C76174 + C76175) * C151906 * C152226 +
                      (C74003 + C74002 + C74001) * C151906 * C152297) *
                         C4241) *
                        C3719) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[156] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152064 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152071 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C96114 + C96115 + C96116) * C151906 * C152226) *
                        C4913) *
                       C152022 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152071 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C152064 -
                    ((C96813 + C96814 + C96815) * C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C4913) *
                       C152029 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C152064 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152071 +
                    ((C94832 + C94831 + C94830) * C151906 * C152297 +
                     (C73623 * C9576 + C94803 + C94803 + C152361 * C9588 +
                      C73625 * C10325 + C94804 + C94804 + C152362 * C10329 +
                      C73627 * C62166 + C94805 + C94805 + C73620 * C62168) *
                         C151906 * C152226) *
                        C4913) *
                       C3719) *
                  C151935) /
                 (p * q * std::sqrt(p + q));
    d2ee[157] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C4241 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C152375 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152068 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C4241) *
                       C152371 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C4241 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152068) *
                       C152357 +
                   (((C95526 + C95527 + C95528) * C151906 * C152297 +
                     (C73623 * C8250 + C95517 + C95517 + C152361 * C8262 +
                      C73625 * C8253 + C95518 + C95518 + C152362 * C8265 +
                      C73627 * C60835 + C95519 + C95519 + C73620 * C60837) *
                         C151906 * C152226) *
                        C152068 -
                    ((C95528 + C95527 + C95526) * C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C4241) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C4241 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C3235 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C4241) *
                        C152026) *
                       C152365 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C4241) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C4241 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152026) *
                       C152348 +
                   ((((C73701 + C73700 + C73699) * C151906 * C152297 +
                      (C74306 + C74307 + C74308) * C151906 * C152226) *
                         C4241 -
                     ((C74309 + C74310 + C74311) * C151906 * C152226 +
                      (C74308 + C74307 + C74306) * C151906 * C152297) *
                         C152068) *
                        C3235 +
                    (((C75067 + C75066 + C75065) * C151906 * C152297 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151906 * C152226) *
                         C152068 -
                     ((C75065 + C75066 + C75067) * C151906 * C152226 +
                      (C74006 + C74005 + C74004) * C151906 * C152297) *
                         C4241) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152376 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152373 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C96114 + C96115 + C96116) * C151906 * C152226) *
                        C152360 -
                    ((C96117 + C96118 + C96119) * C151906 * C152226 +
                     (C96116 + C96115 + C96114) * C151906 * C152297) *
                        C152337) *
                       C3235 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152373 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C152376 -
                    ((C96813 + C96814 + C96815) * C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C152360 +
                    ((C96815 + C96814 + C96813) * C151906 * C152297 +
                     (C73623 * C9577 + C96804 + C96804 + C152361 * C9589 +
                      C73625 * C9578 + C96805 + C96805 + C152362 * C9590 +
                      C73627 * C61693 + C96806 + C96806 + C73620 * C61695) *
                         C151906 * C152226) *
                        C152337) *
                       C152026) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[158] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152064 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152071 +
                     ((C93530 + C93529 + C93528) * C151906 * C152297 +
                      (C96114 + C96115 + C96116) * C151906 * C152226) *
                         C4913) *
                        C3235 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152071 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152064 -
                     ((C96813 + C96814 + C96815) * C151906 * C152226 +
                      (C94826 + C94825 + C94824) * C151906 * C152297) *
                         C4913) *
                        C152026) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152071 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152064 -
                     ((C77463 + C77464 + C77465) * C151906 * C152226 +
                      (C74305 + C74304 + C74303) * C151906 * C152297) *
                         C4913) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152064 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152071 +
                     ((C77253 + C77252 + C77251) * C151906 * C152297 +
                      (C73623 * C3090 + C77663 + C77663 + C152361 * C3098 +
                       C73625 * C9575 + C77664 + C77664 + C152362 * C9587 +
                       C73627 * C10326 + C77665 + C77665 + C73620 * C10330) *
                          C151906 * C152226) *
                         C4913) *
                        C152026) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[159] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C4241 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C3235 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C4241) *
                        C152026) *
                       C152365 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C4241) *
                        C3235 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C4241 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152026) *
                       C152348 +
                   ((((C73701 + C73700 + C73699) * C151906 * C152297 +
                      (C74306 + C74307 + C74308) * C151906 * C152226) *
                         C4241 -
                     ((C74309 + C74310 + C74311) * C151906 * C152226 +
                      (C74308 + C74307 + C74306) * C151906 * C152297) *
                         C152068) *
                        C3235 +
                    (((C75067 + C75066 + C75065) * C151906 * C152297 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151906 * C152226) *
                         C152068 -
                     ((C75065 + C75066 + C75067) * C151906 * C152226 +
                      (C74006 + C74005 + C74004) * C151906 * C152297) *
                         C4241) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C4241 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C152375 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152068 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C4241) *
                       C152371 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C4241 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152068) *
                       C152357 +
                   (((C95526 + C95527 + C95528) * C151906 * C152297 +
                     (C73623 * C8250 + C95517 + C95517 + C152361 * C8262 +
                      C73625 * C8253 + C95518 + C95518 + C152362 * C8265 +
                      C73627 * C60835 + C95519 + C95519 + C73620 * C60837) *
                         C151906 * C152226) *
                        C152068 -
                    ((C95528 + C95527 + C95526) * C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C4241) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[160] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C1795 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C1796 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C151981 * C1797 -
                    ((C73627 * C9005 + C76372 + C76372 + C73620 * C9009 +
                      C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                      C73623 * C2163 + C76370 + C76370 + C152361 * C2171) *
                         C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C151981 * C152331) *
                       C152265 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C1796 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C1795 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C1797 +
                    ((C75867 + C75866 + C75865) * C151906 * C152297 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151906 * C152226) *
                        C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C152279 -
                    ((C73627 * C2163 + C75028 + C75028 + C73620 * C2171 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73623 * C1155 + C75026 + C75026 + C152361 * C1167) *
                         C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152026) *
                       C807 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152279) *
                       C808 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C152279 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152026) *
                       C809 +
                   (((C74523 + C74522 + C74521) * C151906 * C152297 +
                     (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                      C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                      C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                         C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C151981 * C152279) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C2325 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C2326 +
                     ((C93530 + C93529 + C93528) * C151906 * C152297 +
                      (C96114 + C96115 + C96116) * C151906 * C152226) *
                         C152324) *
                        C152279 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C2326 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C2325 -
                     ((C73627 * C10325 + C77662 + C77662 + C73620 * C10329 +
                       C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                       C73623 * C3089 + C77660 + C77660 + C152361 * C3097) *
                          C151906 * C152226 +
                      (C94826 + C94825 + C94824) * C151906 * C152297) *
                         C152324) *
                        C152026) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C2326 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C2325 -
                     ((C77463 + C77464 + C77465) * C151906 * C152226 +
                      (C74305 + C74304 + C74303) * C151906 * C152297) *
                         C152324) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C2325 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C2326 +
                     ((C77253 + C77252 + C77251) * C151906 * C152297 +
                      (C73623 * C3090 + C77663 + C77663 + C152361 * C3098 +
                       C73625 * C9575 + C77664 + C77664 + C152362 * C9587 +
                       C73627 * C10326 + C77665 + C77665 + C73620 * C10330) *
                          C151906 * C152226) *
                         C152324) *
                        C152026) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[161] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152280 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C1795 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152068 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C152280) *
                       C1796 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C152280 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152068) *
                       C1797 +
                   (((C95526 + C95527 + C95528) * C151906 * C152297 +
                     (C73623 * C8250 + C95517 + C95517 + C152361 * C8262 +
                      C73625 * C8253 + C95518 + C95518 + C152362 * C8265 +
                      C73627 * C60835 + C95519 + C95519 + C73620 * C60837) *
                         C151906 * C152226) *
                        C152068 -
                    ((C95528 + C95527 + C95526) * C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C152280) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152280 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152279 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C73623 * C1620 + C75643 + C75643 + C152361 * C1644 +
                       C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                       C73627 * C8250 + C75641 + C75641 + C73620 * C8262) *
                          C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152280) *
                        C152026) *
                       C347 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152280) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152280 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152026) *
                       C348 +
                   ((((C73701 + C73700 + C73699) * C151906 * C152297 +
                      (C74306 + C74307 + C74308) * C151906 * C152226) *
                         C152280 -
                     ((C74309 + C74310 + C74311) * C151906 * C152226 +
                      (C74308 + C74307 + C74306) * C151906 * C152297) *
                         C152068) *
                        C152279 +
                    (((C75067 + C75066 + C75065) * C151906 * C152297 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151906 * C152226) *
                         C152068 -
                     ((C75065 + C75066 + C75067) * C151906 * C152226 +
                      (C74006 + C74005 + C74004) * C151906 * C152297) *
                         C152280) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C2936 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C2937 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C96114 + C96115 + C96116) * C151906 * C152226) *
                        C2938 -
                    ((C96117 + C96118 + C96119) * C151906 * C152226 +
                     (C96116 + C96115 + C96114) * C151906 * C152297) *
                        C152337) *
                       C152279 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C2937 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C2936 -
                    ((C96813 + C96814 + C96815) * C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C2938 +
                    ((C96815 + C96814 + C96813) * C151906 * C152297 +
                     (C73623 * C9577 + C96804 + C96804 + C152361 * C9589 +
                      C73625 * C9578 + C96805 + C96805 + C152362 * C9590 +
                      C73627 * C61693 + C96806 + C96806 + C73620 * C61695) *
                         C151906 * C152226) *
                        C152337) *
                       C152026) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[162] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                         C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                         C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                            C151906 * C152297 +
                        (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                         C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                         C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                            C151906 * C152226) *
                           C151981 * C151963 * C129 -
                       ((C74300 + C74301 + C74302) * C151906 * C152226 +
                        (C73698 + C73697 + C73696) * C151906 * C152297) *
                           C151981 * C151963 * C130 +
                       ((C73701 + C73700 + C73699) * C151906 * C152297 +
                        (C74306 + C74307 + C74308) * C151906 * C152226) *
                           C151981 * C151963 * C131 -
                       ((C74733 + C74734 + C74735) * C151906 * C152226 +
                        (C73704 + C73703 + C73702) * C151906 * C152297) *
                           C151981 * C151963 * C132 +
                       ((C73707 + C73706 + C73705) * C151906 * C152297 +
                        (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                         C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                         C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                            C151906 * C152226) *
                           C151981 * C151963 * C133) +
                  std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                          C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                          C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                             C151906 * C152297 +
                         (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                          C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                          C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                             C151906 * C152226) *
                            C151981 * C152368 -
                        ((C73627 * C2163 + C75028 + C75028 + C73620 * C2171 +
                          C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                          C73623 * C1155 + C75026 + C75026 + C152361 * C1167) *
                             C151906 * C152226 +
                         (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                          C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                          C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                             C151906 * C152297) *
                            C151981 * C152352 +
                        ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                          C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                          C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                             C151906 * C152297 +
                         (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                          C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                          C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                             C151906 * C152226) *
                            C151981 * C152321) *
                           C347 +
                       (((C74000 + C73999 + C73998) * C151906 * C152297 +
                         (C75062 + C75063 + C75064) * C151906 * C152226) *
                            C151981 * C152352 -
                        ((C74300 + C74301 + C74302) * C151906 * C152226 +
                         (C73698 + C73697 + C73696) * C151906 * C152297) *
                            C151981 * C152368 -
                        ((C76173 + C76174 + C76175) * C151906 * C152226 +
                         (C74003 + C74002 + C74001) * C151906 * C152297) *
                            C151981 * C152321) *
                           C348 +
                       (((C73701 + C73700 + C73699) * C151906 * C152297 +
                         (C74306 + C74307 + C74308) * C151906 * C152226) *
                            C151981 * C152368 -
                        ((C75065 + C75066 + C75067) * C151906 * C152226 +
                         (C74006 + C74005 + C74004) * C151906 * C152297) *
                            C151981 * C152352 +
                        ((C74009 + C74008 + C74007) * C151906 * C152297 +
                         (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                          C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                          C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                             C151906 * C152226) *
                            C151981 * C152321) *
                           C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152369 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152354 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C347 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152354 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C152369 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C152324) *
                       C151963 * C348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C152369 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152354 +
                    ((C74311 + C74310 + C74309) * C151906 * C152297 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C1346 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C1345 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C93525 + C93526 + C93527) * C151906 * C152226) *
                       C151981 * C1433 -
                   ((C94223 + C94222 + C94221) * C151906 * C152226 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C151906 * C152297) *
                       C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C151906 * C152297 +
                    (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                     C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                     C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                        C151906 * C152226) *
                       C151981 * C1435 -
                   ((C73627 * C9005 + C76372 + C76372 + C73620 * C9009 +
                     C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                     C73623 * C2163 + C76370 + C76370 + C152361 * C2171) *
                        C151906 * C152226 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C151906 * C152297) *
                       C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C151906 * C152297 +
                    (C73623 * C8252 + C94564 + C94564 + C152361 * C8264 +
                     C73625 * C9005 + C94565 + C94565 + C152362 * C9009 +
                     C73627 * C61312 + C94566 + C94566 + C73620 * C61314) *
                        C151906 * C152226) *
                       C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152369 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152354 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C1345 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152354 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C152369 -
                    ((C73627 * C10325 + C77662 + C77662 + C73620 * C10329 +
                      C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                      C73623 * C3089 + C77660 + C77660 + C152361 * C3097) *
                         C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C152324) *
                       C1346 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C152369 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152354 +
                    ((C94832 + C94831 + C94830) * C151906 * C152297 +
                     (C73623 * C9576 + C94803 + C94803 + C152361 * C9588 +
                      C73625 * C10325 + C94804 + C94804 + C152362 * C10329 +
                      C73627 * C62166 + C94805 + C94805 + C73620 * C62168) *
                         C151906 * C152226) *
                        C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C2325 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C2326 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C152365 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C2326 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C2325 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C152324) *
                       C151963 * C152348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C2325 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C2326 +
                    ((C74311 + C74310 + C74309) * C151906 * C152297 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C2325 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C2326 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C152368 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C2326 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C2325 -
                    ((C73627 * C10325 + C77662 + C77662 + C73620 * C10329 +
                      C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                      C73623 * C3089 + C77660 + C77660 + C152361 * C3097) *
                         C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C152324) *
                       C152352 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C2325 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C2326 +
                    ((C94832 + C94831 + C94830) * C151906 * C152297 +
                     (C73623 * C9576 + C94803 + C94803 + C152361 * C9588 +
                      C73625 * C10325 + C94804 + C94804 + C152362 * C10329 +
                      C73627 * C62166 + C94805 + C94805 + C73620 * C62168) *
                         C151906 * C152226) *
                        C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C93525 + C93526 + C93527) * C151906 * C152226) *
                       C2556 -
                   ((C93528 + C93529 + C93530) * C151906 * C152226 +
                    (C93527 + C93526 + C93525) * C151906 * C152297) *
                       C2557 +
                   ((C93530 + C93529 + C93528) * C151906 * C152297 +
                    (C96114 + C96115 + C96116) * C151906 * C152226) *
                       C2558 -
                   ((C96117 + C96118 + C96119) * C151906 * C152226 +
                    (C96116 + C96115 + C96114) * C151906 * C152297) *
                       C2559 +
                   ((C96119 + C96118 + C96117) * C151906 * C152297 +
                    (C73623 * C17970 + C96099 + C96099 + C152361 * C17978 +
                     C73625 * C18703 + C96100 + C96100 + C152362 * C18707 +
                     C73627 * C69051 + C96101 + C96101 + C73620 * C69053) *
                        C151906 * C152226) *
                       C2560) *
                  C151963 * C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[163] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152280 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C1345 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152280) *
                        C1346 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C151906 * C152297 +
                      (C94827 + C94828 + C94829) * C151906 * C152226) *
                         C152280 -
                     ((C94830 + C94831 + C94832) * C151906 * C152226 +
                      (C94829 + C94828 + C94827) * C151906 * C152297) *
                         C152068) *
                        C152321) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152280) *
                        C1345 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152280 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C1346 +
                    (((C76175 + C76174 + C76173) * C151906 * C152297 +
                      (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                       C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                       C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                          C151906 * C152226) *
                         C152068 -
                     ((C76173 + C76174 + C76175) * C151906 * C152226 +
                      (C74003 + C74002 + C74001) * C151906 * C152297) *
                         C152280) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152280 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C151963 * C807 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152068 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C152280) *
                       C151963 * C808 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C152280 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152068) *
                       C151963 * C809 +
                   (((C74735 + C74734 + C74733) * C151906 * C152297 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151906 * C152226) *
                        C152068 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C152280) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C2936 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C2937 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C96114 + C96115 + C96116) * C151906 * C152226) *
                        C2938 -
                    ((C96117 + C96118 + C96119) * C151906 * C152226 +
                     (C96116 + C96115 + C96114) * C151906 * C152297) *
                        C152337) *
                       C151963 * C152265 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C2937 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C2936 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C2938 +
                    ((C77465 + C77464 + C77463) * C151906 * C152297 +
                     (C73623 * C2566 + C76943 + C76943 + C152361 * C2582 +
                      C73625 * C9579 + C76944 + C76944 + C152362 * C9591 +
                      C73627 * C9580 + C76945 + C76945 + C73620 * C9592) *
                         C151906 * C152226) *
                        C152337) *
                       C151963 * C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[164] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                         C151906 * C152226) *
                        C151981 * C152368 -
                    ((C73627 * C2163 + C75028 + C75028 + C73620 * C2171 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73623 * C1155 + C75026 + C75026 + C152361 * C1167) *
                         C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152352 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C347 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152352 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152368 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C152368 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152352 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                     C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                     C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                        C151906 * C152226) *
                       C151981 * C151963 * C129 -
                   ((C74300 + C74301 + C74302) * C151906 * C152226 +
                    (C73698 + C73697 + C73696) * C151906 * C152297) *
                       C151981 * C151963 * C130 +
                   ((C73701 + C73700 + C73699) * C151906 * C152297 +
                    (C74306 + C74307 + C74308) * C151906 * C152226) *
                       C151981 * C151963 * C131 -
                   ((C74733 + C74734 + C74735) * C151906 * C152226 +
                    (C73704 + C73703 + C73702) * C151906 * C152297) *
                       C151981 * C151963 * C132 +
                   ((C73707 + C73706 + C73705) * C151906 * C152297 +
                    (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                     C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                     C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                        C151906 * C152226) *
                       C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C1346 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C1345 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C93525 + C93526 + C93527) * C151906 * C152226) *
                       C151981 * C1433 -
                   ((C94223 + C94222 + C94221) * C151906 * C152226 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C151906 * C152297) *
                       C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C151906 * C152297 +
                    (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                     C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                     C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                        C151906 * C152226) *
                       C151981 * C1435 -
                   ((C73627 * C9005 + C76372 + C76372 + C73620 * C9009 +
                     C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                     C73623 * C2163 + C76370 + C76370 + C152361 * C2171) *
                        C151906 * C152226 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C151906 * C152297) *
                       C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C151906 * C152297 +
                    (C73623 * C8252 + C94564 + C94564 + C152361 * C8264 +
                     C73625 * C9005 + C94565 + C94565 + C152362 * C9009 +
                     C73627 * C61312 + C94566 + C94566 + C73620 * C61314) *
                        C151906 * C152226) *
                       C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C2325 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C2326 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C152365 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C2326 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C2325 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C152324) *
                       C151963 * C152348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C2325 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C2326 +
                    ((C74311 + C74310 + C74309) * C151906 * C152297 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C2325 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C2326 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C152368 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C2326 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C2325 -
                    ((C73627 * C10325 + C77662 + C77662 + C73620 * C10329 +
                      C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                      C73623 * C3089 + C77660 + C77660 + C152361 * C3097) *
                         C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C152324) *
                       C152352 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C2325 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C2326 +
                    ((C94832 + C94831 + C94830) * C151906 * C152297 +
                     (C73623 * C9576 + C94803 + C94803 + C152361 * C9588 +
                      C73625 * C10325 + C94804 + C94804 + C152362 * C10329 +
                      C73627 * C62166 + C94805 + C94805 + C73620 * C62168) *
                         C151906 * C152226) *
                        C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C4241 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152279 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C4241) *
                        C152026) *
                       C151940 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C4241) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C4241 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152026) *
                       C151949 +
                   ((((C73701 + C73700 + C73699) * C151906 * C152297 +
                      (C74306 + C74307 + C74308) * C151906 * C152226) *
                         C4241 -
                     ((C74309 + C74310 + C74311) * C151906 * C152226 +
                      (C74308 + C74307 + C74306) * C151906 * C152297) *
                         C152068) *
                        C152279 +
                    (((C75067 + C75066 + C75065) * C151906 * C152297 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151906 * C152226) *
                         C152068 -
                     ((C75065 + C75066 + C75067) * C151906 * C152226 +
                      (C74006 + C74005 + C74004) * C151906 * C152297) *
                         C4241) *
                        C152026) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152064 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152071 +
                     ((C93530 + C93529 + C93528) * C151906 * C152297 +
                      (C96114 + C96115 + C96116) * C151906 * C152226) *
                         C4913) *
                        C152279 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152071 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152064 -
                     ((C96813 + C96814 + C96815) * C151906 * C152226 +
                      (C94826 + C94825 + C94824) * C151906 * C152297) *
                         C4913) *
                        C152026) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152071 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152064 -
                     ((C77463 + C77464 + C77465) * C151906 * C152226 +
                      (C74305 + C74304 + C74303) * C151906 * C152297) *
                         C4913) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152064 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152071 +
                     ((C77253 + C77252 + C77251) * C151906 * C152297 +
                      (C73623 * C3090 + C77663 + C77663 + C152361 * C3098 +
                       C73625 * C9575 + C77664 + C77664 + C152362 * C9587 +
                       C73627 * C10326 + C77665 + C77665 + C73620 * C10330) *
                          C151906 * C152226) *
                         C4913) *
                        C152026) *
                       C151946)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C4241 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152368 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C4241) *
                        C152352 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C151906 * C152297 +
                      (C94827 + C94828 + C94829) * C151906 * C152226) *
                         C4241 -
                     ((C94830 + C94831 + C94832) * C151906 * C152226 +
                      (C94829 + C94828 + C94827) * C151906 * C152297) *
                         C152068) *
                        C152321) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C4241) *
                        C152368 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C4241 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152352 +
                    (((C76175 + C76174 + C76173) * C151906 * C152297 +
                      (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                       C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                       C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                          C151906 * C152226) *
                         C152068 -
                     ((C76173 + C76174 + C76175) * C151906 * C152226 +
                      (C74003 + C74002 + C74001) * C151906 * C152297) *
                         C4241) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C4241 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C151963 * C152374 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152068 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C4241) *
                       C151963 * C152367 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C4241 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152068) *
                       C151963 * C152350 +
                   (((C74735 + C74734 + C74733) * C151906 * C152297 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151906 * C152226) *
                        C152068 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C4241) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152376 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152373 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C96114 + C96115 + C96116) * C151906 * C152226) *
                        C152360 -
                    ((C96117 + C96118 + C96119) * C151906 * C152226 +
                     (C96116 + C96115 + C96114) * C151906 * C152297) *
                        C152337) *
                       C151963 * C3375 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152373 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C152376 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C152360 +
                    ((C77465 + C77464 + C77463) * C151906 * C152297 +
                     (C73623 * C2566 + C76943 + C76943 + C152361 * C2582 +
                      C73625 * C9579 + C76944 + C76944 + C152362 * C9591 +
                      C73627 * C9580 + C76945 + C76945 + C73620 * C9592) *
                         C151906 * C152226) *
                        C152337) *
                       C151963 * C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152064 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152071 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C96114 + C96115 + C96116) * C151906 * C152226) *
                        C4913) *
                       C151963 * C151940 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152071 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C152064 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C4913) *
                       C151963 * C151949 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C152064 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152071 +
                    ((C74311 + C74310 + C74309) * C151906 * C152297 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151906 * C152226) *
                        C4913) *
                       C151963 * C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C4241 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C151963 * C152374 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152068 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C4241) *
                       C151963 * C152367 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C4241 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152068) *
                       C151963 * C152350 +
                   (((C74735 + C74734 + C74733) * C151906 * C152297 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151906 * C152226) *
                        C152068 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C4241) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C4241 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152368 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C4241) *
                        C152352 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C151906 * C152297 +
                      (C94827 + C94828 + C94829) * C151906 * C152226) *
                         C4241 -
                     ((C94830 + C94831 + C94832) * C151906 * C152226 +
                      (C94829 + C94828 + C94827) * C151906 * C152297) *
                         C152068) *
                        C152321) *
                       C3375 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C4241) *
                        C152368 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C4241 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152352 +
                    (((C76175 + C76174 + C76173) * C151906 * C152297 +
                      (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                       C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                       C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                          C151906 * C152226) *
                         C152068 -
                     ((C76173 + C76174 + C76175) * C151906 * C152226 +
                      (C74003 + C74002 + C74001) * C151906 * C152297) *
                         C4241) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C152279 -
                    ((C73627 * C2163 + C75028 + C75028 + C73620 * C2171 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73623 * C1155 + C75026 + C75026 + C152361 * C1167) *
                         C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152026) *
                       C807 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152279) *
                       C808 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C152279 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152026) *
                       C809 +
                   (((C74523 + C74522 + C74521) * C151906 * C152297 +
                     (C73623 * C1158 + C75047 + C75047 + C152361 * C1170 +
                      C73625 * C1621 + C75048 + C75048 + C152362 * C1645 +
                      C73627 * C2166 + C75049 + C75049 + C73620 * C2174) *
                         C151906 * C152226) *
                        C151981 * C152026 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C151981 * C152279) *
                       C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C1795 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C1796 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C151981 * C1797 -
                    ((C73627 * C9005 + C76372 + C76372 + C73620 * C9009 +
                      C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                      C73623 * C2163 + C76370 + C76370 + C152361 * C2171) *
                         C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C151981 * C152331) *
                       C152265 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C1796 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C1795 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C1797 +
                    ((C75867 + C75866 + C75865) * C151906 * C152297 +
                     (C73623 * C2164 + C76373 + C76373 + C152361 * C2172 +
                      C73625 * C8251 + C76374 + C76374 + C152362 * C8263 +
                      C73627 * C9006 + C76375 + C76375 + C73620 * C9010) *
                         C151906 * C152226) *
                        C151981 * C152331) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152280 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C152279 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C73623 * C1620 + C75643 + C75643 + C152361 * C1644 +
                       C73625 * C1625 + C75642 + C75642 + C152362 * C1649 +
                       C73627 * C8250 + C75641 + C75641 + C73620 * C8262) *
                          C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152280) *
                        C152026) *
                       C347 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152280) *
                        C152279 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152280 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C152026) *
                       C348 +
                   ((((C73701 + C73700 + C73699) * C151906 * C152297 +
                      (C74306 + C74307 + C74308) * C151906 * C152226) *
                         C152280 -
                     ((C74309 + C74310 + C74311) * C151906 * C152226 +
                      (C74308 + C74307 + C74306) * C151906 * C152297) *
                         C152068) *
                        C152279 +
                    (((C75067 + C75066 + C75065) * C151906 * C152297 +
                      (C73623 * C1618 + C77242 + C77242 + C152361 * C1642 +
                       C73625 * C1627 + C77243 + C77243 + C152362 * C1651 +
                       C73627 * C9895 + C77244 + C77244 + C73620 * C9897) *
                          C151906 * C152226) *
                         C152068 -
                     ((C75065 + C75066 + C75067) * C151906 * C152226 +
                      (C74006 + C74005 + C74004) * C151906 * C152297) *
                         C152280) *
                        C152026) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152280 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C1795 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152068 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C152280) *
                       C1796 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C152280 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152068) *
                       C1797 +
                   (((C95526 + C95527 + C95528) * C151906 * C152297 +
                     (C73623 * C8250 + C95517 + C95517 + C152361 * C8262 +
                      C73625 * C8253 + C95518 + C95518 + C152362 * C8265 +
                      C73627 * C60835 + C95519 + C95519 + C73620 * C60837) *
                         C151906 * C152226) *
                        C152068 -
                    ((C95528 + C95527 + C95526) * C151906 * C152226 +
                     (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                      C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                      C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                         C151906 * C152297) *
                        C152280) *
                       C152331) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                         C151906 * C152226) *
                        C151981 * C152368 -
                    ((C73627 * C2163 + C75028 + C75028 + C73620 * C2171 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73623 * C1155 + C75026 + C75026 + C152361 * C1167) *
                         C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152352 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C347 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152352 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152368 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C152368 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152352 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                     C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                     C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                        C151906 * C152226) *
                       C151981 * C151963 * C129 -
                   ((C74300 + C74301 + C74302) * C151906 * C152226 +
                    (C73698 + C73697 + C73696) * C151906 * C152297) *
                       C151981 * C151963 * C130 +
                   ((C73701 + C73700 + C73699) * C151906 * C152297 +
                    (C74306 + C74307 + C74308) * C151906 * C152226) *
                       C151981 * C151963 * C131 -
                   ((C74733 + C74734 + C74735) * C151906 * C152226 +
                    (C73704 + C73703 + C73702) * C151906 * C152297) *
                       C151981 * C151963 * C132 +
                   ((C73707 + C73706 + C73705) * C151906 * C152297 +
                    (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                     C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                     C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                        C151906 * C152226) *
                       C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152369 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152354 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C347 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152354 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C152369 -
                    ((C77463 + C77464 + C77465) * C151906 * C152226 +
                     (C74305 + C74304 + C74303) * C151906 * C152297) *
                        C152324) *
                       C151963 * C348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C152369 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152354 +
                    ((C74311 + C74310 + C74309) * C151906 * C152297 +
                     (C73623 * C2562 + C77454 + C77454 + C152361 * C2578 +
                      C73625 * C3091 + C77455 + C77455 + C152362 * C3099 +
                      C73627 * C10110 + C77456 + C77456 + C73620 * C10112) *
                         C151906 * C152226) *
                        C152324) *
                       C151963 * C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C1346 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C1345 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C93525 + C93526 + C93527) * C151906 * C152226) *
                       C151981 * C1433 -
                   ((C94223 + C94222 + C94221) * C151906 * C152226 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C151906 * C152297) *
                       C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C151906 * C152297 +
                    (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                     C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                     C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                        C151906 * C152226) *
                       C151981 * C1435 -
                   ((C73627 * C9005 + C76372 + C76372 + C73620 * C9009 +
                     C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                     C73623 * C2163 + C76370 + C76370 + C152361 * C2171) *
                        C151906 * C152226 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C151906 * C152297) *
                       C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C151906 * C152297 +
                    (C73623 * C8252 + C94564 + C94564 + C152361 * C8264 +
                     C73625 * C9005 + C94565 + C94565 + C152362 * C9009 +
                     C73627 * C61312 + C94566 + C94566 + C73620 * C61314) *
                        C151906 * C152226) *
                       C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152369 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152354 +
                    ((C93530 + C93529 + C93528) * C151906 * C152297 +
                     (C73623 * C2564 + C76939 + C76939 + C152361 * C2580 +
                      C73625 * C3089 + C76938 + C76938 + C152362 * C3097 +
                      C73627 * C9576 + C76937 + C76937 + C73620 * C9588) *
                         C151906 * C152226) *
                        C152324) *
                       C1345 +
                   (((C94221 + C94222 + C94223) * C151906 * C152297 +
                     (C94824 + C94825 + C94826) * C151906 * C152226) *
                        C152354 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C152369 -
                    ((C73627 * C10325 + C77662 + C77662 + C73620 * C10329 +
                      C73625 * C9576 + C77661 + C77661 + C152362 * C9588 +
                      C73623 * C3089 + C77660 + C77660 + C152361 * C3097) *
                         C151906 * C152226 +
                     (C94826 + C94825 + C94824) * C151906 * C152297) *
                        C152324) *
                       C1346 +
                   (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C94827 + C94828 + C94829) * C151906 * C152226) *
                        C152369 -
                    ((C94830 + C94831 + C94832) * C151906 * C152226 +
                     (C94829 + C94828 + C94827) * C151906 * C152297) *
                        C152354 +
                    ((C94832 + C94831 + C94830) * C151906 * C152297 +
                     (C73623 * C9576 + C94803 + C94803 + C152361 * C9588 +
                      C73625 * C10325 + C94804 + C94804 + C152362 * C10329 +
                      C73627 * C62166 + C94805 + C94805 + C73620 * C62168) *
                         C151906 * C152226) *
                        C152324) *
                       C152321) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C152280 -
                    ((C93528 + C93529 + C93530) * C151906 * C152226 +
                     (C93527 + C93526 + C93525) * C151906 * C152297) *
                        C152068) *
                       C151963 * C807 +
                   (((C74302 + C74301 + C74300) * C151906 * C152297 +
                     (C74303 + C74304 + C74305) * C151906 * C152226) *
                        C152068 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C152280) *
                       C151963 * C808 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C152280 -
                    ((C74309 + C74310 + C74311) * C151906 * C152226 +
                     (C74308 + C74307 + C74306) * C151906 * C152297) *
                        C152068) *
                       C151963 * C809 +
                   (((C74735 + C74734 + C74733) * C151906 * C152297 +
                     (C73623 * C594 + C74273 + C74273 + C152361 * C618 +
                      C73625 * C1617 + C74274 + C74274 + C152362 * C1641 +
                      C73627 * C1628 + C74275 + C74275 + C73620 * C1652) *
                         C151906 * C152226) *
                        C152068 -
                    ((C74733 + C74734 + C74735) * C151906 * C152226 +
                     (C73704 + C73703 + C73702) * C151906 * C152297) *
                        C152280) *
                       C151963 * C152325)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                       C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                       C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                          C151906 * C152297 +
                      (C93525 + C93526 + C93527) * C151906 * C152226) *
                         C152280 -
                     ((C93528 + C93529 + C93530) * C151906 * C152226 +
                      (C93527 + C93526 + C93525) * C151906 * C152297) *
                         C152068) *
                        C1345 +
                    (((C94221 + C94222 + C94223) * C151906 * C152297 +
                      (C94824 + C94825 + C94826) * C151906 * C152226) *
                         C152068 -
                     ((C94223 + C94222 + C94221) * C151906 * C152226 +
                      (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                       C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                       C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                          C151906 * C152297) *
                         C152280) *
                        C1346 +
                    (((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                       C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                       C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                          C151906 * C152297 +
                      (C94827 + C94828 + C94829) * C151906 * C152226) *
                         C152280 -
                     ((C94830 + C94831 + C94832) * C151906 * C152226 +
                      (C94829 + C94828 + C94827) * C151906 * C152297) *
                         C152068) *
                        C152321) *
                       C152265 +
                   ((((C74302 + C74301 + C74300) * C151906 * C152297 +
                      (C74303 + C74304 + C74305) * C151906 * C152226) *
                         C152068 -
                     ((C74300 + C74301 + C74302) * C151906 * C152226 +
                      (C73698 + C73697 + C73696) * C151906 * C152297) *
                         C152280) *
                        C1345 +
                    (((C74000 + C73999 + C73998) * C151906 * C152297 +
                      (C75062 + C75063 + C75064) * C151906 * C152226) *
                         C152280 -
                     ((C77251 + C77252 + C77253) * C151906 * C152226 +
                      (C75064 + C75063 + C75062) * C151906 * C152297) *
                         C152068) *
                        C1346 +
                    (((C76175 + C76174 + C76173) * C151906 * C152297 +
                      (C73623 * C1626 + C75653 + C75653 + C152361 * C1650 +
                       C73625 * C8249 + C75654 + C75654 + C152362 * C8261 +
                       C73627 * C8254 + C75655 + C75655 + C73620 * C8266) *
                          C151906 * C152226) *
                         C152068 -
                     ((C76173 + C76174 + C76175) * C151906 * C152226 +
                      (C74003 + C74002 + C74001) * C151906 * C152297) *
                         C152280) *
                        C152321) *
                       C151946)) /
                     (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                     C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                     C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                        C151906 * C152226) *
                       C151981 * C151963 * C129 -
                   ((C74300 + C74301 + C74302) * C151906 * C152226 +
                    (C73698 + C73697 + C73696) * C151906 * C152297) *
                       C151981 * C151963 * C130 +
                   ((C73701 + C73700 + C73699) * C151906 * C152297 +
                    (C74306 + C74307 + C74308) * C151906 * C152226) *
                       C151981 * C151963 * C131 -
                   ((C74733 + C74734 + C74735) * C151906 * C152226 +
                    (C73704 + C73703 + C73702) * C151906 * C152297) *
                       C151981 * C151963 * C132 +
                   ((C73707 + C73706 + C73705) * C151906 * C152297 +
                    (C73623 * C595 + C74724 + C74724 + C152361 * C619 +
                     C73625 * C1159 + C74725 + C74725 + C152362 * C1171 +
                     C73627 * C2014 + C74726 + C74726 + C73620 * C2016) *
                        C151906 * C152226) *
                       C151981 * C151963 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C73623 * C590 + C74239 + C74239 + C152361 * C614 +
                      C73625 * C1155 + C74238 + C74238 + C152362 * C1167 +
                      C73627 * C1624 + C74237 + C74237 + C73620 * C1648) *
                         C151906 * C152226) *
                        C151981 * C152368 -
                    ((C73627 * C2163 + C75028 + C75028 + C73620 * C2171 +
                      C73625 * C1624 + C75027 + C75027 + C152362 * C1648 +
                      C73623 * C1155 + C75026 + C75026 + C152361 * C1167) *
                         C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C152352 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C347 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C152352 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C152368 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C152368 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C152352 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                      C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                      C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                         C151906 * C152297 +
                     (C93525 + C93526 + C93527) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C94223 + C94222 + C94221) * C151906 * C152226 +
                     (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                      C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                      C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                         C151906 * C152297) *
                        C151981 * C1346 +
                    ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                      C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                      C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                         C151906 * C152297 +
                     (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                      C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                      C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152365 +
                   (((C74000 + C73999 + C73998) * C151906 * C152297 +
                     (C75062 + C75063 + C75064) * C151906 * C152226) *
                        C151981 * C1346 -
                    ((C74300 + C74301 + C74302) * C151906 * C152226 +
                     (C73698 + C73697 + C73696) * C151906 * C152297) *
                        C151981 * C1345 -
                    ((C76173 + C76174 + C76175) * C151906 * C152226 +
                     (C74003 + C74002 + C74001) * C151906 * C152297) *
                        C151981 * C152321) *
                       C152348 +
                   (((C73701 + C73700 + C73699) * C151906 * C152297 +
                     (C74306 + C74307 + C74308) * C151906 * C152226) *
                        C151981 * C1345 -
                    ((C75065 + C75066 + C75067) * C151906 * C152226 +
                     (C74006 + C74005 + C74004) * C151906 * C152297) *
                        C151981 * C1346 +
                    ((C74009 + C74008 + C74007) * C151906 * C152297 +
                     (C73623 * C1622 + C76164 + C76164 + C152361 * C1646 +
                      C73625 * C2165 + C76165 + C76165 + C152362 * C2173 +
                      C73627 * C8790 + C76166 + C76166 + C73620 * C8792) *
                         C151906 * C152226) *
                        C151981 * C152321) *
                       C152315)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C73623 * C136 + C73630 + C73630 + C152361 * C152 +
                     C73625 * C353 + C73631 + C73631 + C152362 * C377 +
                     C73627 * C354 + C73632 + C73632 + C73620 * C378) *
                        C151906 * C152297 +
                    (C93525 + C93526 + C93527) * C151906 * C152226) *
                       C151981 * C1433 -
                   ((C94223 + C94222 + C94221) * C151906 * C152226 +
                    (C73627 * C1442 + C73935 + C73935 + C73620 * C1458 +
                     C73625 * C354 + C73936 + C73936 + C152362 * C378 +
                     C73623 * C353 + C73937 + C73937 + C152361 * C377) *
                        C151906 * C152297) *
                       C151981 * C1434 +
                   ((C73623 * C354 + C73938 + C73938 + C152361 * C378 +
                     C73625 * C1442 + C73939 + C73939 + C152362 * C1458 +
                     C73627 * C1443 + C73940 + C73940 + C73620 * C1459) *
                        C151906 * C152297 +
                    (C73623 * C1624 + C75649 + C75649 + C152361 * C1648 +
                     C73625 * C2163 + C75648 + C75648 + C152362 * C2171 +
                     C73627 * C8252 + C75647 + C75647 + C73620 * C8264) *
                        C151906 * C152226) *
                       C151981 * C1435 -
                   ((C73627 * C9005 + C76372 + C76372 + C73620 * C9009 +
                     C73625 * C8252 + C76371 + C76371 + C152362 * C8264 +
                     C73623 * C2163 + C76370 + C76370 + C152361 * C2171) *
                        C151906 * C152226 +
                    (C73627 * C8008 + C75411 + C75411 + C73620 * C8016 +
                     C73625 * C1443 + C75412 + C75412 + C152362 * C1459 +
                     C73623 * C1442 + C75413 + C75413 + C152361 * C1458) *
                        C151906 * C152297) *
                       C151981 * C1436 +
                   ((C73623 * C1443 + C75414 + C75414 + C152361 * C1459 +
                     C73625 * C8008 + C75415 + C75415 + C152362 * C8016 +
                     C73627 * C8009 + C75416 + C75416 + C73620 * C8017) *
                        C151906 * C152297 +
                    (C73623 * C8252 + C94564 + C94564 + C152361 * C8264 +
                     C73625 * C9005 + C94565 + C94565 + C152362 * C9009 +
                     C73627 * C61312 + C94566 + C94566 + C73620 * C61314) *
                        C151906 * C152226) *
                       C151981 * C1437) *
                  C151935) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152022 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152029 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C3719) *
              C151940 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152029 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152022 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C3719) *
              C151949 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152022 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152029 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152022 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152029 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C3719) *
              C151940 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152029 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152022 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C3719) *
              C151949 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152022 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152029 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C152022 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152029 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C151981 * C3719) *
              C151940 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
               C151981 * C152029 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152022 -
           ((C67540 + C67539) * C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C3719) *
              C151949 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C152022 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152029 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152022 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152029 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C152280 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C3719) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C152022 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152029 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152022 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C152280 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C3719) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C152022 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152029 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152280 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152022 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152280) *
               C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C151906 * C14887 +
             (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
                C152280 -
            ((C67039 + C67040) * C151906 * C14889 +
             (C67038 + C67037) * C151906 * C14888 +
             (C67036 + C67035) * C151906 * C14887) *
                C152068) *
               C3719) *
              C3375 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152280) *
               C152022 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C152280 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152029 +
           (((C53595 + C53594) * C151906 * C14887 +
             (C67539 + C67540) * C151906 * C14888 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151906 * C14889) *
                C152068 -
            ((C67540 + C67539) * C151906 * C14889 +
             (C53594 + C53595) * C151906 * C14888 +
             (C51426 + C51425) * C151906 * C14887) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C3235 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C152026) *
                  C152374 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                C51929 * C51062) *
                   C152162 * C151981 * C152026 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C3235) *
                  C152367 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C151981 * C3235 -
               ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
                C51433 * C51060) *
                   C152162 * C151981 * C152026) *
                  C152350 +
              ((C51929 * C51060 + (C51941 + C51940) * C51061 +
                (C51063 * C360 + C51934 + C51934 + C51058 * C384 +
                 C51065 * C361 + C51935 + C51935 + C152198 * C385) *
                    C51062) *
                   C152162 * C151981 * C152026 -
               ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
                C51133 * C51060) *
                   C152162 * C151981 * C3235) *
                  C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C152375 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C152371 +
               ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C151981 * C152357 -
               ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
                (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
                 C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                    C51060) *
                   C152162 * C151981 * C152331) *
                  C3375 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                C51929 * C51062) *
                   C152162 * C151981 * C152371 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C152375 -
               ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                (C51426 + C51425) * C51060) *
                   C152162 * C151981 * C152357 +
               ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
                (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
                 C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                    C51062) *
                   C152162 * C151981 * C152331) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152369 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152354 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C152324) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152354 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152369 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152354 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152369 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C152324) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152369 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152354 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C152374 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C3235) *
              C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C152350 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152371 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152357 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C3375 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152371 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152357 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152369 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152354 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C152324) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152354 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152369 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C152324) *
               C152026) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152354 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152369 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C152324) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152369 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152354 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C3235 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152026) *
              C152374 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
               C151981 * C152026 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C3235) *
              C152367 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C3235 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152026) *
              C152350 +
          ((C51929 * C151906 * C14887 + (C52478 + C52477) * C151906 * C14888 +
            (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
             C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                C151906 * C14889) *
               C151981 * C152026 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C152375 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152371 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C151981 * C152357 -
           ((C67756 + C67755) * C151906 * C14889 +
            (C67754 + C67753) * C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C151981 * C152331) *
              C3375 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
               C151981 * C152371 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152375 -
           ((C67540 + C67539) * C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152357 +
           ((C53283 + C53282) * C151906 * C14887 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C151906 * C14888 +
            (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
             C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                C151906 * C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152369 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152354 +
            (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
             C68345 * C14889) *
                C152324) *
               C3235 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152354 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152369 -
            ((C69067 + C69068) * C151906 * C14889 +
             (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
                C152324) *
               C152026) *
              C3375 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152354 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152369 -
            ((C68856 + C68857) * C151906 * C14889 +
             (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
                C152324) *
               C3235 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C152369 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152354 +
            (C68643 * C14887 + (C68649 + C68648) * C151906 * C14888 +
             (C51063 * C9579 + C68641 + C68641 + C51058 * C9591 +
              C51065 * C9580 + C68642 + C68642 + C152198 * C9592) *
                 C151906 * C14889) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152026) *
              C151940 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C151949 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C152280 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C152280 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C3235 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152280 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C3235 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152280) *
               C152026) *
              C151940 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152280) *
               C3235 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C152280 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152026) *
              C151949 +
          (((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
             C65709 * C14889) *
                C152280 -
            ((C54890 + C54891) * C151906 * C14889 +
             (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
                C152068) *
               C3235 +
           ((C52479 * C151906 * C14887 + (C54675 + C54674) * C151906 * C14888 +
             (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
              C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                 C151906 * C14889) *
                C152068 -
            ((C54674 + C54675) * C151906 * C14889 +
             (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152375 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152371 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152357 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152371 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152375 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152357 +
           ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
            (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
             C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                C51062) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C3235 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152026 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C3235) *
              C152367 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C3235 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152026) *
              C152350 +
          ((C51929 * C51060 + (C51941 + C51940) * C51061 +
            (C51063 * C360 + C51934 + C51934 + C51058 * C384 + C51065 * C361 +
             C51935 + C51935 + C152198 * C385) *
                C51062) *
               C152162 * C151981 * C152026 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C152374 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C3235) *
              C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C152350 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152371 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152357 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C3375 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152371 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152357 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C3235 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152026) *
              C152374 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
               C151981 * C152026 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C3235) *
              C152367 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C3235 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152026) *
              C152350 +
          ((C51929 * C151906 * C14887 + (C52478 + C52477) * C151906 * C14888 +
            (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
             C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                C151906 * C14889) *
               C151981 * C152026 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C152375 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152371 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C151981 * C152357 -
           ((C67756 + C67755) * C151906 * C14889 +
            (C67754 + C67753) * C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C151981 * C152331) *
              C3375 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
               C151981 * C152371 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152375 -
           ((C67540 + C67539) * C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152357 +
           ((C53283 + C53282) * C151906 * C14887 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C151906 * C14888 +
            (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
             C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                C151906 * C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152022 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152029 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C4241 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C3719) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152022 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152029 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152022 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C4241 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C3719) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152022 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152029 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C4241 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152022 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C4241) *
               C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C151906 * C14887 +
             (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
                C4241 -
            ((C67039 + C67040) * C151906 * C14889 +
             (C67038 + C67037) * C151906 * C14888 +
             (C67036 + C67035) * C151906 * C14887) *
                C152068) *
               C3719) *
              C152265 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C4241) *
               C152022 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C4241 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152029 +
           (((C53595 + C53594) * C151906 * C14887 +
             (C67539 + C67540) * C151906 * C14888 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151906 * C14889) *
                C152068 -
            ((C67540 + C67539) * C151906 * C14889 +
             (C53594 + C53595) * C151906 * C14888 +
             (C51426 + C51425) * C151906 * C14887) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152064 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152071 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C4913) *
              C152022 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152071 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152064 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C4913) *
              C152029 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152064 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152071 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152064 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152071 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C4913) *
              C152022 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152071 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152064 -
           ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C4913) *
              C152029 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152064 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152071 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152064 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152071 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            C68345 * C14889) *
               C4913) *
              C152022 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
               C152071 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C152064 -
           ((C69067 + C69068) * C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C4913) *
              C152029 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C152064 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152071 +
           (C67042 * C14887 + (C67040 + C67039) * C151906 * C14888 +
            (C51063 * C9578 + C67014 + C67014 + C51058 * C9590 +
             C51065 * C61693 + C67015 + C67015 + C152198 * C61695) *
                C151906 * C14889) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                  C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                     C51060 +
                 (C51122 + C51123) * C51061 + C51132 * C51062) *
                    C152162 * C4241 -
                (C51733 * C51062 + (C51723 + C51724) * C51061 +
                 (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                  C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                     C51060) *
                    C152162 * C152068) *
                   C3235 +
               (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                  C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                     C51060 +
                 (C52473 + C52474) * C51061 + C52479 * C51062) *
                    C152162 * C152068 -
                (C51433 * C51062 + (C51423 + C51424) * C51061 +
                 (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                  C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                     C51060) *
                    C152162 * C4241) *
                   C152026) *
                  C152365 +
              ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                 C52136 * C51062) *
                    C152162 * C152068 -
                (C51133 * C51062 + (C51125 + C51124) * C51061 +
                 (C51123 + C51122) * C51060) *
                    C152162 * C4241) *
                   C3235 +
               (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                 C51929 * C51062) *
                    C152162 * C4241 -
                ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
                 (C52474 + C52473) * C51060) *
                    C152162 * C152068) *
                   C152026) *
                  C152348 +
              (((C51132 * C51060 + (C51127 + C51126) * C51061 +
                 C51134 * C51062) *
                    C152162 * C4241 -
                ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
                 C51733 * C51060) *
                    C152162 * C152068) *
                   C3235 +
               ((C52479 * C51060 + (C52478 + C52477) * C51061 +
                 (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
                  C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                     C51062) *
                    C152162 * C152068 -
                ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
                 C51433 * C51060) *
                    C152162 * C4241) *
                   C152026) *
                  C152315) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C4241 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C152068) *
                  C152375 +
              (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                 C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                    C51060 +
                (C52473 + C52474) * C51061 + C52479 * C51062) *
                   C152162 * C152068 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C4241) *
                  C152371 +
              (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C4241 -
               ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
                (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
                 C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                    C51060) *
                   C152162 * C152068) *
                  C152357 +
              (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
                 C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                    C51060 +
                (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
                 C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                    C51061 +
                (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
                 C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                    C51062) *
                   C152162 * C152068 -
               ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
                (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
                 C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                    C51060) *
                   C152162 * C4241) *
                  C152331) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152376 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152373 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152360 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C3235 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152373 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152376 -
           ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152360 +
           ((C51063 * C3089 + C55088 + C55088 + C51058 * C3097 +
             C51065 * C9576 + C55089 + C55089 + C152198 * C9588) *
                C51060 +
            (C51063 * C3090 + C55090 + C55090 + C51058 * C3098 +
             C51065 * C9575 + C55091 + C55091 + C152198 * C9587) *
                C51061 +
            (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
             C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                C51062) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152365 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C152348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C4241 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C152375 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C4241) *
              C152371 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C4241 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C152357 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152376 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152373 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152360 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C3235 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152373 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152376 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152360 +
           (C59608 * C3089 + C62170 + C62170 + C59603 * C3097 + C59610 * C9576 +
            C62171 + C62171 + C59604 * C9588 + C59612 * C10325 + C62172 +
            C62172 + C59605 * C10329 + C59614 * C62166 + C62173 + C62173 +
            C59606 * C62168) *
               C151906 * C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C4241 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C3235 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C4241) *
               C152026) *
              C152365 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C4241) *
               C3235 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C4241 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152026) *
              C152348 +
          (((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
             C65709 * C14889) *
                C4241 -
            ((C54890 + C54891) * C151906 * C14889 +
             (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
                C152068) *
               C3235 +
           ((C52479 * C151906 * C14887 + (C54675 + C54674) * C151906 * C14888 +
             (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
              C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                 C151906 * C14889) *
                C152068 -
            ((C54674 + C54675) * C151906 * C14889 +
             (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C4241 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C152375 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
               C152068 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C4241) *
              C152371 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C4241 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152068) *
              C152357 +
          (((C67753 + C67754) * C151906 * C14887 +
            (C67755 + C67756) * C151906 * C14888 +
            (C51063 * C10325 + C67743 + C67743 + C51058 * C10329 +
             C51065 * C62166 + C67744 + C67744 + C152198 * C62168) *
                C151906 * C14889) *
               C152068 -
           ((C67756 + C67755) * C151906 * C14889 +
            (C67754 + C67753) * C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152376 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152373 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            C68345 * C14889) *
               C152360 -
           ((C68342 + C68343) * C151906 * C14889 +
            (C68341 + C68340) * C151906 * C14888 + C68331 * C14887) *
               C152337) *
              C3235 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
               C152373 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C152376 -
           ((C69067 + C69068) * C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C152360 +
           (C69062 * C14887 + (C69068 + C69067) * C151906 * C14888 +
            (C51063 * C18703 + C69060 + C69060 + C51058 * C18707 +
             C51065 * C69051 + C69061 + C69061 + C152198 * C69053) *
                C151906 * C14889) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152064 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152071 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C4913) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152071 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152064 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C4913) *
               C152026) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152071 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152064 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C4913) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152064 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152071 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152064 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152071 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C4913) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152071 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152064 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C4913) *
               C152026) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152071 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152064 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C4913) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152064 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152071 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152064 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152071 +
            (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
             C68345 * C14889) *
                C4913) *
               C3235 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152071 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152064 -
            ((C69067 + C69068) * C151906 * C14889 +
             (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
                C4913) *
               C152026) *
              C152265 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152071 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152064 -
            ((C68856 + C68857) * C151906 * C14889 +
             (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
                C4913) *
               C3235 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C152064 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152071 +
            (C68643 * C14887 + (C68649 + C68648) * C151906 * C14888 +
             (C51063 * C9579 + C68641 + C68641 + C51058 * C9591 +
              C51065 * C9580 + C68642 + C68642 + C152198 * C9592) *
                 C151906 * C14889) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C4241 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C152375 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152068 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C4241) *
              C152371 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C4241 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152068) *
              C152357 +
          (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
             C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                C51060 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C51061 +
            (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
             C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                C51062) *
               C152162 * C152068 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C4241 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C3235 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152365 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C152348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C4241 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C152375 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C4241) *
              C152371 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C4241 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C152357 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C4241 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C3235 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C4241) *
               C152026) *
              C152365 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C4241) *
               C3235 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C4241 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152026) *
              C152348 +
          (((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
             C65709 * C14889) *
                C4241 -
            ((C54890 + C54891) * C151906 * C14889 +
             (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
                C152068) *
               C3235 +
           ((C52479 * C151906 * C14887 + (C54675 + C54674) * C151906 * C14888 +
             (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
              C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                 C151906 * C14889) *
                C152068 -
            ((C54674 + C54675) * C151906 * C14889 +
             (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C4241 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C152375 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
               C152068 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C4241) *
              C152371 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C4241 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152068) *
              C152357 +
          (((C67753 + C67754) * C151906 * C14887 +
            (C67755 + C67756) * C151906 * C14888 +
            (C51063 * C10325 + C67743 + C67743 + C51058 * C10329 +
             C51065 * C62166 + C67744 + C67744 + C152198 * C62168) *
                C151906 * C14889) *
               C152068 -
           ((C67756 + C67755) * C151906 * C14889 +
            (C67754 + C67753) * C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C152279 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C152026) *
                  C807 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                C51929 * C51062) *
                   C152162 * C151981 * C152026 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C152279) *
                  C808 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C151981 * C152279 -
               ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
                C51433 * C51060) *
                   C152162 * C151981 * C152026) *
                  C809 +
              ((C51929 * C51060 + (C51941 + C51940) * C51061 +
                (C51063 * C360 + C51934 + C51934 + C51058 * C384 +
                 C51065 * C361 + C51935 + C51935 + C152198 * C385) *
                    C51062) *
                   C152162 * C151981 * C152026 -
               ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
                C51133 * C51060) *
                   C152162 * C151981 * C152279) *
                  C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C1795 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C1796 +
               ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C151981 * C1797 -
               ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
                (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
                 C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                    C51060) *
                   C152162 * C151981 * C152331) *
                  C152265 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                C51929 * C51062) *
                   C152162 * C151981 * C1796 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C1795 -
               ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                (C51426 + C51425) * C51060) *
                   C152162 * C151981 * C1797 +
               ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
                (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
                 C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                    C51062) *
                   C152162 * C151981 * C152331) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C2325 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C2326 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C152324) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C2326 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C2325 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C2326 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C2325 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C152324) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C2325 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C2326 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C807 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152279) *
              C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C809 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1796 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C1797 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C152265 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1796 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C1797 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C2325 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C2326 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C152324) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C2326 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C2325 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C152324) *
               C152026) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C2326 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C2325 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C152324) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C2325 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C2326 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C152279 -
           ((C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C151906 * C14889 +
            (C51065 * C1624 + C52440 + C52440 + C152198 * C1648 +
             C51063 * C1155 + C52439 + C52439 + C51058 * C1167) *
                C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152026) *
              C807 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C152026 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152279) *
              C808 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C152279 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152026) *
              C809 +
          ((C51929 * C151906 * C14887 + (C52478 + C52477) * C151906 * C14888 +
            (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
             C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                C151906 * C14889) *
               C151981 * C152026 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C1795 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C1796 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C151981 * C1797 -
           ((C51065 * C8253 + C66769 + C66769 + C152198 * C8265 +
             C51063 * C8250 + C66770 + C66770 + C51058 * C8262) *
                C151906 * C14889 +
            (C51065 * C8252 + C53791 + C53791 + C152198 * C8264 +
             C51063 * C2163 + C53790 + C53790 + C51058 * C2171) *
                C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C151981 * C152331) *
              C152265 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C1796 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C1795 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C1797 +
           ((C53283 + C53282) * C151906 * C14887 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C151906 * C14888 +
            (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
             C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                C151906 * C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C2325 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C2326 +
            (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
             C68345 * C14889) *
                C152324) *
               C152279 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 +
             (C67033 + C67034) * C151906 * C14889) *
                C2326 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C2325 -
            ((C51065 * C9578 + C66998 + C66998 + C152198 * C9590 +
              C51063 * C9577 + C66999 + C66999 + C51058 * C9589) *
                 C151906 * C14889 +
             (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
                C152324) *
               C152026) *
              C152265 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 +
             (C54893 + C54892) * C151906 * C14889) *
                C2326 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C2325 -
            ((C51065 * C9579 + C54363 + C54363 + C152198 * C9591 +
              C51063 * C2566 + C54362 + C54362 + C51058 * C2582) *
                 C151906 * C14889 +
             (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
                C152324) *
               C152279 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C2325 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C2326 +
            (C68643 * C14887 + (C68649 + C68648) * C151906 * C14888 +
             (C51063 * C9579 + C68641 + C68641 + C51058 * C9591 +
              C51065 * C9580 + C68642 + C68642 + C152198 * C9592) *
                 C151906 * C14889) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                  C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                     C51060 +
                 (C51122 + C51123) * C51061 + C51132 * C51062) *
                    C152162 * C152280 -
                (C51733 * C51062 + (C51723 + C51724) * C51061 +
                 (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                  C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                     C51060) *
                    C152162 * C152068) *
                   C152279 +
               (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                  C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                     C51060 +
                 (C52473 + C52474) * C51061 + C52479 * C51062) *
                    C152162 * C152068 -
                (C51433 * C51062 + (C51423 + C51424) * C51061 +
                 (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                  C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                     C51060) *
                    C152162 * C152280) *
                   C152026) *
                  C347 +
              ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                 C52136 * C51062) *
                    C152162 * C152068 -
                (C51133 * C51062 + (C51125 + C51124) * C51061 +
                 (C51123 + C51122) * C51060) *
                    C152162 * C152280) *
                   C152279 +
               (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                 C51929 * C51062) *
                    C152162 * C152280 -
                ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
                 (C52474 + C52473) * C51060) *
                    C152162 * C152068) *
                   C152026) *
                  C348 +
              (((C51132 * C51060 + (C51127 + C51126) * C51061 +
                 C51134 * C51062) *
                    C152162 * C152280 -
                ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
                 C51733 * C51060) *
                    C152162 * C152068) *
                   C152279 +
               ((C52479 * C51060 + (C52478 + C52477) * C51061 +
                 (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
                  C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                     C51062) *
                    C152162 * C152068 -
                ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
                 C51433 * C51060) *
                    C152162 * C152280) *
                   C152026) *
                  C152315) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C152280 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C152068) *
                  C1795 +
              (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                 C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                    C51060 +
                (C52473 + C52474) * C51061 + C52479 * C51062) *
                   C152162 * C152068 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C152280) *
                  C1796 +
              (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C152280 -
               ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
                (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
                 C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                    C51060) *
                   C152162 * C152068) *
                  C1797 +
              (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
                 C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                    C51060 +
                (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
                 C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                    C51061 +
                (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
                 C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                    C51062) *
                   C152162 * C152068 -
               ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
                (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
                 C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                    C51060) *
                   C152162 * C152280) *
                  C152331) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2936 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2937 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C2938 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C152279 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C2937 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C2936 -
           ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C2938 +
           ((C51063 * C3089 + C55088 + C55088 + C51058 * C3097 +
             C51065 * C9576 + C55089 + C55089 + C152198 * C9588) *
                C51060 +
            (C51063 * C3090 + C55090 + C55090 + C51058 * C3098 +
             C51065 * C9575 + C55091 + C55091 + C152198 * C9587) *
                C51061 +
            (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
             C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                C51062) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152026) *
              C347 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C152280 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C1795 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152280) *
              C1796 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152280 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C1797 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2936 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2937 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C2938 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C152279 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C2937 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C2936 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C2938 +
           (C59608 * C3089 + C62170 + C62170 + C59603 * C3097 + C59610 * C9576 +
            C62171 + C62171 + C59604 * C9588 + C59612 * C10325 + C62172 +
            C62172 + C59605 * C10329 + C59614 * C62166 + C62173 + C62173 +
            C59606 * C62168) *
               C151906 * C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152280 -
            ((C65727 + C65728) * C151906 * C14889 +
             (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152279 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 +
             (C51063 * C3089 + C55088 + C55088 + C51058 * C3097 +
              C51065 * C9576 + C55089 + C55089 + C152198 * C9588) *
                 C151906 * C14889) *
                C152068 -
            ((C66428 + C66427) * C151906 * C14889 +
             (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152280) *
               C152026) *
              C347 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 +
             (C54893 + C54892) * C151906 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152280) *
               C152279 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 +
             (C54677 + C54676) * C151906 * C14889) *
                C152280 -
            ((C51065 * C9575 + C55091 + C55091 + C152198 * C9587 +
              C51063 * C3090 + C55090 + C55090 + C51058 * C3098) *
                 C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152026) *
              C348 +
          (((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
             C65709 * C14889) *
                C152280 -
            ((C54890 + C54891) * C151906 * C14889 +
             (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
                C152068) *
               C152279 +
           ((C52479 * C151906 * C14887 + (C54675 + C54674) * C151906 * C14888 +
             (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
              C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                 C151906 * C14889) *
                C152068 -
            ((C54674 + C54675) * C151906 * C14889 +
             (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152280 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C1795 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 +
            (C67033 + C67034) * C151906 * C14889) *
               C152068 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C152280) *
              C1796 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C152280 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152068) *
              C1797 +
          (((C67753 + C67754) * C151906 * C14887 +
            (C67755 + C67756) * C151906 * C14888 +
            (C51063 * C10325 + C67743 + C67743 + C51058 * C10329 +
             C51065 * C62166 + C67744 + C67744 + C152198 * C62168) *
                C151906 * C14889) *
               C152068 -
           ((C67756 + C67755) * C151906 * C14889 +
            (C67754 + C67753) * C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C2936 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C2937 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            C68345 * C14889) *
               C2938 -
           ((C68342 + C68343) * C151906 * C14889 +
            (C68341 + C68340) * C151906 * C14888 + C68331 * C14887) *
               C152337) *
              C152279 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
               C2937 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C2936 -
           ((C69067 + C69068) * C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C2938 +
           (C69062 * C14887 + (C69068 + C69067) * C151906 * C14888 +
            (C51063 * C18703 + C69060 + C69060 + C51058 * C18707 +
             C51065 * C69051 + C69061 + C69061 + C152198 * C69053) *
                C151906 * C14889) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                   C51060 +
               (C51122 + C51123) * C51061 + C51132 * C51062) *
                  C152162 * C151981 * C151963 * C129 -
              (C51133 * C51062 + (C51125 + C51124) * C51061 +
               (C51123 + C51122) * C51060) *
                  C152162 * C151981 * C151963 * C130 +
              (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                  C152162 * C151981 * C151963 * C131 -
              ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
               C51133 * C51060) *
                  C152162 * C151981 * C151963 * C132 +
              (C51134 * C51060 + (C51131 + C51130) * C51061 +
               (C51063 * C142 + C51100 + C51100 + C51058 * C158 +
                C51065 * C811 + C51101 + C51101 + C152198 * C813) *
                   C51062) *
                  C152162 * C151981 * C151963 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C152368 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C152352 +
               ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C151981 * C152321) *
                  C347 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                (C51429 + C51430) * C51062) *
                   C152162 * C151981 * C152352 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C152368 -
               ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                (C51426 + C51425) * C51060) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C151981 * C152368 -
               ((C51065 * C359 + C51393 + C51393 + C152198 * C383 +
                 C51063 * C358 + C51394 + C51394 + C51058 * C382) *
                    C51062 +
                (C51430 + C51429) * C51061 + C51433 * C51060) *
                   C152162 * C151981 * C152352 +
               (C51434 * C51060 + (C51432 + C51431) * C51061 +
                (C51063 * C359 + C51395 + C51395 + C51058 * C383 +
                 C51065 * C1801 + C51396 + C51396 + C152198 * C1803) *
                    C51062) *
                   C152162 * C151981 * C152321) *
                  C152315) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C152369 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C152354 +
               ((C51063 * C591 + C51667 + C51667 + C51058 * C615 +
                 C51065 * C1620 + C51668 + C51668 + C152198 * C1644) *
                    C51060 +
                (C51725 + C51726) * C51061 + C51734 * C51062) *
                   C152162 * C152324) *
                  C151963 * C347 +
              (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                (C51729 + C51730) * C51062) *
                   C152162 * C152354 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C152369 -
               ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
                (C51726 + C51725) * C51060) *
                   C152162 * C152324) *
                  C151963 * C348 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C152369 -
               ((C51065 * C1159 + C51693 + C51693 + C152198 * C1171 +
                 C51063 * C595 + C51694 + C51694 + C51058 * C619) *
                    C51062 +
                (C51730 + C51729) * C51061 + C51733 * C51060) *
                   C152162 * C152354 +
               (C51734 * C51060 + (C51732 + C51731) * C51061 +
                (C51063 * C596 + C51695 + C51695 + C51058 * C620 +
                 C51065 * C2787 + C51696 + C51696 + C152198 * C2789) *
                    C51062) *
                   C152162 * C152324) *
                  C151963 * C152315) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C1345 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C1346 +
               ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C151981 * C152321) *
                  C152365 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                C51929 * C51062) *
                   C152162 * C151981 * C1346 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C1345 -
               ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                (C51426 + C51425) * C51060) *
                   C152162 * C151981 * C152321) *
                  C152348 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C151981 * C1345 -
               ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
                C51433 * C51060) *
                   C152162 * C151981 * C1346 +
               (C51434 * C51060 + (C51432 + C51431) * C51061 +
                (C51063 * C359 + C51395 + C51395 + C51058 * C383 +
                 C51065 * C1801 + C51396 + C51396 + C152198 * C1803) *
                    C51062) *
                   C152162 * C151981 * C152321) *
                  C152315) -
         0.25 * std::pow(Pi, 2.5) *
             (((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                   C51060 +
               (C51122 + C51123) * C51061 + C51132 * C51062) *
                  C152162 * C151981 * C1433 -
              (C51433 * C51062 + (C51423 + C51424) * C51061 +
               (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                   C51060) *
                  C152162 * C151981 * C1434 +
              ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                   C51060 +
               (C51425 + C51426) * C51061 + C51434 * C51062) *
                  C152162 * C151981 * C1435 -
              ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
                C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
                   C51062 +
               (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
                C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
                   C51061 +
               (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
                C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                   C51060) *
                  C152162 * C151981 * C1436 +
              ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 +
                C51065 * C8008 + C52827 + C52827 + C152198 * C8016) *
                   C51060 +
               (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 +
                C51065 * C8007 + C52829 + C52829 + C152198 * C8015) *
                   C51061 +
               (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 +
                C51065 * C8479 + C52831 + C52831 + C152198 * C8481) *
                   C51062) *
                  C152162 * C151981 * C1437) *
             C151935 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C152369 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C152354 +
               ((C51063 * C591 + C51667 + C51667 + C51058 * C615 +
                 C51065 * C1620 + C51668 + C51668 + C152198 * C1644) *
                    C51060 +
                (C51725 + C51726) * C51061 + C51734 * C51062) *
                   C152162 * C152324) *
                  C1345 +
              (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                 C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                    C51060 +
                (C52473 + C52474) * C51061 + C52479 * C51062) *
                   C152162 * C152354 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C152369 -
               ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
                 C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                    C51062 +
                (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
                 C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                    C51061 +
                (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
                 C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                    C51060) *
                   C152162 * C152324) *
                  C1346 +
              (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C152369 -
               ((C51065 * C2165 + C53056 + C53056 + C152198 * C2173 +
                 C51063 * C1622 + C53057 + C53057 + C51058 * C1646) *
                    C51062 +
                (C51065 * C2164 + C53058 + C53058 + C152198 * C2172 +
                 C51063 * C1623 + C53059 + C53059 + C51058 * C1647) *
                    C51061 +
                (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
                 C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                    C51060) *
                   C152162 * C152354 +
               ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
                 C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                    C51060 +
                (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
                 C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                    C51061 +
                (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
                 C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                    C51062) *
                   C152162 * C152324) *
                  C152321) *
             C151935 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C2325 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C2326 +
               ((C51063 * C591 + C51667 + C51667 + C51058 * C615 +
                 C51065 * C1620 + C51668 + C51668 + C152198 * C1644) *
                    C51060 +
                (C51725 + C51726) * C51061 + C51734 * C51062) *
                   C152162 * C152324) *
                  C151963 * C152365 +
              (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                C52136 * C51062) *
                   C152162 * C2326 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C2325 -
               ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
                (C51726 + C51725) * C51060) *
                   C152162 * C152324) *
                  C151963 * C152348 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C2325 -
               ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
                C51733 * C51060) *
                   C152162 * C2326 +
               (C51734 * C51060 + (C51732 + C51731) * C51061 +
                (C51063 * C596 + C51695 + C51695 + C51058 * C620 +
                 C51065 * C2787 + C51696 + C51696 + C152198 * C2789) *
                    C51062) *
                   C152162 * C152324) *
                  C151963 * C152315) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C2325 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C2326 +
               ((C51063 * C591 + C51667 + C51667 + C51058 * C615 +
                 C51065 * C1620 + C51668 + C51668 + C152198 * C1644) *
                    C51060 +
                (C51725 + C51726) * C51061 + C51734 * C51062) *
                   C152162 * C152324) *
                  C152368 +
              (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                 C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                    C51060 +
                (C52473 + C52474) * C51061 + C52479 * C51062) *
                   C152162 * C2326 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C2325 -
               ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
                 C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                    C51062 +
                (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
                 C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                    C51061 +
                (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
                 C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                    C51060) *
                   C152162 * C152324) *
                  C152352 +
              (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C2325 -
               ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
                (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
                 C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                    C51060) *
                   C152162 * C2326 +
               ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
                 C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                    C51060 +
                (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
                 C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                    C51061 +
                (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
                 C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                    C51062) *
                   C152162 * C152324) *
                  C152321) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C2556 -
          (C51733 * C51062 + (C51723 + C51724) * C51061 +
           (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 + C51063 * C590 +
            C51666 + C51666 + C51058 * C614) *
               C51060) *
              C152162 * C2557 +
          ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
            C51668 + C51668 + C152198 * C1644) *
               C51060 +
           (C51725 + C51726) * C51061 + C51734 * C51062) *
              C152162 * C2558 -
          ((C51065 * C3091 + C54354 + C54354 + C152198 * C3099 +
            C51063 * C2562 + C54355 + C54355 + C51058 * C2578) *
               C51062 +
           (C51065 * C3090 + C54356 + C54356 + C152198 * C3098 +
            C51063 * C2563 + C54357 + C54357 + C51058 * C2579) *
               C51061 +
           (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
            C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
               C51060) *
              C152162 * C2559 +
          ((C51063 * C2565 + C54360 + C54360 + C51058 * C2581 + C51065 * C9577 +
            C54361 + C54361 + C152198 * C9589) *
               C51060 +
           (C51063 * C2566 + C54362 + C54362 + C51058 * C2582 + C51065 * C9579 +
            C54363 + C54363 + C152198 * C9591) *
               C51061 +
           (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
            C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
               C51062) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C347 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152354 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152369 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152369 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152354 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C1345 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152354 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152369 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C1346 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152369 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152354 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C152365 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C2326 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C2325 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C2325 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C2326 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C152368 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C2326 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C2325 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C152352 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C2325 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C2326 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C2556 -
          (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
           C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 + C59955 +
           C59604 * C1167 + C59608 * C590 + C59956 + C59956 + C59603 * C614) *
              C151906 * C152162 * C2557 +
          (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
           C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 + C59959 +
           C59605 * C1649 + C59614 * C8250 + C59960 + C59960 + C59606 * C8262) *
              C151906 * C152162 * C2558 -
          (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
           C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
           C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 + C61700 +
           C59603 * C2580) *
              C151906 * C152162 * C2559 +
          (C59608 * C2565 + C61701 + C61701 + C59603 * C2581 + C59610 * C9577 +
           C61702 + C61702 + C59604 * C9589 + C59612 * C9578 + C61703 + C61703 +
           C59605 * C9590 + C59614 * C61693 + C61704 + C61704 +
           C59606 * C61695) *
              C151906 * C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
            C51665 + C51665 + C152198 * C1167) *
               C151906 * C14888 +
           (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
            C51668 + C51668 + C152198 * C1644) *
               C151906 * C14889) *
              C151981 * C151963 * C129 -
          ((C51726 + C51725) * C151906 * C14889 +
           (C51723 + C51724) * C151906 * C14888 +
           (C51123 + C51122) * C151906 * C14887) *
              C151981 * C151963 * C130 +
          (C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
           C51734 * C151906 * C14889) *
              C151981 * C151963 * C131 -
          ((C51731 + C51732) * C151906 * C14889 +
           (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
              C151981 * C151963 * C132 +
          (C51134 * C151906 * C14887 + (C52148 + C52147) * C151906 * C14888 +
           (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
            C51696 + C51696 + C152198 * C2789) *
               C151906 * C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
             C51665 + C51665 + C152198 * C1167) *
                C151906 * C14888 +
            (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C151906 * C14889) *
               C151981 * C152368 -
           ((C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C151906 * C14889 +
            (C51065 * C1624 + C52440 + C52440 + C152198 * C1648 +
             C51063 * C1155 + C52439 + C52439 + C51058 * C1167) *
                C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C152352 -
           ((C51726 + C51725) * C151906 * C14889 +
            (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152368 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C51734 * C151906 * C14889) *
               C151981 * C152368 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152352 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152369 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152354 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C151963 * C347 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 +
            (C54893 + C54892) * C151906 * C14889) *
               C152354 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C152369 -
           ((C51065 * C9579 + C54363 + C54363 + C152198 * C9591 +
             C51063 * C2566 + C54362 + C54362 + C51058 * C2582) *
                C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C152324) *
              C151963 * C348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C152369 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152354 +
           (C65709 * C14887 + (C54891 + C54890) * C151906 * C14888 +
            (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
             C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                C151906 * C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C1345 -
           ((C66428 + C66427) * C151906 * C14889 +
            (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C1346 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C1345 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C152348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C1345 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C1346 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
              C151981 * C1433 -
          ((C66428 + C66427) * C151906 * C14889 +
           (C66426 + C66425) * C151906 * C14888 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C151906 * C14887) *
              C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C151906 * C14887 +
           (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 + C51065 * C2163 +
            C53060 + C53060 + C152198 * C2171) *
               C151906 * C14888 +
           (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 + C51065 * C8250 +
            C53063 + C53063 + C152198 * C8262) *
               C151906 * C14889) *
              C151981 * C1435 -
          ((C51065 * C8253 + C66769 + C66769 + C152198 * C8265 +
            C51063 * C8250 + C66770 + C66770 + C51058 * C8262) *
               C151906 * C14889 +
           (C51065 * C8252 + C53791 + C53791 + C152198 * C8264 +
            C51063 * C2163 + C53790 + C53790 + C51058 * C2171) *
               C151906 * C14888 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C151906 * C14887) *
              C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C151906 * C14887 +
           (C51063 * C8252 + C66771 + C66771 + C51058 * C8264 + C51065 * C9005 +
            C66772 + C66772 + C152198 * C9009) *
               C151906 * C14888 +
           (C51063 * C8253 + C66773 + C66773 + C51058 * C8265 +
            C51065 * C60835 + C66774 + C66774 + C152198 * C60837) *
               C151906 * C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152369 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152354 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C1345 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 +
            (C67033 + C67034) * C151906 * C14889) *
               C152354 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C152369 -
           ((C51065 * C9578 + C66998 + C66998 + C152198 * C9590 +
             C51063 * C9577 + C66999 + C66999 + C51058 * C9589) *
                C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C152324) *
              C1346 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C152369 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152354 +
           (C67042 * C14887 + (C67040 + C67039) * C151906 * C14888 +
            (C51063 * C9578 + C67014 + C67014 + C51058 * C9590 +
             C51065 * C61693 + C67015 + C67015 + C152198 * C61695) *
                C151906 * C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C2325 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C2326 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C151963 * C152365 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 +
            (C54893 + C54892) * C151906 * C14889) *
               C2326 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C2325 -
           ((C51065 * C9579 + C54363 + C54363 + C152198 * C9591 +
             C51063 * C2566 + C54362 + C54362 + C51058 * C2582) *
                C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C152324) *
              C151963 * C152348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C2325 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C2326 +
           (C65709 * C14887 + (C54891 + C54890) * C151906 * C14888 +
            (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
             C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                C151906 * C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C2325 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C2326 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C152368 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 +
            (C67033 + C67034) * C151906 * C14889) *
               C2326 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C2325 -
           ((C51065 * C9578 + C66998 + C66998 + C152198 * C9590 +
             C51063 * C9577 + C66999 + C66999 + C51058 * C9589) *
                C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C152324) *
              C152352 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C2325 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C2326 +
           (C67042 * C14887 + (C67040 + C67039) * C151906 * C14888 +
            (C51063 * C9578 + C67014 + C67014 + C51058 * C9590 +
             C51065 * C61693 + C67015 + C67015 + C152198 * C61695) *
                C151906 * C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
              C2556 -
          (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
           (C65724 + C65723) * C151906 * C14887) *
              C2557 +
          (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
           C68345 * C14889) *
              C2558 -
          ((C68342 + C68343) * C151906 * C14889 +
           (C68341 + C68340) * C151906 * C14888 + C68331 * C14887) *
              C2559 +
          (C68345 * C14887 + (C68343 + C68342) * C151906 * C14888 +
           (C51063 * C17971 + C68329 + C68329 + C51058 * C17979 +
            C51065 * C68314 + C68330 + C68330 + C152198 * C68316) *
               C151906 * C14889) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C152280 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C152068) *
                  C151963 * C807 +
              (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                C52136 * C51062) *
                   C152162 * C152068 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C152280) *
                  C151963 * C808 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C152280 -
               ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
                C51733 * C51060) *
                   C152162 * C152068) *
                  C151963 * C809 +
              ((C52136 * C51060 + (C52148 + C52147) * C51061 +
                (C51063 * C597 + C52141 + C52141 + C51058 * C621 +
                 C51065 * C1160 + C52142 + C52142 + C152198 * C1172) *
                    C51062) *
                   C152162 * C152068 -
               ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
                C51133 * C51060) *
                   C152162 * C152280) *
                  C151963 * C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                  C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                     C51060 +
                 (C51122 + C51123) * C51061 + C51132 * C51062) *
                    C152162 * C152280 -
                (C51733 * C51062 + (C51723 + C51724) * C51061 +
                 (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                  C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                     C51060) *
                    C152162 * C152068) *
                   C1345 +
               (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                  C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                     C51060 +
                 (C52473 + C52474) * C51061 + C52479 * C51062) *
                    C152162 * C152068 -
                (C51433 * C51062 + (C51423 + C51424) * C51061 +
                 (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                  C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                     C51060) *
                    C152162 * C152280) *
                   C1346 +
               (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                  C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                     C51060 +
                 (C51425 + C51426) * C51061 + C51434 * C51062) *
                    C152162 * C152280 -
                ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
                 (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
                  C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                     C51060) *
                    C152162 * C152068) *
                   C152321) *
                  C152265 +
              ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                 C52136 * C51062) *
                    C152162 * C152068 -
                (C51133 * C51062 + (C51125 + C51124) * C51061 +
                 (C51123 + C51122) * C51060) *
                    C152162 * C152280) *
                   C1345 +
               (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                 C51929 * C51062) *
                    C152162 * C152280 -
                ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
                 (C52474 + C52473) * C51060) *
                    C152162 * C152068) *
                   C1346 +
               (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
                 (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
                  C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                     C51062) *
                    C152162 * C152068 -
                ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                 (C51426 + C51425) * C51060) *
                    C152162 * C152280) *
                   C152321) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2936 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2937 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C2938 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C151963 * C152265 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C2937 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C2936 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C2938 +
           ((C54893 + C54892) * C51060 + (C54891 + C54890) * C51061 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C51062) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C807 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152280) *
              C151963 * C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152280 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C809 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C1345 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C1346 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C152280 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C1345 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C1346 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2936 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2937 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C2938 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C151963 * C152265 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C2937 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C2936 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C2938 +
           (C59608 * C2563 + C62033 + C62033 + C59603 * C2579 + C59610 * C3090 +
            C62034 + C62034 + C59604 * C3098 + C59612 * C9575 + C62035 +
            C62035 + C59605 * C9587 + C59614 * C10326 + C62036 + C62036 +
            C59606 * C10330) *
               C151906 * C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152280 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C151963 * C807 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 +
            (C54893 + C54892) * C151906 * C14889) *
               C152068 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C152280) *
              C151963 * C808 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C152280 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152068) *
              C151963 * C809 +
          ((C52136 * C151906 * C14887 + (C51732 + C51731) * C151906 * C14888 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C151906 * C14889) *
               C152068 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152280 -
            ((C65727 + C65728) * C151906 * C14889 +
             (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C1345 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 +
             (C67033 + C67034) * C151906 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152280) *
               C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C151906 * C14887 +
             (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
                C152280 -
            ((C67039 + C67040) * C151906 * C14889 +
             (C67038 + C67037) * C151906 * C14888 +
             (C67036 + C67035) * C151906 * C14887) *
                C152068) *
               C152321) *
              C152265 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 +
             (C54893 + C54892) * C151906 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152280) *
               C1345 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 +
             (C54677 + C54676) * C151906 * C14889) *
                C152280 -
            ((C51065 * C9575 + C55091 + C55091 + C152198 * C9587 +
              C51063 * C3090 + C55090 + C55090 + C51058 * C3098) *
                 C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C1346 +
           (((C53595 + C53594) * C151906 * C14887 +
             (C67539 + C67540) * C151906 * C14888 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151906 * C14889) *
                C152068 -
            ((C67540 + C67539) * C151906 * C14889 +
             (C53594 + C53595) * C151906 * C14888 +
             (C51426 + C51425) * C151906 * C14887) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C2936 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C2937 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            C68345 * C14889) *
               C2938 -
           ((C68342 + C68343) * C151906 * C14889 +
            (C68341 + C68340) * C151906 * C14888 + C68331 * C14887) *
               C152337) *
              C151963 * C152265 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
               C2937 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C2936 -
           ((C68856 + C68857) * C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C2938 +
           (C68851 * C14887 + (C68857 + C68856) * C151906 * C14888 +
            (C51063 * C17969 + C68849 + C68849 + C51058 * C17977 +
             C51065 * C18704 + C68850 + C68850 + C152198 * C18708) *
                C151906 * C14889) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C151963 * C129 -
          (C51133 * C51062 + (C51125 + C51124) * C51061 +
           (C51123 + C51122) * C51060) *
              C152162 * C151981 * C151963 * C130 +
          (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
              C152162 * C151981 * C151963 * C131 -
          ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
           C51133 * C51060) *
              C152162 * C151981 * C151963 * C132 +
          (C51134 * C51060 + (C51131 + C51130) * C51061 +
           (C51063 * C142 + C51100 + C51100 + C51058 * C158 + C51065 * C811 +
            C51101 + C51101 + C152198 * C813) *
               C51062) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152368 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            (C51429 + C51430) * C51062) *
               C152162 * C151981 * C152352 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152368 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152368 -
           ((C51065 * C359 + C51393 + C51393 + C152198 * C383 + C51063 * C358 +
             C51394 + C51394 + C51058 * C382) *
                C51062 +
            (C51430 + C51429) * C51061 + C51433 * C51060) *
               C152162 * C151981 * C152352 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2325 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C2326 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C2325 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152324) *
              C151963 * C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C2325 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C2326 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2325 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C152368 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C2326 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C2325 -
           ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
             C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                C51062 +
            (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
             C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152324) *
              C152352 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C2325 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C152365 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C2326 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C2325 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C2325 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C2326 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C152368 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C2326 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C2325 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C152352 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C2325 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C2326 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
            C51665 + C51665 + C152198 * C1167) *
               C151906 * C14888 +
           (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
            C51668 + C51668 + C152198 * C1644) *
               C151906 * C14889) *
              C151981 * C151963 * C129 -
          ((C51726 + C51725) * C151906 * C14889 +
           (C51723 + C51724) * C151906 * C14888 +
           (C51123 + C51122) * C151906 * C14887) *
              C151981 * C151963 * C130 +
          (C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
           C51734 * C151906 * C14889) *
              C151981 * C151963 * C131 -
          ((C51731 + C51732) * C151906 * C14889 +
           (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
              C151981 * C151963 * C132 +
          (C51134 * C151906 * C14887 + (C52148 + C52147) * C151906 * C14888 +
           (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
            C51696 + C51696 + C152198 * C2789) *
               C151906 * C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
             C51665 + C51665 + C152198 * C1167) *
                C151906 * C14888 +
            (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C151906 * C14889) *
               C151981 * C152368 -
           ((C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C151906 * C14889 +
            (C51065 * C1624 + C52440 + C52440 + C152198 * C1648 +
             C51063 * C1155 + C52439 + C52439 + C51058 * C1167) *
                C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C152352 -
           ((C51726 + C51725) * C151906 * C14889 +
            (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152368 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C51734 * C151906 * C14889) *
               C151981 * C152368 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152352 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C1345 -
           ((C66428 + C66427) * C151906 * C14889 +
            (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C1346 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C1345 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C152348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C1345 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C1346 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
              C151981 * C1433 -
          ((C66428 + C66427) * C151906 * C14889 +
           (C66426 + C66425) * C151906 * C14888 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C151906 * C14887) *
              C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C151906 * C14887 +
           (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 + C51065 * C2163 +
            C53060 + C53060 + C152198 * C2171) *
               C151906 * C14888 +
           (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 + C51065 * C8250 +
            C53063 + C53063 + C152198 * C8262) *
               C151906 * C14889) *
              C151981 * C1435 -
          ((C51065 * C8253 + C66769 + C66769 + C152198 * C8265 +
            C51063 * C8250 + C66770 + C66770 + C51058 * C8262) *
               C151906 * C14889 +
           (C51065 * C8252 + C53791 + C53791 + C152198 * C8264 +
            C51063 * C2163 + C53790 + C53790 + C51058 * C2171) *
               C151906 * C14888 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C151906 * C14887) *
              C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C151906 * C14887 +
           (C51063 * C8252 + C66771 + C66771 + C51058 * C8264 + C51065 * C9005 +
            C66772 + C66772 + C152198 * C9009) *
               C151906 * C14888 +
           (C51063 * C8253 + C66773 + C66773 + C51058 * C8265 +
            C51065 * C60835 + C66774 + C66774 + C152198 * C60837) *
               C151906 * C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C2325 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C2326 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C151963 * C152365 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 +
            (C54893 + C54892) * C151906 * C14889) *
               C2326 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C2325 -
           ((C51065 * C9579 + C54363 + C54363 + C152198 * C9591 +
             C51063 * C2566 + C54362 + C54362 + C51058 * C2582) *
                C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C152324) *
              C151963 * C152348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C2325 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C2326 +
           (C65709 * C14887 + (C54891 + C54890) * C151906 * C14888 +
            (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
             C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                C151906 * C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C2325 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C2326 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C152368 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 +
            (C67033 + C67034) * C151906 * C14889) *
               C2326 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C2325 -
           ((C51065 * C9578 + C66998 + C66998 + C152198 * C9590 +
             C51063 * C9577 + C66999 + C66999 + C51058 * C9589) *
                C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C152324) *
              C152352 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C2325 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C2326 +
           (C67042 * C14887 + (C67040 + C67039) * C151906 * C14888 +
            (C51063 * C9578 + C67014 + C67014 + C51058 * C9590 +
             C51065 * C61693 + C67015 + C67015 + C152198 * C61695) *
                C151906 * C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152026) *
              C151940 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C151949 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C4241 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C4241 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C152279 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C4241 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152279 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C4241) *
               C152026) *
              C151940 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C4241) *
               C152279 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C4241 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152026) *
              C151949 +
          (((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
             C65709 * C14889) *
                C4241 -
            ((C54890 + C54891) * C151906 * C14889 +
             (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
                C152068) *
               C152279 +
           ((C52479 * C151906 * C14887 + (C54675 + C54674) * C151906 * C14888 +
             (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
              C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                 C151906 * C14889) *
                C152068 -
            ((C54674 + C54675) * C151906 * C14889 +
             (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152064 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152071 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C4913) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152071 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152064 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C4913) *
               C152026) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152071 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152064 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C4913) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152064 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152071 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152064 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152071 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C4913) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152071 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152064 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C4913) *
               C152026) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152071 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152064 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C4913) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152064 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152071 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152064 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152071 +
            (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
             C68345 * C14889) *
                C4913) *
               C152279 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152071 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152064 -
            ((C69067 + C69068) * C151906 * C14889 +
             (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
                C4913) *
               C152026) *
              C3375 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152071 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152064 -
            ((C68856 + C68857) * C151906 * C14889 +
             (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
                C4913) *
               C152279 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C152064 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152071 +
            (C68643 * C14887 + (C68649 + C68648) * C151906 * C14888 +
             (C51063 * C9579 + C68641 + C68641 + C51058 * C9591 +
              C51065 * C9580 + C68642 + C68642 + C152198 * C9592) *
                 C151906 * C14889) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C4241 -
               (C51733 * C51062 + (C51723 + C51724) * C51061 +
                (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                 C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                    C51060) *
                   C152162 * C152068) *
                  C151963 * C152374 +
              (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                C52136 * C51062) *
                   C152162 * C152068 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C4241) *
                  C151963 * C152367 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C4241 -
               ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
                C51733 * C51060) *
                   C152162 * C152068) *
                  C151963 * C152350 +
              ((C52136 * C51060 + (C52148 + C52147) * C51061 +
                (C51063 * C597 + C52141 + C52141 + C51058 * C621 +
                 C51065 * C1160 + C52142 + C52142 + C152198 * C1172) *
                    C51062) *
                   C152162 * C152068 -
               ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
                C51133 * C51060) *
                   C152162 * C4241) *
                  C151963 * C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                  C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                     C51060 +
                 (C51122 + C51123) * C51061 + C51132 * C51062) *
                    C152162 * C4241 -
                (C51733 * C51062 + (C51723 + C51724) * C51061 +
                 (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
                  C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                     C51060) *
                    C152162 * C152068) *
                   C152368 +
               (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
                  C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                     C51060 +
                 (C52473 + C52474) * C51061 + C52479 * C51062) *
                    C152162 * C152068 -
                (C51433 * C51062 + (C51423 + C51424) * C51061 +
                 (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                  C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                     C51060) *
                    C152162 * C4241) *
                   C152352 +
               (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                  C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                     C51060 +
                 (C51425 + C51426) * C51061 + C51434 * C51062) *
                    C152162 * C4241 -
                ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
                 (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
                  C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                     C51060) *
                    C152162 * C152068) *
                   C152321) *
                  C3375 +
              ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
                 C52136 * C51062) *
                    C152162 * C152068 -
                (C51133 * C51062 + (C51125 + C51124) * C51061 +
                 (C51123 + C51122) * C51060) *
                    C152162 * C4241) *
                   C152368 +
               (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                 C51929 * C51062) *
                    C152162 * C4241 -
                ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
                 (C52474 + C52473) * C51060) *
                    C152162 * C152068) *
                   C152352 +
               (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
                 (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
                  C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                     C51062) *
                    C152162 * C152068 -
                ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                 (C51426 + C51425) * C51060) *
                    C152162 * C4241) *
                   C152321) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152376 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152373 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152360 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C151963 * C3375 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152373 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152376 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152360 +
           ((C54893 + C54892) * C51060 + (C54891 + C54890) * C51061 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C51062) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C152374 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C4241) *
              C151963 * C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C4241 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C152350 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152368 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152352 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C4241 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152368 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152352 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152376 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152373 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152360 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C151963 * C3375 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152373 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152376 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152360 +
           (C59608 * C2563 + C62033 + C62033 + C59603 * C2579 + C59610 * C3090 +
            C62034 + C62034 + C59604 * C3098 + C59612 * C9575 + C62035 +
            C62035 + C59605 * C9587 + C59614 * C10326 + C62036 + C62036 +
            C59606 * C10330) *
               C151906 * C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C4241 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C151963 * C152374 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
               C152068 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C4241) *
              C151963 * C152367 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C4241 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152068) *
              C151963 * C152350 +
          ((C52136 * C151906 * C14887 + (C51732 + C51731) * C151906 * C14888 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C151906 * C14889) *
               C152068 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C4241 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152368 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C4241) *
               C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C151906 * C14887 +
             (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
                C4241 -
            ((C67039 + C67040) * C151906 * C14889 +
             (C67038 + C67037) * C151906 * C14888 +
             (C67036 + C67035) * C151906 * C14887) *
                C152068) *
               C152321) *
              C3375 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C4241) *
               C152368 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C4241 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152352 +
           (((C53595 + C53594) * C151906 * C14887 +
             (C67539 + C67540) * C151906 * C14888 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151906 * C14889) *
                C152068 -
            ((C67540 + C67539) * C151906 * C14889 +
             (C53594 + C53595) * C151906 * C14888 +
             (C51426 + C51425) * C151906 * C14887) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152376 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152373 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            C68345 * C14889) *
               C152360 -
           ((C68342 + C68343) * C151906 * C14889 +
            (C68341 + C68340) * C151906 * C14888 + C68331 * C14887) *
               C152337) *
              C151963 * C3375 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
               C152373 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C152376 -
           ((C68856 + C68857) * C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C152360 +
           (C68851 * C14887 + (C68857 + C68856) * C151906 * C14888 +
            (C51063 * C17969 + C68849 + C68849 + C51058 * C17977 +
             C51065 * C18704 + C68850 + C68850 + C152198 * C18708) *
                C151906 * C14889) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152064 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152071 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C4913) *
              C151963 * C151940 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152071 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152064 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C4913) *
              C151963 * C151949 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152064 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152071 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152064 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152071 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C4913) *
              C151963 * C151940 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152071 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152064 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C4913) *
              C151963 * C151949 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152064 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152071 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152064 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152071 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            C68345 * C14889) *
               C4913) *
              C151963 * C151940 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
               C152071 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C152064 -
           ((C68856 + C68857) * C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C4913) *
              C151963 * C151949 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C152064 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152071 +
           (C65709 * C14887 + (C54891 + C54890) * C151906 * C14888 +
            (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
             C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                C151906 * C14889) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152368 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C4241 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152368 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152352 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C4241 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152068 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C4241) *
              C151963 * C152367 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C4241 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152068) *
              C151963 * C152350 +
          ((C52136 * C51060 + (C52148 + C52147) * C51061 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C51062) *
               C152162 * C152068 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C152374 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C4241) *
              C151963 * C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C4241 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C152350 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152368 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152352 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C4241 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152368 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152352 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C4241 -
           (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C151963 * C152374 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
               C152068 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C4241) *
              C151963 * C152367 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C4241 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152068) *
              C151963 * C152350 +
          ((C52136 * C151906 * C14887 + (C51732 + C51731) * C151906 * C14888 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C151906 * C14889) *
               C152068 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C4241 -
            (C68331 * C14889 + (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152368 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 + C69062 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C4241) *
               C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C151906 * C14887 +
             (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
                C4241 -
            ((C67039 + C67040) * C151906 * C14889 +
             (C67038 + C67037) * C151906 * C14888 +
             (C67036 + C67035) * C151906 * C14887) *
                C152068) *
               C152321) *
              C3375 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 + C68851 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C4241) *
               C152368 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 + C68643 * C14889) *
                C4241 -
            ((C68648 + C68649) * C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152352 +
           (((C53595 + C53594) * C151906 * C14887 +
             (C67539 + C67540) * C151906 * C14888 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151906 * C14889) *
                C152068 -
            ((C67540 + C67539) * C151906 * C14889 +
             (C53594 + C53595) * C151906 * C14888 +
             (C51426 + C51425) * C151906 * C14887) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1795 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1796 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C1797 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1796 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1795 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C1797 +
           ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
            (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
             C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                C51062) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152279 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152026 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152279) *
              C808 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152279 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152026) *
              C809 +
          ((C51929 * C51060 + (C51941 + C51940) * C51061 +
            (C51063 * C360 + C51934 + C51934 + C51058 * C384 + C51065 * C361 +
             C51935 + C51935 + C152198 * C385) *
                C51062) *
               C152162 * C151981 * C152026 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C807 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152279) *
              C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C809 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1796 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C1797 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C152265 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1796 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C1797 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C152279 -
           ((C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C151906 * C14889 +
            (C51065 * C1624 + C52440 + C52440 + C152198 * C1648 +
             C51063 * C1155 + C52439 + C52439 + C51058 * C1167) *
                C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152026) *
              C807 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C152026 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152279) *
              C808 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C152279 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152026) *
              C809 +
          ((C51929 * C151906 * C14887 + (C52478 + C52477) * C151906 * C14888 +
            (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
             C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                C151906 * C14889) *
               C151981 * C152026 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C1795 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C1796 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C151981 * C1797 -
           ((C51065 * C8253 + C66769 + C66769 + C152198 * C8265 +
             C51063 * C8250 + C66770 + C66770 + C51058 * C8262) *
                C151906 * C14889 +
            (C51065 * C8252 + C53791 + C53791 + C152198 * C8264 +
             C51063 * C2163 + C53790 + C53790 + C51058 * C2171) *
                C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C151981 * C152331) *
              C152265 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C1796 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C1795 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C1797 +
           ((C53283 + C53282) * C151906 * C14887 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C151906 * C14888 +
            (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
             C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                C151906 * C14889) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152280 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C1795 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152068 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152280) *
              C1796 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152280 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152068) *
              C1797 +
          (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
             C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                C51060 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C51061 +
            (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
             C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                C51062) *
               C152162 * C152068 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C152280 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C152279 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152026) *
              C347 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C152280 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C1795 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152280) *
              C1796 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152280 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C1797 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152280 -
            ((C65727 + C65728) * C151906 * C14889 +
             (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C152279 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 +
             (C51063 * C3089 + C55088 + C55088 + C51058 * C3097 +
              C51065 * C9576 + C55089 + C55089 + C152198 * C9588) *
                 C151906 * C14889) *
                C152068 -
            ((C66428 + C66427) * C151906 * C14889 +
             (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152280) *
               C152026) *
              C347 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 +
             (C54893 + C54892) * C151906 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152280) *
               C152279 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 +
             (C54677 + C54676) * C151906 * C14889) *
                C152280 -
            ((C51065 * C9575 + C55091 + C55091 + C152198 * C9587 +
              C51063 * C3090 + C55090 + C55090 + C51058 * C3098) *
                 C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C152026) *
              C348 +
          (((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
             C65709 * C14889) *
                C152280 -
            ((C54890 + C54891) * C151906 * C14889 +
             (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
                C152068) *
               C152279 +
           ((C52479 * C151906 * C14887 + (C54675 + C54674) * C151906 * C14888 +
             (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
              C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                 C151906 * C14889) *
                C152068 -
            ((C54674 + C54675) * C151906 * C14889 +
             (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152280 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C1795 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 +
            (C67033 + C67034) * C151906 * C14889) *
               C152068 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C152280) *
              C1796 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C152280 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152068) *
              C1797 +
          (((C67753 + C67754) * C151906 * C14887 +
            (C67755 + C67756) * C151906 * C14888 +
            (C51063 * C10325 + C67743 + C67743 + C51058 * C10329 +
             C51065 * C62166 + C67744 + C67744 + C152198 * C62168) *
                C151906 * C14889) *
               C152068 -
           ((C67756 + C67755) * C151906 * C14889 +
            (C67754 + C67753) * C151906 * C14888 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C151906 * C14887) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                   C51060 +
               (C51122 + C51123) * C51061 + C51132 * C51062) *
                  C152162 * C151981 * C151963 * C129 -
              (C51133 * C51062 + (C51125 + C51124) * C51061 +
               (C51123 + C51122) * C51060) *
                  C152162 * C151981 * C151963 * C130 +
              (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                  C152162 * C151981 * C151963 * C131 -
              ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
               C51133 * C51060) *
                  C152162 * C151981 * C151963 * C132 +
              (C51134 * C51060 + (C51131 + C51130) * C51061 +
               (C51063 * C142 + C51100 + C51100 + C51058 * C158 +
                C51065 * C811 + C51101 + C51101 + C152198 * C813) *
                   C51062) *
                  C152162 * C151981 * C151963 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C152368 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C152352 +
               ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C151981 * C152321) *
                  C347 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                (C51429 + C51430) * C51062) *
                   C152162 * C151981 * C152352 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C152368 -
               ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                (C51426 + C51425) * C51060) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C151981 * C152368 -
               ((C51065 * C359 + C51393 + C51393 + C152198 * C383 +
                 C51063 * C358 + C51394 + C51394 + C51058 * C382) *
                    C51062 +
                (C51430 + C51429) * C51061 + C51433 * C51060) *
                   C152162 * C151981 * C152352 +
               (C51434 * C51060 + (C51432 + C51431) * C51061 +
                (C51063 * C359 + C51395 + C51395 + C51058 * C383 +
                 C51065 * C1801 + C51396 + C51396 + C152198 * C1803) *
                    C51062) *
                   C152162 * C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152369 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            (C51729 + C51730) * C51062) *
               C152162 * C152354 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152369 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152324) *
              C151963 * C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152369 -
           ((C51065 * C1159 + C51693 + C51693 + C152198 * C1171 +
             C51063 * C595 + C51694 + C51694 + C51058 * C619) *
                C51062 +
            (C51730 + C51729) * C51061 + C51733 * C51060) *
               C152162 * C152354 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152369 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C1345 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152354 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152369 -
           ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
             C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                C51062 +
            (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
             C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152324) *
              C1346 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152369 -
           ((C51065 * C2165 + C53056 + C53056 + C152198 * C2173 +
             C51063 * C1622 + C53057 + C53057 + C51058 * C1646) *
                C51062 +
            (C51065 * C2164 + C53058 + C53058 + C152198 * C2172 +
             C51063 * C1623 + C53059 + C53059 + C51058 * C1647) *
                C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C347 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152354 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152369 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152369 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152354 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C1345 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152354 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152369 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C1346 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152369 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152354 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
            C51665 + C51665 + C152198 * C1167) *
               C151906 * C14888 +
           (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
            C51668 + C51668 + C152198 * C1644) *
               C151906 * C14889) *
              C151981 * C151963 * C129 -
          ((C51726 + C51725) * C151906 * C14889 +
           (C51723 + C51724) * C151906 * C14888 +
           (C51123 + C51122) * C151906 * C14887) *
              C151981 * C151963 * C130 +
          (C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
           C51734 * C151906 * C14889) *
              C151981 * C151963 * C131 -
          ((C51731 + C51732) * C151906 * C14889 +
           (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
              C151981 * C151963 * C132 +
          (C51134 * C151906 * C14887 + (C52148 + C52147) * C151906 * C14888 +
           (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
            C51696 + C51696 + C152198 * C2789) *
               C151906 * C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
             C51665 + C51665 + C152198 * C1167) *
                C151906 * C14888 +
            (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C151906 * C14889) *
               C151981 * C152368 -
           ((C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C151906 * C14889 +
            (C51065 * C1624 + C52440 + C52440 + C152198 * C1648 +
             C51063 * C1155 + C52439 + C52439 + C51058 * C1167) *
                C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C152352 -
           ((C51726 + C51725) * C151906 * C14889 +
            (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152368 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C51734 * C151906 * C14889) *
               C151981 * C152368 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152352 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152369 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152354 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C151963 * C347 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 +
            (C54893 + C54892) * C151906 * C14889) *
               C152354 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C152369 -
           ((C51065 * C9579 + C54363 + C54363 + C152198 * C9591 +
             C51063 * C2566 + C54362 + C54362 + C51058 * C2582) *
                C151906 * C14889 +
            (C54892 + C54893) * C151906 * C14888 + C65716 * C14887) *
               C152324) *
              C151963 * C348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C152369 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152354 +
           (C65709 * C14887 + (C54891 + C54890) * C151906 * C14888 +
            (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
             C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                C151906 * C14889) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C1345 -
           ((C66428 + C66427) * C151906 * C14889 +
            (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C1346 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C1345 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C152348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C1345 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C1346 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
              C151981 * C1433 -
          ((C66428 + C66427) * C151906 * C14889 +
           (C66426 + C66425) * C151906 * C14888 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C151906 * C14887) *
              C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C151906 * C14887 +
           (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 + C51065 * C2163 +
            C53060 + C53060 + C152198 * C2171) *
               C151906 * C14888 +
           (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 + C51065 * C8250 +
            C53063 + C53063 + C152198 * C8262) *
               C151906 * C14889) *
              C151981 * C1435 -
          ((C51065 * C8253 + C66769 + C66769 + C152198 * C8265 +
            C51063 * C8250 + C66770 + C66770 + C51058 * C8262) *
               C151906 * C14889 +
           (C51065 * C8252 + C53791 + C53791 + C152198 * C8264 +
            C51063 * C2163 + C53790 + C53790 + C51058 * C2171) *
               C151906 * C14888 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C151906 * C14887) *
              C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C151906 * C14887 +
           (C51063 * C8252 + C66771 + C66771 + C51058 * C8264 + C51065 * C9005 +
            C66772 + C66772 + C152198 * C9009) *
               C151906 * C14888 +
           (C51063 * C8253 + C66773 + C66773 + C51058 * C8265 +
            C51065 * C60835 + C66774 + C66774 + C152198 * C60837) *
               C151906 * C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152369 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152354 +
           (C65730 * C14887 + (C65728 + C65727) * C151906 * C14888 +
            (C51063 * C2565 + C54360 + C54360 + C51058 * C2581 +
             C51065 * C9577 + C54361 + C54361 + C152198 * C9589) *
                C151906 * C14889) *
               C152324) *
              C1345 +
          (((C66425 + C66426) * C151906 * C14887 +
            (C66427 + C66428) * C151906 * C14888 +
            (C67033 + C67034) * C151906 * C14889) *
               C152354 -
           (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C152369 -
           ((C51065 * C9578 + C66998 + C66998 + C152198 * C9590 +
             C51063 * C9577 + C66999 + C66999 + C51058 * C9589) *
                C151906 * C14889 +
            (C67034 + C67033) * C151906 * C14888 + C67018 * C14887) *
               C152324) *
              C1346 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
               C152369 -
           ((C67039 + C67040) * C151906 * C14889 +
            (C67038 + C67037) * C151906 * C14888 +
            (C67036 + C67035) * C151906 * C14887) *
               C152354 +
           (C67042 * C14887 + (C67040 + C67039) * C151906 * C14888 +
            (C51063 * C9578 + C67014 + C67014 + C51058 * C9590 +
             C51065 * C61693 + C67015 + C67015 + C152198 * C61695) *
                C151906 * C14889) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C1345 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C152280 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C1345 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C1346 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152280 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152068 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152280) *
              C151963 * C808 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152280 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152068) *
              C151963 * C809 +
          ((C52136 * C51060 + (C52148 + C52147) * C51061 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C51062) *
               C152162 * C152068 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C807 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152280) *
              C151963 * C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152280 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C809 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C1345 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C1346 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C152280 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C1345 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C1346 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C152280 -
           ((C65727 + C65728) * C151906 * C14889 +
            (C65726 + C65725) * C151906 * C14888 +
            (C65724 + C65723) * C151906 * C14887) *
               C152068) *
              C151963 * C807 +
          (((C51724 + C51723) * C151906 * C14887 +
            (C51725 + C51726) * C151906 * C14888 +
            (C54893 + C54892) * C151906 * C14889) *
               C152068 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C152280) *
              C151963 * C808 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C152280 -
           ((C54890 + C54891) * C151906 * C14889 +
            (C51728 + C51727) * C151906 * C14888 + C51733 * C151906 * C14887) *
               C152068) *
              C151963 * C809 +
          ((C52136 * C151906 * C14887 + (C51732 + C51731) * C151906 * C14888 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C151906 * C14889) *
               C152068 -
           ((C51731 + C51732) * C151906 * C14889 +
            (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C151906 * C14887 +
             (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
                C152280 -
            ((C65727 + C65728) * C151906 * C14889 +
             (C65726 + C65725) * C151906 * C14888 +
             (C65724 + C65723) * C151906 * C14887) *
                C152068) *
               C1345 +
           (((C66425 + C66426) * C151906 * C14887 +
             (C66427 + C66428) * C151906 * C14888 +
             (C67033 + C67034) * C151906 * C14889) *
                C152068 -
            (C67018 * C14889 + (C66426 + C66425) * C151906 * C14888 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C151906 * C14887) *
                C152280) *
               C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C151906 * C14887 +
             (C67035 + C67036) * C151906 * C14888 + C67042 * C14889) *
                C152280 -
            ((C67039 + C67040) * C151906 * C14889 +
             (C67038 + C67037) * C151906 * C14888 +
             (C67036 + C67035) * C151906 * C14887) *
                C152068) *
               C152321) *
              C152265 +
          ((((C51724 + C51723) * C151906 * C14887 +
             (C51725 + C51726) * C151906 * C14888 +
             (C54893 + C54892) * C151906 * C14889) *
                C152068 -
            (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
             (C51123 + C51122) * C151906 * C14887) *
                C152280) *
               C1345 +
           (((C51424 + C51423) * C151906 * C14887 +
             (C52473 + C52474) * C151906 * C14888 +
             (C54677 + C54676) * C151906 * C14889) *
                C152280 -
            ((C51065 * C9575 + C55091 + C55091 + C152198 * C9587 +
              C51063 * C3090 + C55090 + C55090 + C51058 * C3098) *
                 C151906 * C14889 +
             (C54676 + C54677) * C151906 * C14888 +
             (C52474 + C52473) * C151906 * C14887) *
                C152068) *
               C1346 +
           (((C53595 + C53594) * C151906 * C14887 +
             (C67539 + C67540) * C151906 * C14888 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151906 * C14889) *
                C152068 -
            ((C67540 + C67539) * C151906 * C14889 +
             (C53594 + C53595) * C151906 * C14888 +
             (C51426 + C51425) * C151906 * C14887) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152368 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            (C51429 + C51430) * C51062) *
               C152162 * C151981 * C152352 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152368 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152368 -
           ((C51065 * C359 + C51393 + C51393 + C152198 * C383 + C51063 * C358 +
             C51394 + C51394 + C51058 * C382) *
                C51062 +
            (C51430 + C51429) * C51061 + C51433 * C51060) *
               C152162 * C151981 * C152352 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C151963 * C129 -
          (C51133 * C51062 + (C51125 + C51124) * C51061 +
           (C51123 + C51122) * C51060) *
              C152162 * C151981 * C151963 * C130 +
          (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
              C152162 * C151981 * C151963 * C131 -
          ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
           C51133 * C51060) *
              C152162 * C151981 * C151963 * C132 +
          (C51134 * C51060 + (C51131 + C51130) * C51061 +
           (C51063 * C142 + C51100 + C51100 + C51058 * C158 + C51065 * C811 +
            C51101 + C51101 + C152198 * C813) *
               C51062) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
            C51665 + C51665 + C152198 * C1167) *
               C151906 * C14888 +
           (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
            C51668 + C51668 + C152198 * C1644) *
               C151906 * C14889) *
              C151981 * C151963 * C129 -
          ((C51726 + C51725) * C151906 * C14889 +
           (C51723 + C51724) * C151906 * C14888 +
           (C51123 + C51122) * C151906 * C14887) *
              C151981 * C151963 * C130 +
          (C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
           C51734 * C151906 * C14889) *
              C151981 * C151963 * C131 -
          ((C51731 + C51732) * C151906 * C14889 +
           (C51730 + C51729) * C151906 * C14888 + C51133 * C151906 * C14887) *
              C151981 * C151963 * C132 +
          (C51134 * C151906 * C14887 + (C52148 + C52147) * C151906 * C14888 +
           (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
            C51696 + C51696 + C152198 * C2789) *
               C151906 * C14889) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C51063 * C590 + C51666 + C51666 + C51058 * C614 + C51065 * C1155 +
             C51665 + C51665 + C152198 * C1167) *
                C151906 * C14888 +
            (C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C151906 * C14889) *
               C151981 * C152368 -
           ((C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C151906 * C14889 +
            (C51065 * C1624 + C52440 + C52440 + C152198 * C1648 +
             C51063 * C1155 + C52439 + C52439 + C51058 * C1167) *
                C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C152352 -
           ((C51726 + C51725) * C151906 * C14889 +
            (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C152368 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C51734 * C151906 * C14889) *
               C151981 * C152368 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C152352 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C151906 * C14887 +
            (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
               C151981 * C1345 -
           ((C66428 + C66427) * C151906 * C14889 +
            (C66426 + C66425) * C151906 * C14888 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C151906 * C14887) *
               C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C151906 * C14887 +
            (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 +
             C51065 * C2163 + C53060 + C53060 + C152198 * C2171) *
                C151906 * C14888 +
            (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C151906 * C14887 +
            (C52473 + C52474) * C151906 * C14888 +
            (C54677 + C54676) * C151906 * C14889) *
               C151981 * C1346 -
           (C65716 * C14889 + (C51723 + C51724) * C151906 * C14888 +
            (C51123 + C51122) * C151906 * C14887) *
               C151981 * C1345 -
           ((C51065 * C8249 + C53065 + C53065 + C152198 * C8261 +
             C51063 * C1626 + C53064 + C53064 + C51058 * C1650) *
                C151906 * C14889 +
            (C53594 + C53595) * C151906 * C14888 +
            (C51426 + C51425) * C151906 * C14887) *
               C151981 * C152321) *
              C152348 +
          ((C51132 * C151906 * C14887 + (C51722 + C51721) * C151906 * C14888 +
            C65709 * C14889) *
               C151981 * C1345 -
           ((C54674 + C54675) * C151906 * C14889 +
            (C52476 + C52475) * C151906 * C14888 + C51433 * C151906 * C14887) *
               C151981 * C1346 +
           (C51434 * C151906 * C14887 + (C53593 + C53592) * C151906 * C14888 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C151906 * C14889) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C151906 * C14887 +
           (C65723 + C65724) * C151906 * C14888 + C65730 * C14889) *
              C151981 * C1433 -
          ((C66428 + C66427) * C151906 * C14889 +
           (C66426 + C66425) * C151906 * C14888 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C151906 * C14887) *
              C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C151906 * C14887 +
           (C51063 * C1624 + C53061 + C53061 + C51058 * C1648 + C51065 * C2163 +
            C53060 + C53060 + C152198 * C2171) *
               C151906 * C14888 +
           (C51063 * C1625 + C53062 + C53062 + C51058 * C1649 + C51065 * C8250 +
            C53063 + C53063 + C152198 * C8262) *
               C151906 * C14889) *
              C151981 * C1435 -
          ((C51065 * C8253 + C66769 + C66769 + C152198 * C8265 +
            C51063 * C8250 + C66770 + C66770 + C51058 * C8262) *
               C151906 * C14889 +
           (C51065 * C8252 + C53791 + C53791 + C152198 * C8264 +
            C51063 * C2163 + C53790 + C53790 + C51058 * C2171) *
               C151906 * C14888 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C151906 * C14887) *
              C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C151906 * C14887 +
           (C51063 * C8252 + C66771 + C66771 + C51058 * C8264 + C51065 * C9005 +
            C66772 + C66772 + C152198 * C9009) *
               C151906 * C14888 +
           (C51063 * C8253 + C66773 + C66773 + C51058 * C8265 +
            C51065 * C60835 + C66774 + C66774 + C152198 * C60837) *
               C151906 * C14889) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C152022 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C151981 * C3719) *
              C151940 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152029 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152022 -
           (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C3719) *
              C151949 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C152022 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152029 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152280 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152022 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152280) *
               C152029 +
           ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
               C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                  C152258 +
              (C51425 + C51426) * C151911) *
                 C152297 +
             ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
                C152280 -
            (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                 C152226 +
             (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
                C152068) *
               C3719) *
              C3375 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152280) *
               C152022 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152280 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152029 +
           (((C85145 * C152258 + (C53593 + C53592) * C151911) * C152297 +
             ((C67539 + C67540) * C152258 +
              (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
               C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
             ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                 C152297) *
                C152280) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C152375 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152371 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C151981 * C152357 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C151981 * C152331) *
              C3375 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152371 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152375 -
           (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152357 +
           (((C53283 + C53282) * C152258 + (C53281 + C53280) * C151911) *
                C152297 +
            ((C84758 + C84757) * C152258 +
             (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
              C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C3235 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152026) *
              C152374 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152026 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C3235) *
              C152367 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C3235 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152026) *
              C152350 +
          (((C51929 * C152258 + (C51941 + C51940) * C151911) * C152297 +
            ((C52478 + C52477) * C152258 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C52147 + C52148) * C151911 + C83357 * C152258) * C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152369 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152354 +
            ((C65729 * C152258 + C82838 * C151911) * C152297 +
             ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
                C152324) *
               C3235 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152354 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152369 -
            (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                 C152226 +
             (C86533 * C151911 + C66997 * C152258) * C152297) *
                C152324) *
               C152026) *
              C3375 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152354 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152369 -
            (((C54890 + C54891) * C151911 + C86792 * C152258) * C152226 +
             (C82840 * C151911 + C65708 * C152258) * C152297) *
                C152324) *
               C3235 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152369 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152354 +
            ((C68636 * C152258 + (C54675 + C54674) * C151911) * C152297 +
             ((C68649 + C68648) * C152258 +
              (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
               C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152280 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C3235 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152280) *
               C152026) *
              C151940 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152280) *
               C3235 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152280 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152026) *
              C151949 +
          ((((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
             (C82839 * C152258 + C52136 * C151911) * C152226) *
                C152280 -
            (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
             (C83357 * C151911 + C51733 * C152258) * C152297) *
                C152068) *
               C3235 +
           (((C52479 * C152258 + (C52478 + C52477) * C151911) * C152297 +
             ((C54675 + C54674) * C152258 +
              (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
               C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
             ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                C152280) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C3235 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152026) *
              C152374 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152026 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C3235) *
              C152367 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C3235 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152026) *
              C152350 +
          (((C51929 * C152258 + (C51941 + C51940) * C151911) * C152297 +
            ((C52478 + C52477) * C152258 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C52147 + C52148) * C151911 + C83357 * C152258) * C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C152375 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152371 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C151981 * C152357 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C151981 * C152331) *
              C3375 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152371 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152375 -
           (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152357 +
           (((C53283 + C53282) * C152258 + (C53281 + C53280) * C151911) *
                C152297 +
            ((C84758 + C84757) * C152258 +
             (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
              C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C4241 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152022 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C4241) *
               C152029 +
           ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
               C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                  C152258 +
              (C51425 + C51426) * C151911) *
                 C152297 +
             ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
                C4241 -
            (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                 C152226 +
             (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
                C152068) *
               C3719) *
              C152265 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C4241) *
               C152022 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C4241 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152029 +
           (((C85145 * C152258 + (C53593 + C53592) * C151911) * C152297 +
             ((C67539 + C67540) * C152258 +
              (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
               C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
             ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                 C152297) *
                C4241) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152064 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152071 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C4913) *
              C152022 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152071 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C152064 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            (C86533 * C151911 + C66997 * C152258) * C152297) *
               C4913) *
              C152029 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C152064 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C152071 +
           ((C67041 * C152258 + (C67539 + C67540) * C151911) * C152297 +
            ((C67040 + C67039) * C152258 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C4913) *
              C3719) *
         C151935) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C4241 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C152375 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152068 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C4241) *
              C152371 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C4241 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C152068) *
              C152357 +
          ((((C67753 + C67754) * C152258 + (C84758 + C84757) * C151911) *
                C152297 +
            ((C67755 + C67756) * C152258 +
             (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
              C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C4241 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C3235 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C4241) *
               C152026) *
              C152365 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C4241) *
               C3235 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C4241 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152026) *
              C152348 +
          ((((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
             (C82839 * C152258 + C52136 * C151911) * C152226) *
                C4241 -
            (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
             (C83357 * C151911 + C51733 * C152258) * C152297) *
                C152068) *
               C3235 +
           (((C52479 * C152258 + (C52478 + C52477) * C151911) * C152297 +
             ((C54675 + C54674) * C152258 +
              (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
               C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
             ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152376 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152373 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152360 -
           (((C68856 + C68857) * C151911 + (C68341 + C68340) * C152258) *
                C152226 +
            (C86792 * C151911 + C68318 * C152258) * C152297) *
               C152337) *
              C3235 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152373 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C152376 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            (C86533 * C151911 + C66997 * C152258) * C152297) *
               C152360 +
           ((C69055 * C152258 + (C68649 + C68648) * C151911) * C152297 +
            ((C69068 + C69067) * C152258 +
             (C51063 * C9579 + C68641 + C68641 + C51058 * C9591 +
              C51065 * C9580 + C68642 + C68642 + C152198 * C9592) *
                 C151911) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152064 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152071 +
            ((C65729 * C152258 + C82838 * C151911) * C152297 +
             ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
                C4913) *
               C3235 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152071 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152064 -
            (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                 C152226 +
             (C86533 * C151911 + C66997 * C152258) * C152297) *
                C4913) *
               C152026) *
              C152265 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152071 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152064 -
            (((C54890 + C54891) * C151911 + C86792 * C152258) * C152226 +
             (C82840 * C151911 + C65708 * C152258) * C152297) *
                C4913) *
               C3235 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152064 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152071 +
            ((C68636 * C152258 + (C54675 + C54674) * C151911) * C152297 +
             ((C68649 + C68648) * C152258 +
              (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
               C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C4241 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C3235 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C4241) *
               C152026) *
              C152365 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C4241) *
               C3235 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C4241 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152026) *
              C152348 +
          ((((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
             (C82839 * C152258 + C52136 * C151911) * C152226) *
                C4241 -
            (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
             (C83357 * C151911 + C51733 * C152258) * C152297) *
                C152068) *
               C3235 +
           (((C52479 * C152258 + (C52478 + C52477) * C151911) * C152297 +
             ((C54675 + C54674) * C152258 +
              (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
               C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
             ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C4241 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C152375 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152068 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C4241) *
              C152371 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C4241 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C152068) *
              C152357 +
          ((((C67753 + C67754) * C152258 + (C84758 + C84757) * C151911) *
                C152297 +
            ((C67755 + C67756) * C152258 +
             (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
              C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C1795 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C1796 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C1797 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C151981 * C152331) *
              C152265 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C1796 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C1795 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C1797 +
           (((C53283 + C53282) * C152258 + (C53281 + C53280) * C151911) *
                C152297 +
            ((C84758 + C84757) * C152258 +
             (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
              C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C152279 -
           (((C52474 + C52473) * C151911 + (C66426 + C66425) * C152258) *
                C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152026) *
              C807 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            ((C52473 + C52474) * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152026 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152279) *
              C808 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C152279 -
           (((C52477 + C52478) * C151911 + (C52476 + C52475) * C152258) *
                C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152026) *
              C809 +
          (((C51929 * C152258 + (C51941 + C51940) * C151911) * C152297 +
            ((C52478 + C52477) * C152258 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C52147 + C52148) * C151911 + (C51730 + C51729) * C152258) *
                C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C2325 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C2326 +
            ((C65729 * C152258 + C82838 * C151911) * C152297 +
             ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
                C152324) *
               C152279 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C2326 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C2325 -
            (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                 C152226 +
             (C86533 * C151911 + C66997 * C152258) * C152297) *
                C152324) *
               C152026) *
              C152265 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C2326 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C2325 -
            (((C54890 + C54891) * C151911 + (C54892 + C54893) * C152258) *
                 C152226 +
             (C82840 * C151911 + C65708 * C152258) * C152297) *
                C152324) *
               C152279 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C2325 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C2326 +
            ((C68636 * C152258 + (C54675 + C54674) * C151911) * C152297 +
             ((C68649 + C68648) * C152258 +
              (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
               C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152280 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C1795 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152068 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C152280) *
              C1796 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C152280 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C152068) *
              C1797 +
          ((((C67753 + C67754) * C152258 + (C84758 + C84757) * C151911) *
                C152297 +
            ((C67755 + C67756) * C152258 +
             (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
              C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152280 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152279 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152280) *
               C152026) *
              C347 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152280) *
               C152279 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152280 -
            (((C54674 + C54675) * C151911 + (C54676 + C54677) * C152258) *
                 C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152026) *
              C348 +
          ((((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
             (C82839 * C152258 + C52136 * C151911) * C152226) *
                C152280 -
            (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
             (C83357 * C151911 + C51733 * C152258) * C152297) *
                C152068) *
               C152279 +
           (((C52479 * C152258 + (C52478 + C52477) * C151911) * C152297 +
             ((C54675 + C54674) * C152258 +
              (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
               C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
             ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C2936 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C2937 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C2938 -
           (((C68856 + C68857) * C151911 + (C68341 + C68340) * C152258) *
                C152226 +
            (C86792 * C151911 + C68318 * C152258) * C152297) *
               C152337) *
              C152279 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C2937 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C2936 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            (C86533 * C151911 + C66997 * C152258) * C152297) *
               C2938 +
           ((C69055 * C152258 + (C68649 + C68648) * C151911) * C152297 +
            ((C69068 + C69067) * C152258 +
             (C51063 * C9579 + C68641 + C68641 + C51058 * C9591 +
              C51065 * C9580 + C68642 + C68642 + C152198 * C9592) *
                 C151911) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C152258 +
                (C51122 + C51123) * C151911) *
                   C152297 +
               ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
                   C152226) *
                  C151981 * C151963 * C129 -
              ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
               ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                   C152297) *
                  C151981 * C151963 * C130 +
              ((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
               ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
                  C151981 * C151963 * C131 -
              (((C52147 + C52148) * C151911 + (C51730 + C51729) * C152258) *
                   C152226 +
               ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
                  C151981 * C151963 * C132 +
              ((C51134 * C152258 + (C51131 + C51130) * C151911) * C152297 +
               ((C52148 + C52147) * C152258 +
                (C51063 * C597 + C52141 + C52141 + C51058 * C621 +
                 C51065 * C1160 + C52142 + C52142 + C152198 * C1172) *
                    C151911) *
                   C152226) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                  C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                     C152258 +
                 (C51122 + C51123) * C151911) *
                    C152297 +
                ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
                    C152226) *
                   C151981 * C152368 -
               (((C52474 + C52473) * C151911 + (C66426 + C66425) * C152258) *
                    C152226 +
                ((C51423 + C51424) * C151911 +
                 (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                  C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                     C152258) *
                    C152297) *
                   C151981 * C152352 +
               (((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                  C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                     C152258 +
                 (C51425 + C51426) * C151911) *
                    C152297 +
                ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                    C152226) *
                   C151981 * C152321) *
                  C347 +
              ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                    C152297 +
                ((C52473 + C52474) * C152258 + C52479 * C151911) * C152226) *
                   C151981 * C152352 -
               ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
                ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                    C152297) *
                   C151981 * C152368 -
               (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                    C152226 +
                ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                    C152297) *
                   C151981 * C152321) *
                  C348 +
              (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
                ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
                   C151981 * C152368 -
               (((C52477 + C52478) * C151911 + (C52476 + C52475) * C152258) *
                    C152226 +
                ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                   C151981 * C152352 +
               ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
                ((C53593 + C53592) * C152258 +
                 (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
                  C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                     C151911) *
                    C152226) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152369 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152354 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152354 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C152369 -
           (((C54890 + C54891) * C151911 + (C54892 + C54893) * C152258) *
                C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C152324) *
              C151963 * C348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C152369 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            ((C51730 + C51729) * C151911 + C51733 * C152258) * C152297) *
               C152354 +
           ((C51734 * C152258 + (C51732 + C51731) * C151911) * C152297 +
            ((C54891 + C54890) * C152258 +
             (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
              C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C1345 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C1346 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C1345 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C1345 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C1346 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
              C151981 * C1433 -
          ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
           ((C51423 + C51424) * C151911 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C152258) *
               C152297) *
              C151981 * C1434 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C152258 +
            (C51425 + C51426) * C151911) *
               C152297 +
           ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C51065 * C8251 + C53793 + C53793 + C152198 * C8263 +
             C51063 * C2164 + C53792 + C53792 + C51058 * C2172) *
                C151911 +
            (C67754 + C67753) * C152258) *
               C152226 +
           ((C53282 + C53283) * C151911 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C152258) *
               C152297) *
              C151981 * C1436 +
          (((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 +
             C51065 * C8008 + C52827 + C52827 + C152198 * C8016) *
                C152258 +
            (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 +
             C51065 * C8007 + C52829 + C52829 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C51063 * C8252 + C66771 + C66771 + C51058 * C8264 +
             C51065 * C9005 + C66772 + C66772 + C152198 * C9009) *
                C152258 +
            (C51063 * C8251 + C84199 + C84199 + C51058 * C8263 +
             C51065 * C9006 + C84200 + C84200 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152369 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152354 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C1345 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152354 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C152369 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            ((C54676 + C54677) * C151911 + C66997 * C152258) * C152297) *
               C152324) *
              C1346 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C152369 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            ((C53594 + C53595) * C151911 + (C67036 + C67035) * C152258) *
                C152297) *
               C152354 +
           ((C67041 * C152258 + (C67539 + C67540) * C151911) * C152297 +
            ((C67040 + C67039) * C152258 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C2325 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C2326 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C2326 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C2325 -
           (((C54890 + C54891) * C151911 + (C54892 + C54893) * C152258) *
                C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C152324) *
              C151963 * C152348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C2325 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C2326 +
           ((C51734 * C152258 + (C51732 + C51731) * C151911) * C152297 +
            ((C54891 + C54890) * C152258 +
             (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
              C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C2325 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C2326 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C152368 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C2326 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C2325 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            ((C54676 + C54677) * C151911 + C66997 * C152258) * C152297) *
               C152324) *
              C152352 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C2325 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C2326 +
           ((C67041 * C152258 + (C67539 + C67540) * C151911) * C152297 +
            ((C67040 + C67039) * C152258 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
              C2556 -
          ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
           (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
              C2557 +
          ((C65729 * C152258 + C82838 * C151911) * C152297 +
           ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
              C2558 -
          (((C68856 + C68857) * C151911 + (C68341 + C68340) * C152258) *
               C152226 +
           ((C54892 + C54893) * C151911 + C68318 * C152258) * C152297) *
              C2559 +
          ((C68344 * C152258 + (C68857 + C68856) * C151911) * C152297 +
           ((C68343 + C68342) * C152258 +
            (C51063 * C17969 + C68849 + C68849 + C51058 * C17977 +
             C51065 * C18704 + C68850 + C68850 + C152198 * C18708) *
                C151911) *
               C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152280 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C1345 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152280) *
               C1346 +
           ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
               C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                  C152258 +
              (C51425 + C51426) * C151911) *
                 C152297 +
             ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
                C152280 -
            (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                 C152226 +
             (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
                C152068) *
               C152321) *
              C152265 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152280) *
               C1345 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152280 -
            (((C54674 + C54675) * C151911 + (C54676 + C54677) * C152258) *
                 C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C1346 +
           (((C85145 * C152258 + (C53593 + C53592) * C151911) * C152297 +
             ((C67539 + C67540) * C152258 +
              (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
               C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
             ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                 C152297) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152280 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C151963 * C807 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152068 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C152280) *
              C151963 * C808 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C152280 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C152068) *
              C151963 * C809 +
          (((C52136 * C152258 + (C52148 + C52147) * C151911) * C152297 +
            ((C51732 + C51731) * C152258 +
             (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
              C51696 + C51696 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C52147 + C52148) * C151911 + C83357 * C152258) * C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C2936 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C2937 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C2938 -
           (((C68856 + C68857) * C151911 + (C68341 + C68340) * C152258) *
                C152226 +
            (C86792 * C151911 + C68318 * C152258) * C152297) *
               C152337) *
              C151963 * C152265 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C2937 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C2936 -
           (((C54890 + C54891) * C151911 + C86792 * C152258) * C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C2938 +
           ((C68844 * C152258 + (C54891 + C54890) * C151911) * C152297 +
            ((C68857 + C68856) * C152258 +
             (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
              C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                 C151911) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
                C152226) *
               C151981 * C152368 -
           (((C52474 + C52473) * C151911 + (C66426 + C66425) * C152258) *
                C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C347 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            ((C52473 + C52474) * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152352 -
           ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152368 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
               C151981 * C152368 -
           (((C52477 + C52478) * C151911 + (C52476 + C52475) * C152258) *
                C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152352 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
               C152226) *
              C151981 * C151963 * C129 -
          ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
           ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
               C152297) *
              C151981 * C151963 * C130 +
          ((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
           ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C52147 + C52148) * C151911 + (C51730 + C51729) * C152258) *
               C152226 +
           ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
              C151981 * C151963 * C132 +
          ((C51134 * C152258 + (C51131 + C51130) * C151911) * C152297 +
           ((C52148 + C52147) * C152258 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C1345 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C1346 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C1345 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C1345 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C1346 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
              C151981 * C1433 -
          ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
           ((C51423 + C51424) * C151911 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C152258) *
               C152297) *
              C151981 * C1434 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C152258 +
            (C51425 + C51426) * C151911) *
               C152297 +
           ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C51065 * C8251 + C53793 + C53793 + C152198 * C8263 +
             C51063 * C2164 + C53792 + C53792 + C51058 * C2172) *
                C151911 +
            (C67754 + C67753) * C152258) *
               C152226 +
           ((C53282 + C53283) * C151911 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C152258) *
               C152297) *
              C151981 * C1436 +
          (((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 +
             C51065 * C8008 + C52827 + C52827 + C152198 * C8016) *
                C152258 +
            (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 +
             C51065 * C8007 + C52829 + C52829 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C51063 * C8252 + C66771 + C66771 + C51058 * C8264 +
             C51065 * C9005 + C66772 + C66772 + C152198 * C9009) *
                C152258 +
            (C51063 * C8251 + C84199 + C84199 + C51058 * C8263 +
             C51065 * C9006 + C84200 + C84200 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C2325 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C2326 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C2326 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C2325 -
           (((C54890 + C54891) * C151911 + (C54892 + C54893) * C152258) *
                C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C152324) *
              C151963 * C152348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C2325 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C2326 +
           ((C51734 * C152258 + (C51732 + C51731) * C151911) * C152297 +
            ((C54891 + C54890) * C152258 +
             (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
              C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C2325 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C2326 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C152368 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C2326 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C2325 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            ((C54676 + C54677) * C151911 + C66997 * C152258) * C152297) *
               C152324) *
              C152352 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C2325 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C2326 +
           ((C67041 * C152258 + (C67539 + C67540) * C151911) * C152297 +
            ((C67040 + C67039) * C152258 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C4241 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152279 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C4241) *
               C152026) *
              C151940 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C4241) *
               C152279 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C4241 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152026) *
              C151949 +
          ((((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
             (C82839 * C152258 + C52136 * C151911) * C152226) *
                C4241 -
            (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
             (C83357 * C151911 + C51733 * C152258) * C152297) *
                C152068) *
               C152279 +
           (((C52479 * C152258 + (C52478 + C52477) * C151911) * C152297 +
             ((C54675 + C54674) * C152258 +
              (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
               C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
             ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                C4241) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152064 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152071 +
            ((C65729 * C152258 + C82838 * C151911) * C152297 +
             ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
                C4913) *
               C152279 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152071 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152064 -
            (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                 C152226 +
             (C86533 * C151911 + C66997 * C152258) * C152297) *
                C4913) *
               C152026) *
              C3375 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152071 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152064 -
            (((C54890 + C54891) * C151911 + C86792 * C152258) * C152226 +
             (C82840 * C151911 + C65708 * C152258) * C152297) *
                C4913) *
               C152279 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152064 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152071 +
            ((C68636 * C152258 + (C54675 + C54674) * C151911) * C152297 +
             ((C68649 + C68648) * C152258 +
              (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
               C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C4241 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152368 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C4241) *
               C152352 +
           ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
               C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                  C152258 +
              (C51425 + C51426) * C151911) *
                 C152297 +
             ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
                C4241 -
            (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                 C152226 +
             (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
                C152068) *
               C152321) *
              C3375 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C4241) *
               C152368 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C4241 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152352 +
           (((C85145 * C152258 + (C53593 + C53592) * C151911) * C152297 +
             ((C67539 + C67540) * C152258 +
              (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
               C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
             ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                 C152297) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C4241 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C151963 * C152374 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152068 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C4241) *
              C151963 * C152367 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C4241 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C152068) *
              C151963 * C152350 +
          (((C52136 * C152258 + (C52148 + C52147) * C151911) * C152297 +
            ((C51732 + C51731) * C152258 +
             (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
              C51696 + C51696 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C52147 + C52148) * C151911 + C83357 * C152258) * C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152376 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152373 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152360 -
           (((C68856 + C68857) * C151911 + (C68341 + C68340) * C152258) *
                C152226 +
            (C86792 * C151911 + C68318 * C152258) * C152297) *
               C152337) *
              C151963 * C3375 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152373 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C152376 -
           (((C54890 + C54891) * C151911 + C86792 * C152258) * C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C152360 +
           ((C68844 * C152258 + (C54891 + C54890) * C151911) * C152297 +
            ((C68857 + C68856) * C152258 +
             (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
              C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
                 C151911) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152064 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152071 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152071 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C152064 -
           (((C54890 + C54891) * C151911 + C86792 * C152258) * C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C4913) *
              C151963 * C151949 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C152064 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C152071 +
           ((C51734 * C152258 + (C51732 + C51731) * C151911) * C152297 +
            ((C54891 + C54890) * C152258 +
             (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
              C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C4913) *
              C151963 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C4241 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C151963 * C152374 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152068 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C4241) *
              C151963 * C152367 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C4241 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C152068) *
              C151963 * C152350 +
          (((C52136 * C152258 + (C52148 + C52147) * C151911) * C152297 +
            ((C51732 + C51731) * C152258 +
             (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
              C51696 + C51696 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C52147 + C52148) * C151911 + C83357 * C152258) * C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C4241 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152368 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C4241) *
               C152352 +
           ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
               C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                  C152258 +
              (C51425 + C51426) * C151911) *
                 C152297 +
             ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
                C4241 -
            (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                 C152226 +
             (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
                C152068) *
               C152321) *
              C3375 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C4241) *
               C152368 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C4241 -
            (((C54674 + C54675) * C151911 + C86533 * C152258) * C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152352 +
           (((C85145 * C152258 + (C53593 + C53592) * C151911) * C152297 +
             ((C67539 + C67540) * C152258 +
              (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
               C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
             ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                 C152297) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C152279 -
           (((C52474 + C52473) * C151911 + (C66426 + C66425) * C152258) *
                C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152026) *
              C807 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            ((C52473 + C52474) * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152026 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152279) *
              C808 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C152279 -
           (((C52477 + C52478) * C151911 + (C52476 + C52475) * C152258) *
                C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152026) *
              C809 +
          (((C51929 * C152258 + (C51941 + C51940) * C151911) * C152297 +
            ((C52478 + C52477) * C152258 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C52147 + C52148) * C151911 + (C51730 + C51729) * C152258) *
                C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C1795 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C1796 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C1797 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C151981 * C152331) *
              C152265 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C1796 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C1795 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C1797 +
           (((C53283 + C53282) * C152258 + (C53281 + C53280) * C151911) *
                C152297 +
            ((C84758 + C84757) * C152258 +
             (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
              C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152280 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C152279 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152280) *
               C152026) *
              C347 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152280) *
               C152279 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152280 -
            (((C54674 + C54675) * C151911 + (C54676 + C54677) * C152258) *
                 C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C152026) *
              C348 +
          ((((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
             (C82839 * C152258 + C52136 * C151911) * C152226) *
                C152280 -
            (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
             (C83357 * C151911 + C51733 * C152258) * C152297) *
                C152068) *
               C152279 +
           (((C52479 * C152258 + (C52478 + C52477) * C151911) * C152297 +
             ((C54675 + C54674) * C152258 +
              (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
               C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
             ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152280 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C1795 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152068 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C152280) *
              C1796 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
               C152280 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
               C152068) *
              C1797 +
          ((((C67753 + C67754) * C152258 + (C84758 + C84757) * C151911) *
                C152297 +
            ((C67755 + C67756) * C152258 +
             (C51063 * C8249 + C67237 + C67237 + C51058 * C8261 +
              C51065 * C8254 + C67238 + C67238 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C84757 + C84758) * C151911 + (C67754 + C67753) * C152258) *
                C152226 +
            ((C53282 + C53283) * C151911 +
             (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
              C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                 C152258) *
                C152297) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
                C152226) *
               C151981 * C152368 -
           (((C52474 + C52473) * C151911 + (C66426 + C66425) * C152258) *
                C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C347 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            ((C52473 + C52474) * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152352 -
           ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152368 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
               C151981 * C152368 -
           (((C52477 + C52478) * C151911 + (C52476 + C52475) * C152258) *
                C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152352 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
               C152226) *
              C151981 * C151963 * C129 -
          ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
           ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
               C152297) *
              C151981 * C151963 * C130 +
          ((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
           ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C52147 + C52148) * C151911 + (C51730 + C51729) * C152258) *
               C152226 +
           ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
              C151981 * C151963 * C132 +
          ((C51134 * C152258 + (C51131 + C51130) * C151911) * C152297 +
           ((C52148 + C52147) * C152258 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152369 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152354 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152354 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C152369 -
           (((C54890 + C54891) * C151911 + (C54892 + C54893) * C152258) *
                C152226 +
            (C82840 * C151911 + C65708 * C152258) * C152297) *
               C152324) *
              C151963 * C348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C152369 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            ((C51730 + C51729) * C151911 + C51733 * C152258) * C152297) *
               C152354 +
           ((C51734 * C152258 + (C51732 + C51731) * C151911) * C152297 +
            ((C54891 + C54890) * C152258 +
             (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
              C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C1345 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C1346 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C1345 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C1345 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C1346 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
              C151981 * C1433 -
          ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
           ((C51423 + C51424) * C151911 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C152258) *
               C152297) *
              C151981 * C1434 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C152258 +
            (C51425 + C51426) * C151911) *
               C152297 +
           ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C51065 * C8251 + C53793 + C53793 + C152198 * C8263 +
             C51063 * C2164 + C53792 + C53792 + C51058 * C2172) *
                C151911 +
            (C67754 + C67753) * C152258) *
               C152226 +
           ((C53282 + C53283) * C151911 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C152258) *
               C152297) *
              C151981 * C1436 +
          (((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 +
             C51065 * C8008 + C52827 + C52827 + C152198 * C8016) *
                C152258 +
            (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 +
             C51065 * C8007 + C52829 + C52829 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C51063 * C8252 + C66771 + C66771 + C51058 * C8264 +
             C51065 * C9005 + C66772 + C66772 + C152198 * C9009) *
                C152258 +
            (C51063 * C8251 + C84199 + C84199 + C51058 * C8263 +
             C51065 * C9006 + C84200 + C84200 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152369 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152354 +
           ((C65729 * C152258 + C82838 * C151911) * C152297 +
            ((C65728 + C65727) * C152258 + C68844 * C151911) * C152226) *
               C152324) *
              C1345 +
          ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
            ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
               C152354 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C152369 -
           (((C68648 + C68649) * C151911 + (C67034 + C67033) * C152258) *
                C152226 +
            ((C54676 + C54677) * C151911 + C66997 * C152258) * C152297) *
               C152324) *
              C1346 +
          ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C152369 -
           (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                C152226 +
            ((C53594 + C53595) * C151911 + (C67036 + C67035) * C152258) *
                C152297) *
               C152354 +
           ((C67041 * C152258 + (C67539 + C67540) * C151911) * C152297 +
            ((C67040 + C67039) * C152258 +
             (C51063 * C9575 + C67533 + C67533 + C51058 * C9587 +
              C51065 * C10326 + C67534 + C67534 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C152280 -
           ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
            (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
               C152068) *
              C151963 * C807 +
          (((C82836 * C152258 + C82839 * C151911) * C152297 +
            (C82838 * C152258 + C51734 * C151911) * C152226) *
               C152068 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C152280) *
              C151963 * C808 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C152280 -
           (((C51731 + C51732) * C151911 + C82840 * C152258) * C152226 +
            (C83357 * C151911 + C51733 * C152258) * C152297) *
               C152068) *
              C151963 * C809 +
          (((C52136 * C152258 + (C52148 + C52147) * C151911) * C152297 +
            ((C51732 + C51731) * C152258 +
             (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
              C51696 + C51696 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C52147 + C52148) * C151911 + C83357 * C152258) * C152226 +
            ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
               C51069 + C51069 + C152198 * C377) *
                  C152258 +
              (C51122 + C51123) * C151911) *
                 C152297 +
             ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
                C152280 -
            ((C65708 * C151911 + (C65726 + C65725) * C152258) * C152226 +
             (C82837 * C151911 + (C65724 + C65723) * C152258) * C152297) *
                C152068) *
               C1345 +
           ((((C66425 + C66426) * C152258 + C83744 * C151911) * C152297 +
             ((C66427 + C66428) * C152258 + C68636 * C151911) * C152226) *
                C152068 -
            ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
             ((C51423 + C51424) * C151911 +
              (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
               C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                  C152258) *
                 C152297) *
                C152280) *
               C1346 +
           ((((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
               C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                  C152258 +
              (C51425 + C51426) * C151911) *
                 C152297 +
             ((C67035 + C67036) * C152258 + C85145 * C151911) * C152226) *
                C152280 -
            (((C67540 + C67539) * C151911 + (C67038 + C67037) * C152258) *
                 C152226 +
             (C85146 * C151911 + (C67036 + C67035) * C152258) * C152297) *
                C152068) *
               C152321) *
              C152265 +
          ((((C82836 * C152258 + C82839 * C151911) * C152297 +
             (C82838 * C152258 + C51734 * C151911) * C152226) *
                C152068 -
            ((C51733 * C151911 + C82837 * C152258) * C152226 +
             ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                 C152297) *
                C152280) *
               C1345 +
           ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                 C152297 +
             (C83744 * C152258 + C52479 * C151911) * C152226) *
                C152280 -
            (((C54674 + C54675) * C151911 + (C54676 + C54677) * C152258) *
                 C152226 +
             (C83746 * C151911 + C83745 * C152258) * C152297) *
                C152068) *
               C1346 +
           (((C85145 * C152258 + (C53593 + C53592) * C151911) * C152297 +
             ((C67539 + C67540) * C152258 +
              (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
               C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C53592 + C53593) * C151911 + C85146 * C152258) * C152226 +
             ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                 C152297) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
               C152226) *
              C151981 * C151963 * C129 -
          ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
           ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
               C152297) *
              C151981 * C151963 * C130 +
          ((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
           ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C52147 + C52148) * C151911 + (C51730 + C51729) * C152258) *
               C152226 +
           ((C51129 + C51128) * C151911 + C51133 * C152258) * C152297) *
              C151981 * C151963 * C132 +
          ((C51134 * C152258 + (C51131 + C51130) * C151911) * C152297 +
           ((C52148 + C52147) * C152258 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + (C51724 + C51723) * C151911) *
                C152226) *
               C151981 * C152368 -
           (((C52474 + C52473) * C151911 + (C66426 + C66425) * C152258) *
                C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C347 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            ((C52473 + C52474) * C152258 + C52479 * C151911) * C152226) *
               C151981 * C152352 -
           ((C51733 * C151911 + (C51723 + C51724) * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C152368 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            ((C51722 + C51721) * C152258 + C52136 * C151911) * C152226) *
               C151981 * C152368 -
           (((C52477 + C52478) * C151911 + (C52476 + C52475) * C152258) *
                C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C152352 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C152258 +
             (C51122 + C51123) * C151911) *
                C152297 +
            ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
               C151981 * C1345 -
           ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
            ((C51423 + C51424) * C151911 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C152258) *
                C152297) *
               C151981 * C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C152258 +
             (C51425 + C51426) * C151911) *
                C152297 +
            ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
                C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C51424 + C51423) * C152258 + (C51422 + C51421) * C151911) *
                C152297 +
            (C83744 * C152258 + C52479 * C151911) * C152226) *
               C151981 * C1346 -
           ((C51733 * C151911 + C82837 * C152258) * C152226 +
            ((C51125 + C51124) * C151911 + (C51123 + C51122) * C152258) *
                C152297) *
               C151981 * C1345 -
           (((C53592 + C53593) * C151911 + (C53594 + C53595) * C152258) *
                C152226 +
            ((C51428 + C51427) * C151911 + (C51426 + C51425) * C152258) *
                C152297) *
               C151981 * C152321) *
              C152348 +
          (((C51132 * C152258 + (C51127 + C51126) * C151911) * C152297 +
            (C82839 * C152258 + C52136 * C151911) * C152226) *
               C151981 * C1345 -
           (((C52477 + C52478) * C151911 + C83746 * C152258) * C152226 +
            ((C51430 + C51429) * C151911 + C51433 * C152258) * C152297) *
               C151981 * C1346 +
           ((C51434 * C152258 + (C51432 + C51431) * C151911) * C152297 +
            ((C53593 + C53592) * C152258 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C152258 +
            (C51122 + C51123) * C151911) *
               C152297 +
           ((C65723 + C65724) * C152258 + C82836 * C151911) * C152226) *
              C151981 * C1433 -
          ((C83745 * C151911 + (C66426 + C66425) * C152258) * C152226 +
           ((C51423 + C51424) * C151911 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C152258) *
               C152297) *
              C151981 * C1434 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C152258 +
            (C51425 + C51426) * C151911) *
               C152297 +
           ((C67035 + C67036) * C152258 + (C53595 + C53594) * C151911) *
               C152226) *
              C151981 * C1435 -
          (((C51065 * C8251 + C53793 + C53793 + C152198 * C8263 +
             C51063 * C2164 + C53792 + C53792 + C51058 * C2172) *
                C151911 +
            (C67754 + C67753) * C152258) *
               C152226 +
           ((C53282 + C53283) * C151911 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C152258) *
               C152297) *
              C151981 * C1436 +
          (((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 +
             C51065 * C8008 + C52827 + C52827 + C152198 * C8016) *
                C152258 +
            (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 +
             C51065 * C8007 + C52829 + C52829 + C152198 * C8015) *
                C151911) *
               C152297 +
           ((C51063 * C8252 + C66771 + C66771 + C51058 * C8264 +
             C51065 * C9005 + C66772 + C66772 + C152198 * C9009) *
                C152258 +
            (C51063 * C8251 + C84199 + C84199 + C51058 * C8263 +
             C51065 * C9006 + C84200 + C84200 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152022 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152029 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C3719) *
              C151940 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152029 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152022 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C3719) *
              C151949 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152022 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152029 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152022 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152029 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C3719) *
              C151940 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152029 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152022 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C3719) *
              C151949 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152022 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152029 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152022 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C152280 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C3719) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C152022 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152029 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152022 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152029 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C152280 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C3719) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C152022 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152029 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152375 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152371 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152357 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152371 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152375 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152357 +
           ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
            (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
             C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                C51062) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C3235 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152026 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C3235) *
              C152367 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C3235 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152026) *
              C152350 +
          ((C51929 * C51060 + (C51941 + C51940) * C51061 +
            (C51063 * C360 + C51934 + C51934 + C51058 * C384 + C51065 * C361 +
             C51935 + C51935 + C152198 * C385) *
                C51062) *
               C152162 * C151981 * C152026 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152369 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152354 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C152324) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152354 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152369 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C152324) *
               C152026) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152354 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152369 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C152324) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152369 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152354 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C152374 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C3235) *
              C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C152350 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152371 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152357 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C3375 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152371 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152357 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152369 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152354 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C152324) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152354 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152369 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C152324) *
               C152026) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152354 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152369 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C152324) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152369 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152354 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152026) *
              C151940 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C152280 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C3235 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152026) *
              C151940 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C151949 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C152280 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C3235 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152026) *
              C152374 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152026 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C3235) *
              C152367 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C3235 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152026) *
              C152350 +
          ((C51929 * C51060 + (C51941 + C51940) * C51061 +
            (C51063 * C360 + C51934 + C51934 + C51058 * C384 + C51065 * C361 +
             C51935 + C51935 + C152198 * C385) *
                C51062) *
               C152162 * C151981 * C152026 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152375 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152371 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152357 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C151981 * C152331) *
              C3375 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152371 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152375 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152357 +
           ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
            (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
             C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                C51062) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C152374 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C3235) *
              C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C3235 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C152350 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152371 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152357 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C3375 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152371 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152375 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152357 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152022 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152029 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C4241 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C3719) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152022 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152029 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152022 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152029 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C4241 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C3719) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152022 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152029 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152064 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152071 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C4913) *
              C152022 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152071 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152064 -
           ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C4913) *
              C152029 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152064 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152071 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152064 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152071 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C4913) *
              C152022 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152071 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152064 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C4913) *
              C152029 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152064 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152071 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C4241 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C152375 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152068 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C4241) *
              C152371 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C4241 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152068) *
              C152357 +
          (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
             C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                C51060 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C51061 +
            (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
             C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                C51062) *
               C152162 * C152068 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C4241 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C3235 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152376 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152373 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152360 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C3235 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152373 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152376 -
           ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152360 +
           ((C51063 * C3089 + C55088 + C55088 + C51058 * C3097 +
             C51065 * C9576 + C55089 + C55089 + C152198 * C9588) *
                C51060 +
            (C51063 * C3090 + C55090 + C55090 + C51058 * C3098 +
             C51065 * C9575 + C55091 + C55091 + C152198 * C9587) *
                C51061 +
            (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
             C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                C51062) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152365 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C152348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C4241 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C152375 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C4241) *
              C152371 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C4241 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C152357 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152376 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152373 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152360 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C3235 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152373 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152376 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152360 +
           (C59608 * C3089 + C62170 + C62170 + C59603 * C3097 + C59610 * C9576 +
            C62171 + C62171 + C59604 * C9588 + C59612 * C10325 + C62172 +
            C62172 + C59605 * C10329 + C59614 * C62166 + C62173 + C62173 +
            C59606 * C62168) *
               C151906 * C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152064 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152071 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C4913) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152071 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152064 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C4913) *
               C152026) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152071 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152064 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C4913) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152064 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152071 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152064 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152071 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C4913) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152071 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152064 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C4913) *
               C152026) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152071 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152064 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C4913) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152064 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152071 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C3235 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152026) *
              C152365 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C3235 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C152348 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C4241 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C3235 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C4241 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C152375 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152068 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C4241) *
              C152371 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C4241 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152068) *
              C152357 +
          (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
             C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                C51060 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C51061 +
            (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
             C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                C51062) *
               C152162 * C152068 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152365 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C3235 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C152348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C4241 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C3235 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C152375 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C4241) *
              C152371 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C4241 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C152357 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1795 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1796 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C1797 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1796 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1795 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C1797 +
           ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
            (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
             C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                C51062) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152279 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152026 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152279) *
              C808 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152279 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152026) *
              C809 +
          ((C51929 * C51060 + (C51941 + C51940) * C51061 +
            (C51063 * C360 + C51934 + C51934 + C51058 * C384 + C51065 * C361 +
             C51935 + C51935 + C152198 * C385) *
                C51062) *
               C152162 * C151981 * C152026 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C2325 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C2326 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C152324) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C2326 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C2325 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C152324) *
               C152026) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C2326 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C2325 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C152324) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C2325 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C2326 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C807 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152279) *
              C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C809 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1796 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C1797 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C152265 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1796 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C1797 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C2325 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C2326 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C152324) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C2326 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C2325 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C152324) *
               C152026) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C2326 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C2325 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C152324) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C2325 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C2326 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152280 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C1795 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152068 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152280) *
              C1796 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152280 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152068) *
              C1797 +
          (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
             C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                C51060 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C51061 +
            (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
             C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                C51062) *
               C152162 * C152068 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C152280 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C152279 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2936 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2937 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C2938 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C152279 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C2937 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C2936 -
           ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C2938 +
           ((C51063 * C3089 + C55088 + C55088 + C51058 * C3097 +
             C51065 * C9576 + C55089 + C55089 + C152198 * C9588) *
                C51060 +
            (C51063 * C3090 + C55090 + C55090 + C51058 * C3098 +
             C51065 * C9575 + C55091 + C55091 + C152198 * C9587) *
                C51061 +
            (C51063 * C3091 + C55092 + C55092 + C51058 * C3099 +
             C51065 * C10110 + C55093 + C55093 + C152198 * C10112) *
                C51062) *
               C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152026) *
              C347 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C152280 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C1795 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152280) *
              C1796 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152280 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C1797 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2936 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2937 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C2938 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C152279 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C2937 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C2936 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C2938 +
           (C59608 * C3089 + C62170 + C62170 + C59603 * C3097 + C59610 * C9576 +
            C62171 + C62171 + C59604 * C9588 + C59612 * C10325 + C62172 +
            C62172 + C59605 * C10329 + C59614 * C62166 + C62173 + C62173 +
            C59606 * C62168) *
               C151906 * C152162 * C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                   C51060 +
               (C51122 + C51123) * C51061 + C51132 * C51062) *
                  C152162 * C151981 * C151963 * C129 -
              (C51133 * C51062 + (C51125 + C51124) * C51061 +
               (C51123 + C51122) * C51060) *
                  C152162 * C151981 * C151963 * C130 +
              (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                  C152162 * C151981 * C151963 * C131 -
              ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
               C51133 * C51060) *
                  C152162 * C151981 * C151963 * C132 +
              (C51134 * C51060 + (C51131 + C51130) * C51061 +
               (C51063 * C142 + C51100 + C51100 + C51058 * C158 +
                C51065 * C811 + C51101 + C51101 + C152198 * C813) *
                   C51062) *
                  C152162 * C151981 * C151963 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 +
                 C51065 * C353 + C51069 + C51069 + C152198 * C377) *
                    C51060 +
                (C51122 + C51123) * C51061 + C51132 * C51062) *
                   C152162 * C151981 * C152368 -
               (C51433 * C51062 + (C51423 + C51424) * C51061 +
                (C51065 * C354 + C51365 + C51365 + C152198 * C378 +
                 C51063 * C353 + C51366 + C51366 + C51058 * C377) *
                    C51060) *
                   C152162 * C151981 * C152352 +
               ((C51063 * C354 + C51367 + C51367 + C51058 * C378 +
                 C51065 * C1442 + C51368 + C51368 + C152198 * C1458) *
                    C51060 +
                (C51425 + C51426) * C51061 + C51434 * C51062) *
                   C152162 * C151981 * C152321) *
                  C347 +
              (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
                (C51429 + C51430) * C51062) *
                   C152162 * C151981 * C152352 -
               (C51133 * C51062 + (C51125 + C51124) * C51061 +
                (C51123 + C51122) * C51060) *
                   C152162 * C151981 * C152368 -
               ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
                (C51426 + C51425) * C51060) *
                   C152162 * C151981 * C152321) *
                  C348 +
              ((C51132 * C51060 + (C51127 + C51126) * C51061 +
                C51134 * C51062) *
                   C152162 * C151981 * C152368 -
               ((C51065 * C359 + C51393 + C51393 + C152198 * C383 +
                 C51063 * C358 + C51394 + C51394 + C51058 * C382) *
                    C51062 +
                (C51430 + C51429) * C51061 + C51433 * C51060) *
                   C152162 * C151981 * C152352 +
               (C51434 * C51060 + (C51432 + C51431) * C51061 +
                (C51063 * C359 + C51395 + C51395 + C51058 * C383 +
                 C51065 * C1801 + C51396 + C51396 + C152198 * C1803) *
                    C51062) *
                   C152162 * C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152369 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            (C51729 + C51730) * C51062) *
               C152162 * C152354 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152369 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152324) *
              C151963 * C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152369 -
           ((C51065 * C1159 + C51693 + C51693 + C152198 * C1171 +
             C51063 * C595 + C51694 + C51694 + C51058 * C619) *
                C51062 +
            (C51730 + C51729) * C51061 + C51733 * C51060) *
               C152162 * C152354 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152369 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C1345 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152354 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152369 -
           ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
             C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                C51062 +
            (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
             C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152324) *
              C1346 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152369 -
           ((C51065 * C2165 + C53056 + C53056 + C152198 * C2173 +
             C51063 * C1622 + C53057 + C53057 + C51058 * C1646) *
                C51062 +
            (C51065 * C2164 + C53058 + C53058 + C152198 * C2172 +
             C51063 * C1623 + C53059 + C53059 + C51058 * C1647) *
                C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2325 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C2326 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C2325 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152324) *
              C151963 * C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C2325 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C2326 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2325 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C152368 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C2326 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C2325 -
           ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
             C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                C51062 +
            (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
             C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152324) *
              C152352 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C2325 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C2556 -
          (C51733 * C51062 + (C51723 + C51724) * C51061 +
           (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 + C51063 * C590 +
            C51666 + C51666 + C51058 * C614) *
               C51060) *
              C152162 * C2557 +
          ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
            C51668 + C51668 + C152198 * C1644) *
               C51060 +
           (C51725 + C51726) * C51061 + C51734 * C51062) *
              C152162 * C2558 -
          ((C51065 * C3091 + C54354 + C54354 + C152198 * C3099 +
            C51063 * C2562 + C54355 + C54355 + C51058 * C2578) *
               C51062 +
           (C51065 * C3090 + C54356 + C54356 + C152198 * C3098 +
            C51063 * C2563 + C54357 + C54357 + C51058 * C2579) *
               C51061 +
           (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
            C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
               C51060) *
              C152162 * C2559 +
          ((C51063 * C2565 + C54360 + C54360 + C51058 * C2581 + C51065 * C9577 +
            C54361 + C54361 + C152198 * C9589) *
               C51060 +
           (C51063 * C2566 + C54362 + C54362 + C51058 * C2582 + C51065 * C9579 +
            C54363 + C54363 + C152198 * C9591) *
               C51061 +
           (C51063 * C2567 + C54364 + C54364 + C51058 * C2583 +
            C51065 * C18296 + C54365 + C54365 + C152198 * C18298) *
               C51062) *
              C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C347 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152354 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152369 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152369 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152354 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C1345 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152354 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152369 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C1346 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152369 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152354 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C152365 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C2326 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C2325 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C2325 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C2326 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C152368 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C2326 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C2325 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C152352 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C2325 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C2326 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C2556 -
          (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
           C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 + C59955 +
           C59604 * C1167 + C59608 * C590 + C59956 + C59956 + C59603 * C614) *
              C151906 * C152162 * C2557 +
          (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
           C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 + C59959 +
           C59605 * C1649 + C59614 * C8250 + C59960 + C59960 + C59606 * C8262) *
              C151906 * C152162 * C2558 -
          (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
           C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
           C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 + C61700 +
           C59603 * C2580) *
              C151906 * C152162 * C2559 +
          (C59608 * C2565 + C61701 + C61701 + C59603 * C2581 + C59610 * C9577 +
           C61702 + C61702 + C59604 * C9589 + C59612 * C9578 + C61703 + C61703 +
           C59605 * C9590 + C59614 * C61693 + C61704 + C61704 +
           C59606 * C61695) *
              C151906 * C152162 * C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C1345 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C152280 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C1345 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C1346 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152280 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152068 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152280) *
              C151963 * C808 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152280 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152068) *
              C151963 * C809 +
          ((C52136 * C51060 + (C52148 + C52147) * C51061 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C51062) *
               C152162 * C152068 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2936 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2937 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C2938 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C151963 * C152265 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C2937 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C2936 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C2938 +
           ((C54893 + C54892) * C51060 + (C54891 + C54890) * C51061 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C51062) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C807 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152280) *
              C151963 * C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152280 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C809 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C1345 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C1346 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C152280 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C1345 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C1346 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2936 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2937 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C2938 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C151963 * C152265 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C2937 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C2936 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C2938 +
           (C59608 * C2563 + C62033 + C62033 + C59603 * C2579 + C59610 * C3090 +
            C62034 + C62034 + C59604 * C3098 + C59612 * C9575 + C62035 +
            C62035 + C59605 * C9587 + C59614 * C10326 + C62036 + C62036 +
            C59606 * C10330) *
               C151906 * C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152368 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            (C51429 + C51430) * C51062) *
               C152162 * C151981 * C152352 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152368 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152368 -
           ((C51065 * C359 + C51393 + C51393 + C152198 * C383 + C51063 * C358 +
             C51394 + C51394 + C51058 * C382) *
                C51062 +
            (C51430 + C51429) * C51061 + C51433 * C51060) *
               C152162 * C151981 * C152352 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C151963 * C129 -
          (C51133 * C51062 + (C51125 + C51124) * C51061 +
           (C51123 + C51122) * C51060) *
              C152162 * C151981 * C151963 * C130 +
          (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
              C152162 * C151981 * C151963 * C131 -
          ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
           C51133 * C51060) *
              C152162 * C151981 * C151963 * C132 +
          (C51134 * C51060 + (C51131 + C51130) * C51061 +
           (C51063 * C142 + C51100 + C51100 + C51058 * C158 + C51065 * C811 +
            C51101 + C51101 + C152198 * C813) *
               C51062) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2325 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C151963 * C152365 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C2326 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C2325 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152324) *
              C151963 * C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C2325 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C2326 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C2325 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C152368 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C2326 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C2325 -
           ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
             C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                C51062 +
            (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
             C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152324) *
              C152352 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C2325 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C2326 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C152365 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C2326 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C2325 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C2325 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C2326 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C2325 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C2326 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C152368 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C2326 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C2325 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C152352 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C2325 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C2326 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152026) *
              C151940 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C151949 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C4241 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C152279 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152026) *
              C151940 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C151949 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C4241 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152064 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152071 +
            ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
              C51668 + C51668 + C152198 * C1644) *
                 C51060 +
             (C51725 + C51726) * C51061 + C51734 * C51062) *
                C152162 * C4913) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152071 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152064 -
            ((C54674 + C54675) * C51062 + (C54676 + C54677) * C51061 +
             (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
              C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                 C51060) *
                C152162 * C4913) *
               C152026) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152071 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152064 -
            ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
             (C51726 + C51725) * C51060) *
                C152162 * C4913) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152064 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152071 +
            ((C54677 + C54676) * C51060 + (C54675 + C54674) * C51061 +
             (C51063 * C1617 + C54664 + C54664 + C51058 * C1641 +
              C51065 * C1628 + C54665 + C54665 + C152198 * C1652) *
                 C51062) *
                C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152064 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152071 +
            (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
             C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
             C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
             C59606 * C8262) *
                C151906 * C152162 * C4913) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152071 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152064 -
            (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 +
             C59612 * C8250 + C60840 + C60840 + C59605 * C8262 +
             C59610 * C1625 + C60841 + C60841 + C59604 * C1649 +
             C59608 * C1620 + C60842 + C60842 + C59603 * C1644) *
                C151906 * C152162 * C4913) *
               C152026) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152071 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152064 -
            (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 +
             C59612 * C1626 + C59966 + C59966 + C59605 * C1650 +
             C59610 * C1619 + C59967 + C59967 + C59604 * C1643 + C59608 * C592 +
             C59968 + C59968 + C59603 * C616) *
                C151906 * C152162 * C4913) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152064 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152071 +
            (C59608 * C1619 + C61899 + C61899 + C59603 * C1643 +
             C59610 * C1626 + C61900 + C61900 + C59604 * C1650 +
             C59612 * C8249 + C61901 + C61901 + C59605 * C8261 +
             C59614 * C8254 + C61902 + C61902 + C59606 * C8266) *
                C151906 * C152162 * C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152368 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C4241 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152368 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152352 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C4241 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152068 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C4241) *
              C151963 * C152367 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C4241 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152068) *
              C151963 * C152350 +
          ((C52136 * C51060 + (C52148 + C52147) * C51061 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C51062) *
               C152162 * C152068 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152376 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152373 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152360 -
           ((C54890 + C54891) * C51062 + (C54892 + C54893) * C51061 +
            (C51065 * C3089 + C54358 + C54358 + C152198 * C3097 +
             C51063 * C2564 + C54359 + C54359 + C51058 * C2580) *
                C51060) *
               C152162 * C152337) *
              C151963 * C3375 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152373 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152376 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152360 +
           ((C54893 + C54892) * C51060 + (C54891 + C54890) * C51061 +
            (C51063 * C2561 + C54880 + C54880 + C51058 * C2577 +
             C51065 * C3092 + C54881 + C54881 + C152198 * C3100) *
                C51062) *
               C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C152374 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C4241) *
              C151963 * C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C4241 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C152350 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152368 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152352 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C4241 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152368 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152352 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152376 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152373 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152360 -
           (C59614 * C10325 + C61697 + C61697 + C59606 * C10329 +
            C59612 * C9576 + C61698 + C61698 + C59605 * C9588 + C59610 * C3089 +
            C61699 + C61699 + C59604 * C3097 + C59608 * C2564 + C61700 +
            C61700 + C59603 * C2580) *
               C151906 * C152162 * C152337) *
              C151963 * C3375 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152373 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152376 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152360 +
           (C59608 * C2563 + C62033 + C62033 + C59603 * C2579 + C59610 * C3090 +
            C62034 + C62034 + C59604 * C3098 + C59612 * C9575 + C62035 +
            C62035 + C59605 * C9587 + C59614 * C10326 + C62036 + C62036 +
            C59606 * C10330) *
               C151906 * C152162 * C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152064 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152071 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C4913) *
              C151963 * C151940 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152071 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152064 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C4913) *
              C151963 * C151949 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152064 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152071 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152064 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152071 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C4913) *
              C151963 * C151940 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152071 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152064 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C4913) *
              C151963 * C151949 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152064 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152071 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C4241 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C151963 * C152374 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152068 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C4241) *
              C151963 * C152367 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C4241 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152068) *
              C151963 * C152350 +
          ((C52136 * C51060 + (C52148 + C52147) * C51061 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C51062) *
               C152162 * C152068 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C4241 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152368 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C4241) *
               C152352 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C4241 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C152321) *
              C3375 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C4241) *
               C152368 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C4241 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152352 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C4241 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C152374 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C4241) *
              C151963 * C152367 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C4241 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C152350 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C4241 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152368 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C4241) *
               C152352 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C4241 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C3375 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C4241) *
               C152368 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C4241 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152352 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152279 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152026) *
              C807 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C152026 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152279) *
              C808 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152279 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C152026) *
              C809 +
          ((C51929 * C51060 + (C51941 + C51940) * C51061 +
            (C51063 * C360 + C51934 + C51934 + C51058 * C384 + C51065 * C361 +
             C51935 + C51935 + C152198 * C385) *
                C51062) *
               C152162 * C151981 * C152026 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1795 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1796 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C1797 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C151981 * C152331) *
              C152265 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1796 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1795 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C1797 +
           ((C53283 + C53282) * C51060 + (C53281 + C53280) * C51061 +
            (C51063 * C1439 + C53270 + C53270 + C51058 * C1455 +
             C51065 * C1446 + C53271 + C53271 + C152198 * C1462) *
                C51062) *
               C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152026) *
              C807 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152279) *
              C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152279 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152026) *
              C809 +
          ((C59608 * C350 + C60107 + C60107 + C59603 * C374 + C59610 * C357 +
            C60108 + C60108 + C59604 * C381 + C59612 * C1439 + C60109 + C60109 +
            C59605 * C1455 + C59614 * C1446 + C60110 + C60110 +
            C59606 * C1462) *
               C151906 * C152162 * C151981 * C152026 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1796 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C1797 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C151981 * C152331) *
              C152265 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1796 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1795 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C1797 +
           (C59608 * C1441 + C60981 + C60981 + C59603 * C1457 + C59610 * C1444 +
            C60982 + C60982 + C59604 * C1460 + C59612 * C8007 + C60983 +
            C60983 + C59605 * C8015 + C59614 * C8010 + C60984 + C60984 +
            C59606 * C8018) *
               C151906 * C152162 * C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C152279 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C152026) *
              C347 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C152279 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C152026) *
              C348 +
          (((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
                C152162 * C152280 -
            ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
             C51733 * C51060) *
                C152162 * C152068) *
               C152279 +
           ((C52479 * C51060 + (C52478 + C52477) * C51061 +
             (C51063 * C1159 + C52459 + C52459 + C51058 * C1171 +
              C51065 * C2014 + C52460 + C52460 + C152198 * C2016) *
                 C51062) *
                C152162 * C152068 -
            ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
             C51433 * C51060) *
                C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152280 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C1795 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152068 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152280) *
              C1796 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152280 -
           ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152068) *
              C1797 +
          (((C51063 * C2163 + C53790 + C53790 + C51058 * C2171 +
             C51065 * C8252 + C53791 + C53791 + C152198 * C8264) *
                C51060 +
            (C51063 * C2164 + C53792 + C53792 + C51058 * C2172 +
             C51065 * C8251 + C53793 + C53793 + C152198 * C8263) *
                C51061 +
            (C51063 * C2165 + C53794 + C53794 + C51058 * C2173 +
             C51065 * C8790 + C53795 + C53795 + C152198 * C8792) *
                C51062) *
               C152162 * C152068 -
           ((C53280 + C53281) * C51062 + (C53282 + C53283) * C51061 +
            (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
             C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
                C51060) *
               C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C152026) *
              C347 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C152279 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C152026) *
              C348 +
          (((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
             C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
             C59605 * C380 + C59614 * C1440 + C59628 + C59628 +
             C59606 * C1456) *
                C151906 * C152162 * C152280 -
            (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 +
             C59612 * C1622 + C59970 + C59970 + C59605 * C1646 +
             C59610 * C1157 + C59971 + C59971 + C59604 * C1169 + C59608 * C588 +
             C59972 + C59972 + C59603 * C612) *
                C151906 * C152162 * C152068) *
               C152279 +
           ((C59608 * C1157 + C60447 + C60447 + C59603 * C1169 +
             C59610 * C1622 + C60448 + C60448 + C59604 * C1646 +
             C59612 * C2165 + C60449 + C60449 + C59605 * C2173 +
             C59614 * C8790 + C60450 + C60450 + C59606 * C8792) *
                C151906 * C152162 * C152068 -
            (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 +
             C59612 * C1440 + C59800 + C59800 + C59605 * C1456 + C59610 * C356 +
             C59801 + C59801 + C59604 * C380 + C59608 * C351 + C59802 + C59802 +
             C59603 * C375) *
                C151906 * C152162 * C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C1795 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152068 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152280) *
              C1796 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152280 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152068) *
              C1797 +
          ((C59608 * C2163 + C61316 + C61316 + C59603 * C2171 + C59610 * C8252 +
            C61317 + C61317 + C59604 * C8264 + C59612 * C9005 + C61318 +
            C61318 + C59605 * C9009 + C59614 * C61312 + C61319 + C61319 +
            C59606 * C61314) *
               C151906 * C152162 * C152068 -
           (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
            C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 +
            C60684 + C59604 * C1459 + C59608 * C1442 + C60685 + C60685 +
            C59603 * C1458) *
               C151906 * C152162 * C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152368 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            (C51429 + C51430) * C51062) *
               C152162 * C151981 * C152352 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152368 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152368 -
           ((C51065 * C359 + C51393 + C51393 + C152198 * C383 + C51063 * C358 +
             C51394 + C51394 + C51058 * C382) *
                C51062 +
            (C51430 + C51429) * C51061 + C51433 * C51060) *
               C152162 * C151981 * C152352 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C151963 * C129 -
          (C51133 * C51062 + (C51125 + C51124) * C51061 +
           (C51123 + C51122) * C51060) *
              C152162 * C151981 * C151963 * C130 +
          (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
              C152162 * C151981 * C151963 * C131 -
          ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
           C51133 * C51060) *
              C152162 * C151981 * C151963 * C132 +
          (C51134 * C51060 + (C51131 + C51130) * C51061 +
           (C51063 * C142 + C51100 + C51100 + C51058 * C158 + C51065 * C811 +
            C51101 + C51101 + C152198 * C813) *
               C51062) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152369 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C151963 * C347 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            (C51729 + C51730) * C51062) *
               C152162 * C152354 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152369 -
           ((C51731 + C51732) * C51062 + (C51728 + C51727) * C51061 +
            (C51726 + C51725) * C51060) *
               C152162 * C152324) *
              C151963 * C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152369 -
           ((C51065 * C1159 + C51693 + C51693 + C152198 * C1171 +
             C51063 * C595 + C51694 + C51694 + C51058 * C619) *
                C51062 +
            (C51730 + C51729) * C51061 + C51733 * C51060) *
               C152162 * C152354 +
           (C51734 * C51060 + (C51732 + C51731) * C51061 +
            (C51063 * C596 + C51695 + C51695 + C51058 * C620 + C51065 * C2787 +
             C51696 + C51696 + C152198 * C2789) *
                C51062) *
               C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152369 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C591 + C51667 + C51667 + C51058 * C615 + C51065 * C1620 +
             C51668 + C51668 + C152198 * C1644) *
                C51060 +
            (C51725 + C51726) * C51061 + C51734 * C51062) *
               C152162 * C152324) *
              C1345 +
          (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
             C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                C51060 +
            (C52473 + C52474) * C51061 + C52479 * C51062) *
               C152162 * C152354 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C152369 -
           ((C51065 * C1627 + C53050 + C53050 + C152198 * C1651 +
             C51063 * C1618 + C53051 + C53051 + C51058 * C1642) *
                C51062 +
            (C51065 * C1626 + C53052 + C53052 + C152198 * C1650 +
             C51063 * C1619 + C53053 + C53053 + C51058 * C1643) *
                C51061 +
            (C51065 * C1625 + C53054 + C53054 + C152198 * C1649 +
             C51063 * C1620 + C53055 + C53055 + C51058 * C1644) *
                C51060) *
               C152162 * C152324) *
              C1346 +
          (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C152369 -
           ((C51065 * C2165 + C53056 + C53056 + C152198 * C2173 +
             C51063 * C1622 + C53057 + C53057 + C51058 * C1646) *
                C51062 +
            (C51065 * C2164 + C53058 + C53058 + C152198 * C2172 +
             C51063 * C1623 + C53059 + C53059 + C51058 * C1647) *
                C51061 +
            (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
             C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                C51060) *
               C152162 * C152354 +
           ((C51063 * C1625 + C53062 + C53062 + C51058 * C1649 +
             C51065 * C8250 + C53063 + C53063 + C152198 * C8262) *
                C51060 +
            (C51063 * C1626 + C53064 + C53064 + C51058 * C1650 +
             C51065 * C8249 + C53065 + C53065 + C152198 * C8261) *
                C51061 +
            (C51063 * C1627 + C53066 + C53066 + C51058 * C1651 +
             C51065 * C9895 + C53067 + C53067 + C152198 * C9897) *
                C51062) *
               C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C151963 * C347 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152354 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152369 -
           (C59614 * C8249 + C59965 + C59965 + C59606 * C8261 + C59612 * C1626 +
            C59966 + C59966 + C59605 * C1650 + C59610 * C1619 + C59967 +
            C59967 + C59604 * C1643 + C59608 * C592 + C59968 + C59968 +
            C59603 * C616) *
               C151906 * C152162 * C152324) *
              C151963 * C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152369 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152354 +
           (C59608 * C593 + C59973 + C59973 + C59603 * C617 + C59610 * C1618 +
            C59974 + C59974 + C59604 * C1642 + C59612 * C1627 + C59975 +
            C59975 + C59605 * C1651 + C59614 * C9895 + C59976 + C59976 +
            C59606 * C9897) *
               C151906 * C152162 * C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152369 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152354 +
           (C59608 * C591 + C59957 + C59957 + C59603 * C615 + C59610 * C1620 +
            C59958 + C59958 + C59604 * C1644 + C59612 * C1625 + C59959 +
            C59959 + C59605 * C1649 + C59614 * C8250 + C59960 + C59960 +
            C59606 * C8262) *
               C151906 * C152162 * C152324) *
              C1345 +
          ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 + C59610 * C1624 +
            C60440 + C60440 + C59604 * C1648 + C59612 * C2163 + C60441 +
            C60441 + C59605 * C2171 + C59614 * C8252 + C60442 + C60442 +
            C59606 * C8264) *
               C151906 * C152162 * C152354 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C152369 -
           (C59614 * C8253 + C60839 + C60839 + C59606 * C8265 + C59612 * C8250 +
            C60840 + C60840 + C59605 * C8262 + C59610 * C1625 + C60841 +
            C60841 + C59604 * C1649 + C59608 * C1620 + C60842 + C60842 +
            C59603 * C1644) *
               C151906 * C152162 * C152324) *
              C1346 +
          ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C152369 -
           (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 + C59612 * C8252 +
            C60844 + C60844 + C59605 * C8264 + C59610 * C2163 + C60845 +
            C60845 + C59604 * C2171 + C59608 * C1624 + C60846 + C60846 +
            C59603 * C1648) *
               C151906 * C152162 * C152354 +
           (C59608 * C1625 + C60847 + C60847 + C59603 * C1649 + C59610 * C8250 +
            C60848 + C60848 + C59604 * C8262 + C59612 * C8253 + C60849 +
            C60849 + C59605 * C8265 + C59614 * C60835 + C60850 + C60850 +
            C59606 * C60837) *
               C151906 * C152162 * C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C152280 -
           (C51733 * C51062 + (C51723 + C51724) * C51061 +
            (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
             C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                C51060) *
               C152162 * C152068) *
              C151963 * C807 +
          (((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
            C52136 * C51062) *
               C152162 * C152068 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C152280) *
              C151963 * C808 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C152280 -
           ((C52147 + C52148) * C51062 + (C51730 + C51729) * C51061 +
            C51733 * C51060) *
               C152162 * C152068) *
              C151963 * C809 +
          ((C52136 * C51060 + (C52148 + C52147) * C51061 +
            (C51063 * C597 + C52141 + C52141 + C51058 * C621 + C51065 * C1160 +
             C52142 + C52142 + C152198 * C1172) *
                C51062) *
               C152162 * C152068 -
           ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
            C51133 * C51060) *
               C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
              C51069 + C51069 + C152198 * C377) *
                 C51060 +
             (C51122 + C51123) * C51061 + C51132 * C51062) *
                C152162 * C152280 -
            (C51733 * C51062 + (C51723 + C51724) * C51061 +
             (C51065 * C1155 + C51665 + C51665 + C152198 * C1167 +
              C51063 * C590 + C51666 + C51666 + C51058 * C614) *
                 C51060) *
                C152162 * C152068) *
               C1345 +
           (((C51063 * C1155 + C52439 + C52439 + C51058 * C1167 +
              C51065 * C1624 + C52440 + C52440 + C152198 * C1648) *
                 C51060 +
             (C52473 + C52474) * C51061 + C52479 * C51062) *
                C152162 * C152068 -
            (C51433 * C51062 + (C51423 + C51424) * C51061 +
             (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
              C51366 + C51366 + C51058 * C377) *
                 C51060) *
                C152162 * C152280) *
               C1346 +
           (((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
              C51368 + C51368 + C152198 * C1458) *
                 C51060 +
             (C51425 + C51426) * C51061 + C51434 * C51062) *
                C152162 * C152280 -
            ((C53592 + C53593) * C51062 + (C53594 + C53595) * C51061 +
             (C51065 * C2163 + C53060 + C53060 + C152198 * C2171 +
              C51063 * C1624 + C53061 + C53061 + C51058 * C1648) *
                 C51060) *
                C152162 * C152068) *
               C152321) *
              C152265 +
          ((((C51724 + C51723) * C51060 + (C51722 + C51721) * C51061 +
             C52136 * C51062) *
                C152162 * C152068 -
            (C51133 * C51062 + (C51125 + C51124) * C51061 +
             (C51123 + C51122) * C51060) *
                C152162 * C152280) *
               C1345 +
           (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
             C51929 * C51062) *
                C152162 * C152280 -
            ((C52477 + C52478) * C51062 + (C52476 + C52475) * C51061 +
             (C52474 + C52473) * C51060) *
                C152162 * C152068) *
               C1346 +
           (((C53595 + C53594) * C51060 + (C53593 + C53592) * C51061 +
             (C51063 * C1621 + C53582 + C53582 + C51058 * C1645 +
              C51065 * C2166 + C53583 + C53583 + C152198 * C2174) *
                 C51062) *
                C152162 * C152068 -
            ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
             (C51426 + C51425) * C51060) *
                C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C152280 -
           (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 + C59612 * C1624 +
            C59954 + C59954 + C59605 * C1648 + C59610 * C1155 + C59955 +
            C59955 + C59604 * C1167 + C59608 * C590 + C59956 + C59956 +
            C59603 * C614) *
               C151906 * C152162 * C152068) *
              C151963 * C807 +
          ((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
            C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
            C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
            C59606 * C2172) *
               C151906 * C152162 * C152068 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C152280) *
              C151963 * C808 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C152280 -
           (C59614 * C2165 + C59969 + C59969 + C59606 * C2173 + C59612 * C1622 +
            C59970 + C59970 + C59605 * C1646 + C59610 * C1157 + C59971 +
            C59971 + C59604 * C1169 + C59608 * C588 + C59972 + C59972 +
            C59603 * C612) *
               C151906 * C152162 * C152068) *
              C151963 * C809 +
          ((C59608 * C587 + C60241 + C60241 + C59603 * C611 + C59610 * C1158 +
            C60242 + C60242 + C59604 * C1170 + C59612 * C1621 + C60243 +
            C60243 + C59605 * C1645 + C59614 * C2166 + C60244 + C60244 +
            C59606 * C2174) *
               C151906 * C152162 * C152068 -
           (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
            C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
            C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
               C151906 * C152162 * C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
             C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
             C59605 * C378 + C59614 * C1442 + C59620 + C59620 +
             C59606 * C1458) *
                C151906 * C152162 * C152280 -
            (C59614 * C2163 + C59953 + C59953 + C59606 * C2171 +
             C59612 * C1624 + C59954 + C59954 + C59605 * C1648 +
             C59610 * C1155 + C59955 + C59955 + C59604 * C1167 + C59608 * C590 +
             C59956 + C59956 + C59603 * C614) *
                C151906 * C152162 * C152068) *
               C1345 +
           ((C59608 * C1155 + C60439 + C60439 + C59603 * C1167 +
             C59610 * C1624 + C60440 + C60440 + C59604 * C1648 +
             C59612 * C2163 + C60441 + C60441 + C59605 * C2171 +
             C59614 * C8252 + C60442 + C60442 + C59606 * C8264) *
                C151906 * C152162 * C152068 -
            (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 +
             C59612 * C1442 + C59784 + C59784 + C59605 * C1458 + C59610 * C354 +
             C59785 + C59785 + C59604 * C378 + C59608 * C353 + C59786 + C59786 +
             C59603 * C377) *
                C151906 * C152162 * C152280) *
               C1346 +
           ((C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
             C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
             C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
             C59606 * C8016) *
                C151906 * C152162 * C152280 -
            (C59614 * C9005 + C60843 + C60843 + C59606 * C9009 +
             C59612 * C8252 + C60844 + C60844 + C59605 * C8264 +
             C59610 * C2163 + C60845 + C60845 + C59604 * C2171 +
             C59608 * C1624 + C60846 + C60846 + C59603 * C1648) *
                C151906 * C152162 * C152068) *
               C152321) *
              C152265 +
          (((C59608 * C589 + C59961 + C59961 + C59603 * C613 + C59610 * C1156 +
             C59962 + C59962 + C59604 * C1168 + C59612 * C1623 + C59963 +
             C59963 + C59605 * C1647 + C59614 * C2164 + C59964 + C59964 +
             C59606 * C2172) *
                C151906 * C152162 * C152068 -
            (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
             C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
             C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
                C151906 * C152162 * C152280) *
               C1345 +
           ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
             C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 +
             C59793 + C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
             C59606 * C1460) *
                C151906 * C152162 * C152280 -
            (C59614 * C8251 + C60443 + C60443 + C59606 * C8263 +
             C59612 * C2164 + C60444 + C60444 + C59605 * C2172 +
             C59610 * C1623 + C60445 + C60445 + C59604 * C1647 +
             C59608 * C1156 + C60446 + C60446 + C59603 * C1168) *
                C151906 * C152162 * C152068) *
               C1346 +
           ((C59608 * C1623 + C61179 + C61179 + C59603 * C1647 +
             C59610 * C2164 + C61180 + C61180 + C59604 * C2172 +
             C59612 * C8251 + C61181 + C61181 + C59605 * C8263 +
             C59614 * C9006 + C61182 + C61182 + C59606 * C9010) *
                C151906 * C152162 * C152068 -
            (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 +
             C59612 * C1444 + C59796 + C59796 + C59605 * C1460 +
             C59610 * C1441 + C59797 + C59797 + C59604 * C1457 + C59608 * C355 +
             C59798 + C59798 + C59603 * C379) *
                C151906 * C152162 * C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C151963 * C129 -
          (C51133 * C51062 + (C51125 + C51124) * C51061 +
           (C51123 + C51122) * C51060) *
              C152162 * C151981 * C151963 * C130 +
          (C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
              C152162 * C151981 * C151963 * C131 -
          ((C51130 + C51131) * C51062 + (C51129 + C51128) * C51061 +
           C51133 * C51060) *
              C152162 * C151981 * C151963 * C132 +
          (C51134 * C51060 + (C51131 + C51130) * C51061 +
           (C51063 * C142 + C51100 + C51100 + C51058 * C158 + C51065 * C811 +
            C51101 + C51101 + C152198 * C813) *
               C51062) *
              C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C152368 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C152352 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C347 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            (C51429 + C51430) * C51062) *
               C152162 * C151981 * C152352 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C152368 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C152368 -
           ((C51065 * C359 + C51393 + C51393 + C152198 * C383 + C51063 * C358 +
             C51394 + C51394 + C51058 * C382) *
                C51062 +
            (C51430 + C51429) * C51061 + C51433 * C51060) *
               C152162 * C151981 * C152352 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
             C51069 + C51069 + C152198 * C377) *
                C51060 +
            (C51122 + C51123) * C51061 + C51132 * C51062) *
               C152162 * C151981 * C1345 -
           (C51433 * C51062 + (C51423 + C51424) * C51061 +
            (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
             C51366 + C51366 + C51058 * C377) *
                C51060) *
               C152162 * C151981 * C1346 +
           ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
             C51368 + C51368 + C152198 * C1458) *
                C51060 +
            (C51425 + C51426) * C51061 + C51434 * C51062) *
               C152162 * C151981 * C152321) *
              C152365 +
          (((C51424 + C51423) * C51060 + (C51422 + C51421) * C51061 +
            C51929 * C51062) *
               C152162 * C151981 * C1346 -
           (C51133 * C51062 + (C51125 + C51124) * C51061 +
            (C51123 + C51122) * C51060) *
               C152162 * C151981 * C1345 -
           ((C51431 + C51432) * C51062 + (C51428 + C51427) * C51061 +
            (C51426 + C51425) * C51060) *
               C152162 * C151981 * C152321) *
              C152348 +
          ((C51132 * C51060 + (C51127 + C51126) * C51061 + C51134 * C51062) *
               C152162 * C151981 * C1345 -
           ((C51940 + C51941) * C51062 + (C51430 + C51429) * C51061 +
            C51433 * C51060) *
               C152162 * C151981 * C1346 +
           (C51434 * C51060 + (C51432 + C51431) * C51061 +
            (C51063 * C359 + C51395 + C51395 + C51058 * C383 + C51065 * C1801 +
             C51396 + C51396 + C152198 * C1803) *
                C51062) *
               C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C51063 * C136 + C51068 + C51068 + C51058 * C152 + C51065 * C353 +
            C51069 + C51069 + C152198 * C377) *
               C51060 +
           (C51122 + C51123) * C51061 + C51132 * C51062) *
              C152162 * C151981 * C1433 -
          (C51433 * C51062 + (C51423 + C51424) * C51061 +
           (C51065 * C354 + C51365 + C51365 + C152198 * C378 + C51063 * C353 +
            C51366 + C51366 + C51058 * C377) *
               C51060) *
              C152162 * C151981 * C1434 +
          ((C51063 * C354 + C51367 + C51367 + C51058 * C378 + C51065 * C1442 +
            C51368 + C51368 + C152198 * C1458) *
               C51060 +
           (C51425 + C51426) * C51061 + C51434 * C51062) *
              C152162 * C151981 * C1435 -
          ((C51065 * C1445 + C52820 + C52820 + C152198 * C1461 +
            C51063 * C1440 + C52821 + C52821 + C51058 * C1456) *
               C51062 +
           (C51065 * C1444 + C52822 + C52822 + C152198 * C1460 +
            C51063 * C1441 + C52823 + C52823 + C51058 * C1457) *
               C51061 +
           (C51065 * C1443 + C52824 + C52824 + C152198 * C1459 +
            C51063 * C1442 + C52825 + C52825 + C51058 * C1458) *
               C51060) *
              C152162 * C151981 * C1436 +
          ((C51063 * C1443 + C52826 + C52826 + C51058 * C1459 + C51065 * C8008 +
            C52827 + C52827 + C152198 * C8016) *
               C51060 +
           (C51063 * C1444 + C52828 + C52828 + C51058 * C1460 + C51065 * C8007 +
            C52829 + C52829 + C152198 * C8015) *
               C51061 +
           (C51063 * C1445 + C52830 + C52830 + C51058 * C1461 + C51065 * C8479 +
            C52831 + C52831 + C152198 * C8481) *
               C51062) *
              C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C151963 * C129 -
          (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
           C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
           C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
              C151906 * C152162 * C151981 * C151963 * C130 +
          (C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
           C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
           C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
              C151906 * C152162 * C151981 * C151963 * C131 -
          (C59614 * C1439 + C59629 + C59629 + C59606 * C1455 + C59612 * C357 +
           C59630 + C59630 + C59605 * C381 + C59610 * C350 + C59631 + C59631 +
           C59604 * C374 + C59608 * C139 + C59632 + C59632 + C59603 * C155) *
              C151906 * C152162 * C151981 * C151963 * C132 +
          (C59608 * C140 + C59633 + C59633 + C59603 * C156 + C59610 * C358 +
           C59634 + C59634 + C59604 * C382 + C59612 * C359 + C59635 + C59635 +
           C59605 * C383 + C59614 * C1801 + C59636 + C59636 + C59606 * C1803) *
              C151906 * C152162 * C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C347 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C152352 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C152368 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C152352 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
            C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
            C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
            C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
            C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
            C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 +
            C59789 + C59605 * C1459 + C59614 * C8008 + C59790 + C59790 +
            C59606 * C8016) *
               C151906 * C152162 * C151981 * C152321) *
              C152365 +
          ((C59608 * C352 + C59791 + C59791 + C59603 * C376 + C59610 * C355 +
            C59792 + C59792 + C59604 * C379 + C59612 * C1441 + C59793 + C59793 +
            C59605 * C1457 + C59614 * C1444 + C59794 + C59794 +
            C59606 * C1460) *
               C151906 * C152162 * C151981 * C1346 -
           (C59614 * C1441 + C59621 + C59621 + C59606 * C1457 + C59612 * C355 +
            C59622 + C59622 + C59605 * C379 + C59610 * C352 + C59623 + C59623 +
            C59604 * C376 + C59608 * C137 + C59624 + C59624 + C59603 * C153) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C8007 + C59795 + C59795 + C59606 * C8015 + C59612 * C1444 +
            C59796 + C59796 + C59605 * C1460 + C59610 * C1441 + C59797 +
            C59797 + C59604 * C1457 + C59608 * C355 + C59798 + C59798 +
            C59603 * C379) *
               C151906 * C152162 * C151981 * C152321) *
              C152348 +
          ((C59608 * C138 + C59625 + C59625 + C59603 * C154 + C59610 * C351 +
            C59626 + C59626 + C59604 * C375 + C59612 * C356 + C59627 + C59627 +
            C59605 * C380 + C59614 * C1440 + C59628 + C59628 + C59606 * C1456) *
               C151906 * C152162 * C151981 * C1345 -
           (C59614 * C1445 + C59799 + C59799 + C59606 * C1461 + C59612 * C1440 +
            C59800 + C59800 + C59605 * C1456 + C59610 * C356 + C59801 + C59801 +
            C59604 * C380 + C59608 * C351 + C59802 + C59802 + C59603 * C375) *
               C151906 * C152162 * C151981 * C1346 +
           (C59608 * C356 + C59803 + C59803 + C59603 * C380 + C59610 * C1440 +
            C59804 + C59804 + C59604 * C1456 + C59612 * C1445 + C59805 +
            C59805 + C59605 * C1461 + C59614 * C8479 + C59806 + C59806 +
            C59606 * C8481) *
               C151906 * C152162 * C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C59608 * C136 + C59617 + C59617 + C59603 * C152 + C59610 * C353 +
           C59618 + C59618 + C59604 * C377 + C59612 * C354 + C59619 + C59619 +
           C59605 * C378 + C59614 * C1442 + C59620 + C59620 + C59606 * C1458) *
              C151906 * C152162 * C151981 * C1433 -
          (C59614 * C1443 + C59783 + C59783 + C59606 * C1459 + C59612 * C1442 +
           C59784 + C59784 + C59605 * C1458 + C59610 * C354 + C59785 + C59785 +
           C59604 * C378 + C59608 * C353 + C59786 + C59786 + C59603 * C377) *
              C151906 * C152162 * C151981 * C1434 +
          (C59608 * C354 + C59787 + C59787 + C59603 * C378 + C59610 * C1442 +
           C59788 + C59788 + C59604 * C1458 + C59612 * C1443 + C59789 + C59789 +
           C59605 * C1459 + C59614 * C8008 + C59790 + C59790 + C59606 * C8016) *
              C151906 * C152162 * C151981 * C1435 -
          (C59614 * C8009 + C60682 + C60682 + C59606 * C8017 + C59612 * C8008 +
           C60683 + C60683 + C59605 * C8016 + C59610 * C1443 + C60684 + C60684 +
           C59604 * C1459 + C59608 * C1442 + C60685 + C60685 + C59603 * C1458) *
              C151906 * C152162 * C151981 * C1436 +
          (C59608 * C1443 + C60686 + C60686 + C59603 * C1459 + C59610 * C8008 +
           C60687 + C60687 + C59604 * C8016 + C59612 * C8009 + C60688 + C60688 +
           C59605 * C8017 + C59614 * C60678 + C60689 + C60689 +
           C59606 * C60680) *
              C151906 * C152162 * C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152022 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152029 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C3719) *
              C151940 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152029 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152022 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C3719) *
              C151949 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C152022 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152029 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152280 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152022 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152280) *
               C152029 +
           ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
               C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                  C152258 +
              (C23636 + C23637) * C151911) *
                 C101365 +
             ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                C152280 -
            (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                 C152226 +
             (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
                C152068) *
               C3719) *
              C3375 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152280) *
               C152022 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152280 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152029 +
           (((C43065 * C152258 + (C25804 + C25803) * C151911) * C101365 +
             ((C42408 + C42407) * C152258 +
              (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
               C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
             ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                 C101365) *
                C152280) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152375 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152371 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152357 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C151981 * C152331) *
              C3375 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152371 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152375 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152357 +
           (((C25494 + C25493) * C152258 + (C25492 + C25491) * C151911) *
                C101365 +
            ((C42678 + C42677) * C152258 +
             (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
              C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C3235 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152026) *
              C152374 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152026 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C3235) *
              C152367 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C3235 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C24140 * C152258 + (C24152 + C24151) * C151911) * C101365 +
            ((C24689 + C24688) * C152258 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152369 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152354 +
            (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
             ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
                C152324) *
               C3235 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152354 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152369 -
            (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                 C152226 +
             (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
                C152324) *
               C152026) *
              C3375 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152354 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152369 -
            (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
             (C40692 * C151911 + C40684 * C152258) * C101365) *
                C152324) *
               C3235 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152369 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152354 +
            ((C44501 * C152258 + (C26886 + C26885) * C151911) * C101365 +
             ((C44512 + C44511) * C152258 +
              (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
               C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152280 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C3235 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152280) *
               C152026) *
              C151940 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152280) *
               C3235 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152280 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
             (C40691 * C152258 + C24347 * C151911) * C152226) *
                C152280 -
            (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
             (C41221 * C151911 + C23944 * C152258) * C101365) *
                C152068) *
               C3235 +
           (((C24690 * C152258 + (C24689 + C24688) * C151911) * C101365 +
             ((C26886 + C26885) * C152258 +
              (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
               C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
             ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                C152280) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C3235 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152026) *
              C152374 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152026 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C3235) *
              C152367 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C3235 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C24140 * C152258 + (C24152 + C24151) * C151911) * C101365 +
            ((C24689 + C24688) * C152258 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152375 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152371 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152357 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C151981 * C152331) *
              C3375 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152371 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152375 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152357 +
           (((C25494 + C25493) * C152258 + (C25492 + C25491) * C151911) *
                C101365 +
            ((C42678 + C42677) * C152258 +
             (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
              C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C4241 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152022 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C4241) *
               C152029 +
           ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
               C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                  C152258 +
              (C23636 + C23637) * C151911) *
                 C101365 +
             ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                C4241 -
            (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                 C152226 +
             (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
                C152068) *
               C3719) *
              C152265 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C4241) *
               C152022 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C4241 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152029 +
           (((C43065 * C152258 + (C25804 + C25803) * C151911) * C101365 +
             ((C42408 + C42407) * C152258 +
              (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
               C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
             ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                 C101365) *
                C4241) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152064 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152071 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C4913) *
              C152022 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152071 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C152064 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C4913) *
              C152029 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C152064 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152071 +
           (((C42410 + C42409) * C152258 + (C42408 + C42407) * C151911) *
                C101365 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C152258 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C4913) *
              C3719) *
         C151935) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C4241 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C152375 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152068 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C4241) *
              C152371 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C4241 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152068) *
              C152357 +
          ((((C43337 + C43338) * C152258 + (C42678 + C42677) * C151911) *
                C101365 +
            ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
              C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                 C152258 +
             (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
              C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C4241 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C3235 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C4241) *
               C3235 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C4241 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
             (C40691 * C152258 + C24347 * C151911) * C152226) *
                C4241 -
            (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
             (C41221 * C151911 + C23944 * C152258) * C101365) *
                C152068) *
               C3235 +
           (((C24690 * C152258 + (C24689 + C24688) * C151911) * C101365 +
             ((C26886 + C26885) * C152258 +
              (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
               C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
             ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152376 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152373 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152360 -
           (((C44111 + C44112) * C151911 + (C44113 + C44114) * C152258) *
                C152226 +
            (C44772 * C151911 + (C44110 + C44109) * C152258) * C101365) *
               C152337) *
              C3235 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152373 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C152376 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C152360 +
           (((C45044 + C45043) * C152258 + (C44512 + C44511) * C151911) *
                C101365 +
            ((C23274 * C9577 + C45035 + C45035 + C152296 * C9589 +
              C23276 * C9578 + C45036 + C45036 + C152198 * C9590) *
                 C152258 +
             (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
              C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                 C151911) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152064 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152071 +
            (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
             ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
                C4913) *
               C3235 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152071 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152064 -
            (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                 C152226 +
             (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
                C4913) *
               C152026) *
              C152265 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152071 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152064 -
            (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
             (C40692 * C151911 + C40684 * C152258) * C101365) *
                C4913) *
               C3235 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152064 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152071 +
            ((C44501 * C152258 + (C26886 + C26885) * C151911) * C101365 +
             ((C44512 + C44511) * C152258 +
              (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
               C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C4241 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C3235 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C4241) *
               C3235 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C4241 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
             (C40691 * C152258 + C24347 * C151911) * C152226) *
                C4241 -
            (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
             (C41221 * C151911 + C23944 * C152258) * C101365) *
                C152068) *
               C3235 +
           (((C24690 * C152258 + (C24689 + C24688) * C151911) * C101365 +
             ((C26886 + C26885) * C152258 +
              (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
               C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
             ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C4241 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C152375 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152068 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C4241) *
              C152371 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C4241 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152068) *
              C152357 +
          ((((C43337 + C43338) * C152258 + (C42678 + C42677) * C151911) *
                C101365 +
            ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
              C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                 C152258 +
             (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
              C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C1795 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C1796 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C1797 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C151981 * C152331) *
              C152265 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C1796 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C1795 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C1797 +
           (((C25494 + C25493) * C152258 + (C25492 + C25491) * C151911) *
                C101365 +
            ((C42678 + C42677) * C152258 +
             (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
              C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152279 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152026) *
              C807 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152026 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152279) *
              C808 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C152279 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152026) *
              C809 +
          (((C24140 * C152258 + (C24152 + C24151) * C151911) * C101365 +
            ((C24689 + C24688) * C152258 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C2325 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C2326 +
            (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
             ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
                C152324) *
               C152279 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C2326 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C2325 -
            (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                 C152226 +
             (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
                C152324) *
               C152026) *
              C152265 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C2326 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C2325 -
            (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
             (C40692 * C151911 + C40684 * C152258) * C101365) *
                C152324) *
               C152279 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C2325 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C2326 +
            ((C44501 * C152258 + (C26886 + C26885) * C151911) * C101365 +
             ((C44512 + C44511) * C152258 +
              (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
               C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152280 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C1795 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152068 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C152280) *
              C1796 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C152280 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152068) *
              C1797 +
          ((((C43337 + C43338) * C152258 + (C42678 + C42677) * C151911) *
                C101365 +
            ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
              C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                 C152258 +
             (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
              C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152280 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152279 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152280) *
               C152279 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152280 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
             (C40691 * C152258 + C24347 * C151911) * C152226) *
                C152280 -
            (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
             (C41221 * C151911 + C23944 * C152258) * C101365) *
                C152068) *
               C152279 +
           (((C24690 * C152258 + (C24689 + C24688) * C151911) * C101365 +
             ((C26886 + C26885) * C152258 +
              (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
               C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
             ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C2936 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C2937 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C2938 -
           (((C44111 + C44112) * C151911 + (C44113 + C44114) * C152258) *
                C152226 +
            (C44772 * C151911 + (C44110 + C44109) * C152258) * C101365) *
               C152337) *
              C152279 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C2937 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C2936 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C2938 +
           (((C45044 + C45043) * C152258 + (C44512 + C44511) * C151911) *
                C101365 +
            ((C23274 * C9577 + C45035 + C45035 + C152296 * C9589 +
              C23276 * C9578 + C45036 + C45036 + C152198 * C9590) *
                 C152258 +
             (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
              C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                 C151911) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                 C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                    C152258 +
                (C23333 + C23334) * C151911) *
                   C101365 +
               ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                  C151981 * C151963 * C129 -
              ((C23944 * C151911 + C40689 * C152258) * C152226 +
               ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                   C101365) *
                  C151981 * C151963 * C130 +
              ((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
               (C40691 * C152258 + C24347 * C151911) * C152226) *
                  C151981 * C151963 * C131 -
              (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
               ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
                  C151981 * C151963 * C132 +
              ((C23345 * C152258 + (C23342 + C23341) * C151911) * C101365 +
               ((C24359 + C24358) * C152258 +
                (C23274 * C597 + C24352 + C24352 + C152296 * C621 +
                 C23276 * C1160 + C24353 + C24353 + C152198 * C1172) *
                    C151911) *
                   C152226) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                  C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                     C152258 +
                 (C23333 + C23334) * C151911) *
                    C101365 +
                ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                   C151981 * C152368 -
               ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
                ((C23634 + C23635) * C151911 +
                 (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                  C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                     C152258) *
                    C101365) *
                   C151981 * C152352 +
               (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                  C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                     C152258 +
                 (C23636 + C23637) * C151911) *
                    C101365 +
                ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                   C151981 * C152321) *
                  C347 +
              ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                    C101365 +
                (C41612 * C152258 + C24690 * C151911) * C152226) *
                   C151981 * C152352 -
               ((C23944 * C151911 + C40689 * C152258) * C152226 +
                ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                    C101365) *
                   C151981 * C152368 -
               (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
                ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                    C101365) *
                   C151981 * C152321) *
                  C348 +
              (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
                (C40691 * C152258 + C24347 * C151911) * C152226) *
                   C151981 * C152368 -
               (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
                ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                   C151981 * C152352 +
               ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
                ((C25804 + C25803) * C152258 +
                 (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
                  C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                     C151911) *
                    C152226) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152354 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152354 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C152369 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C152324) *
              C151963 * C348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C152369 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152354 +
           ((C23945 * C152258 + (C23943 + C23942) * C151911) * C101365 +
            ((C27102 + C27101) * C152258 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C1346 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152258) *
               C101365) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152258 +
            (C23636 + C23637) * C151911) *
               C101365 +
           ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
              C151981 * C1435 -
          (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152258) *
               C101365) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C152258 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C101365 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C152258 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152354 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C1345 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152354 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C152369 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C152324) *
              C1346 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C152369 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152354 +
           (((C42410 + C42409) * C152258 + (C42408 + C42407) * C151911) *
                C101365 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C152258 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C2326 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C2326 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C2325 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C2325 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C2326 +
           ((C23945 * C152258 + (C23943 + C23942) * C151911) * C101365 +
            ((C27102 + C27101) * C152258 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C2326 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C152368 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C2326 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C2325 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C152324) *
              C152352 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C2325 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C2326 +
           (((C42410 + C42409) * C152258 + (C42408 + C42407) * C151911) *
                C101365 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C152258 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C2556 -
          ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
           (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
              C2557 +
          (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
           ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
              C2558 -
          (((C44111 + C44112) * C151911 + (C44113 + C44114) * C152258) *
               C152226 +
           (C44772 * C151911 + (C44110 + C44109) * C152258) * C101365) *
              C2559 +
          (((C44114 + C44113) * C152258 + (C44112 + C44111) * C151911) *
               C101365 +
           ((C23274 * C17970 + C44093 + C44093 + C152296 * C17978 +
             C23276 * C18703 + C44094 + C44094 + C152198 * C18707) *
                C152258 +
            (C23274 * C17969 + C44095 + C44095 + C152296 * C17977 +
             C23276 * C18704 + C44096 + C44096 + C152198 * C18708) *
                C151911) *
               C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152280 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C1345 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152280) *
               C1346 +
           ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
               C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                  C152258 +
              (C23636 + C23637) * C151911) *
                 C101365 +
             ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                C152280 -
            (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                 C152226 +
             (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152280) *
               C1345 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152280 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C1346 +
           (((C43065 * C152258 + (C25804 + C25803) * C151911) * C101365 +
             ((C42408 + C42407) * C152258 +
              (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
               C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
             ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                 C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152280 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C151963 * C807 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152068 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C152280) *
              C151963 * C808 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C152280 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152068) *
              C151963 * C809 +
          (((C24347 * C152258 + (C24359 + C24358) * C151911) * C101365 +
            ((C23943 + C23942) * C152258 +
             (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
              C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C2936 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C2937 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C2938 -
           (((C44111 + C44112) * C151911 + (C44113 + C44114) * C152258) *
                C152226 +
            (C44772 * C151911 + (C44110 + C44109) * C152258) * C101365) *
               C152337) *
              C151963 * C152265 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C2937 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C2936 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C2938 +
           ((C44771 * C152258 + (C27102 + C27101) * C151911) * C101365 +
            ((C44112 + C44111) * C152258 +
             (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
              C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                 C151911) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152368 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C347 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152352 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152368 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C152368 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152352 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C151963 * C129 -
          ((C23944 * C151911 + C40689 * C152258) * C152226 +
           ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
               C101365) *
              C151981 * C151963 * C130 +
          ((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
           (C40691 * C152258 + C24347 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
           ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
              C151981 * C151963 * C132 +
          ((C23345 * C152258 + (C23342 + C23341) * C151911) * C101365 +
           ((C24359 + C24358) * C152258 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C1346 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152258) *
               C101365) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152258 +
            (C23636 + C23637) * C151911) *
               C101365 +
           ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
              C151981 * C1435 -
          (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152258) *
               C101365) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C152258 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C101365 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C152258 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C2326 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C2326 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C2325 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C2325 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C2326 +
           ((C23945 * C152258 + (C23943 + C23942) * C151911) * C101365 +
            ((C27102 + C27101) * C152258 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C2325 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C2326 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C152368 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C2326 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C2325 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C152324) *
              C152352 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C2325 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C2326 +
           (((C42410 + C42409) * C152258 + (C42408 + C42407) * C151911) *
                C101365 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C152258 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C4241 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152279 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C4241) *
               C152026) *
              C151940 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C4241) *
               C152279 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C4241 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
             (C40691 * C152258 + C24347 * C151911) * C152226) *
                C4241 -
            (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
             (C41221 * C151911 + C23944 * C152258) * C101365) *
                C152068) *
               C152279 +
           (((C24690 * C152258 + (C24689 + C24688) * C151911) * C101365 +
             ((C26886 + C26885) * C152258 +
              (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
               C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
             ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                C4241) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152064 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152071 +
            (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
             ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
                C4913) *
               C152279 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152071 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152064 -
            (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                 C152226 +
             (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
                C4913) *
               C152026) *
              C3375 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152071 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152064 -
            (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
             (C40692 * C151911 + C40684 * C152258) * C101365) *
                C4913) *
               C152279 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152064 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152071 +
            ((C44501 * C152258 + (C26886 + C26885) * C151911) * C101365 +
             ((C44512 + C44511) * C152258 +
              (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
               C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                  C151911) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C4241 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152368 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C4241) *
               C152352 +
           ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
               C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                  C152258 +
              (C23636 + C23637) * C151911) *
                 C101365 +
             ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                C4241 -
            (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                 C152226 +
             (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C4241) *
               C152368 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C4241 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152352 +
           (((C43065 * C152258 + (C25804 + C25803) * C151911) * C101365 +
             ((C42408 + C42407) * C152258 +
              (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
               C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
             ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                 C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C4241 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152068 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C4241) *
              C151963 * C152367 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C4241 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C24347 * C152258 + (C24359 + C24358) * C151911) * C101365 +
            ((C23943 + C23942) * C152258 +
             (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
              C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152376 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152373 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152360 -
           (((C44111 + C44112) * C151911 + (C44113 + C44114) * C152258) *
                C152226 +
            (C44772 * C151911 + (C44110 + C44109) * C152258) * C101365) *
               C152337) *
              C151963 * C3375 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152373 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C152376 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C152360 +
           ((C44771 * C152258 + (C27102 + C27101) * C151911) * C101365 +
            ((C44112 + C44111) * C152258 +
             (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
              C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                 C151911) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152064 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152071 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152071 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C152064 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C4913) *
              C151963 * C151949 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C152064 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152071 +
           ((C23945 * C152258 + (C23943 + C23942) * C151911) * C101365 +
            ((C27102 + C27101) * C152258 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C4913) *
              C151963 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C4241 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152068 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C4241) *
              C151963 * C152367 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C4241 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C24347 * C152258 + (C24359 + C24358) * C151911) * C101365 +
            ((C23943 + C23942) * C152258 +
             (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
              C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C4241 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152368 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C4241) *
               C152352 +
           ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
               C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                  C152258 +
              (C23636 + C23637) * C151911) *
                 C101365 +
             ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                C4241 -
            (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                 C152226 +
             (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C4241) *
               C152368 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C4241 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152352 +
           (((C43065 * C152258 + (C25804 + C25803) * C151911) * C101365 +
             ((C42408 + C42407) * C152258 +
              (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
               C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
             ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                 C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152279 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152026) *
              C807 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152026 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152279) *
              C808 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C152279 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152026) *
              C809 +
          (((C24140 * C152258 + (C24152 + C24151) * C151911) * C101365 +
            ((C24689 + C24688) * C152258 +
             (C23274 * C1159 + C24670 + C24670 + C152296 * C1171 +
              C23276 * C2014 + C24671 + C24671 + C152198 * C2016) *
                 C151911) *
                C152226) *
               C151981 * C152026 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C1795 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C1796 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C1797 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C151981 * C152331) *
              C152265 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C1796 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C1795 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C1797 +
           (((C25494 + C25493) * C152258 + (C25492 + C25491) * C151911) *
                C101365 +
            ((C42678 + C42677) * C152258 +
             (C23274 * C2165 + C26005 + C26005 + C152296 * C2173 +
              C23276 * C8790 + C26006 + C26006 + C152198 * C8792) *
                 C151911) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152280 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C152279 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152280) *
               C152279 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152280 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
             (C40691 * C152258 + C24347 * C151911) * C152226) *
                C152280 -
            (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
             (C41221 * C151911 + C23944 * C152258) * C101365) *
                C152068) *
               C152279 +
           (((C24690 * C152258 + (C24689 + C24688) * C151911) * C101365 +
             ((C26886 + C26885) * C152258 +
              (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
               C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
             ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152280 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C1795 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152068 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C152280) *
              C1796 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C152280 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152068) *
              C1797 +
          ((((C43337 + C43338) * C152258 + (C42678 + C42677) * C151911) *
                C101365 +
            ((C23274 * C8250 + C43329 + C43329 + C152296 * C8262 +
              C23276 * C8253 + C43330 + C43330 + C152198 * C8265) *
                 C152258 +
             (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
              C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                 C151911) *
                C152226) *
               C152068 -
           (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
                C152226 +
            ((C25493 + C25494) * C151911 +
             (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
              C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                 C152258) *
                C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152368 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C347 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152352 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152368 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C152368 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152352 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C151963 * C129 -
          ((C23944 * C151911 + C40689 * C152258) * C152226 +
           ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
               C101365) *
              C151981 * C151963 * C130 +
          ((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
           (C40691 * C152258 + C24347 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
           ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
              C151981 * C151963 * C132 +
          ((C23345 * C152258 + (C23342 + C23341) * C151911) * C101365 +
           ((C24359 + C24358) * C152258 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152354 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152354 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C152369 -
           (((C27101 + C27102) * C151911 + C44772 * C152258) * C152226 +
            (C40692 * C151911 + C40684 * C152258) * C101365) *
               C152324) *
              C151963 * C348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C152369 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152354 +
           ((C23945 * C152258 + (C23943 + C23942) * C151911) * C101365 +
            ((C27102 + C27101) * C152258 +
             (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
              C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                 C151911) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C1346 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152258) *
               C101365) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152258 +
            (C23636 + C23637) * C151911) *
               C101365 +
           ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
              C151981 * C1435 -
          (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152258) *
               C101365) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C152258 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C101365 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C152258 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152369 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152354 +
           (((C40704 + C40703) * C152258 + C40690 * C151911) * C101365 +
            ((C44109 + C44110) * C152258 + C44771 * C151911) * C152226) *
               C152324) *
              C1345 +
          ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
            ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
               C152354 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C152369 -
           (((C44511 + C44512) * C151911 + (C45043 + C45044) * C152258) *
                C152226 +
            (C44506 * C151911 + (C42404 + C42403) * C152258) * C101365) *
               C152324) *
              C1346 +
          ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C152369 -
           (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                C152226 +
            (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
               C152354 +
           (((C42410 + C42409) * C152258 + (C42408 + C42407) * C151911) *
                C101365 +
            ((C23274 * C9576 + C42383 + C42383 + C152296 * C9588 +
              C23276 * C10325 + C42384 + C42384 + C152198 * C10329) *
                 C152258 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151911) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C152280 -
           ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
            (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
               C152068) *
              C151963 * C807 +
          (((C40683 * C152258 + C40691 * C151911) * C101365 +
            (C40690 * C152258 + C23945 * C151911) * C152226) *
               C152068 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C152280) *
              C151963 * C808 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C152280 -
           (((C23942 + C23943) * C151911 + C40692 * C152258) * C152226 +
            (C41221 * C151911 + C23944 * C152258) * C101365) *
               C152068) *
              C151963 * C809 +
          (((C24347 * C152258 + (C24359 + C24358) * C151911) * C101365 +
            ((C23943 + C23942) * C152258 +
             (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
              C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                 C151911) *
                C152226) *
               C152068 -
           (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
            ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
               C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                  C152258 +
              (C23333 + C23334) * C151911) *
                 C101365 +
             ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
                C152280 -
            ((C40684 * C151911 + (C40703 + C40704) * C152258) * C152226 +
             (C40689 * C151911 + (C40702 + C40701) * C152258) * C101365) *
                C152068) *
               C1345 +
           ((((C41619 + C41620) * C152258 + C41612 * C151911) * C101365 +
             ((C42403 + C42404) * C152258 + C44501 * C151911) * C152226) *
                C152068 -
            ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
             ((C23634 + C23635) * C151911 +
              (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
               C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                  C152258) *
                 C101365) *
                C152280) *
               C1346 +
           ((((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
               C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                  C152258 +
              (C23636 + C23637) * C151911) *
                 C101365 +
             ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
                C152280 -
            (((C42407 + C42408) * C151911 + (C42409 + C42410) * C152258) *
                 C152226 +
             (C43066 * C151911 + (C42406 + C42405) * C152258) * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C40683 * C152258 + C40691 * C151911) * C101365 +
             (C40690 * C152258 + C23945 * C151911) * C152226) *
                C152068 -
            ((C23944 * C151911 + C40689 * C152258) * C152226 +
             ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                 C101365) *
                C152280) *
               C1345 +
           ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                 C101365 +
             (C41612 * C152258 + C24690 * C151911) * C152226) *
                C152280 -
            (((C26885 + C26886) * C151911 + C44506 * C152258) * C152226 +
             (C41614 * C151911 + C41613 * C152258) * C101365) *
                C152068) *
               C1346 +
           (((C43065 * C152258 + (C25804 + C25803) * C151911) * C101365 +
             ((C42408 + C42407) * C152258 +
              (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
               C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                  C151911) *
                 C152226) *
                C152068 -
            (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
             ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                 C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C151963 * C129 -
          ((C23944 * C151911 + C40689 * C152258) * C152226 +
           ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
               C101365) *
              C151981 * C151963 * C130 +
          ((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
           (C40691 * C152258 + C24347 * C151911) * C152226) *
              C151981 * C151963 * C131 -
          (((C24358 + C24359) * C151911 + C41221 * C152258) * C152226 +
           ((C23340 + C23339) * C151911 + C23344 * C152258) * C101365) *
              C151981 * C151963 * C132 +
          ((C23345 * C152258 + (C23342 + C23341) * C151911) * C101365 +
           ((C24359 + C24358) * C152258 +
            (C23274 * C597 + C24352 + C24352 + C152296 * C621 + C23276 * C1160 +
             C24353 + C24353 + C152198 * C1172) *
                C151911) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C152368 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C347 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C152352 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C152368 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C152368 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C152352 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C152258 +
             (C23333 + C23334) * C151911) *
                C101365 +
            ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
               C151981 * C1345 -
           ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
            ((C23634 + C23635) * C151911 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C152258) *
                C101365) *
               C151981 * C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C152258 +
             (C23636 + C23637) * C151911) *
                C101365 +
            ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
               C151981 * C152321) *
              C152365 +
          ((((C23635 + C23634) * C152258 + (C23633 + C23632) * C151911) *
                C101365 +
            (C41612 * C152258 + C24690 * C151911) * C152226) *
               C151981 * C1346 -
           ((C23944 * C151911 + C40689 * C152258) * C152226 +
            ((C23336 + C23335) * C151911 + (C23334 + C23333) * C152258) *
                C101365) *
               C151981 * C1345 -
           (((C25803 + C25804) * C151911 + C43066 * C152258) * C152226 +
            ((C23639 + C23638) * C151911 + (C23637 + C23636) * C152258) *
                C101365) *
               C151981 * C152321) *
              C152348 +
          (((C23343 * C152258 + (C23338 + C23337) * C151911) * C101365 +
            (C40691 * C152258 + C24347 * C151911) * C152226) *
               C151981 * C1345 -
           (((C24688 + C24689) * C151911 + C41614 * C152258) * C152226 +
            ((C23641 + C23640) * C151911 + C23644 * C152258) * C101365) *
               C151981 * C1346 +
           ((C23645 * C152258 + (C23643 + C23642) * C151911) * C101365 +
            ((C25804 + C25803) * C152258 +
             (C23274 * C1621 + C25793 + C25793 + C152296 * C1645 +
              C23276 * C2166 + C25794 + C25794 + C152198 * C2174) *
                 C151911) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C152258 +
            (C23333 + C23334) * C151911) *
               C101365 +
           ((C40701 + C40702) * C152258 + C40683 * C151911) * C152226) *
              C151981 * C1433 -
          ((C41613 * C151911 + (C41620 + C41619) * C152258) * C152226 +
           ((C23634 + C23635) * C151911 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C152258) *
               C101365) *
              C151981 * C1434 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C152258 +
            (C23636 + C23637) * C151911) *
               C101365 +
           ((C42405 + C42406) * C152258 + C43065 * C151911) * C152226) *
              C151981 * C1435 -
          (((C42677 + C42678) * C151911 + (C43338 + C43337) * C152258) *
               C152226 +
           ((C25493 + C25494) * C151911 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C152258) *
               C101365) *
              C151981 * C1436 +
          (((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
             C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
                C152258 +
            (C23274 * C1444 + C25039 + C25039 + C152296 * C1460 +
             C23276 * C8007 + C25040 + C25040 + C152198 * C8015) *
                C151911) *
               C101365 +
           ((C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
             C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
                C152258 +
            (C23274 * C8251 + C42075 + C42075 + C152296 * C8263 +
             C23276 * C9006 + C42076 + C42076 + C152198 * C9010) *
                C151911) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C152022 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152029 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C151981 * C3719) *
              C151940 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C145666 * C134210) *
               C151981 * C152029 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152022 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C3719) *
              C151949 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C152022 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152029 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152280 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152022 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152280) *
               C152029 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C151906 * C152363 +
             (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
                C152280 -
            ((C144110 + C144111) * C151906 * C134210 +
             (C42409 + C42410) * C151906 * C152364 +
             (C42406 + C42405) * C151906 * C152363) *
                C152068) *
               C3719) *
              C3375 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152280) *
               C152022 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C152280 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152029 +
           ((C43065 * C151906 * C152363 +
             (C42408 + C42407) * C151906 * C152364 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151906 * C134210) *
                C152068 -
            ((C42407 + C42408) * C151906 * C134210 +
             C43066 * C151906 * C152364 +
             (C23637 + C23636) * C151906 * C152363) *
                C152280) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C152375 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152371 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C151981 * C152357 -
           ((C144801 + C144800) * C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C151981 * C152331) *
              C3375 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C145666 * C134210) *
               C151981 * C152371 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152375 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152357 +
           ((C25494 + C25493) * C151906 * C152363 +
            (C42678 + C42677) * C151906 * C152364 +
            (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
             C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                C151906 * C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C3235 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152026) *
              C152374 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C145666 * C134210) *
               C151981 * C152026 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C3235) *
              C152367 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C3235 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152026) *
              C152350 +
          ((C24140 * C151906 * C152363 + (C24689 + C24688) * C151906 * C152364 +
            (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
             C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                C151906 * C134210) *
               C151981 * C152026 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152369 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152354 +
            (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
             C145369 * C134210) *
                C152324) *
               C3235 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152354 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152369 -
            ((C146068 + C146069) * C151906 * C134210 +
             (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
                C152324) *
               C152026) *
              C3375 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152354 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152369 -
            ((C44111 + C44112) * C151906 * C134210 +
             C44772 * C151906 * C152364 + C142855 * C152363) *
                C152324) *
               C3235 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C152369 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152354 +
            (C145666 * C152363 + (C44512 + C44511) * C151906 * C152364 +
             (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
              C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                 C151906 * C134210) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152280 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C3235 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152280) *
               C152026) *
              C151940 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152280) *
               C3235 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C152280 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152026) *
              C151949 +
          (((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
             C142856 * C134210) *
                C152280 -
            ((C27101 + C27102) * C151906 * C134210 +
             C40692 * C151906 * C152364 + C23944 * C151906 * C152363) *
                C152068) *
               C3235 +
           ((C24690 * C151906 * C152363 +
             (C26886 + C26885) * C151906 * C152364 +
             (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
              C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                 C151906 * C134210) *
                C152068 -
            ((C26885 + C26886) * C151906 * C134210 +
             C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                C152280) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C3235 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152026) *
              C152374 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C145666 * C134210) *
               C151981 * C152026 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C3235) *
              C152367 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C3235 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152026) *
              C152350 +
          ((C24140 * C151906 * C152363 + (C24689 + C24688) * C151906 * C152364 +
            (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
             C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                C151906 * C134210) *
               C151981 * C152026 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C152375 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152371 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C151981 * C152357 -
           ((C144801 + C144800) * C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C151981 * C152331) *
              C3375 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C145666 * C134210) *
               C151981 * C152371 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152375 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152357 +
           ((C25494 + C25493) * C151906 * C152363 +
            (C42678 + C42677) * C151906 * C152364 +
            (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
             C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                C151906 * C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C4241 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152022 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C4241) *
               C152029 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C151906 * C152363 +
             (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
                C4241 -
            ((C144110 + C144111) * C151906 * C134210 +
             (C42409 + C42410) * C151906 * C152364 +
             (C42406 + C42405) * C151906 * C152363) *
                C152068) *
               C3719) *
              C152265 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C4241) *
               C152022 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C4241 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152029 +
           ((C43065 * C151906 * C152363 +
             (C42408 + C42407) * C151906 * C152364 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151906 * C134210) *
                C152068 -
            ((C42407 + C42408) * C151906 * C134210 +
             C43066 * C151906 * C152364 +
             (C23637 + C23636) * C151906 * C152363) *
                C4241) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152064 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152071 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            C145369 * C134210) *
               C4913) *
              C152022 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
               C152071 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C152064 -
           ((C146068 + C146069) * C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C4913) *
              C152029 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C152064 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152071 +
           (C144105 * C152363 + (C144111 + C144110) * C151906 * C152364 +
            (C23274 * C9578 + C144102 + C144102 + C152296 * C9590 +
             C23276 * C61693 + C144103 + C144103 + C152198 * C61695) *
                C151906 * C134210) *
               C4913) *
              C3719) *
         C151935) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C4241 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C152375 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
               C152068 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C4241) *
              C152371 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C4241 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152068) *
              C152357 +
          (((C43337 + C43338) * C151906 * C152363 +
            (C144800 + C144801) * C151906 * C152364 +
            (C23274 * C10325 + C144794 + C144794 + C152296 * C10329 +
             C23276 * C62166 + C144795 + C144795 + C152198 * C62168) *
                C151906 * C134210) *
               C152068 -
           ((C144801 + C144800) * C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C4241 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C3235 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C4241) *
               C152026) *
              C152365 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C4241) *
               C3235 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C4241 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152026) *
              C152348 +
          (((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
             C142856 * C134210) *
                C4241 -
            ((C27101 + C27102) * C151906 * C134210 +
             C40692 * C151906 * C152364 + C23944 * C151906 * C152363) *
                C152068) *
               C3235 +
           ((C24690 * C151906 * C152363 +
             (C26886 + C26885) * C151906 * C152364 +
             (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
              C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                 C151906 * C134210) *
                C152068 -
            ((C26885 + C26886) * C151906 * C134210 +
             C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152376 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152373 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            C145369 * C134210) *
               C152360 -
           ((C145374 + C145375) * C151906 * C134210 +
            (C44113 + C44114) * C151906 * C152364 + C145368 * C152363) *
               C152337) *
              C3235 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
               C152373 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C152376 -
           ((C146068 + C146069) * C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C152360 +
           (C146063 * C152363 + (C146069 + C146068) * C151906 * C152364 +
            (C23274 * C18703 + C146061 + C146061 + C152296 * C18707 +
             C23276 * C69051 + C146062 + C146062 + C152198 * C69053) *
                C151906 * C134210) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152064 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152071 +
            (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
             C145369 * C134210) *
                C4913) *
               C3235 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152071 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152064 -
            ((C146068 + C146069) * C151906 * C134210 +
             (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
                C4913) *
               C152026) *
              C152265 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152071 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152064 -
            ((C44111 + C44112) * C151906 * C134210 +
             C44772 * C151906 * C152364 + C142855 * C152363) *
                C4913) *
               C3235 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C152064 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152071 +
            (C145666 * C152363 + (C44512 + C44511) * C151906 * C152364 +
             (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
              C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                 C151906 * C134210) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C4241 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C3235 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C4241) *
               C152026) *
              C152365 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C4241) *
               C3235 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C4241 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152026) *
              C152348 +
          (((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
             C142856 * C134210) *
                C4241 -
            ((C27101 + C27102) * C151906 * C134210 +
             C40692 * C151906 * C152364 + C23944 * C151906 * C152363) *
                C152068) *
               C3235 +
           ((C24690 * C151906 * C152363 +
             (C26886 + C26885) * C151906 * C152364 +
             (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
              C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                 C151906 * C134210) *
                C152068 -
            ((C26885 + C26886) * C151906 * C134210 +
             C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C4241 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C152375 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
               C152068 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C4241) *
              C152371 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C4241 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152068) *
              C152357 +
          (((C43337 + C43338) * C151906 * C152363 +
            (C144800 + C144801) * C151906 * C152364 +
            (C23274 * C10325 + C144794 + C144794 + C152296 * C10329 +
             C23276 * C62166 + C144795 + C144795 + C152198 * C62168) *
                C151906 * C134210) *
               C152068 -
           ((C144801 + C144800) * C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C1795 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C1796 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C151981 * C1797 -
           ((C23276 * C8253 + C43330 + C43330 + C152198 * C8265 +
             C23274 * C8250 + C43329 + C43329 + C152296 * C8262) *
                C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C151981 * C152331) *
              C152265 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C1796 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C1795 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C1797 +
           ((C25494 + C25493) * C151906 * C152363 +
            (C42678 + C42677) * C151906 * C152364 +
            (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
             C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                C151906 * C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C152279 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152026) *
              C807 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C152026 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152279) *
              C808 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C152279 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152026) *
              C809 +
          ((C24140 * C151906 * C152363 + (C24689 + C24688) * C151906 * C152364 +
            (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
             C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                C151906 * C134210) *
               C151981 * C152026 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C2325 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C2326 +
            (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
             C145369 * C134210) *
                C152324) *
               C152279 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 +
             (C45044 + C45043) * C151906 * C134210) *
                C2326 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C2325 -
            ((C23276 * C9578 + C45036 + C45036 + C152198 * C9590 +
              C23274 * C9577 + C45035 + C45035 + C152296 * C9589) *
                 C151906 * C134210 +
             (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
                C152324) *
               C152026) *
              C152265 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C44771 * C151906 * C134210) *
                C2326 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C2325 -
            ((C44111 + C44112) * C151906 * C134210 +
             C44772 * C151906 * C152364 + C142855 * C152363) *
                C152324) *
               C152279 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C2325 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C2326 +
            (C145666 * C152363 + (C44512 + C44511) * C151906 * C152364 +
             (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
              C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                 C151906 * C134210) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152280 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C1795 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 +
            (C45044 + C45043) * C151906 * C134210) *
               C152068 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C152280) *
              C1796 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C152280 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152068) *
              C1797 +
          (((C43337 + C43338) * C151906 * C152363 +
            (C144800 + C144801) * C151906 * C152364 +
            (C23274 * C10325 + C144794 + C144794 + C152296 * C10329 +
             C23276 * C62166 + C144795 + C144795 + C152198 * C62168) *
                C151906 * C134210) *
               C152068 -
           ((C144801 + C144800) * C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152280 -
            ((C44110 + C44109) * C151906 * C134210 +
             (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152279 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 +
             (C45044 + C45043) * C151906 * C134210) *
                C152068 -
            ((C42404 + C42403) * C151906 * C134210 +
             (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152280) *
               C152026) *
              C347 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C44771 * C151906 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152280) *
               C152279 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C44501 * C151906 * C134210) *
                C152280 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152026) *
              C348 +
          (((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
             C142856 * C134210) *
                C152280 -
            ((C27101 + C27102) * C151906 * C134210 +
             C40692 * C151906 * C152364 + C23944 * C151906 * C152363) *
                C152068) *
               C152279 +
           ((C24690 * C151906 * C152363 +
             (C26886 + C26885) * C151906 * C152364 +
             (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
              C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                 C151906 * C134210) *
                C152068 -
            ((C26885 + C26886) * C151906 * C134210 +
             C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C2936 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C2937 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            C145369 * C134210) *
               C2938 -
           ((C145374 + C145375) * C151906 * C134210 +
            (C44113 + C44114) * C151906 * C152364 + C145368 * C152363) *
               C152337) *
              C152279 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
               C2937 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C2936 -
           ((C146068 + C146069) * C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C2938 +
           (C146063 * C152363 + (C146069 + C146068) * C151906 * C152364 +
            (C23274 * C18703 + C146061 + C146061 + C152296 * C18707 +
             C23276 * C69051 + C146062 + C146062 + C152198 * C69053) *
                C151906 * C134210) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                   C151906 * C152363 +
               (C40701 + C40702) * C151906 * C152364 +
               (C40704 + C40703) * C151906 * C134210) *
                  C151981 * C151963 * C129 -
              (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
               (C23334 + C23333) * C151906 * C152363) *
                  C151981 * C151963 * C130 +
              (C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
               C23945 * C151906 * C134210) *
                  C151981 * C151963 * C131 -
              ((C23942 + C23943) * C151906 * C134210 +
               C41221 * C151906 * C152364 + C23344 * C151906 * C152363) *
                  C151981 * C151963 * C132 +
              (C23345 * C151906 * C152363 +
               (C24359 + C24358) * C151906 * C152364 +
               (C23274 * C596 + C23906 + C23906 + C152296 * C620 +
                C23276 * C2787 + C23907 + C23907 + C152198 * C2789) *
                   C151906 * C134210) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 +
                 C23276 * C353 + C23280 + C23280 + C152198 * C377) *
                    C151906 * C152363 +
                (C40701 + C40702) * C151906 * C152364 +
                (C40704 + C40703) * C151906 * C134210) *
                   C151981 * C152368 -
               ((C42404 + C42403) * C151906 * C134210 +
                (C41620 + C41619) * C151906 * C152364 +
                (C23276 * C354 + C23576 + C23576 + C152198 * C378 +
                 C23274 * C353 + C23577 + C23577 + C152296 * C377) *
                    C151906 * C152363) *
                   C151981 * C152352 +
               ((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
                 C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                    C151906 * C152363 +
                (C42405 + C42406) * C151906 * C152364 +
                (C42410 + C42409) * C151906 * C134210) *
                   C151981 * C152321) *
                  C347 +
              (((C23635 + C23634) * C151906 * C152363 +
                C41612 * C151906 * C152364 + C44501 * C151906 * C134210) *
                   C151981 * C152352 -
               (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
                (C23334 + C23333) * C151906 * C152363) *
                   C151981 * C152368 -
               ((C42407 + C42408) * C151906 * C134210 +
                C43066 * C151906 * C152364 +
                (C23637 + C23636) * C151906 * C152363) *
                   C151981 * C152321) *
                  C348 +
              ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
                C23945 * C151906 * C134210) *
                   C151981 * C152368 -
               ((C26885 + C26886) * C151906 * C134210 +
                C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                   C151981 * C152352 +
               (C23645 * C151906 * C152363 +
                (C25804 + C25803) * C151906 * C152364 +
                (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
                 C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                    C151906 * C134210) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152369 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152354 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C151963 * C347 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C44771 * C151906 * C134210) *
               C152354 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C152369 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C152324) *
              C151963 * C348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C152369 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152354 +
           (C142856 * C152363 + (C27102 + C27101) * C151906 * C152364 +
            (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
             C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                C151906 * C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C1345 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C1346 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C1345 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C152348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C1345 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C1346 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
              C151981 * C1433 -
          ((C42404 + C42403) * C151906 * C134210 +
           (C41620 + C41619) * C151906 * C152364 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C151906 * C152363) *
              C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C151906 * C152363 +
           (C42405 + C42406) * C151906 * C152364 +
           (C42410 + C42409) * C151906 * C134210) *
              C151981 * C1435 -
          ((C23276 * C8253 + C43330 + C43330 + C152198 * C8265 +
            C23274 * C8250 + C43329 + C43329 + C152296 * C8262) *
               C151906 * C134210 +
           (C43338 + C43337) * C151906 * C152364 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C151906 * C152363) *
              C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C151906 * C152363 +
           (C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
            C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
               C151906 * C152364 +
           (C23274 * C8253 + C143876 + C143876 + C152296 * C8265 +
            C23276 * C60835 + C143877 + C143877 + C152198 * C60837) *
               C151906 * C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152369 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152354 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C1345 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 +
            (C45044 + C45043) * C151906 * C134210) *
               C152354 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C152369 -
           ((C23276 * C9578 + C45036 + C45036 + C152198 * C9590 +
             C23274 * C9577 + C45035 + C45035 + C152296 * C9589) *
                C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C152324) *
              C1346 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C152369 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152354 +
           (C144105 * C152363 + (C144111 + C144110) * C151906 * C152364 +
            (C23274 * C9578 + C144102 + C144102 + C152296 * C9590 +
             C23276 * C61693 + C144103 + C144103 + C152198 * C61695) *
                C151906 * C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C2325 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C2326 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C151963 * C152365 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C44771 * C151906 * C134210) *
               C2326 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C2325 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C152324) *
              C151963 * C152348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C2325 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C2326 +
           (C142856 * C152363 + (C27102 + C27101) * C151906 * C152364 +
            (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
             C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                C151906 * C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C2325 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C2326 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C152368 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 +
            (C45044 + C45043) * C151906 * C134210) *
               C2326 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C2325 -
           ((C23276 * C9578 + C45036 + C45036 + C152198 * C9590 +
             C23274 * C9577 + C45035 + C45035 + C152296 * C9589) *
                C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C152324) *
              C152352 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C2325 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C2326 +
           (C144105 * C152363 + (C144111 + C144110) * C151906 * C152364 +
            (C23274 * C9578 + C144102 + C144102 + C152296 * C9590 +
             C23276 * C61693 + C144103 + C144103 + C152198 * C61695) *
                C151906 * C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
              C2556 -
          (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
           (C40702 + C40701) * C151906 * C152363) *
              C2557 +
          (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
           C145369 * C134210) *
              C2558 -
          ((C145374 + C145375) * C151906 * C134210 +
           (C44113 + C44114) * C151906 * C152364 + C145368 * C152363) *
              C2559 +
          (C145369 * C152363 + (C145375 + C145374) * C151906 * C152364 +
           (C23274 * C17971 + C145366 + C145366 + C152296 * C17979 +
            C23276 * C68314 + C145367 + C145367 + C152198 * C68316) *
               C151906 * C134210) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152280 -
            ((C44110 + C44109) * C151906 * C134210 +
             (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C1345 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 +
             (C45044 + C45043) * C151906 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152280) *
               C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C151906 * C152363 +
             (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
                C152280 -
            ((C144110 + C144111) * C151906 * C134210 +
             (C42409 + C42410) * C151906 * C152364 +
             (C42406 + C42405) * C151906 * C152363) *
                C152068) *
               C152321) *
              C152265 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C44771 * C151906 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152280) *
               C1345 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C44501 * C151906 * C134210) *
                C152280 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C1346 +
           ((C43065 * C151906 * C152363 +
             (C42408 + C42407) * C151906 * C152364 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151906 * C134210) *
                C152068 -
            ((C42407 + C42408) * C151906 * C134210 +
             C43066 * C151906 * C152364 +
             (C23637 + C23636) * C151906 * C152363) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152280 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C151963 * C807 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C44771 * C151906 * C134210) *
               C152068 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C152280) *
              C151963 * C808 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C152280 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152068) *
              C151963 * C809 +
          ((C24347 * C151906 * C152363 + (C23943 + C23942) * C151906 * C152364 +
            (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
             C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                C151906 * C134210) *
               C152068 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C2936 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C2937 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            C145369 * C134210) *
               C2938 -
           ((C145374 + C145375) * C151906 * C134210 +
            (C44113 + C44114) * C151906 * C152364 + C145368 * C152363) *
               C152337) *
              C151963 * C152265 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C145861 * C134210) *
               C2937 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C2936 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C2938 +
           (C145861 * C152363 + (C44112 + C44111) * C151906 * C152364 +
            (C23274 * C17969 + C44095 + C44095 + C152296 * C17977 +
             C23276 * C18704 + C44096 + C44096 + C152198 * C18708) *
                C151906 * C134210) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 +
            (C40704 + C40703) * C151906 * C134210) *
               C151981 * C152368 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152352 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C347 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C152352 -
           (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152368 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C23945 * C151906 * C134210) *
               C151981 * C152368 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152352 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 +
           (C40704 + C40703) * C151906 * C134210) *
              C151981 * C151963 * C129 -
          (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
           (C23334 + C23333) * C151906 * C152363) *
              C151981 * C151963 * C130 +
          (C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
           C23945 * C151906 * C134210) *
              C151981 * C151963 * C131 -
          ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
           C23344 * C151906 * C152363) *
              C151981 * C151963 * C132 +
          (C23345 * C151906 * C152363 + (C24359 + C24358) * C151906 * C152364 +
           (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
            C23907 + C23907 + C152198 * C2789) *
               C151906 * C134210) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C1345 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C1346 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C1345 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C152348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C1345 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C1346 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
              C151981 * C1433 -
          ((C42404 + C42403) * C151906 * C134210 +
           (C41620 + C41619) * C151906 * C152364 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C151906 * C152363) *
              C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C151906 * C152363 +
           (C42405 + C42406) * C151906 * C152364 +
           (C42410 + C42409) * C151906 * C134210) *
              C151981 * C1435 -
          ((C23276 * C8253 + C43330 + C43330 + C152198 * C8265 +
            C23274 * C8250 + C43329 + C43329 + C152296 * C8262) *
               C151906 * C134210 +
           (C43338 + C43337) * C151906 * C152364 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C151906 * C152363) *
              C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C151906 * C152363 +
           (C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
            C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
               C151906 * C152364 +
           (C23274 * C8253 + C143876 + C143876 + C152296 * C8265 +
            C23276 * C60835 + C143877 + C143877 + C152198 * C60837) *
               C151906 * C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C2325 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C2326 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C151963 * C152365 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C44771 * C151906 * C134210) *
               C2326 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C2325 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C152324) *
              C151963 * C152348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C2325 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C2326 +
           (C142856 * C152363 + (C27102 + C27101) * C151906 * C152364 +
            (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
             C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                C151906 * C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C2325 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C2326 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C152368 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 +
            (C45044 + C45043) * C151906 * C134210) *
               C2326 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C2325 -
           ((C23276 * C9578 + C45036 + C45036 + C152198 * C9590 +
             C23274 * C9577 + C45035 + C45035 + C152296 * C9589) *
                C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C152324) *
              C152352 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C2325 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C2326 +
           (C144105 * C152363 + (C144111 + C144110) * C151906 * C152364 +
            (C23274 * C9578 + C144102 + C144102 + C152296 * C9590 +
             C23276 * C61693 + C144103 + C144103 + C152198 * C61695) *
                C151906 * C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C4241 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152279 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C4241) *
               C152026) *
              C151940 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C4241) *
               C152279 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C4241 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152026) *
              C151949 +
          (((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
             C142856 * C134210) *
                C4241 -
            ((C27101 + C27102) * C151906 * C134210 +
             C40692 * C151906 * C152364 + C23944 * C151906 * C152363) *
                C152068) *
               C152279 +
           ((C24690 * C151906 * C152363 +
             (C26886 + C26885) * C151906 * C152364 +
             (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
              C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                 C151906 * C134210) *
                C152068 -
            ((C26885 + C26886) * C151906 * C134210 +
             C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                C4241) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152064 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152071 +
            (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
             C145369 * C134210) *
                C4913) *
               C152279 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152071 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152064 -
            ((C146068 + C146069) * C151906 * C134210 +
             (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
                C4913) *
               C152026) *
              C3375 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152071 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152064 -
            ((C44111 + C44112) * C151906 * C134210 +
             C44772 * C151906 * C152364 + C142855 * C152363) *
                C4913) *
               C152279 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C152064 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152071 +
            (C145666 * C152363 + (C44512 + C44511) * C151906 * C152364 +
             (C23274 * C9579 + C45037 + C45037 + C152296 * C9591 +
              C23276 * C9580 + C45038 + C45038 + C152198 * C9592) *
                 C151906 * C134210) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C4241 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152368 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C4241) *
               C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C151906 * C152363 +
             (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
                C4241 -
            ((C144110 + C144111) * C151906 * C134210 +
             (C42409 + C42410) * C151906 * C152364 +
             (C42406 + C42405) * C151906 * C152363) *
                C152068) *
               C152321) *
              C3375 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C4241) *
               C152368 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C4241 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152352 +
           ((C43065 * C151906 * C152363 +
             (C42408 + C42407) * C151906 * C152364 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151906 * C134210) *
                C152068 -
            ((C42407 + C42408) * C151906 * C134210 +
             C43066 * C151906 * C152364 +
             (C23637 + C23636) * C151906 * C152363) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C4241 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C151963 * C152374 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C145861 * C134210) *
               C152068 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C4241) *
              C151963 * C152367 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C4241 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152068) *
              C151963 * C152350 +
          ((C24347 * C151906 * C152363 + (C23943 + C23942) * C151906 * C152364 +
            (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
             C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                C151906 * C134210) *
               C152068 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152376 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152373 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            C145369 * C134210) *
               C152360 -
           ((C145374 + C145375) * C151906 * C134210 +
            (C44113 + C44114) * C151906 * C152364 + C145368 * C152363) *
               C152337) *
              C151963 * C3375 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C145861 * C134210) *
               C152373 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C152376 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C152360 +
           (C145861 * C152363 + (C44112 + C44111) * C151906 * C152364 +
            (C23274 * C17969 + C44095 + C44095 + C152296 * C17977 +
             C23276 * C18704 + C44096 + C44096 + C152198 * C18708) *
                C151906 * C134210) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152064 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152071 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            C145369 * C134210) *
               C4913) *
              C151963 * C151940 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C145861 * C134210) *
               C152071 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C152064 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C4913) *
              C151963 * C151949 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C152064 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152071 +
           (C142856 * C152363 + (C27102 + C27101) * C151906 * C152364 +
            (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
             C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                C151906 * C134210) *
               C4913) *
              C151963 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C4241 -
           (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C151963 * C152374 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C145861 * C134210) *
               C152068 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C4241) *
              C151963 * C152367 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C4241 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152068) *
              C151963 * C152350 +
          ((C24347 * C151906 * C152363 + (C23943 + C23942) * C151906 * C152364 +
            (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
             C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                C151906 * C134210) *
               C152068 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C4241 -
            (C145368 * C134210 + (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152368 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 + C146063 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C4241) *
               C152352 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C151906 * C152363 +
             (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
                C4241 -
            ((C144110 + C144111) * C151906 * C134210 +
             (C42409 + C42410) * C151906 * C152364 +
             (C42406 + C42405) * C151906 * C152363) *
                C152068) *
               C152321) *
              C3375 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C145861 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C4241) *
               C152368 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C145666 * C134210) *
                C4241 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152352 +
           ((C43065 * C151906 * C152363 +
             (C42408 + C42407) * C151906 * C152364 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151906 * C134210) *
                C152068 -
            ((C42407 + C42408) * C151906 * C134210 +
             C43066 * C151906 * C152364 +
             (C23637 + C23636) * C151906 * C152363) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C152279 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152026) *
              C807 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C152026 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152279) *
              C808 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C152279 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152026) *
              C809 +
          ((C24140 * C151906 * C152363 + (C24689 + C24688) * C151906 * C152364 +
            (C23274 * C1617 + C26875 + C26875 + C152296 * C1641 +
             C23276 * C1628 + C26876 + C26876 + C152198 * C1652) *
                C151906 * C134210) *
               C151981 * C152026 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C1795 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C1796 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C151981 * C1797 -
           ((C23276 * C8253 + C43330 + C43330 + C152198 * C8265 +
             C23274 * C8250 + C43329 + C43329 + C152296 * C8262) *
                C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C151981 * C152331) *
              C152265 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C1796 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C1795 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C1797 +
           ((C25494 + C25493) * C151906 * C152363 +
            (C42678 + C42677) * C151906 * C152364 +
            (C23274 * C8249 + C43331 + C43331 + C152296 * C8261 +
             C23276 * C8254 + C43332 + C43332 + C152198 * C8266) *
                C151906 * C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152280 -
            ((C44110 + C44109) * C151906 * C134210 +
             (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C152279 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 +
             (C45044 + C45043) * C151906 * C134210) *
                C152068 -
            ((C42404 + C42403) * C151906 * C134210 +
             (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152280) *
               C152026) *
              C347 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C44771 * C151906 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152280) *
               C152279 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C44501 * C151906 * C134210) *
                C152280 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C152026) *
              C348 +
          (((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
             C142856 * C134210) *
                C152280 -
            ((C27101 + C27102) * C151906 * C134210 +
             C40692 * C151906 * C152364 + C23944 * C151906 * C152363) *
                C152068) *
               C152279 +
           ((C24690 * C151906 * C152363 +
             (C26886 + C26885) * C151906 * C152364 +
             (C23274 * C3091 + C27303 + C27303 + C152296 * C3099 +
              C23276 * C10110 + C27304 + C27304 + C152198 * C10112) *
                 C151906 * C134210) *
                C152068 -
            ((C26885 + C26886) * C151906 * C134210 +
             C41614 * C151906 * C152364 + C23644 * C151906 * C152363) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152280 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C1795 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 +
            (C45044 + C45043) * C151906 * C134210) *
               C152068 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C152280) *
              C1796 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C152280 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152068) *
              C1797 +
          (((C43337 + C43338) * C151906 * C152363 +
            (C144800 + C144801) * C151906 * C152364 +
            (C23274 * C10325 + C144794 + C144794 + C152296 * C10329 +
             C23276 * C62166 + C144795 + C144795 + C152198 * C62168) *
                C151906 * C134210) *
               C152068 -
           ((C144801 + C144800) * C151906 * C134210 +
            (C43338 + C43337) * C151906 * C152364 +
            (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
             C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
                C151906 * C152363) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 +
            (C40704 + C40703) * C151906 * C134210) *
               C151981 * C152368 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152352 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C347 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C152352 -
           (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152368 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C23945 * C151906 * C134210) *
               C151981 * C152368 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152352 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 +
           (C40704 + C40703) * C151906 * C134210) *
              C151981 * C151963 * C129 -
          (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
           (C23334 + C23333) * C151906 * C152363) *
              C151981 * C151963 * C130 +
          (C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
           C23945 * C151906 * C134210) *
              C151981 * C151963 * C131 -
          ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
           C23344 * C151906 * C152363) *
              C151981 * C151963 * C132 +
          (C23345 * C151906 * C152363 + (C24359 + C24358) * C151906 * C152364 +
           (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
            C23907 + C23907 + C152198 * C2789) *
               C151906 * C134210) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152369 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152354 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C151963 * C347 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C44771 * C151906 * C134210) *
               C152354 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C152369 -
           ((C44111 + C44112) * C151906 * C134210 + C44772 * C151906 * C152364 +
            C142855 * C152363) *
               C152324) *
              C151963 * C348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C152369 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152354 +
           (C142856 * C152363 + (C27102 + C27101) * C151906 * C152364 +
            (C23274 * C2567 + C26575 + C26575 + C152296 * C2583 +
             C23276 * C18296 + C26576 + C26576 + C152198 * C18298) *
                C151906 * C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C1345 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C1346 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C1345 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C152348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C1345 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C1346 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
              C151981 * C1433 -
          ((C42404 + C42403) * C151906 * C134210 +
           (C41620 + C41619) * C151906 * C152364 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C151906 * C152363) *
              C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C151906 * C152363 +
           (C42405 + C42406) * C151906 * C152364 +
           (C42410 + C42409) * C151906 * C134210) *
              C151981 * C1435 -
          ((C23276 * C8253 + C43330 + C43330 + C152198 * C8265 +
            C23274 * C8250 + C43329 + C43329 + C152296 * C8262) *
               C151906 * C134210 +
           (C43338 + C43337) * C151906 * C152364 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C151906 * C152363) *
              C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C151906 * C152363 +
           (C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
            C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
               C151906 * C152364 +
           (C23274 * C8253 + C143876 + C143876 + C152296 * C8265 +
            C23276 * C60835 + C143877 + C143877 + C152198 * C60837) *
               C151906 * C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152369 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152354 +
           (C142857 * C152363 + (C44109 + C44110) * C151906 * C152364 +
            (C44114 + C44113) * C151906 * C134210) *
               C152324) *
              C1345 +
          (((C41619 + C41620) * C151906 * C152363 +
            (C42403 + C42404) * C151906 * C152364 +
            (C45044 + C45043) * C151906 * C134210) *
               C152354 -
           (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C152369 -
           ((C23276 * C9578 + C45036 + C45036 + C152198 * C9590 +
             C23274 * C9577 + C45035 + C45035 + C152296 * C9589) *
                C151906 * C134210 +
            (C45043 + C45044) * C151906 * C152364 + C144104 * C152363) *
               C152324) *
              C1346 +
          (((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
               C152369 -
           ((C144110 + C144111) * C151906 * C134210 +
            (C42409 + C42410) * C151906 * C152364 +
            (C42406 + C42405) * C151906 * C152363) *
               C152354 +
           (C144105 * C152363 + (C144111 + C144110) * C151906 * C152364 +
            (C23274 * C9578 + C144102 + C144102 + C152296 * C9590 +
             C23276 * C61693 + C144103 + C144103 + C152198 * C61695) *
                C151906 * C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C152280 -
           ((C44110 + C44109) * C151906 * C134210 +
            (C40703 + C40704) * C151906 * C152364 +
            (C40702 + C40701) * C151906 * C152363) *
               C152068) *
              C151963 * C807 +
          ((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
            C44771 * C151906 * C134210) *
               C152068 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C152280) *
              C151963 * C808 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C152280 -
           ((C27101 + C27102) * C151906 * C134210 + C40692 * C151906 * C152364 +
            C23944 * C151906 * C152363) *
               C152068) *
              C151963 * C809 +
          ((C24347 * C151906 * C152363 + (C23943 + C23942) * C151906 * C152364 +
            (C23274 * C2561 + C27091 + C27091 + C152296 * C2577 +
             C23276 * C3092 + C27092 + C27092 + C152198 * C3100) *
                C151906 * C134210) *
               C152068 -
           ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
            C23344 * C151906 * C152363) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
              C23280 + C23280 + C152198 * C377) *
                 C151906 * C152363 +
             (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
                C152280 -
            ((C44110 + C44109) * C151906 * C134210 +
             (C40703 + C40704) * C151906 * C152364 +
             (C40702 + C40701) * C151906 * C152363) *
                C152068) *
               C1345 +
           (((C41619 + C41620) * C151906 * C152363 +
             (C42403 + C42404) * C151906 * C152364 +
             (C45044 + C45043) * C151906 * C134210) *
                C152068 -
            (C144104 * C134210 + (C41620 + C41619) * C151906 * C152364 +
             (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
              C23577 + C23577 + C152296 * C377) *
                 C151906 * C152363) *
                C152280) *
               C1346 +
           (((C23274 * C354 + C23578 + C23578 + C152296 * C378 +
              C23276 * C1442 + C23579 + C23579 + C152198 * C1458) *
                 C151906 * C152363 +
             (C42405 + C42406) * C151906 * C152364 + C144105 * C134210) *
                C152280 -
            ((C144110 + C144111) * C151906 * C134210 +
             (C42409 + C42410) * C151906 * C152364 +
             (C42406 + C42405) * C151906 * C152363) *
                C152068) *
               C152321) *
              C152265 +
          (((C40683 * C151906 * C152363 + C40690 * C151906 * C152364 +
             C44771 * C151906 * C134210) *
                C152068 -
            (C142855 * C134210 + C40689 * C151906 * C152364 +
             (C23334 + C23333) * C151906 * C152363) *
                C152280) *
               C1345 +
           (((C23635 + C23634) * C151906 * C152363 +
             C41612 * C151906 * C152364 + C44501 * C151906 * C134210) *
                C152280 -
            ((C44511 + C44512) * C151906 * C134210 +
             C44506 * C151906 * C152364 + C41613 * C151906 * C152363) *
                C152068) *
               C1346 +
           ((C43065 * C151906 * C152363 +
             (C42408 + C42407) * C151906 * C152364 +
             (C23274 * C9575 + C42385 + C42385 + C152296 * C9587 +
              C23276 * C10326 + C42386 + C42386 + C152198 * C10330) *
                 C151906 * C134210) *
                C152068 -
            ((C42407 + C42408) * C151906 * C134210 +
             C43066 * C151906 * C152364 +
             (C23637 + C23636) * C151906 * C152363) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 +
           (C40704 + C40703) * C151906 * C134210) *
              C151981 * C151963 * C129 -
          (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
           (C23334 + C23333) * C151906 * C152363) *
              C151981 * C151963 * C130 +
          (C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
           C23945 * C151906 * C134210) *
              C151981 * C151963 * C131 -
          ((C23942 + C23943) * C151906 * C134210 + C41221 * C151906 * C152364 +
           C23344 * C151906 * C152363) *
              C151981 * C151963 * C132 +
          (C23345 * C151906 * C152363 + (C24359 + C24358) * C151906 * C152364 +
           (C23274 * C596 + C23906 + C23906 + C152296 * C620 + C23276 * C2787 +
            C23907 + C23907 + C152198 * C2789) *
               C151906 * C134210) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 +
            (C40704 + C40703) * C151906 * C134210) *
               C151981 * C152368 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C152352 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C347 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C152352 -
           (C40684 * C151906 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C152368 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C23945 * C151906 * C134210) *
               C151981 * C152368 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C152352 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
             C23280 + C23280 + C152198 * C377) *
                C151906 * C152363 +
            (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
               C151981 * C1345 -
           ((C42404 + C42403) * C151906 * C134210 +
            (C41620 + C41619) * C151906 * C152364 +
            (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
             C23577 + C23577 + C152296 * C377) *
                C151906 * C152363) *
               C151981 * C1346 +
           ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
             C23579 + C23579 + C152198 * C1458) *
                C151906 * C152363 +
            (C42405 + C42406) * C151906 * C152364 +
            (C42410 + C42409) * C151906 * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C23635 + C23634) * C151906 * C152363 + C41612 * C151906 * C152364 +
            C44501 * C151906 * C134210) *
               C151981 * C1346 -
           (C142855 * C134210 + C40689 * C151906 * C152364 +
            (C23334 + C23333) * C151906 * C152363) *
               C151981 * C1345 -
           ((C42407 + C42408) * C151906 * C134210 + C43066 * C151906 * C152364 +
            (C23637 + C23636) * C151906 * C152363) *
               C151981 * C152321) *
              C152348 +
          ((C23343 * C151906 * C152363 + C40691 * C151906 * C152364 +
            C142856 * C134210) *
               C151981 * C1345 -
           ((C26885 + C26886) * C151906 * C134210 + C41614 * C151906 * C152364 +
            C23644 * C151906 * C152363) *
               C151981 * C1346 +
           (C23645 * C151906 * C152363 + (C25804 + C25803) * C151906 * C152364 +
            (C23274 * C1627 + C25277 + C25277 + C152296 * C1651 +
             C23276 * C9895 + C25278 + C25278 + C152198 * C9897) *
                C151906 * C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23274 * C136 + C23279 + C23279 + C152296 * C152 + C23276 * C353 +
            C23280 + C23280 + C152198 * C377) *
               C151906 * C152363 +
           (C40701 + C40702) * C151906 * C152364 + C142857 * C134210) *
              C151981 * C1433 -
          ((C42404 + C42403) * C151906 * C134210 +
           (C41620 + C41619) * C151906 * C152364 +
           (C23276 * C354 + C23576 + C23576 + C152198 * C378 + C23274 * C353 +
            C23577 + C23577 + C152296 * C377) *
               C151906 * C152363) *
              C151981 * C1434 +
          ((C23274 * C354 + C23578 + C23578 + C152296 * C378 + C23276 * C1442 +
            C23579 + C23579 + C152198 * C1458) *
               C151906 * C152363 +
           (C42405 + C42406) * C151906 * C152364 +
           (C42410 + C42409) * C151906 * C134210) *
              C151981 * C1435 -
          ((C23276 * C8253 + C43330 + C43330 + C152198 * C8265 +
            C23274 * C8250 + C43329 + C43329 + C152296 * C8262) *
               C151906 * C134210 +
           (C43338 + C43337) * C151906 * C152364 +
           (C23276 * C1443 + C25035 + C25035 + C152198 * C1459 +
            C23274 * C1442 + C25036 + C25036 + C152296 * C1458) *
               C151906 * C152363) *
              C151981 * C1436 +
          ((C23274 * C1443 + C25037 + C25037 + C152296 * C1459 +
            C23276 * C8008 + C25038 + C25038 + C152198 * C8016) *
               C151906 * C152363 +
           (C23274 * C8252 + C42073 + C42073 + C152296 * C8264 +
            C23276 * C9005 + C42074 + C42074 + C152198 * C9009) *
               C151906 * C152364 +
           (C23274 * C8253 + C143876 + C143876 + C152296 * C8265 +
            C23276 * C60835 + C143877 + C143877 + C152198 * C60837) *
               C151906 * C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152022 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152029 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C3719) *
              C151940 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152029 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152022 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C3719) *
              C151949 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152022 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152029 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152022 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C3719) *
              C151940 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152029 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152022 -
           ((C103565 + C103564 + C103563) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C3719) *
              C151949 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C152022 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152029 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C152022 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152029 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C151981 * C3719) *
              C151940 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C152029 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C152022 -
           (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
            C434 * C151906 * C117824) *
               C151981 * C3719) *
              C151949 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C152022 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C152029 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152022 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C152280 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C3719) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C152022 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152022 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C152280 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C3719) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C152022 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152029 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152280 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152022 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152280) *
               C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
             C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
                C152280 -
            (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
             C118975 * C117824) *
                C152068) *
               C3719) *
              C3375 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152280) *
               C152022 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152280 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152029 +
           ((C119309 * C117824 + C119310 * C117825 + C119311 * C117826 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151906 *
                 C117827) *
                C152068 -
            (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
             C434 * C151906 * C117824) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C151981 * C3235 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C152026) *
                  C152374 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C102506 + C102507 + C102508) * C152226) *
                   C151981 * C152026 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C3235) *
                  C152367 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C151981 * C3235 -
               ((C102511 + C102510 + C102509) * C152226 +
                (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                   C151981 * C152026) *
                  C152350 +
              (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
                (C1198 * C51060 + C1199 * C51061 +
                 (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                    C152226) *
                   C151981 * C152026 -
               ((C102212 + C102211 + C102210) * C152226 +
                (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                   C151981 * C3235) *
                  C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C151981 * C152375 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C152371 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C103073 + C103074 + C103075) * C152226) *
                   C151981 * C152357 -
               ((C103762 + C103761 + C103760) * C152226 +
                (C1819 * C51062 + C1820 * C51061 +
                 (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                    C101365) *
                   C151981 * C152331) *
                  C3375 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C102506 + C102507 + C102508) * C152226) *
                   C151981 * C152371 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C152375 -
               ((C103565 + C103564 + C103563) * C152226 +
                (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                   C151981 * C152357 +
               ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
                (C16906 * C51060 + C33767 * C51061 +
                 (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                    C152226) *
                   C151981 * C152331) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152369 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152354 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C152324) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152354 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152369 -
            ((C105011 + C105012 + C105013) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C152324) *
               C152026) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152354 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152369 -
            ((C104814 + C104815 + C104816) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C152324) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152369 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152354 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C3235 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C3235 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152375 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C152357 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152371 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152375 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152369 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152354 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C152324) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152354 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152369 -
            ((C113312 + C113313 + C113314) * C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C152324) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152354 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152369 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C152324) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152369 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152354 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C3235 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152026) *
              C152374 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C152026 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C3235) *
              C152367 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C3235 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C152026) *
              C152350 +
          ((C431 * C151906 * C117824 + C1198 * C151906 * C117825 +
            C2804 * C151906 * C117826 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151906 *
                C117827) *
               C151981 * C152026 -
           (C118395 * C117827 + C118394 * C117826 + C118393 * C117825 +
            C195 * C151906 * C117824) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C152375 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152371 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C151981 * C152357 -
           (C119450 * C117827 + C119443 * C117826 + C119442 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C151981 * C152331) *
              C3375 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C152371 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C152375 -
           (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
            C434 * C151906 * C117824) *
               C151981 * C152357 +
           (C1820 * C151906 * C117824 + C16906 * C151906 * C117825 +
            C16905 * C151906 * C117826 +
            (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151906 *
                C117827) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152369 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152354 +
            (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
             C119828 * C117827) *
                C152324) *
               C3235 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152354 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152369 -
            (C120298 * C117827 + C118974 * C117826 + C118592 * C117825 +
             C118591 * C117824) *
                C152324) *
               C152026) *
              C3375 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152354 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152369 -
            (C120161 * C117827 + C118128 * C117826 + C118127 * C117825 +
             C118126 * C117824) *
                C152324) *
               C3235 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152369 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152354 +
            (C118594 * C117824 + C118595 * C117825 + C120030 * C117826 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151906 *
                 C117827) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C152280 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152026) *
              C151940 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C152280 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C3235 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152280 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C3235 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152280) *
               C152026) *
              C151940 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152280) *
               C3235 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152280 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152026) *
              C151949 +
          (((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
             C118131 * C117827) *
                C152280 -
            (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
             C118129 * C117824) *
                C152068) *
               C3235 +
           ((C118596 * C117824 + C118597 * C117825 + C118598 * C117826 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151906 *
                 C117827) *
                C152068 -
            (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
             C432 * C151906 * C117824) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152375 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C152357 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152371 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152375 -
           ((C103565 + C103564 + C103563) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152357 +
           ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
            (C16906 * C51060 + C33767 * C51061 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C3235 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152026 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C3235 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
            (C1198 * C51060 + C1199 * C51061 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                C152226) *
               C151981 * C152026 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C3235 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C3235 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152375 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C152357 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152371 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152375 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C3235 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152026) *
              C152374 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C152026 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C3235) *
              C152367 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C3235 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C152026) *
              C152350 +
          ((C431 * C151906 * C117824 + C1198 * C151906 * C117825 +
            C2804 * C151906 * C117826 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151906 *
                C117827) *
               C151981 * C152026 -
           (C118395 * C117827 + C118394 * C117826 + C118393 * C117825 +
            C195 * C151906 * C117824) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C152375 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152371 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C151981 * C152357 -
           (C119450 * C117827 + C119443 * C117826 + C119442 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C151981 * C152331) *
              C3375 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C152371 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C152375 -
           (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
            C434 * C151906 * C117824) *
               C151981 * C152357 +
           (C1820 * C151906 * C117824 + C16906 * C151906 * C117825 +
            C16905 * C151906 * C117826 +
            (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151906 *
                C117827) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152022 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C4241 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C3719) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152022 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152022 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C4241 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C3719) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152022 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152029 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C4241 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152022 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C4241) *
               C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
             C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
                C4241 -
            (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
             C118975 * C117824) *
                C152068) *
               C3719) *
              C152265 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C4241) *
               C152022 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C4241 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152029 +
           ((C119309 * C117824 + C119310 * C117825 + C119311 * C117826 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151906 *
                 C117827) *
                C152068 -
            (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
             C434 * C151906 * C117824) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152064 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152071 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C4913) *
              C152022 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152071 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152064 -
           ((C113312 + C113313 + C113314) * C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C4913) *
              C152029 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152064 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152071 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152064 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152071 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C4913) *
              C152022 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152071 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152064 -
           ((C105011 + C105012 + C105013) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C4913) *
              C152029 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152064 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152071 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152064 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152071 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C119828 * C117827) *
               C4913) *
              C152022 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152071 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C152064 -
           (C120298 * C117827 + C118974 * C117826 + C118592 * C117825 +
            C118591 * C117824) *
               C4913) *
              C152029 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C152064 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152071 +
           (C118976 * C117824 + C118977 * C117825 + C118984 * C117826 +
            (C134 * C69051 + C118980 + C118980 + C152146 * C69053) * C151906 *
                C117827) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                  C193 * C51061 + C194 * C51062) *
                     C101365 +
                 (C101804 + C101805 + C101806) * C152226) *
                    C4241 -
                ((C101807 + C101808 + C101809) * C152226 +
                 (C101806 + C101805 + C101804) * C101365) *
                    C152068) *
                   C3235 +
               (((C102503 + C102504 + C102505) * C101365 +
                 (C103070 + C103071 + C103072) * C152226) *
                    C152068 -
                ((C102505 + C102504 + C102503) * C152226 +
                 (C432 * C51062 + C433 * C51061 +
                  (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                     C101365) *
                    C4241) *
                   C152026) *
                  C152365 +
              ((((C101810 + C101811 + C101812) * C101365 +
                 (C101813 + C101814 + C101815) * C152226) *
                    C152068 -
                ((C101812 + C101811 + C101810) * C152226 +
                 (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                    C4241) *
                   C3235 +
               (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                 (C102506 + C102507 + C102508) * C152226) *
                    C4241 -
                ((C104617 + C104618 + C104619) * C152226 +
                 (C102508 + C102507 + C102506) * C101365) *
                    C152068) *
                   C152026) *
                  C152348 +
              ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                 (C101816 + C101817 + C101818) * C152226) *
                    C4241 -
                ((C101819 + C101820 + C101821) * C152226 +
                 (C101818 + C101817 + C101816) * C101365) *
                    C152068) *
                   C3235 +
               (((C102509 + C102510 + C102511) * C101365 +
                 (C2805 * C51060 + C2804 * C51061 +
                  (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                     C152226) *
                    C152068 -
                ((C102511 + C102510 + C102509) * C152226 +
                 (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                    C4241) *
                   C152026) *
                  C152315) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C4241 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C152068) *
                  C152375 +
              (((C102503 + C102504 + C102505) * C101365 +
                (C103070 + C103071 + C103072) * C152226) *
                   C152068 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C4241) *
                  C152371 +
              ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C103073 + C103074 + C103075) * C152226) *
                   C4241 -
               ((C103076 + C103077 + C103078) * C152226 +
                (C103075 + C103074 + C103073) * C101365) *
                   C152068) *
                  C152357 +
              (((C103760 + C103761 + C103762) * C101365 +
                (C17409 * C51060 + C16905 * C51061 +
                 (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                    C152226) *
                   C152068 -
               ((C103762 + C103761 + C103760) * C152226 +
                (C1819 * C51062 + C1820 * C51061 +
                 (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                    C101365) *
                   C4241) *
                  C152331) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152376 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152373 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C152360 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C3235 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152373 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152376 -
           ((C105011 + C105012 + C105013) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152360 +
           ((C105013 + C105012 + C105011) * C101365 +
            (C18718 * C51060 + C18308 * C51061 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C51062) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C4241 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C152375 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C4241 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C152357 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152376 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152373 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C152360 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C3235 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152373 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152376 -
           ((C113312 + C113313 + C113314) * C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152360 +
           ((C113314 + C113313 + C113312) * C151906 * C101365 +
            (C6223 * C9577 + C113303 + C113303 + C6218 * C9589 + C6225 * C9578 +
             C113304 + C113304 + C6219 * C9590 + C6227 * C61693 + C113305 +
             C113305 + C6220 * C61695) *
                C151906 * C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C4241 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C3235 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C4241) *
               C152026) *
              C152365 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C4241) *
               C3235 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C4241 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152026) *
              C152348 +
          (((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
             C118131 * C117827) *
                C4241 -
            (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
             C118129 * C117824) *
                C152068) *
               C3235 +
           ((C118596 * C117824 + C118597 * C117825 + C118598 * C117826 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151906 *
                 C117827) *
                C152068 -
            (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
             C432 * C151906 * C117824) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C4241 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C152375 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152068 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C4241) *
              C152371 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C4241 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152068) *
              C152357 +
          ((C119442 * C117824 + C119443 * C117825 + C119450 * C117826 +
            (C134 * C61693 + C119446 + C119446 + C152146 * C61695) * C151906 *
                C117827) *
               C152068 -
           (C119450 * C117827 + C119443 * C117826 + C119442 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152376 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152373 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C119828 * C117827) *
               C152360 -
           (C119835 * C117827 + C119828 * C117826 + C118124 * C117825 +
            C118123 * C117824) *
               C152337) *
              C3235 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152373 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C152376 -
           (C120298 * C117827 + C118974 * C117826 + C118592 * C117825 +
            C118591 * C117824) *
               C152360 +
           (C118592 * C117824 + C118974 * C117825 + C120298 * C117826 +
            (C134 * C68314 + C120294 + C120294 + C152146 * C68316) * C151906 *
                C117827) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152064 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152071 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C4913) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152071 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152064 -
            ((C113312 + C113313 + C113314) * C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C4913) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152071 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152064 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C4913) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152064 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152071 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152064 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152071 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C4913) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152071 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152064 -
            ((C105011 + C105012 + C105013) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C4913) *
               C152026) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152071 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152064 -
            ((C104814 + C104815 + C104816) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C4913) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152064 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152071 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152064 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152071 +
            (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
             C119828 * C117827) *
                C4913) *
               C3235 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152071 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152064 -
            (C120298 * C117827 + C118974 * C117826 + C118592 * C117825 +
             C118591 * C117824) *
                C4913) *
               C152026) *
              C152265 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152071 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152064 -
            (C120161 * C117827 + C118128 * C117826 + C118127 * C117825 +
             C118126 * C117824) *
                C4913) *
               C3235 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152064 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152071 +
            (C118594 * C117824 + C118595 * C117825 + C120030 * C117826 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151906 *
                 C117827) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C4241 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C152375 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152068 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C4241 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152068) *
              C152357 +
          (((C103760 + C103761 + C103762) * C101365 +
            (C17409 * C51060 + C16905 * C51061 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                C152226) *
               C152068 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C4241 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C3235 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C4241 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C152375 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C4241 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C152357 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C4241 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C3235 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C4241) *
               C152026) *
              C152365 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C4241) *
               C3235 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C4241 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152026) *
              C152348 +
          (((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
             C118131 * C117827) *
                C4241 -
            (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
             C118129 * C117824) *
                C152068) *
               C3235 +
           ((C118596 * C117824 + C118597 * C117825 + C118598 * C117826 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151906 *
                 C117827) *
                C152068 -
            (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
             C432 * C151906 * C117824) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C4241 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C152375 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152068 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C4241) *
              C152371 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C4241 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152068) *
              C152357 +
          ((C119442 * C117824 + C119443 * C117825 + C119450 * C117826 +
            (C134 * C61693 + C119446 + C119446 + C152146 * C61695) * C151906 *
                C117827) *
               C152068 -
           (C119450 * C117827 + C119443 * C117826 + C119442 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C151981 * C152279 -
               ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C152026) *
                  C807 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
                   C151981 * C152026 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C152279) *
                  C808 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C151981 * C152279 -
               ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
                (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                   C151981 * C152026) *
                  C809 +
              (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
                (C1198 * C51060 + C1199 * C51061 +
                 (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                    C152226) *
                   C151981 * C152026 -
               ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
                (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                   C151981 * C152279) *
                  C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C151981 * C1795 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C1796 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C103073 + C103074 + C103075) * C152226) *
                   C151981 * C1797 -
               ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) *
                    C152226 +
                (C1819 * C51062 + C1820 * C51061 +
                 (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                    C101365) *
                   C151981 * C152331) *
                  C152265 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C102506 + C102507 + C102508) * C152226) *
                   C151981 * C1796 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C1795 -
               ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
                (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                   C151981 * C1797 +
               ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
                (C16906 * C51060 + C33767 * C51061 +
                 (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                    C152226) *
                   C151981 * C152331) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C2325 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C2326 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C152324) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C2326 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C2325 -
            ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C152324) *
               C152026) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C2326 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C2325 -
            ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C152324) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C2325 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C2326 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152279 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152279 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1795 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C1797 -
           ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
             C6218 * C2171) *
                C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1796 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1795 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C2325 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C2326 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C152324) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C2326 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C2325 -
            ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 +
              C6225 * C9576 + C10333 + C10333 + C6219 * C9588 + C6223 * C3089 +
              C10332 + C10332 + C6218 * C3097) *
                 C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C152324) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C2326 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C2325 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C152324) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C2325 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C2326 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C152279 -
           (C16691 * C151906 * C117827 + C16092 * C151906 * C117826 +
            C16091 * C151906 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152026) *
              C807 +
          ((C433 * C151906 * C117824 + C1196 * C151906 * C117825 +
            C2806 * C151906 * C117826 + C16093 * C151906 * C117827) *
               C151981 * C152026 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C152279) *
              C808 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C152279 -
           (C16094 * C151906 * C117827 + C2805 * C151906 * C117826 +
            C1197 * C151906 * C117825 + C432 * C151906 * C117824) *
               C151981 * C152026) *
              C809 +
          ((C431 * C151906 * C117824 + C1198 * C151906 * C117825 +
            C2804 * C151906 * C117826 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151906 *
                C117827) *
               C151981 * C152026 -
           (C2957 * C151906 * C117827 + C673 * C151906 * C117826 +
            C668 * C151906 * C117825 + C195 * C151906 * C117824) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C1795 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C1796 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C151981 * C1797 -
           ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C151906 *
                C117827 +
            C17409 * C151906 * C117826 + C17408 * C151906 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C151981 * C152331) *
              C152265 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C1796 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C1795 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C1797 +
           (C1820 * C151906 * C117824 + C16906 * C151906 * C117825 +
            C16905 * C151906 * C117826 +
            (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151906 *
                C117827) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C2325 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C2326 +
            (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
             C119828 * C117827) *
                C152324) *
               C152279 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C2326 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C2325 -
            ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C151906 *
                 C117827 +
             C118974 * C117826 + C118592 * C117825 + C118591 * C117824) *
                C152324) *
               C152026) *
              C152265 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C2326 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C2325 -
            (C18001 * C151906 * C117827 + C118128 * C117826 +
             C118127 * C117825 + C118126 * C117824) *
                C152324) *
               C152279 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C2325 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C2326 +
            (C118594 * C117824 + C118595 * C117825 + C120030 * C117826 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151906 *
                 C117827) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                  C193 * C51061 + C194 * C51062) *
                     C101365 +
                 (C101804 + C101805 + C101806) * C152226) *
                    C152280 -
                ((C101807 + C101808 + C101809) * C152226 +
                 (C101806 + C101805 + C101804) * C101365) *
                    C152068) *
                   C152279 +
               (((C102503 + C102504 + C102505) * C101365 +
                 (C16092 * C51060 + C2806 * C51061 + C2805 * C51062) *
                     C152226) *
                    C152068 -
                ((C102505 + C102504 + C102503) * C152226 +
                 (C432 * C51062 + C433 * C51061 +
                  (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                     C101365) *
                    C152280) *
                   C152026) *
                  C347 +
              ((((C101810 + C101811 + C101812) * C101365 +
                 (C101813 + C101814 + C101815) * C152226) *
                    C152068 -
                ((C101812 + C101811 + C101810) * C152226 +
                 (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                    C152280) *
                   C152279 +
               (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                 (C102506 + C102507 + C102508) * C152226) *
                    C152280 -
                ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
                 (C102508 + C102507 + C102506) * C101365) *
                    C152068) *
                   C152026) *
                  C348 +
              ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                 (C101816 + C101817 + C101818) * C152226) *
                    C152280 -
                ((C101819 + C101820 + C101821) * C152226 +
                 (C101818 + C101817 + C101816) * C101365) *
                    C152068) *
                   C152279 +
               (((C102509 + C102510 + C102511) * C101365 +
                 (C2805 * C51060 + C2804 * C51061 +
                  (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                     C152226) *
                    C152068 -
                ((C102511 + C102510 + C102509) * C152226 +
                 (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                    C152280) *
                   C152026) *
                  C152315) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C152280 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C152068) *
                  C1795 +
              (((C102503 + C102504 + C102505) * C101365 +
                (C103070 + C103071 + C103072) * C152226) *
                   C152068 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C152280) *
                  C1796 +
              ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C103073 + C103074 + C103075) * C152226) *
                   C152280 -
               ((C103076 + C103077 + C103078) * C152226 +
                (C103075 + C103074 + C103073) * C101365) *
                   C152068) *
                  C1797 +
              (((C103760 + C103761 + C103762) * C101365 +
                (C17409 * C51060 + C16905 * C51061 +
                 (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                    C152226) *
                   C152068 -
               ((C103762 + C103761 + C103760) * C152226 +
                (C1819 * C51062 + C1820 * C51061 +
                 (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                    C101365) *
                   C152280) *
                  C152331) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2936 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2937 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C2938 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C152279 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C2937 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C2936 -
           ((C105011 + C105012 + C105013) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C2938 +
           ((C105013 + C105012 + C105011) * C101365 +
            (C18718 * C51060 + C18308 * C51061 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C51062) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C6223 * C1620 + C8273 + C8273 + C6218 * C1644 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6227 * C8250 + C8271 + C8271 +
              C6220 * C8262) *
                 C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C152280 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C1795 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152280 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C1797 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2936 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2937 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C2938 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C152279 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C2937 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C2936 -
           ((C113312 + C113313 + C113314) * C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C2938 +
           ((C113314 + C113313 + C113312) * C151906 * C101365 +
            (C6223 * C9577 + C113303 + C113303 + C6218 * C9589 + C6225 * C9578 +
             C113304 + C113304 + C6219 * C9590 + C6227 * C61693 + C113305 +
             C113305 + C6220 * C61695) *
                C151906 * C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152280 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152279 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C18718 * C151906 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152280) *
               C152026) *
              C347 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152280) *
               C152279 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152280 -
            (C18308 * C151906 * C117827 + C118595 * C117826 +
             C118594 * C117825 + C118593 * C117824) *
                C152068) *
               C152026) *
              C348 +
          (((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
             C118131 * C117827) *
                C152280 -
            (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
             C118129 * C117824) *
                C152068) *
               C152279 +
           ((C118596 * C117824 + C118597 * C117825 + C118598 * C117826 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151906 *
                 C117827) *
                C152068 -
            (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
             C432 * C151906 * C117824) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152280 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C1795 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152068 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C152280) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C152280 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152068) *
              C1797 +
          ((C119442 * C117824 + C119443 * C117825 + C119450 * C117826 +
            (C134 * C61693 + C119446 + C119446 + C152146 * C61695) * C151906 *
                C117827) *
               C152068 -
           (C119450 * C117827 + C119443 * C117826 + C119442 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C2936 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C2937 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C119828 * C117827) *
               C2938 -
           (C119835 * C117827 + C119828 * C117826 + C118124 * C117825 +
            C118123 * C117824) *
               C152337) *
              C152279 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C2937 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C2936 -
           (C120298 * C117827 + C118974 * C117826 + C118592 * C117825 +
            C118591 * C117824) *
               C2938 +
           (C118592 * C117824 + C118974 * C117825 + C120298 * C117826 +
            (C134 * C68314 + C120294 + C120294 + C152146 * C68316) * C151906 *
                C117827) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                C193 * C51061 + C194 * C51062) *
                   C101365 +
               (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
                  C151981 * C151963 * C129 -
              ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
               (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                  C151981 * C151963 * C130 +
              ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
               (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
                  C151981 * C151963 * C131 -
              ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
               (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                  C151981 * C151963 * C132 +
              ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
               (C674 * C51060 + C961 * C51061 +
                (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
                   C152226) *
                  C151981 * C151963 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
                   C151981 * C152368 -
               ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C152352 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
                   C151981 * C152321) *
                  C347 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
                   C151981 * C152352 -
               ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C152368 -
               ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
                (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                   C151981 * C152321) *
                  C348 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
                   C151981 * C152368 -
               ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
                (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                   C151981 * C152352 +
               ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
                (C2032 * C51060 + C2031 * C51061 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                    C152226) *
                   C151981 * C152321) *
                  C152315) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C152369 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C152354 +
               ((C101809 + C101808 + C101807) * C101365 +
                (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
                   C152324) *
                  C151963 * C347 +
              (((C101810 + C101811 + C101812) * C101365 +
                (C101813 + C101814 + C101815) * C152226) *
                   C152354 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C152369 -
               ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
                (C101815 + C101814 + C101813) * C101365) *
                   C152324) *
                  C151963 * C348 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C152369 -
               ((C101819 + C101820 + C101821) * C152226 +
                (C101818 + C101817 + C101816) * C101365) *
                   C152354 +
               ((C101821 + C101820 + C101819) * C101365 +
                (C2958 * C51060 + C2957 * C51061 +
                 (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                    C152226) *
                   C152324) *
                  C151963 * C152315) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C151981 * C1345 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C1346 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
                   C151981 * C152321) *
                  C152365 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C102506 + C102507 + C102508) * C152226) *
                   C151981 * C1346 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C1345 -
               ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
                (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                   C151981 * C152321) *
                  C152348 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C151981 * C1345 -
               ((C102511 + C102510 + C102509) * C152226 +
                (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                   C151981 * C1346 +
               ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
                (C2032 * C51060 + C2031 * C51061 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                    C152226) *
                   C151981 * C152321) *
                  C152315) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                C193 * C51061 + C194 * C51062) *
                   C101365 +
               (C101804 + C101805 + C101806) * C152226) *
                  C151981 * C1433 -
              ((C102505 + C102504 + C102503) * C152226 +
               (C432 * C51062 + C433 * C51061 +
                (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                   C101365) *
                  C151981 * C1434 +
              (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                C434 * C51061 + C435 * C51062) *
                   C101365 +
               (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
                  C151981 * C1435 -
              ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
               (C1819 * C51062 + C1820 * C51061 +
                (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                   C101365) *
                  C151981 * C1436 +
              (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
                (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
                (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
                   C101365 +
               ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
                (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
                (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
                   C152226) *
                  C151981 * C1437) *
             C151935 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C152369 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C152354 +
               ((C101809 + C101808 + C101807) * C101365 +
                (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
                   C152324) *
                  C1345 +
              (((C102503 + C102504 + C102505) * C101365 +
                (C103070 + C103071 + C103072) * C152226) *
                   C152354 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C152369 -
               ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) *
                    C152226 +
                (C103072 + C103071 + C103070) * C101365) *
                   C152324) *
                  C1346 +
              ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C103073 + C103074 + C103075) * C152226) *
                   C152369 -
               ((C103076 + C103077 + C103078) * C152226 +
                (C103075 + C103074 + C103073) * C101365) *
                   C152354 +
               ((C103078 + C103077 + C103076) * C101365 +
                (C16695 * C51060 + C16694 * C51061 +
                 (C134 * C10110 + C17201 + C17201 + C152146 * C10112) *
                     C51062) *
                    C152226) *
                   C152324) *
                  C152321) *
             C151935 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C2325 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C2326 +
               ((C101809 + C101808 + C101807) * C101365 +
                (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
                   C152324) *
                  C151963 * C152365 +
              (((C101810 + C101811 + C101812) * C101365 +
                (C101813 + C101814 + C101815) * C152226) *
                   C2326 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C2325 -
               ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
                (C101815 + C101814 + C101813) * C101365) *
                   C152324) *
                  C151963 * C152348 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C2325 -
               ((C101819 + C101820 + C101821) * C152226 +
                (C101818 + C101817 + C101816) * C101365) *
                   C2326 +
               ((C101821 + C101820 + C101819) * C101365 +
                (C2958 * C51060 + C2957 * C51061 +
                 (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                    C152226) *
                   C152324) *
                  C151963 * C152315) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C2325 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C2326 +
               ((C101809 + C101808 + C101807) * C101365 +
                (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
                   C152324) *
                  C152368 +
              (((C102503 + C102504 + C102505) * C101365 +
                (C103070 + C103071 + C103072) * C152226) *
                   C2326 -
               ((C102505 + C102504 + C102503) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C2325 -
               ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) *
                    C152226 +
                (C103072 + C103071 + C103070) * C101365) *
                   C152324) *
                  C152352 +
              ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C103073 + C103074 + C103075) * C152226) *
                   C2325 -
               ((C103076 + C103077 + C103078) * C152226 +
                (C103075 + C103074 + C103073) * C101365) *
                   C2326 +
               ((C103078 + C103077 + C103076) * C101365 +
                (C16695 * C51060 + C16694 * C51061 +
                 (C134 * C10110 + C17201 + C17201 + C152146 * C10112) *
                     C51062) *
                    C152226) *
                   C152324) *
                  C152321) *
             C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C2556 -
          ((C101807 + C101808 + C101809) * C152226 +
           (C101806 + C101805 + C101804) * C101365) *
              C2557 +
          ((C101809 + C101808 + C101807) * C101365 +
           (C104321 + C104322 + C104323) * C152226) *
              C2558 -
          ((C104324 + C104325 + C104326) * C152226 +
           (C104323 + C104322 + C104321) * C101365) *
              C2559 +
          ((C104326 + C104325 + C104324) * C101365 +
           (C18002 * C51060 + C18001 * C51061 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C51062) *
               C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152354 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152369 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152369 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152354 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C1345 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152354 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152369 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152369 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152354 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C2326 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C2325 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C2325 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C2326 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C152368 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C2326 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C2325 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C2325 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C2326 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C2556 -
          ((C110027 + C110028 + C110029) * C151906 * C152226 +
           (C110026 + C110025 + C110024) * C151906 * C101365) *
              C2557 +
          ((C110029 + C110028 + C110027) * C151906 * C101365 +
           (C112613 + C112614 + C112615) * C151906 * C152226) *
              C2558 -
          ((C112616 + C112617 + C112618) * C151906 * C152226 +
           (C112615 + C112614 + C112613) * C151906 * C101365) *
              C2559 +
          ((C112618 + C112617 + C112616) * C151906 * C101365 +
           (C6223 * C17970 + C112598 + C112598 + C6218 * C17978 +
            C6225 * C18703 + C112599 + C112599 + C6219 * C18707 +
            C6227 * C69051 + C112600 + C112600 + C6220 * C69053) *
               C151906 * C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
           C15376 * C151906 * C117827) *
              C151981 * C151963 * C129 -
          (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
           C670 * C151906 * C117825 + C193 * C151906 * C117824) *
              C151981 * C151963 * C130 +
          (C194 * C151906 * C117824 + C669 * C151906 * C117825 +
           C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
              C151981 * C151963 * C131 -
          (C2957 * C151906 * C117827 + C673 * C151906 * C117826 +
           C668 * C151906 * C117825 + C195 * C151906 * C117824) *
              C151981 * C151963 * C132 +
          (C196 * C151906 * C117824 + C674 * C151906 * C117825 +
           C675 * C151906 * C117826 +
           (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151906 *
               C117827) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
            C15376 * C151906 * C117827) *
               C151981 * C152368 -
           (C16691 * C151906 * C117827 + C16092 * C151906 * C117826 +
            C16091 * C151906 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152352 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C347 +
          ((C433 * C151906 * C117824 + C1196 * C151906 * C117825 +
            C2806 * C151906 * C117826 + C16093 * C151906 * C117827) *
               C151981 * C152352 -
           (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
            C670 * C151906 * C117825 + C193 * C151906 * C117824) *
               C151981 * C152368 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C348 +
          ((C194 * C151906 * C117824 + C669 * C151906 * C117825 +
            C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
               C151981 * C152368 -
           (C16094 * C151906 * C117827 + C2805 * C151906 * C117826 +
            C1197 * C151906 * C117825 + C432 * C151906 * C117824) *
               C151981 * C152352 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152369 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152354 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C151963 * C347 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152354 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C152369 -
           (C18001 * C151906 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C152324) *
              C151963 * C348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C152369 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152354 +
           (C118130 * C117824 + C118131 * C117825 + C118132 * C117826 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151906 *
                C117827) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C1345 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C152365 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C1346 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C1345 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C152348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C1345 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C1346 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
              C151981 * C1433 -
          (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
              C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
           C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
           C16695 * C151906 * C117827) *
              C151981 * C1435 -
          ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C151906 *
               C117827 +
           C17409 * C151906 * C117826 + C17408 * C151906 * C117825 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
               C117824) *
              C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C151906 *
               C117824 +
           (C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C151906 *
               C117825 +
           (C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C151906 *
               C117826 +
           (C134 * C62166 + C118827 + C118827 + C152146 * C62168) * C151906 *
               C117827) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152369 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152354 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C1345 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152354 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C152369 -
           ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C151906 *
                C117827 +
            C118974 * C117826 + C118592 * C117825 + C118591 * C117824) *
               C152324) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C152369 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152354 +
           (C118976 * C117824 + C118977 * C117825 + C118984 * C117826 +
            (C134 * C69051 + C118980 + C118980 + C152146 * C69053) * C151906 *
                C117827) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C2325 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C2326 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C151963 * C152365 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C2326 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C2325 -
           (C18001 * C151906 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C152324) *
              C151963 * C152348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C2325 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C2326 +
           (C118130 * C117824 + C118131 * C117825 + C118132 * C117826 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151906 *
                C117827) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C2325 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C2326 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C152368 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C2326 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C2325 -
           ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C151906 *
                C117827 +
            C118974 * C117826 + C118592 * C117825 + C118591 * C117824) *
               C152324) *
              C152352 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C2325 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C2326 +
           (C118976 * C117824 + C118977 * C117825 + C118984 * C117826 +
            (C134 * C69051 + C118980 + C118980 + C152146 * C69053) * C151906 *
                C117827) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
              C2556 -
          (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
           C118121 * C117824) *
              C2557 +
          (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
           C119828 * C117827) *
              C2558 -
          (C119835 * C117827 + C119828 * C117826 + C118124 * C117825 +
           C118123 * C117824) *
              C2559 +
          (C118124 * C117824 + C119828 * C117825 + C119835 * C117826 +
           (C134 * C119824 + C119831 + C119831 + C152146 * C119826) * C151906 *
               C117827) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C152280 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C152068) *
                  C151963 * C807 +
              (((C101810 + C101811 + C101812) * C101365 +
                (C101813 + C101814 + C101815) * C152226) *
                   C152068 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C152280) *
                  C151963 * C808 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C152280 -
               ((C101819 + C101820 + C101821) * C152226 +
                (C101818 + C101817 + C101816) * C101365) *
                   C152068) *
                  C151963 * C809 +
              (((C102210 + C102211 + C102212) * C101365 +
                (C673 * C51060 + C675 * C51061 +
                 (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                    C152226) *
                   C152068 -
               ((C102212 + C102211 + C102210) * C152226 +
                (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                   C152280) *
                  C151963 * C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                  C193 * C51061 + C194 * C51062) *
                     C101365 +
                 (C101804 + C101805 + C101806) * C152226) *
                    C152280 -
                ((C101807 + C101808 + C101809) * C152226 +
                 (C101806 + C101805 + C101804) * C101365) *
                    C152068) *
                   C1345 +
               (((C102503 + C102504 + C102505) * C101365 +
                 (C103070 + C103071 + C103072) * C152226) *
                    C152068 -
                ((C102505 + C102504 + C102503) * C152226 +
                 (C432 * C51062 + C433 * C51061 +
                  (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                     C101365) *
                    C152280) *
                   C1346 +
               ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                  C434 * C51061 + C435 * C51062) *
                     C101365 +
                 (C103073 + C103074 + C103075) * C152226) *
                    C152280 -
                ((C103076 + C103077 + C103078) * C152226 +
                 (C103075 + C103074 + C103073) * C101365) *
                    C152068) *
                   C152321) *
                  C152265 +
              ((((C101810 + C101811 + C101812) * C101365 +
                 (C101813 + C101814 + C101815) * C152226) *
                    C152068 -
                ((C101812 + C101811 + C101810) * C152226 +
                 (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                    C152280) *
                   C1345 +
               (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                 (C102506 + C102507 + C102508) * C152226) *
                    C152280 -
                ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
                 (C102508 + C102507 + C102506) * C101365) *
                    C152068) *
                   C1346 +
               (((C103563 + C103564 + C103565) * C101365 +
                 (C15117 * C51060 + C15118 * C51061 +
                  (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                     C152226) *
                    C152068 -
                ((C103565 + C103564 + C103563) * C152226 +
                 (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                    C152280) *
                   C152321) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2936 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2937 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C2938 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C151963 * C152265 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C2937 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C2936 -
           ((C104814 + C104815 + C104816) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C2938 +
           ((C104816 + C104815 + C104814) * C101365 +
            (C15377 * C51060 + C15378 * C51061 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C51062) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152280 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C1345 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C152280 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2936 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2937 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C2938 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C151963 * C152265 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C2937 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C2936 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C2938 +
           ((C10131 + C10130 + C10129) * C151906 * C101365 +
            (C6223 * C2566 + C9603 + C9603 + C6218 * C2582 + C6225 * C9579 +
             C9604 + C9604 + C6219 * C9591 + C6227 * C9580 + C9605 + C9605 +
             C6220 * C9592) *
                C151906 * C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152280 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C151963 * C807 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152068 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C152280) *
              C151963 * C808 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C152280 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152068) *
              C151963 * C809 +
          ((C118393 * C117824 + C118394 * C117825 + C118395 * C117826 +
            (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151906 *
                C117827) *
               C152068 -
           (C118395 * C117827 + C118394 * C117826 + C118393 * C117825 +
            C195 * C151906 * C117824) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152280 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C1345 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152280) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
             C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
                C152280 -
            (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
             C118975 * C117824) *
                C152068) *
               C152321) *
              C152265 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152280) *
               C1345 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152280 -
            (C18308 * C151906 * C117827 + C118595 * C117826 +
             C118594 * C117825 + C118593 * C117824) *
                C152068) *
               C1346 +
           ((C119309 * C117824 + C119310 * C117825 + C119311 * C117826 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151906 *
                 C117827) *
                C152068 -
            (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
             C434 * C151906 * C117824) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C2936 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C2937 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C119828 * C117827) *
               C2938 -
           (C119835 * C117827 + C119828 * C117826 + C118124 * C117825 +
            C118123 * C117824) *
               C152337) *
              C151963 * C152265 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C2937 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C2936 -
           (C120161 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C2938 +
           (C118127 * C117824 + C118128 * C117825 + C120161 * C117826 +
            (C134 * C17972 + C17993 + C17993 + C152146 * C17980) * C151906 *
                C117827) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
           (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
              C151981 * C151963 * C130 +
          ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
           (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
           (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
              C151981 * C151963 * C132 +
          ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
           (C674 * C51060 + C961 * C51061 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152352 -
           ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152368 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152352 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2325 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2326 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C2326 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C2325 -
           ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C2325 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C2326 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2325 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2326 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C152368 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C2326 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C2325 -
           ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C2325 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C2326 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C2326 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C2325 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C2325 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C2326 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C152368 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C2326 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C2325 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C2325 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C2326 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
           C15376 * C151906 * C117827) *
              C151981 * C151963 * C129 -
          (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
           C670 * C151906 * C117825 + C193 * C151906 * C117824) *
              C151981 * C151963 * C130 +
          (C194 * C151906 * C117824 + C669 * C151906 * C117825 +
           C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
              C151981 * C151963 * C131 -
          (C2957 * C151906 * C117827 + C673 * C151906 * C117826 +
           C668 * C151906 * C117825 + C195 * C151906 * C117824) *
              C151981 * C151963 * C132 +
          (C196 * C151906 * C117824 + C674 * C151906 * C117825 +
           C675 * C151906 * C117826 +
           (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151906 *
               C117827) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
            C15376 * C151906 * C117827) *
               C151981 * C152368 -
           (C16691 * C151906 * C117827 + C16092 * C151906 * C117826 +
            C16091 * C151906 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152352 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C347 +
          ((C433 * C151906 * C117824 + C1196 * C151906 * C117825 +
            C2806 * C151906 * C117826 + C16093 * C151906 * C117827) *
               C151981 * C152352 -
           (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
            C670 * C151906 * C117825 + C193 * C151906 * C117824) *
               C151981 * C152368 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C348 +
          ((C194 * C151906 * C117824 + C669 * C151906 * C117825 +
            C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
               C151981 * C152368 -
           (C16094 * C151906 * C117827 + C2805 * C151906 * C117826 +
            C1197 * C151906 * C117825 + C432 * C151906 * C117824) *
               C151981 * C152352 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C1345 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C152365 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C1346 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C1345 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C152348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C1345 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C1346 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
              C151981 * C1433 -
          (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
              C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
           C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
           C16695 * C151906 * C117827) *
              C151981 * C1435 -
          ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C151906 *
               C117827 +
           C17409 * C151906 * C117826 + C17408 * C151906 * C117825 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
               C117824) *
              C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C151906 *
               C117824 +
           (C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C151906 *
               C117825 +
           (C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C151906 *
               C117826 +
           (C134 * C62166 + C118827 + C118827 + C152146 * C62168) * C151906 *
               C117827) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C2325 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C2326 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C151963 * C152365 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C2326 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C2325 -
           (C18001 * C151906 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C152324) *
              C151963 * C152348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C2325 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C2326 +
           (C118130 * C117824 + C118131 * C117825 + C118132 * C117826 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151906 *
                C117827) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C2325 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C2326 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C152368 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C2326 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C2325 -
           ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C151906 *
                C117827 +
            C118974 * C117826 + C118592 * C117825 + C118591 * C117824) *
               C152324) *
              C152352 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C2325 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C2326 +
           (C118976 * C117824 + C118977 * C117825 + C118984 * C117826 +
            (C134 * C69051 + C118980 + C118980 + C152146 * C69053) * C151906 *
                C117827) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C4241 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152026) *
              C151940 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C4241 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C152279 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C4241 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152279 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C4241) *
               C152026) *
              C151940 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C4241) *
               C152279 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C4241 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152026) *
              C151949 +
          (((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
             C118131 * C117827) *
                C4241 -
            (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
             C118129 * C117824) *
                C152068) *
               C152279 +
           ((C118596 * C117824 + C118597 * C117825 + C118598 * C117826 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151906 *
                 C117827) *
                C152068 -
            (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
             C432 * C151906 * C117824) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152064 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152071 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C4913) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152071 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152064 -
            ((C113312 + C113313 + C113314) * C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C4913) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152071 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152064 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C4913) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152064 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152071 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152064 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152071 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C4913) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152071 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152064 -
            ((C105011 + C105012 + C105013) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C4913) *
               C152026) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152071 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152064 -
            ((C104814 + C104815 + C104816) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C4913) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152064 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152071 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152064 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152071 +
            (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
             C119828 * C117827) *
                C4913) *
               C152279 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152071 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152064 -
            (C120298 * C117827 + C118974 * C117826 + C118592 * C117825 +
             C118591 * C117824) *
                C4913) *
               C152026) *
              C3375 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152071 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152064 -
            (C120161 * C117827 + C118128 * C117826 + C118127 * C117825 +
             C118126 * C117824) *
                C4913) *
               C152279 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152064 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152071 +
            (C118594 * C117824 + C118595 * C117825 + C120030 * C117826 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151906 *
                 C117827) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C101804 + C101805 + C101806) * C152226) *
                   C4241 -
               ((C101807 + C101808 + C101809) * C152226 +
                (C101806 + C101805 + C101804) * C101365) *
                   C152068) *
                  C151963 * C152374 +
              (((C101810 + C101811 + C101812) * C101365 +
                (C101813 + C101814 + C101815) * C152226) *
                   C152068 -
               ((C101812 + C101811 + C101810) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C4241) *
                  C151963 * C152367 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C101816 + C101817 + C101818) * C152226) *
                   C4241 -
               ((C101819 + C101820 + C101821) * C152226 +
                (C101818 + C101817 + C101816) * C101365) *
                   C152068) *
                  C151963 * C152350 +
              (((C102210 + C102211 + C102212) * C101365 +
                (C673 * C51060 + C675 * C51061 +
                 (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                    C152226) *
                   C152068 -
               ((C102212 + C102211 + C102210) * C152226 +
                (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                   C4241) *
                  C151963 * C152325) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                  C193 * C51061 + C194 * C51062) *
                     C101365 +
                 (C101804 + C101805 + C101806) * C152226) *
                    C4241 -
                ((C101807 + C101808 + C101809) * C152226 +
                 (C101806 + C101805 + C101804) * C101365) *
                    C152068) *
                   C152368 +
               (((C102503 + C102504 + C102505) * C101365 +
                 (C103070 + C103071 + C103072) * C152226) *
                    C152068 -
                ((C102505 + C102504 + C102503) * C152226 +
                 (C432 * C51062 + C433 * C51061 +
                  (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                     C101365) *
                    C4241) *
                   C152352 +
               ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                  C434 * C51061 + C435 * C51062) *
                     C101365 +
                 (C103073 + C103074 + C103075) * C152226) *
                    C4241 -
                ((C103076 + C103077 + C103078) * C152226 +
                 (C103075 + C103074 + C103073) * C101365) *
                    C152068) *
                   C152321) *
                  C3375 +
              ((((C101810 + C101811 + C101812) * C101365 +
                 (C101813 + C101814 + C101815) * C152226) *
                    C152068 -
                ((C101812 + C101811 + C101810) * C152226 +
                 (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                    C4241) *
                   C152368 +
               (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                 (C102506 + C102507 + C102508) * C152226) *
                    C4241 -
                ((C104617 + C104618 + C104619) * C152226 +
                 (C102508 + C102507 + C102506) * C101365) *
                    C152068) *
                   C152352 +
               (((C103563 + C103564 + C103565) * C101365 +
                 (C15117 * C51060 + C15118 * C51061 +
                  (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                     C152226) *
                    C152068 -
                ((C103565 + C103564 + C103563) * C152226 +
                 (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                    C4241) *
                   C152321) *
                  C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152376 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152373 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C152360 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C151963 * C3375 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152373 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152376 -
           ((C104814 + C104815 + C104816) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152360 +
           ((C104816 + C104815 + C104814) * C101365 +
            (C15377 * C51060 + C15378 * C51061 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C51062) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C4241 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152368 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C4241 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152376 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152373 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C152360 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C151963 * C3375 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152373 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152376 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152360 +
           ((C10131 + C10130 + C10129) * C151906 * C101365 +
            (C6223 * C2566 + C9603 + C9603 + C6218 * C2582 + C6225 * C9579 +
             C9604 + C9604 + C6219 * C9591 + C6227 * C9580 + C9605 + C9605 +
             C6220 * C9592) *
                C151906 * C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C4241 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C151963 * C152374 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152068 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C4241) *
              C151963 * C152367 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C4241 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152068) *
              C151963 * C152350 +
          ((C118393 * C117824 + C118394 * C117825 + C118395 * C117826 +
            (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151906 *
                C117827) *
               C152068 -
           (C118395 * C117827 + C118394 * C117826 + C118393 * C117825 +
            C195 * C151906 * C117824) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C4241 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152368 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C4241) *
               C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
             C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
                C4241 -
            (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
             C118975 * C117824) *
                C152068) *
               C152321) *
              C3375 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C4241) *
               C152368 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C4241 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152352 +
           ((C119309 * C117824 + C119310 * C117825 + C119311 * C117826 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151906 *
                 C117827) *
                C152068 -
            (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
             C434 * C151906 * C117824) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152376 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152373 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C119828 * C117827) *
               C152360 -
           (C119835 * C117827 + C119828 * C117826 + C118124 * C117825 +
            C118123 * C117824) *
               C152337) *
              C151963 * C3375 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152373 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C152376 -
           (C120161 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C152360 +
           (C118127 * C117824 + C118128 * C117825 + C120161 * C117826 +
            (C134 * C17972 + C17993 + C17993 + C152146 * C17980) * C151906 *
                C117827) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152064 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152071 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152071 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152064 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C4913) *
              C151963 * C151949 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152064 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152071 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152064 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152071 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152071 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152064 -
           ((C104814 + C104815 + C104816) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C4913) *
              C151963 * C151949 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152064 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152071 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152064 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152071 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C119828 * C117827) *
               C4913) *
              C151963 * C151940 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152071 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C152064 -
           (C120161 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C4913) *
              C151963 * C151949 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C152064 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152071 +
           (C118130 * C117824 + C118131 * C117825 + C118132 * C117826 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151906 *
                C117827) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152368 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C4241 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152368 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152352 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C4241 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152068 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C4241 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C102210 + C102211 + C102212) * C101365 +
            (C673 * C51060 + C675 * C51061 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                C152226) *
               C152068 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C4241 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152368 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C4241 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C4241 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C151963 * C152374 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152068 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C4241) *
              C151963 * C152367 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C4241 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152068) *
              C151963 * C152350 +
          ((C118393 * C117824 + C118394 * C117825 + C118395 * C117826 +
            (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151906 *
                C117827) *
               C152068 -
           (C118395 * C117827 + C118394 * C117826 + C118393 * C117825 +
            C195 * C151906 * C117824) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C4241 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152368 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C4241) *
               C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
             C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
                C4241 -
            (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
             C118975 * C117824) *
                C152068) *
               C152321) *
              C3375 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C4241) *
               C152368 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C4241 -
            (C120030 * C117827 + C118595 * C117826 + C118594 * C117825 +
             C118593 * C117824) *
                C152068) *
               C152352 +
           ((C119309 * C117824 + C119310 * C117825 + C119311 * C117826 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151906 *
                 C117827) *
                C152068 -
            (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
             C434 * C151906 * C117824) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1795 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C1797 -
           ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1796 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1795 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C1797 +
           ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
            (C16906 * C51060 + C33767 * C51061 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152279 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152026) *
              C807 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152026 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152279) *
              C808 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C152279 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152026) *
              C809 +
          (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
            (C1198 * C51060 + C1199 * C51061 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                C152226) *
               C151981 * C152026 -
           ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152279 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152279 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1795 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C1797 -
           ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
             C6218 * C2171) *
                C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1796 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1795 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C152279 -
           (C16691 * C151906 * C117827 + C16092 * C151906 * C117826 +
            C16091 * C151906 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152026) *
              C807 +
          ((C433 * C151906 * C117824 + C1196 * C151906 * C117825 +
            C2806 * C151906 * C117826 + C16093 * C151906 * C117827) *
               C151981 * C152026 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C152279) *
              C808 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C152279 -
           (C16094 * C151906 * C117827 + C2805 * C151906 * C117826 +
            C1197 * C151906 * C117825 + C432 * C151906 * C117824) *
               C151981 * C152026) *
              C809 +
          ((C431 * C151906 * C117824 + C1198 * C151906 * C117825 +
            C2804 * C151906 * C117826 +
            (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151906 *
                C117827) *
               C151981 * C152026 -
           (C2957 * C151906 * C117827 + C673 * C151906 * C117826 +
            C668 * C151906 * C117825 + C195 * C151906 * C117824) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C1795 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C1796 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C151981 * C1797 -
           ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C151906 *
                C117827 +
            C17409 * C151906 * C117826 + C17408 * C151906 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C151981 * C152331) *
              C152265 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C1796 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C1795 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C1797 +
           (C1820 * C151906 * C117824 + C16906 * C151906 * C117825 +
            C16905 * C151906 * C117826 +
            (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151906 *
                C117827) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152280 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C1795 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152068 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152280 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152068) *
              C1797 +
          (((C103760 + C103761 + C103762) * C101365 +
            (C17409 * C51060 + C16905 * C51061 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                C152226) *
               C152068 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C16092 * C51060 + C2806 * C51061 + C2805 * C51062) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C152280 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C152279 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C6223 * C1620 + C8273 + C8273 + C6218 * C1644 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6227 * C8250 + C8271 + C8271 +
              C6220 * C8262) *
                 C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C152280 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C1795 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152280 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C1797 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152280 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C152279 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C18718 * C151906 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152280) *
               C152026) *
              C347 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152280) *
               C152279 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152280 -
            (C18308 * C151906 * C117827 + C118595 * C117826 +
             C118594 * C117825 + C118593 * C117824) *
                C152068) *
               C152026) *
              C348 +
          (((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
             C118131 * C117827) *
                C152280 -
            (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
             C118129 * C117824) *
                C152068) *
               C152279 +
           ((C118596 * C117824 + C118597 * C117825 + C118598 * C117826 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151906 *
                 C117827) *
                C152068 -
            (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
             C432 * C151906 * C117824) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152280 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C1795 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152068 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C152280) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C152280 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152068) *
              C1797 +
          ((C119442 * C117824 + C119443 * C117825 + C119450 * C117826 +
            (C134 * C61693 + C119446 + C119446 + C152146 * C61695) * C151906 *
                C117827) *
               C152068 -
           (C119450 * C117827 + C119443 * C117826 + C119442 * C117825 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
                C117824) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                C193 * C51061 + C194 * C51062) *
                   C101365 +
               (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
                  C151981 * C151963 * C129 -
              ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
               (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                  C151981 * C151963 * C130 +
              ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
               (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
                  C151981 * C151963 * C131 -
              ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
               (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                  C151981 * C151963 * C132 +
              ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
               (C674 * C51060 + C961 * C51061 +
                (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
                   C152226) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
                   C151981 * C152368 -
               ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C152352 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
                   C151981 * C152321) *
                  C347 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
                   C151981 * C152352 -
               ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C152368 -
               ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
                (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                   C151981 * C152321) *
                  C348 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
                   C151981 * C152368 -
               ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
                (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                   C151981 * C152352 +
               ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
                (C2032 * C51060 + C2031 * C51061 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                    C152226) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152369 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152354 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152354 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152369 -
           ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152324) *
              C151963 * C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152369 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152354 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152369 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152354 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C1345 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152354 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152369 -
           ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152369 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152354 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152354 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152369 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152369 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152354 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C1345 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152354 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152369 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152369 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152354 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
           C15376 * C151906 * C117827) *
              C151981 * C151963 * C129 -
          (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
           C670 * C151906 * C117825 + C193 * C151906 * C117824) *
              C151981 * C151963 * C130 +
          (C194 * C151906 * C117824 + C669 * C151906 * C117825 +
           C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
              C151981 * C151963 * C131 -
          (C2957 * C151906 * C117827 + C673 * C151906 * C117826 +
           C668 * C151906 * C117825 + C195 * C151906 * C117824) *
              C151981 * C151963 * C132 +
          (C196 * C151906 * C117824 + C674 * C151906 * C117825 +
           C675 * C151906 * C117826 +
           (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151906 *
               C117827) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
            C15376 * C151906 * C117827) *
               C151981 * C152368 -
           (C16691 * C151906 * C117827 + C16092 * C151906 * C117826 +
            C16091 * C151906 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152352 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C347 +
          ((C433 * C151906 * C117824 + C1196 * C151906 * C117825 +
            C2806 * C151906 * C117826 + C16093 * C151906 * C117827) *
               C151981 * C152352 -
           (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
            C670 * C151906 * C117825 + C193 * C151906 * C117824) *
               C151981 * C152368 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C348 +
          ((C194 * C151906 * C117824 + C669 * C151906 * C117825 +
            C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
               C151981 * C152368 -
           (C16094 * C151906 * C117827 + C2805 * C151906 * C117826 +
            C1197 * C151906 * C117825 + C432 * C151906 * C117824) *
               C151981 * C152352 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152369 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152354 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C151963 * C347 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152354 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C152369 -
           (C18001 * C151906 * C117827 + C118128 * C117826 + C118127 * C117825 +
            C118126 * C117824) *
               C152324) *
              C151963 * C348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C152369 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152354 +
           (C118130 * C117824 + C118131 * C117825 + C118132 * C117826 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151906 *
                C117827) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C1345 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C152365 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C1346 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C1345 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C152348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C1345 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C1346 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
              C151981 * C1433 -
          (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
              C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
           C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
           C16695 * C151906 * C117827) *
              C151981 * C1435 -
          ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C151906 *
               C117827 +
           C17409 * C151906 * C117826 + C17408 * C151906 * C117825 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
               C117824) *
              C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C151906 *
               C117824 +
           (C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C151906 *
               C117825 +
           (C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C151906 *
               C117826 +
           (C134 * C62166 + C118827 + C118827 + C152146 * C62168) * C151906 *
               C117827) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152369 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152354 +
           (C118122 * C117824 + C118123 * C117825 + C118124 * C117826 +
            C18002 * C151906 * C117827) *
               C152324) *
              C1345 +
          ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
            C118974 * C117827) *
               C152354 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C152369 -
           ((C134 * C18703 + C18714 + C18714 + C152146 * C18707) * C151906 *
                C117827 +
            C118974 * C117826 + C118592 * C117825 + C118591 * C117824) *
               C152324) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
               C152369 -
           (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
            C118975 * C117824) *
               C152354 +
           (C118976 * C117824 + C118977 * C117825 + C118984 * C117826 +
            (C134 * C69051 + C118980 + C118980 + C152146 * C69053) * C151906 *
                C117827) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C1345 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C152280 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C1345 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C1346 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152280 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C151963 * C807 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152068 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152280) *
              C151963 * C808 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152280 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152068) *
              C151963 * C809 +
          (((C102210 + C102211 + C102212) * C101365 +
            (C673 * C51060 + C675 * C51061 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                C152226) *
               C152068 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152280 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C1345 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C152280 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C152280 -
           (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
            C118121 * C117824) *
               C152068) *
              C151963 * C807 +
          ((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
            C118128 * C117827) *
               C152068 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C152280) *
              C151963 * C808 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C152280 -
           (C118132 * C117827 + C118131 * C117826 + C118130 * C117825 +
            C118129 * C117824) *
               C152068) *
              C151963 * C809 +
          ((C118393 * C117824 + C118394 * C117825 + C118395 * C117826 +
            (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151906 *
                C117827) *
               C152068 -
           (C118395 * C117827 + C118394 * C117826 + C118393 * C117825 +
            C195 * C151906 * C117824) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
             C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
                C152280 -
            (C118124 * C117827 + C118123 * C117826 + C118122 * C117825 +
             C118121 * C117824) *
                C152068) *
               C1345 +
           ((C118590 * C117824 + C118591 * C117825 + C118592 * C117826 +
             C118974 * C117827) *
                C152068 -
            (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
                C152280) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
             C118975 * C117825 + C118976 * C117826 + C118977 * C117827) *
                C152280 -
            (C118984 * C117827 + C118977 * C117826 + C118976 * C117825 +
             C118975 * C117824) *
                C152068) *
               C152321) *
              C152265 +
          (((C118125 * C117824 + C118126 * C117825 + C118127 * C117826 +
             C118128 * C117827) *
                C152068 -
            (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
             C193 * C151906 * C117824) *
                C152280) *
               C1345 +
           ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
             C118595 * C117827) *
                C152280 -
            (C18308 * C151906 * C117827 + C118595 * C117826 +
             C118594 * C117825 + C118593 * C117824) *
                C152068) *
               C1346 +
           ((C119309 * C117824 + C119310 * C117825 + C119311 * C117826 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151906 *
                 C117827) *
                C152068 -
            (C119311 * C117827 + C119310 * C117826 + C119309 * C117825 +
             C434 * C151906 * C117824) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152352 -
           ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152368 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152352 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
           (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
              C151981 * C151963 * C130 +
          ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
           (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
           (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
              C151981 * C151963 * C132 +
          ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
           (C674 * C51060 + C961 * C51061 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
           C15376 * C151906 * C117827) *
              C151981 * C151963 * C129 -
          (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
           C670 * C151906 * C117825 + C193 * C151906 * C117824) *
              C151981 * C151963 * C130 +
          (C194 * C151906 * C117824 + C669 * C151906 * C117825 +
           C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
              C151981 * C151963 * C131 -
          (C2957 * C151906 * C117827 + C673 * C151906 * C117826 +
           C668 * C151906 * C117825 + C195 * C151906 * C117824) *
              C151981 * C151963 * C132 +
          (C196 * C151906 * C117824 + C674 * C151906 * C117825 +
           C675 * C151906 * C117826 +
           (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151906 *
               C117827) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C15374 * C151906 * C117825 + C15375 * C151906 * C117826 +
            C15376 * C151906 * C117827) *
               C151981 * C152368 -
           (C16691 * C151906 * C117827 + C16092 * C151906 * C117826 +
            C16091 * C151906 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C152352 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C347 +
          ((C433 * C151906 * C117824 + C1196 * C151906 * C117825 +
            C2806 * C151906 * C117826 + C16093 * C151906 * C117827) *
               C151981 * C152352 -
           (C2959 * C151906 * C117827 + C671 * C151906 * C117826 +
            C670 * C151906 * C117825 + C193 * C151906 * C117824) *
               C151981 * C152368 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C348 +
          ((C194 * C151906 * C117824 + C669 * C151906 * C117825 +
            C672 * C151906 * C117826 + C2958 * C151906 * C117827) *
               C151981 * C152368 -
           (C16094 * C151906 * C117827 + C2805 * C151906 * C117826 +
            C1197 * C151906 * C117825 + C432 * C151906 * C117824) *
               C151981 * C152352 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
            C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
               C151981 * C1345 -
           (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
               C151981 * C1346 +
           ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
            C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
            C16695 * C151906 * C117827) *
               C151981 * C152321) *
              C152365 +
          ((C433 * C151906 * C117824 + C118593 * C117825 + C118594 * C117826 +
            C118595 * C117827) *
               C151981 * C1346 -
           (C118127 * C117827 + C118126 * C117826 + C118125 * C117825 +
            C193 * C151906 * C117824) *
               C151981 * C1345 -
           (C16694 * C151906 * C117827 + C15117 * C151906 * C117826 +
            C2033 * C151906 * C117825 + C434 * C151906 * C117824) *
               C151981 * C152321) *
              C152348 +
          ((C194 * C151906 * C117824 + C118129 * C117825 + C118130 * C117826 +
            C118131 * C117827) *
               C151981 * C1345 -
           (C118598 * C117827 + C118597 * C117826 + C118596 * C117825 +
            C432 * C151906 * C117824) *
               C151981 * C1346 +
           (C435 * C151906 * C117824 + C2032 * C151906 * C117825 +
            C15118 * C151906 * C117826 +
            (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151906 *
                C117827) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152146 * C152) * C151906 * C117824 +
           C118121 * C117825 + C118122 * C117826 + C118123 * C117827) *
              C151981 * C1433 -
          (C118592 * C117827 + C118591 * C117826 + C118590 * C117825 +
           (C134 * C353 + C396 + C396 + C152146 * C377) * C151906 * C117824) *
              C151981 * C1434 +
          ((C134 * C354 + C397 + C397 + C152146 * C378) * C151906 * C117824 +
           C16692 * C151906 * C117825 + C16693 * C151906 * C117826 +
           C16695 * C151906 * C117827) *
              C151981 * C1435 -
          ((C134 * C10325 + C17402 + C17402 + C152146 * C10329) * C151906 *
               C117827 +
           C17409 * C151906 * C117826 + C17408 * C151906 * C117825 +
           (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C151906 *
               C117824) *
              C151981 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C151906 *
               C117824 +
           (C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C151906 *
               C117825 +
           (C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C151906 *
               C117826 +
           (C134 * C62166 + C118827 + C118827 + C152146 * C62168) * C151906 *
               C117827) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C152022 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C151981 * C3719) *
              C151940 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + C137471 * C134210) *
               C151981 * C152029 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152022 -
           ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C3719) *
              C151949 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C152022 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152029 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152280 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152022 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152280) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
              C434 * C151911) *
                 C152363 +
             (C135924 + C135925) * C152364 + C135930 * C134210) *
                C152280 -
            ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
             (C135925 + C135924) * C152363) *
                C152068) *
               C3719) *
              C3375 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152280) *
               C152022 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C152280 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152029 +
           (((C136415 + C136416) * C152363 + (C136417 + C136418) * C152364 +
             (C16694 * C152258 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C134210) *
                C152068 -
            ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
             (C435 * C151911 + C434 * C152258) * C152363) *
                C152280) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C152375 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C151981 * C152357 -
           ((C136616 + C136615) * C134210 + (C136614 + C136613) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + C137471 * C134210) *
               C151981 * C152371 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152375 -
           ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152357 +
           ((C1820 * C152258 + C1819 * C151911) * C152363 +
            (C16906 * C152258 + C33767 * C151911) * C152364 +
            (C16905 * C152258 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C3235 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + C137471 * C134210) *
               C151981 * C152026 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C3235 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C152258 + C437 * C151911) * C152363 +
            (C1198 * C152258 + C1199 * C151911) * C152364 +
            (C2804 * C152258 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C134210) *
               C151981 * C152026 -
           ((C135060 + C135059) * C134210 + (C135058 + C135057) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152369 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152354 +
            (C134666 * C152363 + (C134653 + C134652) * C152364 +
             C137180 * C134210) *
                C152324) *
               C3235 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152354 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152369 -
            ((C137866 + C137867) * C134210 + (C135922 + C135921) * C152364 +
             C135923 * C152363) *
                C152324) *
               C152026) *
              C3375 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152354 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152369 -
            ((C137669 + C137670) * C134210 + (C134659 + C134658) * C152364 +
             C134667 * C152363) *
                C152324) *
               C3235 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C152369 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152354 +
            (C137471 * C152363 + (C137473 + C137472) * C152364 +
             (C18308 * C152258 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C134210) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152280 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C3235 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152280) *
               C152026) *
              C151940 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152280) *
               C3235 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C152280 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C152258 + C195 * C151911) * C152363 +
             (C134660 + C134661) * C152364 + C134668 * C134210) *
                C152280 -
            ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
             (C134661 + C134660) * C152363) *
                C152068) *
               C3235 +
           (((C135359 + C135360) * C152363 + (C135361 + C135362) * C152364 +
             (C16094 * C152258 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C134210) *
                C152068 -
            ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
             (C431 * C151911 + C432 * C152258) * C152363) *
                C152280) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C3235 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + C137471 * C134210) *
               C151981 * C152026 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C3235 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C152258 + C437 * C151911) * C152363 +
            (C1198 * C152258 + C1199 * C151911) * C152364 +
            (C2804 * C152258 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C134210) *
               C151981 * C152026 -
           ((C135060 + C135059) * C134210 + (C135058 + C135057) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C152375 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C151981 * C152357 -
           ((C136616 + C136615) * C134210 + (C136614 + C136613) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + C137471 * C134210) *
               C151981 * C152371 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152375 -
           ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152357 +
           ((C1820 * C152258 + C1819 * C151911) * C152363 +
            (C16906 * C152258 + C33767 * C151911) * C152364 +
            (C16905 * C152258 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C4241 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152022 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C4241) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
              C434 * C151911) *
                 C152363 +
             (C135924 + C135925) * C152364 + C135930 * C134210) *
                C4241 -
            ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
             (C135925 + C135924) * C152363) *
                C152068) *
               C3719) *
              C152265 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C4241) *
               C152022 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C4241 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152029 +
           (((C136415 + C136416) * C152363 + (C136417 + C136418) * C152364 +
             (C16694 * C152258 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C134210) *
                C152068 -
            ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
             (C435 * C151911 + C434 * C152258) * C152363) *
                C4241) *
               C3719) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152064 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152071 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            C137180 * C134210) *
               C4913) *
              C152022 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            C137865 * C134210) *
               C152071 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C152064 -
           ((C137866 + C137867) * C134210 + (C135922 + C135921) * C152364 +
            C135923 * C152363) *
               C4913) *
              C152029 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C152064 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152071 +
           (C135930 * C152363 + (C135929 + C135928) * C152364 +
            (C118983 * C152258 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C134210) *
               C4913) *
              C3719) *
         C151935) /
        (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C4241 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C152375 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            C137865 * C134210) *
               C152068 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C4241 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152068) *
              C152357 +
          (((C136613 + C136614) * C152363 + (C136615 + C136616) * C152364 +
            (C119449 * C152258 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C134210) *
               C152068 -
           ((C136616 + C136615) * C134210 + (C136614 + C136613) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C4241 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C3235 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C4241) *
               C152026) *
              C152365 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C4241) *
               C3235 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C4241 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C152258 + C195 * C151911) * C152363 +
             (C134660 + C134661) * C152364 + C134668 * C134210) *
                C4241 -
            ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
             (C134661 + C134660) * C152363) *
                C152068) *
               C3235 +
           (((C135359 + C135360) * C152363 + (C135361 + C135362) * C152364 +
             (C16094 * C152258 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C134210) *
                C152068 -
            ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
             (C431 * C151911 + C432 * C152258) * C152363) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152376 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152373 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            C137180 * C134210) *
               C152360 -
           ((C137178 + C137179) * C134210 + (C137177 + C137176) * C152364 +
            C137175 * C152363) *
               C152337) *
              C3235 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            C137865 * C134210) *
               C152373 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C152376 -
           ((C137866 + C137867) * C134210 + (C135922 + C135921) * C152364 +
            C135923 * C152363) *
               C152360 +
           (C137865 * C152363 + (C137867 + C137866) * C152364 +
            (C120297 * C152258 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151911) *
                C134210) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152064 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152071 +
            (C134666 * C152363 + (C134653 + C134652) * C152364 +
             C137180 * C134210) *
                C4913) *
               C3235 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152071 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152064 -
            ((C137866 + C137867) * C134210 + (C135922 + C135921) * C152364 +
             C135923 * C152363) *
                C4913) *
               C152026) *
              C152265 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152071 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152064 -
            ((C137669 + C137670) * C134210 + (C134659 + C134658) * C152364 +
             C134667 * C152363) *
                C4913) *
               C3235 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C152064 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152071 +
            (C137471 * C152363 + (C137473 + C137472) * C152364 +
             (C18308 * C152258 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C134210) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C4241 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C3235 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C4241) *
               C152026) *
              C152365 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C4241) *
               C3235 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C4241 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C152258 + C195 * C151911) * C152363 +
             (C134660 + C134661) * C152364 + C134668 * C134210) *
                C4241 -
            ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
             (C134661 + C134660) * C152363) *
                C152068) *
               C3235 +
           (((C135359 + C135360) * C152363 + (C135361 + C135362) * C152364 +
             (C16094 * C152258 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C134210) *
                C152068 -
            ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
             (C431 * C151911 + C432 * C152258) * C152363) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C4241 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C152375 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            C137865 * C134210) *
               C152068 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C4241 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152068) *
              C152357 +
          (((C136613 + C136614) * C152363 + (C136615 + C136616) * C152364 +
            (C119449 * C152258 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C134210) *
               C152068 -
           ((C136616 + C136615) * C134210 + (C136614 + C136613) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C1795 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C151981 * C1797 -
           ((C16905 * C151911 + C17409 * C152258) * C134210 +
            (C16906 * C151911 + C17408 * C152258) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
               C151981 * C1796 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C1795 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C1797 +
           ((C1820 * C152258 + C1819 * C151911) * C152363 +
            (C16906 * C152258 + C33767 * C151911) * C152364 +
            (C16905 * C152258 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C152279 -
           ((C2806 * C151911 + C16092 * C152258) * C134210 +
            (C1196 * C151911 + C16091 * C152258) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152026) *
              C807 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C1196 * C152258 + C1197 * C151911) * C152364 +
            (C2806 * C152258 + C2805 * C151911) * C134210) *
               C151981 * C152026 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152279) *
              C808 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C152279 -
           ((C2804 * C151911 + C2805 * C152258) * C134210 +
            (C1198 * C151911 + C1197 * C152258) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152026) *
              C809 +
          (((C431 * C152258 + C437 * C151911) * C152363 +
            (C1198 * C152258 + C1199 * C151911) * C152364 +
            (C2804 * C152258 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C134210) *
               C151981 * C152026 -
           ((C675 * C151911 + C673 * C152258) * C134210 +
            (C674 * C151911 + C668 * C152258) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C2325 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C2326 +
            (C134666 * C152363 + (C134653 + C134652) * C152364 +
             C137180 * C134210) *
                C152324) *
               C152279 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             (C135921 + C135922) * C134210) *
                C2326 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C2325 -
            ((C18308 * C151911 + C18718 * C152258) * C134210 +
             (C135922 + C135921) * C152364 + C135923 * C152363) *
                C152324) *
               C152026) *
              C152265 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             (C134658 + C134659) * C134210) *
                C2326 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C2325 -
            ((C15378 * C151911 + C15377 * C152258) * C134210 +
             (C134659 + C134658) * C152364 + C134667 * C152363) *
                C152324) *
               C152279 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C2325 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C2326 +
            (C137471 * C152363 + (C137473 + C137472) * C152364 +
             (C18308 * C152258 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C134210) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152280 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C1795 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            (C135921 + C135922) * C134210) *
               C152068 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C152280 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152068) *
              C1797 +
          (((C136613 + C136614) * C152363 + (C136615 + C136616) * C152364 +
            (C119449 * C152258 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C134210) *
               C152068 -
           ((C136616 + C136615) * C134210 + (C136614 + C136613) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152280 -
            ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152279 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             (C16691 * C152258 + C16093 * C151911) * C134210) *
                C152068 -
            ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152280) *
               C152026) *
              C347 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             (C134658 + C134659) * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152280) *
               C152279 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
                C152280 -
            ((C16094 * C151911 + C16093 * C152258) * C134210 +
             (C135358 + C135357) * C152364 + (C135356 + C135355) * C152363) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C152258 + C195 * C151911) * C152363 +
             (C134660 + C134661) * C152364 + C134668 * C134210) *
                C152280 -
            ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
             (C134661 + C134660) * C152363) *
                C152068) *
               C152279 +
           (((C135359 + C135360) * C152363 + (C135361 + C135362) * C152364 +
             (C16094 * C152258 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C134210) *
                C152068 -
            ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
             (C431 * C151911 + C432 * C152258) * C152363) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C2936 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C2937 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            C137180 * C134210) *
               C2938 -
           ((C137178 + C137179) * C134210 + (C137177 + C137176) * C152364 +
            C137175 * C152363) *
               C152337) *
              C152279 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            C137865 * C134210) *
               C2937 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C2936 -
           ((C137866 + C137867) * C134210 + (C135922 + C135921) * C152364 +
            C135923 * C152363) *
               C2938 +
           (C137865 * C152363 + (C137867 + C137866) * C152364 +
            (C120297 * C152258 +
             (C134 * C18704 + C18715 + C18715 + C152146 * C18708) * C151911) *
                C134210) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
                C193 * C151911) *
                   C152363 +
               (C15374 * C152258 + C670 * C151911) * C152364 +
               (C15375 * C152258 + C671 * C151911) * C134210) *
                  C151981 * C151963 * C129 -
              ((C672 * C151911 + C671 * C152258) * C134210 +
               (C669 * C151911 + C670 * C152258) * C152364 +
               (C194 * C151911 + C193 * C152258) * C152363) *
                  C151981 * C151963 * C130 +
              ((C194 * C152258 + C195 * C151911) * C152363 +
               (C669 * C152258 + C668 * C151911) * C152364 +
               (C672 * C152258 + C673 * C151911) * C134210) *
                  C151981 * C151963 * C131 -
              ((C675 * C151911 + C673 * C152258) * C134210 +
               (C674 * C151911 + C668 * C152258) * C152364 +
               (C196 * C151911 + C195 * C152258) * C152363) *
                  C151981 * C151963 * C132 +
              ((C196 * C152258 + C197 * C151911) * C152363 +
               (C674 * C152258 + C961 * C151911) * C152364 +
               (C675 * C152258 +
                (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
                   C134210) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
                 C193 * C151911) *
                    C152363 +
                (C15374 * C152258 + C670 * C151911) * C152364 +
                (C15375 * C152258 + C671 * C151911) * C134210) *
                   C151981 * C152368 -
               ((C2806 * C151911 + C16092 * C152258) * C134210 +
                (C1196 * C151911 + C16091 * C152258) * C152364 +
                (C433 * C151911 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                    C152363) *
                   C151981 * C152352 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
                 C434 * C151911) *
                    C152363 +
                (C16692 * C152258 + C2033 * C151911) * C152364 +
                (C16693 * C152258 + C15117 * C151911) * C134210) *
                   C151981 * C152321) *
                  C347 +
              (((C433 * C152258 + C432 * C151911) * C152363 +
                (C1196 * C152258 + C1197 * C151911) * C152364 +
                (C2806 * C152258 + C2805 * C151911) * C134210) *
                   C151981 * C152352 -
               ((C672 * C151911 + C671 * C152258) * C134210 +
                (C669 * C151911 + C670 * C152258) * C152364 +
                (C194 * C151911 + C193 * C152258) * C152363) *
                   C151981 * C152368 -
               ((C15118 * C151911 + C15117 * C152258) * C134210 +
                (C2032 * C151911 + C2033 * C152258) * C152364 +
                (C435 * C151911 + C434 * C152258) * C152363) *
                   C151981 * C152321) *
                  C348 +
              (((C194 * C152258 + C195 * C151911) * C152363 +
                (C669 * C152258 + C668 * C151911) * C152364 +
                (C672 * C152258 + C673 * C151911) * C134210) *
                   C151981 * C152368 -
               ((C2804 * C151911 + C2805 * C152258) * C134210 +
                (C1198 * C151911 + C1197 * C152258) * C152364 +
                (C431 * C151911 + C432 * C152258) * C152363) *
                   C151981 * C152352 +
               ((C435 * C152258 + C436 * C151911) * C152363 +
                (C2032 * C152258 + C2031 * C151911) * C152364 +
                (C15118 * C152258 +
                 (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                    C134210) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152369 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152354 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C151963 * C347 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            (C134658 + C134659) * C134210) *
               C152354 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C152369 -
           ((C15378 * C151911 + C15377 * C152258) * C134210 +
            (C134659 + C134658) * C152364 + C134667 * C152363) *
               C152324) *
              C151963 * C348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C152369 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152354 +
           (C134668 * C152363 + (C134665 + C134664) * C152364 +
            (C15378 * C152258 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C1345 -
           ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
               C151981 * C1346 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C1345 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C1346 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C134648 + C134649) * C152364 + C134666 * C134210) *
              C151981 * C1433 -
          ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
               C152363) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
            C434 * C151911) *
               C152363 +
           (C16692 * C152258 + C2033 * C151911) * C152364 +
           (C16693 * C152258 + C15117 * C151911) * C134210) *
              C151981 * C1435 -
          ((C16905 * C151911 + C17409 * C152258) * C134210 +
           (C16906 * C151911 + C17408 * C152258) * C152364 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
               C152363) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152258 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C152363 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152258 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C152364 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C152258 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152369 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152354 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C1345 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            (C135921 + C135922) * C134210) *
               C152354 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C152369 -
           ((C18308 * C151911 + C18718 * C152258) * C134210 +
            (C135922 + C135921) * C152364 + C135923 * C152363) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C152369 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152354 +
           (C135930 * C152363 + (C135929 + C135928) * C152364 +
            (C118983 * C152258 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C2325 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C2326 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C151963 * C152365 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            (C134658 + C134659) * C134210) *
               C2326 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C2325 -
           ((C15378 * C151911 + C15377 * C152258) * C134210 +
            (C134659 + C134658) * C152364 + C134667 * C152363) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C2325 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C2326 +
           (C134668 * C152363 + (C134665 + C134664) * C152364 +
            (C15378 * C152258 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C2325 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C2326 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C152368 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            (C135921 + C135922) * C134210) *
               C2326 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C2325 -
           ((C18308 * C151911 + C18718 * C152258) * C134210 +
            (C135922 + C135921) * C152364 + C135923 * C152363) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C2325 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C2326 +
           (C135930 * C152363 + (C135929 + C135928) * C152364 +
            (C118983 * C152258 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C134648 + C134649) * C152364 + C134666 * C134210) *
              C2556 -
          (C137175 * C134210 + (C134651 + C134650) * C152364 +
           (C134649 + C134648) * C152363) *
              C2557 +
          (C134666 * C152363 + (C134653 + C134652) * C152364 +
           C137180 * C134210) *
              C2558 -
          ((C137178 + C137179) * C134210 + (C137177 + C137176) * C152364 +
           C137175 * C152363) *
              C2559 +
          (C137180 * C152363 + (C137179 + C137178) * C152364 +
           (C119834 * C152258 +
            (C134 * C17972 + C17993 + C17993 + C152146 * C17980) * C151911) *
               C134210) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152280 -
            ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C1345 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             (C135921 + C135922) * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
              C434 * C151911) *
                 C152363 +
             (C135924 + C135925) * C152364 + C135930 * C134210) *
                C152280 -
            ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
             (C135925 + C135924) * C152363) *
                C152068) *
               C152321) *
              C152265 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             (C134658 + C134659) * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152280) *
               C1345 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
                C152280 -
            ((C16094 * C151911 + C16093 * C152258) * C134210 +
             (C135358 + C135357) * C152364 + (C135356 + C135355) * C152363) *
                C152068) *
               C1346 +
           (((C136415 + C136416) * C152363 + (C136417 + C136418) * C152364 +
             (C16694 * C152258 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C134210) *
                C152068 -
            ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
             (C435 * C151911 + C434 * C152258) * C152363) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152280 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C151963 * C807 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            (C134658 + C134659) * C134210) *
               C152068 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C152280) *
              C151963 * C808 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C152280 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152068) *
              C151963 * C809 +
          (((C135057 + C135058) * C152363 + (C135059 + C135060) * C152364 +
            (C2957 * C152258 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C134210) *
               C152068 -
           ((C135060 + C135059) * C134210 + (C135058 + C135057) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C2936 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C2937 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            C137180 * C134210) *
               C2938 -
           ((C137178 + C137179) * C134210 + (C137177 + C137176) * C152364 +
            C137175 * C152363) *
               C152337) *
              C151963 * C152265 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            C137668 * C134210) *
               C2937 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C2936 -
           ((C137669 + C137670) * C134210 + (C134659 + C134658) * C152364 +
            C134667 * C152363) *
               C2938 +
           (C137668 * C152363 + (C137670 + C137669) * C152364 +
            (C18001 * C152258 +
             (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151911) *
                C134210) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C15374 * C152258 + C670 * C151911) * C152364 +
            (C15375 * C152258 + C671 * C151911) * C134210) *
               C151981 * C152368 -
           ((C2806 * C151911 + C16092 * C152258) * C134210 +
            (C1196 * C151911 + C16091 * C152258) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C347 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C1196 * C152258 + C1197 * C151911) * C152364 +
            (C2806 * C152258 + C2805 * C151911) * C134210) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C152258) * C134210 +
            (C669 * C151911 + C670 * C152258) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C669 * C152258 + C668 * C151911) * C152364 +
            (C672 * C152258 + C673 * C151911) * C134210) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C152258) * C134210 +
            (C1198 * C151911 + C1197 * C152258) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152352 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C15374 * C152258 + C670 * C151911) * C152364 +
           (C15375 * C152258 + C671 * C151911) * C134210) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C152258) * C134210 +
           (C669 * C151911 + C670 * C152258) * C152364 +
           (C194 * C151911 + C193 * C152258) * C152363) *
              C151981 * C151963 * C130 +
          ((C194 * C152258 + C195 * C151911) * C152363 +
           (C669 * C152258 + C668 * C151911) * C152364 +
           (C672 * C152258 + C673 * C151911) * C134210) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C152258) * C134210 +
           (C674 * C151911 + C668 * C152258) * C152364 +
           (C196 * C151911 + C195 * C152258) * C152363) *
              C151981 * C151963 * C132 +
          ((C196 * C152258 + C197 * C151911) * C152363 +
           (C674 * C152258 + C961 * C151911) * C152364 +
           (C675 * C152258 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C134210) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C1345 -
           ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
               C151981 * C1346 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C1345 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C1346 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C134648 + C134649) * C152364 + C134666 * C134210) *
              C151981 * C1433 -
          ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
               C152363) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
            C434 * C151911) *
               C152363 +
           (C16692 * C152258 + C2033 * C151911) * C152364 +
           (C16693 * C152258 + C15117 * C151911) * C134210) *
              C151981 * C1435 -
          ((C16905 * C151911 + C17409 * C152258) * C134210 +
           (C16906 * C151911 + C17408 * C152258) * C152364 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
               C152363) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152258 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C152363 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152258 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C152364 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C152258 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C2325 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C2326 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C151963 * C152365 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            (C134658 + C134659) * C134210) *
               C2326 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C2325 -
           ((C15378 * C151911 + C15377 * C152258) * C134210 +
            (C134659 + C134658) * C152364 + C134667 * C152363) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C2325 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C2326 +
           (C134668 * C152363 + (C134665 + C134664) * C152364 +
            (C15378 * C152258 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C2325 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C2326 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C152368 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            (C135921 + C135922) * C134210) *
               C2326 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C2325 -
           ((C18308 * C151911 + C18718 * C152258) * C134210 +
            (C135922 + C135921) * C152364 + C135923 * C152363) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C2325 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C2326 +
           (C135930 * C152363 + (C135929 + C135928) * C152364 +
            (C118983 * C152258 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C4241 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152279 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C4241) *
               C152026) *
              C151940 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C4241) *
               C152279 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C4241 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C152258 + C195 * C151911) * C152363 +
             (C134660 + C134661) * C152364 + C134668 * C134210) *
                C4241 -
            ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
             (C134661 + C134660) * C152363) *
                C152068) *
               C152279 +
           (((C135359 + C135360) * C152363 + (C135361 + C135362) * C152364 +
             (C16094 * C152258 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C134210) *
                C152068 -
            ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
             (C431 * C151911 + C432 * C152258) * C152363) *
                C4241) *
               C152026) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152064 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152071 +
            (C134666 * C152363 + (C134653 + C134652) * C152364 +
             C137180 * C134210) *
                C4913) *
               C152279 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152071 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152064 -
            ((C137866 + C137867) * C134210 + (C135922 + C135921) * C152364 +
             C135923 * C152363) *
                C4913) *
               C152026) *
              C3375 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152071 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152064 -
            ((C137669 + C137670) * C134210 + (C134659 + C134658) * C152364 +
             C134667 * C152363) *
                C4913) *
               C152279 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C152064 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152071 +
            (C137471 * C152363 + (C137473 + C137472) * C152364 +
             (C18308 * C152258 +
              (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C151911) *
                 C134210) *
                C4913) *
               C152026) *
              C151946)) /
        (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C4241 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152368 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
              C434 * C151911) *
                 C152363 +
             (C135924 + C135925) * C152364 + C135930 * C134210) *
                C4241 -
            ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
             (C135925 + C135924) * C152363) *
                C152068) *
               C152321) *
              C3375 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C4241) *
               C152368 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C4241 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152352 +
           (((C136415 + C136416) * C152363 + (C136417 + C136418) * C152364 +
             (C16694 * C152258 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C134210) *
                C152068 -
            ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
             (C435 * C151911 + C434 * C152258) * C152363) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C4241 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C151963 * C152374 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            C137668 * C134210) *
               C152068 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C4241 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152068) *
              C151963 * C152350 +
          (((C135057 + C135058) * C152363 + (C135059 + C135060) * C152364 +
            (C2957 * C152258 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C134210) *
               C152068 -
           ((C135060 + C135059) * C134210 + (C135058 + C135057) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152376 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152373 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            C137180 * C134210) *
               C152360 -
           ((C137178 + C137179) * C134210 + (C137177 + C137176) * C152364 +
            C137175 * C152363) *
               C152337) *
              C151963 * C3375 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            C137668 * C134210) *
               C152373 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C152376 -
           ((C137669 + C137670) * C134210 + (C134659 + C134658) * C152364 +
            C134667 * C152363) *
               C152360 +
           (C137668 * C152363 + (C137670 + C137669) * C152364 +
            (C18001 * C152258 +
             (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C151911) *
                C134210) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152064 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152071 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            C137180 * C134210) *
               C4913) *
              C151963 * C151940 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            C137668 * C134210) *
               C152071 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C152064 -
           ((C137669 + C137670) * C134210 + (C134659 + C134658) * C152364 +
            C134667 * C152363) *
               C4913) *
              C151963 * C151949 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C152064 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152071 +
           (C134668 * C152363 + (C134665 + C134664) * C152364 +
            (C15378 * C152258 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C134210) *
               C4913) *
              C151963 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C4241 -
           (C137175 * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C151963 * C152374 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            C137668 * C134210) *
               C152068 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C4241 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152068) *
              C151963 * C152350 +
          (((C135057 + C135058) * C152363 + (C135059 + C135060) * C152364 +
            (C2957 * C152258 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C134210) *
               C152068 -
           ((C135060 + C135059) * C134210 + (C135058 + C135057) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C4241 -
            (C137175 * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152368 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             C137865 * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
              C434 * C151911) *
                 C152363 +
             (C135924 + C135925) * C152364 + C135930 * C134210) *
                C4241 -
            ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
             (C135925 + C135924) * C152363) *
                C152068) *
               C152321) *
              C3375 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             C137668 * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C4241) *
               C152368 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + C137471 * C134210) *
                C4241 -
            ((C137472 + C137473) * C134210 + (C135358 + C135357) * C152364 +
             (C135356 + C135355) * C152363) *
                C152068) *
               C152352 +
           (((C136415 + C136416) * C152363 + (C136417 + C136418) * C152364 +
             (C16694 * C152258 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C134210) *
                C152068 -
            ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
             (C435 * C151911 + C434 * C152258) * C152363) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C152279 -
           ((C2806 * C151911 + C16092 * C152258) * C134210 +
            (C1196 * C151911 + C16091 * C152258) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152026) *
              C807 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C1196 * C152258 + C1197 * C151911) * C152364 +
            (C2806 * C152258 + C2805 * C151911) * C134210) *
               C151981 * C152026 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152279) *
              C808 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C152279 -
           ((C2804 * C151911 + C2805 * C152258) * C134210 +
            (C1198 * C151911 + C1197 * C152258) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152026) *
              C809 +
          (((C431 * C152258 + C437 * C151911) * C152363 +
            (C1198 * C152258 + C1199 * C151911) * C152364 +
            (C2804 * C152258 +
             (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C151911) *
                C134210) *
               C151981 * C152026 -
           ((C675 * C151911 + C673 * C152258) * C134210 +
            (C674 * C151911 + C668 * C152258) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C1795 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C151981 * C1797 -
           ((C16905 * C151911 + C17409 * C152258) * C134210 +
            (C16906 * C151911 + C17408 * C152258) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
               C151981 * C1796 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C1795 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C1797 +
           ((C1820 * C152258 + C1819 * C151911) * C152363 +
            (C16906 * C152258 + C33767 * C151911) * C152364 +
            (C16905 * C152258 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C151911) *
                C134210) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152280 -
            ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C152279 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             (C16691 * C152258 + C16093 * C151911) * C134210) *
                C152068 -
            ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152280) *
               C152026) *
              C347 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             (C134658 + C134659) * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152280) *
               C152279 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
                C152280 -
            ((C16094 * C151911 + C16093 * C152258) * C134210 +
             (C135358 + C135357) * C152364 + (C135356 + C135355) * C152363) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C152258 + C195 * C151911) * C152363 +
             (C134660 + C134661) * C152364 + C134668 * C134210) *
                C152280 -
            ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
             (C134661 + C134660) * C152363) *
                C152068) *
               C152279 +
           (((C135359 + C135360) * C152363 + (C135361 + C135362) * C152364 +
             (C16094 * C152258 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C151911) *
                 C134210) *
                C152068 -
            ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
             (C431 * C151911 + C432 * C152258) * C152363) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152280 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C1795 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            (C135921 + C135922) * C134210) *
               C152068 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C152280 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152068) *
              C1797 +
          (((C136613 + C136614) * C152363 + (C136615 + C136616) * C152364 +
            (C119449 * C152258 +
             (C134 * C10326 + C17403 + C17403 + C152146 * C10330) * C151911) *
                C134210) *
               C152068 -
           ((C136616 + C136615) * C134210 + (C136614 + C136613) * C152364 +
            (C1820 * C151911 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
                C152363) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C15374 * C152258 + C670 * C151911) * C152364 +
            (C15375 * C152258 + C671 * C151911) * C134210) *
               C151981 * C152368 -
           ((C2806 * C151911 + C16092 * C152258) * C134210 +
            (C1196 * C151911 + C16091 * C152258) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C347 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C1196 * C152258 + C1197 * C151911) * C152364 +
            (C2806 * C152258 + C2805 * C151911) * C134210) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C152258) * C134210 +
            (C669 * C151911 + C670 * C152258) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C669 * C152258 + C668 * C151911) * C152364 +
            (C672 * C152258 + C673 * C151911) * C134210) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C152258) * C134210 +
            (C1198 * C151911 + C1197 * C152258) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152352 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C15374 * C152258 + C670 * C151911) * C152364 +
           (C15375 * C152258 + C671 * C151911) * C134210) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C152258) * C134210 +
           (C669 * C151911 + C670 * C152258) * C152364 +
           (C194 * C151911 + C193 * C152258) * C152363) *
              C151981 * C151963 * C130 +
          ((C194 * C152258 + C195 * C151911) * C152363 +
           (C669 * C152258 + C668 * C151911) * C152364 +
           (C672 * C152258 + C673 * C151911) * C134210) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C152258) * C134210 +
           (C674 * C151911 + C668 * C152258) * C152364 +
           (C196 * C151911 + C195 * C152258) * C152363) *
              C151981 * C151963 * C132 +
          ((C196 * C152258 + C197 * C151911) * C152363 +
           (C674 * C152258 + C961 * C151911) * C152364 +
           (C675 * C152258 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C134210) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152369 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152354 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C151963 * C347 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            (C134658 + C134659) * C134210) *
               C152354 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C152369 -
           ((C15378 * C151911 + C15377 * C152258) * C134210 +
            (C134659 + C134658) * C152364 + C134667 * C152363) *
               C152324) *
              C151963 * C348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C152369 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152354 +
           (C134668 * C152363 + (C134665 + C134664) * C152364 +
            (C15378 * C152258 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C151911) *
                C134210) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C1345 -
           ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
               C151981 * C1346 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C1345 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C1346 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C134648 + C134649) * C152364 + C134666 * C134210) *
              C151981 * C1433 -
          ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
               C152363) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
            C434 * C151911) *
               C152363 +
           (C16692 * C152258 + C2033 * C151911) * C152364 +
           (C16693 * C152258 + C15117 * C151911) * C134210) *
              C151981 * C1435 -
          ((C16905 * C151911 + C17409 * C152258) * C134210 +
           (C16906 * C151911 + C17408 * C152258) * C152364 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
               C152363) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152258 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C152363 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152258 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C152364 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C152258 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152369 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152354 +
           (C134666 * C152363 + (C134653 + C134652) * C152364 +
            (C18000 * C152258 + C15377 * C151911) * C134210) *
               C152324) *
              C1345 +
          (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
            (C135921 + C135922) * C134210) *
               C152354 -
           (C135923 * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C152369 -
           ((C18308 * C151911 + C18718 * C152258) * C134210 +
            (C135922 + C135921) * C152364 + C135923 * C152363) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C135924 + C135925) * C152364 + C135930 * C134210) *
               C152369 -
           ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
            (C135925 + C135924) * C152363) *
               C152354 +
           (C135930 * C152363 + (C135929 + C135928) * C152364 +
            (C118983 * C152258 +
             (C134 * C9580 + C16680 + C16680 + C152146 * C9592) * C151911) *
                C134210) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C152280 -
           ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
            (C134649 + C134648) * C152363) *
               C152068) *
              C151963 * C807 +
          (((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
            (C134658 + C134659) * C134210) *
               C152068 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C152280) *
              C151963 * C808 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C152280 -
           ((C134664 + C134665) * C134210 + (C134663 + C134662) * C152364 +
            (C134661 + C134660) * C152363) *
               C152068) *
              C151963 * C809 +
          (((C135057 + C135058) * C152363 + (C135059 + C135060) * C152364 +
            (C2957 * C152258 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C151911) *
                C134210) *
               C152068 -
           ((C135060 + C135059) * C134210 + (C135058 + C135057) * C152364 +
            (C196 * C151911 + C195 * C152258) * C152363) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
              C193 * C151911) *
                 C152363 +
             (C134648 + C134649) * C152364 + C134666 * C134210) *
                C152280 -
            ((C134652 + C134653) * C134210 + (C134651 + C134650) * C152364 +
             (C134649 + C134648) * C152363) *
                C152068) *
               C1345 +
           (((C135351 + C135352) * C152363 + (C135353 + C135354) * C152364 +
             (C135921 + C135922) * C134210) *
                C152068 -
            (C135923 * C134210 + (C135352 + C135351) * C152364 +
             (C433 * C151911 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                 C152363) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
              C434 * C151911) *
                 C152363 +
             (C135924 + C135925) * C152364 + C135930 * C134210) *
                C152280 -
            ((C135928 + C135929) * C134210 + (C135927 + C135926) * C152364 +
             (C135925 + C135924) * C152363) *
                C152068) *
               C152321) *
              C152265 +
          ((((C134654 + C134655) * C152363 + (C134656 + C134657) * C152364 +
             (C134658 + C134659) * C134210) *
                C152068 -
            (C134667 * C134210 + (C134655 + C134654) * C152364 +
             (C194 * C151911 + C193 * C152258) * C152363) *
                C152280) *
               C1345 +
           (((C433 * C152258 + C432 * C151911) * C152363 +
             (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
                C152280 -
            ((C16094 * C151911 + C16093 * C152258) * C134210 +
             (C135358 + C135357) * C152364 + (C135356 + C135355) * C152363) *
                C152068) *
               C1346 +
           (((C136415 + C136416) * C152363 + (C136417 + C136418) * C152364 +
             (C16694 * C152258 +
              (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C151911) *
                 C134210) *
                C152068 -
            ((C136418 + C136417) * C134210 + (C136416 + C136415) * C152364 +
             (C435 * C151911 + C434 * C152258) * C152363) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C15374 * C152258 + C670 * C151911) * C152364 +
           (C15375 * C152258 + C671 * C151911) * C134210) *
              C151981 * C151963 * C129 -
          ((C672 * C151911 + C671 * C152258) * C134210 +
           (C669 * C151911 + C670 * C152258) * C152364 +
           (C194 * C151911 + C193 * C152258) * C152363) *
              C151981 * C151963 * C130 +
          ((C194 * C152258 + C195 * C151911) * C152363 +
           (C669 * C152258 + C668 * C151911) * C152364 +
           (C672 * C152258 + C673 * C151911) * C134210) *
              C151981 * C151963 * C131 -
          ((C675 * C151911 + C673 * C152258) * C134210 +
           (C674 * C151911 + C668 * C152258) * C152364 +
           (C196 * C151911 + C195 * C152258) * C152363) *
              C151981 * C151963 * C132 +
          ((C196 * C152258 + C197 * C151911) * C152363 +
           (C674 * C152258 + C961 * C151911) * C152364 +
           (C675 * C152258 +
            (C134 * C598 + C651 + C651 + C152146 * C622) * C151911) *
               C134210) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C15374 * C152258 + C670 * C151911) * C152364 +
            (C15375 * C152258 + C671 * C151911) * C134210) *
               C151981 * C152368 -
           ((C2806 * C151911 + C16092 * C152258) * C134210 +
            (C1196 * C151911 + C16091 * C152258) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C347 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C1196 * C152258 + C1197 * C151911) * C152364 +
            (C2806 * C152258 + C2805 * C151911) * C134210) *
               C151981 * C152352 -
           ((C672 * C151911 + C671 * C152258) * C134210 +
            (C669 * C151911 + C670 * C152258) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C152368 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C669 * C152258 + C668 * C151911) * C152364 +
            (C672 * C152258 + C673 * C151911) * C134210) *
               C151981 * C152368 -
           ((C2804 * C151911 + C2805 * C152258) * C134210 +
            (C1198 * C151911 + C1197 * C152258) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C152352 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
             C193 * C151911) *
                C152363 +
            (C134648 + C134649) * C152364 + C134666 * C134210) *
               C151981 * C1345 -
           ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
            (C433 * C151911 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
                C152363) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
             C434 * C151911) *
                C152363 +
            (C16692 * C152258 + C2033 * C151911) * C152364 +
            (C16693 * C152258 + C15117 * C151911) * C134210) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C152258 + C432 * C151911) * C152363 +
            (C135355 + C135356) * C152364 + (C135357 + C135358) * C134210) *
               C151981 * C1346 -
           (C134667 * C134210 + (C134655 + C134654) * C152364 +
            (C194 * C151911 + C193 * C152258) * C152363) *
               C151981 * C1345 -
           ((C15118 * C151911 + C15117 * C152258) * C134210 +
            (C2032 * C151911 + C2033 * C152258) * C152364 +
            (C435 * C151911 + C434 * C152258) * C152363) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C152258 + C195 * C151911) * C152363 +
            (C134660 + C134661) * C152364 + C134668 * C134210) *
               C151981 * C1345 -
           ((C135362 + C135361) * C134210 + (C135360 + C135359) * C152364 +
            (C431 * C151911 + C432 * C152258) * C152363) *
               C151981 * C1346 +
           ((C435 * C152258 + C436 * C151911) * C152363 +
            (C2032 * C152258 + C2031 * C151911) * C152364 +
            (C15118 * C152258 +
             (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C151911) *
                C134210) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C152258 +
            C193 * C151911) *
               C152363 +
           (C134648 + C134649) * C152364 + C134666 * C134210) *
              C151981 * C1433 -
          ((C135354 + C135353) * C134210 + (C135352 + C135351) * C152364 +
           (C433 * C151911 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C152258) *
               C152363) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C152258 +
            C434 * C151911) *
               C152363 +
           (C16692 * C152258 + C2033 * C151911) * C152364 +
           (C16693 * C152258 + C15117 * C151911) * C134210) *
              C151981 * C1435 -
          ((C16905 * C151911 + C17409 * C152258) * C134210 +
           (C16906 * C151911 + C17408 * C152258) * C152364 +
           (C1820 * C151911 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C152258) *
               C152363) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C152258 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C151911) *
               C152363 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C152258 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C151911) *
               C152364 +
           ((C134 * C8253 + C16441 + C16441 + C152146 * C8265) * C152258 +
            (C134 * C8254 + C16442 + C16442 + C152146 * C8266) * C151911) *
               C134210) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152022 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152029 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C3719) *
              C151940 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152029 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152022 -
           ((C103565 + C103564 + C103563) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C3719) *
              C151949 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C152022 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152029 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152022 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152029 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C3719) *
              C151940 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152029 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152022 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C3719) *
              C151949 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152022 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152029 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152022 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C152280 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C3719) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C152022 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152029 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152022 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C152280 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C3719) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C152022 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C152280) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152375 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C152357 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152371 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152375 -
           ((C103565 + C103564 + C103563) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152357 +
           ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
            (C16906 * C51060 + C33767 * C51061 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C3235 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152026 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C3235 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
            (C1198 * C51060 + C1199 * C51061 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                C152226) *
               C151981 * C152026 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152369 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152354 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C152324) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152354 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152369 -
            ((C105011 + C105012 + C105013) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C152324) *
               C152026) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152354 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152369 -
            ((C104814 + C104815 + C104816) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C152324) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152369 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152354 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C3235 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C3235 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152375 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C152357 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152371 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152375 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152369 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152354 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C152324) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152354 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152369 -
            ((C113312 + C113313 + C113314) * C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C152324) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152354 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152369 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C152324) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152369 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152354 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152026) *
              C151940 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C152280 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C3235 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C152280 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C152280) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C3235 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152026) *
              C152374 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152026 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C3235 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
            (C1198 * C51060 + C1199 * C51061 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                C152226) *
               C151981 * C152026 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152375 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152371 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C152357 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C151981 * C152331) *
              C3375 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C152371 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152375 -
           ((C103565 + C103564 + C103563) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152357 +
           ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
            (C16906 * C51060 + C33767 * C51061 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C3235 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C152374 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C3235) *
              C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C3235 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C152350 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C3235) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152375 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152371 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C152357 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C3375 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152371 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152375 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152357 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152022 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152029 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C4241 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C3719) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152022 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152029 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152022 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152029 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C4241 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C3719) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152022 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152029 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C4241) *
               C3719) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152064 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152071 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C4913) *
              C152022 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152071 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152064 -
           ((C105011 + C105012 + C105013) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C4913) *
              C152029 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152064 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152071 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152064 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152071 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C4913) *
              C152022 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152071 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152064 -
           ((C113312 + C113313 + C113314) * C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C4913) *
              C152029 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152064 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152071 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C4913) *
              C3719) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C4241 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C152375 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152068 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C4241 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152068) *
              C152357 +
          (((C103760 + C103761 + C103762) * C101365 +
            (C17409 * C51060 + C16905 * C51061 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                C152226) *
               C152068 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C4241 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C3235 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152376 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152373 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C152360 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C3235 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152373 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152376 -
           ((C105011 + C105012 + C105013) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152360 +
           ((C105013 + C105012 + C105011) * C101365 +
            (C18718 * C51060 + C18308 * C51061 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C51062) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C4241 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C152375 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C4241 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C152357 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152376 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152373 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C152360 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C3235 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152373 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152376 -
           ((C113312 + C113313 + C113314) * C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152360 +
           ((C113314 + C113313 + C113312) * C151906 * C101365 +
            (C6223 * C9577 + C113303 + C113303 + C6218 * C9589 + C6225 * C9578 +
             C113304 + C113304 + C6219 * C9590 + C6227 * C61693 + C113305 +
             C113305 + C6220 * C61695) *
                C151906 * C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152064 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152071 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C4913) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152071 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152064 -
            ((C105011 + C105012 + C105013) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C4913) *
               C152026) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152071 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152064 -
            ((C104814 + C104815 + C104816) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C4913) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152064 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152071 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152064 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152071 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C4913) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152071 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152064 -
            ((C113312 + C113313 + C113314) * C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C4913) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152071 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152064 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C4913) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152064 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152071 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C3235 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C3235 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C4241 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C3235 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C4241 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C152375 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152068 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C4241) *
              C152371 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C4241 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152068) *
              C152357 +
          (((C103760 + C103761 + C103762) * C101365 +
            (C17409 * C51060 + C16905 * C51061 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                C152226) *
               C152068 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152026) *
              C152365 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C3235 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C152348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C4241 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C3235 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C4241) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C152375 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C4241) *
              C152371 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C4241 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C152357 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C4241) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1795 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C1797 -
           ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1796 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1795 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C1797 +
           ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
            (C16906 * C51060 + C33767 * C51061 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152279 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152026) *
              C807 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152026 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152279) *
              C808 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C152279 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152026) *
              C809 +
          (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
            (C1198 * C51060 + C1199 * C51061 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                C152226) *
               C151981 * C152026 -
           ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C2325 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C2326 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C152324) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C2326 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C2325 -
            ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C152324) *
               C152026) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C2326 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C2325 -
            ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C152324) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C2325 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C2326 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152279 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152279 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1795 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C1797 -
           ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
             C6218 * C2171) *
                C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1796 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1795 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C2325 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C2326 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C152324) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C2326 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C2325 -
            ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 +
              C6225 * C9576 + C10333 + C10333 + C6219 * C9588 + C6223 * C3089 +
              C10332 + C10332 + C6218 * C3097) *
                 C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C152324) *
               C152026) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C2326 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C2325 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C152324) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C2325 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C2326 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C152324) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152280 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C1795 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152068 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152280 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152068) *
              C1797 +
          (((C103760 + C103761 + C103762) * C101365 +
            (C17409 * C51060 + C16905 * C51061 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                C152226) *
               C152068 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C16092 * C51060 + C2806 * C51061 + C2805 * C51062) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C152280 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C152279 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2936 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2937 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C2938 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C152279 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C2937 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C2936 -
           ((C105011 + C105012 + C105013) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C2938 +
           ((C105013 + C105012 + C105011) * C101365 +
            (C18718 * C51060 + C18308 * C51061 +
             (C134 * C18296 + C18305 + C18305 + C152146 * C18298) * C51062) *
                C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C6223 * C1620 + C8273 + C8273 + C6218 * C1644 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6227 * C8250 + C8271 + C8271 +
              C6220 * C8262) *
                 C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C152280 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C1795 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152280 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C1797 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2936 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2937 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C2938 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C152279 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C2937 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C2936 -
           ((C113312 + C113313 + C113314) * C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C2938 +
           ((C113314 + C113313 + C113312) * C151906 * C101365 +
            (C6223 * C9577 + C113303 + C113303 + C6218 * C9589 + C6225 * C9578 +
             C113304 + C113304 + C6219 * C9590 + C6227 * C61693 + C113305 +
             C113305 + C6220 * C61695) *
                C151906 * C152226) *
               C152337) *
              C152026) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                C193 * C51061 + C194 * C51062) *
                   C101365 +
               (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
                  C151981 * C151963 * C129 -
              ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
               (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                  C151981 * C151963 * C130 +
              ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
               (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
                  C151981 * C151963 * C131 -
              ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
               (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
                  C151981 * C151963 * C132 +
              ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
               (C674 * C51060 + C961 * C51061 +
                (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
                   C152226) *
                  C151981 * C151963 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
                 C193 * C51061 + C194 * C51062) *
                    C101365 +
                (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
                   C151981 * C152368 -
               ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
                (C432 * C51062 + C433 * C51061 +
                 (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                    C101365) *
                   C151981 * C152352 +
               (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
                 C434 * C51061 + C435 * C51062) *
                    C101365 +
                (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
                   C151981 * C152321) *
                  C347 +
              (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
                (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
                   C151981 * C152352 -
               ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
                (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                   C151981 * C152368 -
               ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
                (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                   C151981 * C152321) *
                  C348 +
              (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
                (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
                   C151981 * C152368 -
               ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
                (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                   C151981 * C152352 +
               ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
                (C2032 * C51060 + C2031 * C51061 +
                 (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                    C152226) *
                   C151981 * C152321) *
                  C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152369 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152354 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152354 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152369 -
           ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152324) *
              C151963 * C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152369 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152354 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152369 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152354 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C1345 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152354 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152369 -
           ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152369 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152354 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2325 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2326 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C2326 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C2325 -
           ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C2325 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C2326 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2325 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2326 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C152368 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C2326 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C2325 -
           ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C2325 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C2326 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C2556 -
          ((C101807 + C101808 + C101809) * C152226 +
           (C101806 + C101805 + C101804) * C101365) *
              C2557 +
          ((C101809 + C101808 + C101807) * C101365 +
           (C104321 + C104322 + C104323) * C152226) *
              C2558 -
          ((C104324 + C104325 + C104326) * C152226 +
           (C104323 + C104322 + C104321) * C101365) *
              C2559 +
          ((C104326 + C104325 + C104324) * C101365 +
           (C18002 * C51060 + C18001 * C51061 +
            (C134 * C18502 + C18509 + C18509 + C152146 * C18504) * C51062) *
               C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152354 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152369 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152369 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152354 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C1345 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152354 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152369 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152369 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152354 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C2326 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C2325 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C2325 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C2326 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C152368 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C2326 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C2325 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C2325 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C2326 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C2556 -
          ((C110027 + C110028 + C110029) * C151906 * C152226 +
           (C110026 + C110025 + C110024) * C151906 * C101365) *
              C2557 +
          ((C110029 + C110028 + C110027) * C151906 * C101365 +
           (C112613 + C112614 + C112615) * C151906 * C152226) *
              C2558 -
          ((C112616 + C112617 + C112618) * C151906 * C152226 +
           (C112615 + C112614 + C112613) * C151906 * C101365) *
              C2559 +
          ((C112618 + C112617 + C112616) * C151906 * C101365 +
           (C6223 * C17970 + C112598 + C112598 + C6218 * C17978 +
            C6225 * C18703 + C112599 + C112599 + C6219 * C18707 +
            C6227 * C69051 + C112600 + C112600 + C6220 * C69053) *
               C151906 * C152226) *
              C2560) *
         C151963 * C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C1345 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C152280 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C1345 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C1346 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152280 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C151963 * C807 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152068 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152280) *
              C151963 * C808 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152280 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152068) *
              C151963 * C809 +
          (((C102210 + C102211 + C102212) * C101365 +
            (C673 * C51060 + C675 * C51061 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                C152226) *
               C152068 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2936 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2937 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C2938 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C151963 * C152265 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C2937 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C2936 -
           ((C104814 + C104815 + C104816) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C2938 +
           ((C104816 + C104815 + C104814) * C101365 +
            (C15377 * C51060 + C15378 * C51061 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C51062) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152280 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C1345 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C152280 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2936 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2937 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C2938 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C151963 * C152265 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C2937 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C2936 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C2938 +
           ((C10131 + C10130 + C10129) * C151906 * C101365 +
            (C6223 * C2566 + C9603 + C9603 + C6218 * C2582 + C6225 * C9579 +
             C9604 + C9604 + C6219 * C9591 + C6227 * C9580 + C9605 + C9605 +
             C6220 * C9592) *
                C151906 * C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152352 -
           ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152368 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152352 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
           (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
              C151981 * C151963 * C130 +
          ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
           (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
           (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
              C151981 * C151963 * C132 +
          ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
           (C674 * C51060 + C961 * C51061 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2325 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2326 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C2326 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C2325 -
           ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C2325 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C2326 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C2325 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C2326 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C152368 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C2326 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C2325 -
           ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152324) *
              C152352 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C2325 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C2326 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152365 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C2326 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C2325 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C2325 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C2326 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C2325 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C2326 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C152368 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C2326 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C2325 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C152352 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C2325 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C2326 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152026) *
              C151940 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C4241 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C152279 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152026) *
              C151940 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C151949 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C4241 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C4241) *
               C152026) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152064 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152071 +
            ((C101809 + C101808 + C101807) * C101365 +
             (C104321 + C104322 + C104323) * C152226) *
                C4913) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152071 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152064 -
            ((C105011 + C105012 + C105013) * C152226 +
             (C103072 + C103071 + C103070) * C101365) *
                C4913) *
               C152026) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152071 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152064 -
            ((C104814 + C104815 + C104816) * C152226 +
             (C101815 + C101814 + C101813) * C101365) *
                C4913) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152064 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152071 +
            ((C104619 + C104618 + C104617) * C101365 +
             (C16093 * C51060 + C16094 * C51061 +
              (C134 * C3092 + C3105 + C3105 + C152146 * C3100) * C51062) *
                 C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152064 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152071 +
            ((C110029 + C110028 + C110027) * C151906 * C101365 +
             (C112613 + C112614 + C112615) * C151906 * C152226) *
                C4913) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152071 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152064 -
            ((C113312 + C113313 + C113314) * C151906 * C152226 +
             (C111325 + C111324 + C111323) * C151906 * C101365) *
                C4913) *
               C152026) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152071 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152064 -
            ((C10129 + C10130 + C10131) * C151906 * C152226 +
             (C6905 + C6904 + C6903) * C151906 * C101365) *
                C4913) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152064 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152071 +
            ((C9916 + C9915 + C9914) * C151906 * C101365 +
             (C6223 * C3090 + C10335 + C10335 + C6218 * C3098 + C6225 * C9575 +
              C10336 + C10336 + C6219 * C9587 + C6227 * C10326 + C10337 +
              C10337 + C6220 * C10330) *
                 C151906 * C152226) *
                C4913) *
               C152026) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152368 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C4241 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152368 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152352 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C4241 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152068 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C4241 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C102210 + C102211 + C102212) * C101365 +
            (C673 * C51060 + C675 * C51061 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                C152226) *
               C152068 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152376 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152373 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C152360 -
           ((C104324 + C104325 + C104326) * C152226 +
            (C104323 + C104322 + C104321) * C101365) *
               C152337) *
              C151963 * C3375 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152373 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152376 -
           ((C104814 + C104815 + C104816) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152360 +
           ((C104816 + C104815 + C104814) * C101365 +
            (C15377 * C51060 + C15378 * C51061 +
             (C134 * C2568 + C2593 + C2593 + C152146 * C2584) * C51062) *
                C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C4241 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152368 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C4241 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152376 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152373 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C152360 -
           ((C112616 + C112617 + C112618) * C151906 * C152226 +
            (C112615 + C112614 + C112613) * C151906 * C101365) *
               C152337) *
              C151963 * C3375 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152373 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152376 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152360 +
           ((C10131 + C10130 + C10129) * C151906 * C101365 +
            (C6223 * C2566 + C9603 + C9603 + C6218 * C2582 + C6225 * C9579 +
             C9604 + C9604 + C6219 * C9591 + C6227 * C9580 + C9605 + C9605 +
             C6220 * C9592) *
                C151906 * C152226) *
               C152337) *
              C151963 * C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152064 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152071 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C104321 + C104322 + C104323) * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152071 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152064 -
           ((C104814 + C104815 + C104816) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C4913) *
              C151963 * C151949 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152064 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152071 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152064 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152071 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C112613 + C112614 + C112615) * C151906 * C152226) *
               C4913) *
              C151963 * C151940 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152071 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152064 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C4913) *
              C151963 * C151949 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152064 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152071 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C4913) *
              C151963 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C4241 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152068 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C4241 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C102210 + C102211 + C102212) * C101365 +
            (C673 * C51060 + C675 * C51061 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                C152226) *
               C152068 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C4241 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152368 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C4241) *
               C152352 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C4241 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C4241) *
               C152368 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C4241 -
            ((C104617 + C104618 + C104619) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152352 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C4241 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C152374 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C4241) *
              C151963 * C152367 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C4241 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C152350 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C4241) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C4241 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152368 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C4241) *
               C152352 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C4241 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C3375 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C4241) *
               C152368 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C4241 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152352 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C4241) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C152279 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152026) *
              C807 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152026 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152279) *
              C808 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C152279 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152026) *
              C809 +
          (((C431 * C51060 + C437 * C51061 + C820 * C51062) * C101365 +
            (C1198 * C51060 + C1199 * C51061 +
             (C134 * C1160 + C1187 + C1187 + C152146 * C1172) * C51062) *
                C152226) *
               C151981 * C152026 -
           ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1795 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1796 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C151981 * C1797 -
           ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C151981 * C152331) *
              C152265 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1796 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1795 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C1797 +
           ((C1820 * C51060 + C1819 * C51061 + C1818 * C51062) * C101365 +
            (C16906 * C51060 + C33767 * C51061 +
             (C134 * C2166 + C2179 + C2179 + C152146 * C2174) * C51062) *
                C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C152279 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152026) *
              C807 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152026 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152279) *
              C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152279 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152026) *
              C809 +
          (((C7123 + C7122 + C7121) * C151906 * C101365 +
            (C6223 * C1158 + C7647 + C7647 + C6218 * C1170 + C6225 * C1621 +
             C7648 + C7648 + C6219 * C1645 + C6227 * C2166 + C7649 + C7649 +
             C6220 * C2174) *
                C151906 * C152226) *
               C151981 * C152026 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C151981 * C152279) *
              C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1795 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1796 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C151981 * C1797 -
           ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
             C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
             C6218 * C2171) *
                C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C151981 * C152331) *
              C152265 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1796 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1795 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C1797 +
           ((C8500 + C8499 + C8498) * C151906 * C101365 +
            (C6223 * C2164 + C9015 + C9015 + C6218 * C2172 + C6225 * C8251 +
             C9016 + C9016 + C6219 * C8263 + C6227 * C9006 + C9017 + C9017 +
             C6220 * C9010) *
                C151906 * C152226) *
               C151981 * C152331) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C152279 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C16092 * C51060 + C2806 * C51061 + C2805 * C51062) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C152279 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
             (C101816 + C101817 + C101818) * C152226) *
                C152280 -
            ((C101819 + C101820 + C101821) * C152226 +
             (C101818 + C101817 + C101816) * C101365) *
                C152068) *
               C152279 +
           (((C102509 + C102510 + C102511) * C101365 +
             (C2805 * C51060 + C2804 * C51061 +
              (C134 * C2787 + C2797 + C2797 + C152146 * C2789) * C51062) *
                 C152226) *
                C152068 -
            ((C102511 + C102510 + C102509) * C152226 +
             (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152280 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C1795 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152068 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152280) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152280 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152068) *
              C1797 +
          (((C103760 + C103761 + C103762) * C101365 +
            (C17409 * C51060 + C16905 * C51061 +
             (C134 * C9895 + C16900 + C16900 + C152146 * C9897) * C51062) *
                C152226) *
               C152068 -
           ((C103762 + C103761 + C103760) * C152226 +
            (C1819 * C51062 + C1820 * C51061 +
             (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
                C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C6223 * C1620 + C8273 + C8273 + C6218 * C1644 + C6225 * C1625 +
              C8272 + C8272 + C6219 * C1649 + C6227 * C8250 + C8271 + C8271 +
              C6220 * C8262) *
                 C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C152026) *
              C347 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C152279 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C152026) *
              C348 +
          ((((C6301 + C6300 + C6299) * C151906 * C101365 +
             (C6906 + C6907 + C6908) * C151906 * C152226) *
                C152280 -
            ((C6909 + C6910 + C6911) * C151906 * C152226 +
             (C6908 + C6907 + C6906) * C151906 * C101365) *
                C152068) *
               C152279 +
           (((C7667 + C7666 + C7665) * C151906 * C101365 +
             (C6223 * C1618 + C9905 + C9905 + C6218 * C1642 + C6225 * C1627 +
              C9906 + C9906 + C6219 * C1651 + C6227 * C9895 + C9907 + C9907 +
              C6220 * C9897) *
                 C151906 * C152226) *
                C152068 -
            ((C7665 + C7666 + C7667) * C151906 * C152226 +
             (C6606 + C6605 + C6604) * C151906 * C101365) *
                C152280) *
               C152026) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C1795 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152068 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152280) *
              C1796 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152280 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152068) *
              C1797 +
          (((C112025 + C112026 + C112027) * C151906 * C101365 +
            (C6223 * C8250 + C112016 + C112016 + C6218 * C8262 + C6225 * C8253 +
             C112017 + C112017 + C6219 * C8265 + C6227 * C60835 + C112018 +
             C112018 + C6220 * C60837) *
                C151906 * C152226) *
               C152068 -
           ((C112027 + C112026 + C112025) * C151906 * C152226 +
            (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
             C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
             C6218 * C1458) *
                C151906 * C101365) *
               C152280) *
              C152331) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152352 -
           ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152368 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152352 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
           (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
              C151981 * C151963 * C130 +
          ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
           (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
           (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
              C151981 * C151963 * C132 +
          ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
           (C674 * C51060 + C961 * C51061 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152369 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152354 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C151963 * C347 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152354 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152369 -
           ((C2957 * C51062 + C2958 * C51061 + C2959 * C51060) * C152226 +
            (C101815 + C101814 + C101813) * C101365) *
               C152324) *
              C151963 * C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152369 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152354 +
           ((C101821 + C101820 + C101819) * C101365 +
            (C2958 * C51060 + C2957 * C51061 +
             (C134 * C2940 + C2950 + C2950 + C152146 * C2942) * C51062) *
                C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152369 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152354 +
           ((C101809 + C101808 + C101807) * C101365 +
            (C15376 * C51060 + C2959 * C51061 + C2958 * C51062) * C152226) *
               C152324) *
              C1345 +
          (((C102503 + C102504 + C102505) * C101365 +
            (C103070 + C103071 + C103072) * C152226) *
               C152354 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C152369 -
           ((C16094 * C51062 + C16093 * C51061 + C16691 * C51060) * C152226 +
            (C103072 + C103071 + C103070) * C101365) *
               C152324) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C103073 + C103074 + C103075) * C152226) *
               C152369 -
           ((C103076 + C103077 + C103078) * C152226 +
            (C103075 + C103074 + C103073) * C101365) *
               C152354 +
           ((C103078 + C103077 + C103076) * C101365 +
            (C16695 * C51060 + C16694 * C51061 +
             (C134 * C10110 + C17201 + C17201 + C152146 * C10112) * C51062) *
                C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C151963 * C347 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152354 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152369 -
           ((C10129 + C10130 + C10131) * C151906 * C152226 +
            (C6905 + C6904 + C6903) * C151906 * C101365) *
               C152324) *
              C151963 * C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152369 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152354 +
           ((C6911 + C6910 + C6909) * C151906 * C101365 +
            (C6223 * C2562 + C10120 + C10120 + C6218 * C2578 + C6225 * C3091 +
             C10121 + C10121 + C6219 * C3099 + C6227 * C10110 + C10122 +
             C10122 + C6220 * C10112) *
                C151906 * C152226) *
               C152324) *
              C151963 * C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152369 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152354 +
           ((C110029 + C110028 + C110027) * C151906 * C101365 +
            (C6223 * C2564 + C9599 + C9599 + C6218 * C2580 + C6225 * C3089 +
             C9598 + C9598 + C6219 * C3097 + C6227 * C9576 + C9597 + C9597 +
             C6220 * C9588) *
                C151906 * C152226) *
               C152324) *
              C1345 +
          (((C110720 + C110721 + C110722) * C151906 * C101365 +
            (C111323 + C111324 + C111325) * C151906 * C152226) *
               C152354 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C152369 -
           ((C6227 * C10325 + C10334 + C10334 + C6220 * C10329 + C6225 * C9576 +
             C10333 + C10333 + C6219 * C9588 + C6223 * C3089 + C10332 + C10332 +
             C6218 * C3097) *
                C151906 * C152226 +
            (C111325 + C111324 + C111323) * C151906 * C101365) *
               C152324) *
              C1346 +
          (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C111326 + C111327 + C111328) * C151906 * C152226) *
               C152369 -
           ((C111329 + C111330 + C111331) * C151906 * C152226 +
            (C111328 + C111327 + C111326) * C151906 * C101365) *
               C152354 +
           ((C111331 + C111330 + C111329) * C151906 * C101365 +
            (C6223 * C9576 + C111302 + C111302 + C6218 * C9588 +
             C6225 * C10325 + C111303 + C111303 + C6219 * C10329 +
             C6227 * C62166 + C111304 + C111304 + C6220 * C62168) *
                C151906 * C152226) *
               C152324) *
              C152321) *
         C151935) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C152280 -
           ((C101807 + C101808 + C101809) * C152226 +
            (C101806 + C101805 + C101804) * C101365) *
               C152068) *
              C151963 * C807 +
          (((C101810 + C101811 + C101812) * C101365 +
            (C101813 + C101814 + C101815) * C152226) *
               C152068 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C152280) *
              C151963 * C808 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C152280 -
           ((C101819 + C101820 + C101821) * C152226 +
            (C101818 + C101817 + C101816) * C101365) *
               C152068) *
              C151963 * C809 +
          (((C102210 + C102211 + C102212) * C101365 +
            (C673 * C51060 + C675 * C51061 +
             (C134 * C598 + C651 + C651 + C152146 * C622) * C51062) *
                C152226) *
               C152068 -
           ((C102212 + C102211 + C102210) * C152226 +
            (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
              C193 * C51061 + C194 * C51062) *
                 C101365 +
             (C101804 + C101805 + C101806) * C152226) *
                C152280 -
            ((C101807 + C101808 + C101809) * C152226 +
             (C101806 + C101805 + C101804) * C101365) *
                C152068) *
               C1345 +
           (((C102503 + C102504 + C102505) * C101365 +
             (C103070 + C103071 + C103072) * C152226) *
                C152068 -
            ((C102505 + C102504 + C102503) * C152226 +
             (C432 * C51062 + C433 * C51061 +
              (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                 C101365) *
                C152280) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
              C434 * C51061 + C435 * C51062) *
                 C101365 +
             (C103073 + C103074 + C103075) * C152226) *
                C152280 -
            ((C103076 + C103077 + C103078) * C152226 +
             (C103075 + C103074 + C103073) * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C101810 + C101811 + C101812) * C101365 +
             (C101813 + C101814 + C101815) * C152226) *
                C152068 -
            ((C101812 + C101811 + C101810) * C152226 +
             (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
                C152280) *
               C1345 +
           (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
             (C102506 + C102507 + C102508) * C152226) *
                C152280 -
            ((C2804 * C51062 + C2805 * C51061 + C2806 * C51060) * C152226 +
             (C102508 + C102507 + C102506) * C101365) *
                C152068) *
               C1346 +
           (((C103563 + C103564 + C103565) * C101365 +
             (C15117 * C51060 + C15118 * C51061 +
              (C134 * C1628 + C1665 + C1665 + C152146 * C1652) * C51062) *
                 C152226) *
                C152068 -
            ((C103565 + C103564 + C103563) * C152226 +
             (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C152280 -
           ((C110027 + C110028 + C110029) * C151906 * C152226 +
            (C110026 + C110025 + C110024) * C151906 * C101365) *
               C152068) *
              C151963 * C807 +
          (((C6902 + C6901 + C6900) * C151906 * C101365 +
            (C6903 + C6904 + C6905) * C151906 * C152226) *
               C152068 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C152280) *
              C151963 * C808 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C152280 -
           ((C6909 + C6910 + C6911) * C151906 * C152226 +
            (C6908 + C6907 + C6906) * C151906 * C101365) *
               C152068) *
              C151963 * C809 +
          (((C7335 + C7334 + C7333) * C151906 * C101365 +
            (C6223 * C594 + C6873 + C6873 + C6218 * C618 + C6225 * C1617 +
             C6874 + C6874 + C6219 * C1641 + C6227 * C1628 + C6875 + C6875 +
             C6220 * C1652) *
                C151906 * C152226) *
               C152068 -
           ((C7333 + C7334 + C7335) * C151906 * C152226 +
            (C6304 + C6303 + C6302) * C151906 * C101365) *
               C152280) *
              C151963 * C152325)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
              C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
              C6220 * C378) *
                 C151906 * C101365 +
             (C110024 + C110025 + C110026) * C151906 * C152226) *
                C152280 -
            ((C110027 + C110028 + C110029) * C151906 * C152226 +
             (C110026 + C110025 + C110024) * C151906 * C101365) *
                C152068) *
               C1345 +
           (((C110720 + C110721 + C110722) * C151906 * C101365 +
             (C111323 + C111324 + C111325) * C151906 * C152226) *
                C152068 -
            ((C110722 + C110721 + C110720) * C151906 * C152226 +
             (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
              C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
              C6218 * C377) *
                 C151906 * C101365) *
                C152280) *
               C1346 +
           (((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
              C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
              C6220 * C1459) *
                 C151906 * C101365 +
             (C111326 + C111327 + C111328) * C151906 * C152226) *
                C152280 -
            ((C111329 + C111330 + C111331) * C151906 * C152226 +
             (C111328 + C111327 + C111326) * C151906 * C101365) *
                C152068) *
               C152321) *
              C152265 +
          ((((C6902 + C6901 + C6900) * C151906 * C101365 +
             (C6903 + C6904 + C6905) * C151906 * C152226) *
                C152068 -
            ((C6900 + C6901 + C6902) * C151906 * C152226 +
             (C6298 + C6297 + C6296) * C151906 * C101365) *
                C152280) *
               C1345 +
           (((C6600 + C6599 + C6598) * C151906 * C101365 +
             (C7662 + C7663 + C7664) * C151906 * C152226) *
                C152280 -
            ((C9914 + C9915 + C9916) * C151906 * C152226 +
             (C7664 + C7663 + C7662) * C151906 * C101365) *
                C152068) *
               C1346 +
           (((C8811 + C8810 + C8809) * C151906 * C101365 +
             (C6223 * C1626 + C8283 + C8283 + C6218 * C1650 + C6225 * C8249 +
              C8284 + C8284 + C6219 * C8261 + C6227 * C8254 + C8285 + C8285 +
              C6220 * C8266) *
                 C151906 * C152226) *
                C152068 -
            ((C8809 + C8810 + C8811) * C151906 * C152226 +
             (C6603 + C6602 + C6601) * C151906 * C101365) *
                C152280) *
               C152321) *
              C151946)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
              C151981 * C151963 * C129 -
          ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
           (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
              C151981 * C151963 * C130 +
          ((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
           (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
              C151981 * C151963 * C131 -
          ((C961 * C51062 + C674 * C51061 + C668 * C51060) * C152226 +
           (C197 * C51062 + C196 * C51061 + C195 * C51060) * C101365) *
              C151981 * C151963 * C132 +
          ((C196 * C51060 + C197 * C51061 + C198 * C51062) * C101365 +
           (C674 * C51060 + C961 * C51061 +
            (C134 * C952 + C958 + C958 + C152146 * C954) * C51062) *
               C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C15374 * C51060 + C670 * C51061 + C669 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1197 * C51062 + C1196 * C51061 + C16091 * C51060) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C152352 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C347 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C1196 * C51060 + C1197 * C51061 + C1198 * C51062) * C152226) *
               C151981 * C152352 -
           ((C668 * C51062 + C669 * C51061 + C670 * C51060) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C152368 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C669 * C51060 + C668 * C51061 + C674 * C51062) * C152226) *
               C151981 * C152368 -
           ((C1199 * C51062 + C1198 * C51061 + C1197 * C51060) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C152352 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
             C193 * C51061 + C194 * C51062) *
                C101365 +
            (C101804 + C101805 + C101806) * C152226) *
               C151981 * C1345 -
           ((C102505 + C102504 + C102503) * C152226 +
            (C432 * C51062 + C433 * C51061 +
             (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
                C101365) *
               C151981 * C1346 +
           (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
             C434 * C51061 + C435 * C51062) *
                C101365 +
            (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C433 * C51060 + C432 * C51061 + C431 * C51062) * C101365 +
            (C102506 + C102507 + C102508) * C152226) *
               C151981 * C1346 -
           ((C101812 + C101811 + C101810) * C152226 +
            (C195 * C51062 + C194 * C51061 + C193 * C51060) * C101365) *
               C151981 * C1345 -
           ((C2031 * C51062 + C2032 * C51061 + C2033 * C51060) * C152226 +
            (C436 * C51062 + C435 * C51061 + C434 * C51060) * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C194 * C51060 + C195 * C51061 + C196 * C51062) * C101365 +
            (C101816 + C101817 + C101818) * C152226) *
               C151981 * C1345 -
           ((C102511 + C102510 + C102509) * C152226 +
            (C437 * C51062 + C431 * C51061 + C432 * C51060) * C101365) *
               C151981 * C1346 +
           ((C435 * C51060 + C436 * C51061 + C438 * C51062) * C101365 +
            (C2032 * C51060 + C2031 * C51061 +
             (C134 * C2014 + C2024 + C2024 + C152146 * C2016) * C51062) *
                C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152146 * C152) * C51060 +
            C193 * C51061 + C194 * C51062) *
               C101365 +
           (C101804 + C101805 + C101806) * C152226) *
              C151981 * C1433 -
          ((C102505 + C102504 + C102503) * C152226 +
           (C432 * C51062 + C433 * C51061 +
            (C134 * C353 + C396 + C396 + C152146 * C377) * C51060) *
               C101365) *
              C151981 * C1434 +
          (((C134 * C354 + C397 + C397 + C152146 * C378) * C51060 +
            C434 * C51061 + C435 * C51062) *
               C101365 +
           (C16692 * C51060 + C2033 * C51061 + C2032 * C51062) * C152226) *
              C151981 * C1435 -
          ((C33767 * C51062 + C16906 * C51061 + C17408 * C51060) * C152226 +
           (C1819 * C51062 + C1820 * C51061 +
            (C134 * C1442 + C1467 + C1467 + C152146 * C1458) * C51060) *
               C101365) *
              C151981 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152146 * C1459) * C51060 +
            (C134 * C1444 + C1469 + C1469 + C152146 * C1460) * C51061 +
            (C134 * C1445 + C1470 + C1470 + C152146 * C1461) * C51062) *
               C101365 +
           ((C134 * C8252 + C16439 + C16439 + C152146 * C8264) * C51060 +
            (C134 * C8251 + C16440 + C16440 + C152146 * C8263) * C51061 +
            (C134 * C8790 + C33341 + C33341 + C152146 * C8792) * C51062) *
               C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
            C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
            C6220 * C1648) *
               C151906 * C152226) *
              C151981 * C151963 * C129 -
          ((C6900 + C6901 + C6902) * C151906 * C152226 +
           (C6298 + C6297 + C6296) * C151906 * C101365) *
              C151981 * C151963 * C130 +
          ((C6301 + C6300 + C6299) * C151906 * C101365 +
           (C6906 + C6907 + C6908) * C151906 * C152226) *
              C151981 * C151963 * C131 -
          ((C7333 + C7334 + C7335) * C151906 * C152226 +
           (C6304 + C6303 + C6302) * C151906 * C101365) *
              C151981 * C151963 * C132 +
          ((C6307 + C6306 + C6305) * C151906 * C101365 +
           (C6223 * C595 + C7324 + C7324 + C6218 * C619 + C6225 * C1159 +
            C7325 + C7325 + C6219 * C1171 + C6227 * C2014 + C7326 + C7326 +
            C6220 * C2016) *
               C151906 * C152226) *
              C151981 * C151963 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C6223 * C590 + C6839 + C6839 + C6218 * C614 + C6225 * C1155 +
             C6838 + C6838 + C6219 * C1167 + C6227 * C1624 + C6837 + C6837 +
             C6220 * C1648) *
                C151906 * C152226) *
               C151981 * C152368 -
           ((C6227 * C2163 + C7628 + C7628 + C6220 * C2171 + C6225 * C1624 +
             C7627 + C7627 + C6219 * C1648 + C6223 * C1155 + C7626 + C7626 +
             C6218 * C1167) *
                C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C152352 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C347 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C152352 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C152368 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C152368 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C152352 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 +
             C6231 + C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
             C6220 * C378) *
                C151906 * C101365 +
            (C110024 + C110025 + C110026) * C151906 * C152226) *
               C151981 * C1345 -
           ((C110722 + C110721 + C110720) * C151906 * C152226 +
            (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
             C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
             C6218 * C377) *
                C151906 * C101365) *
               C151981 * C1346 +
           ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
             C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
             C6220 * C1459) *
                C151906 * C101365 +
            (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
             C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
             C6220 * C8264) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152365 +
          (((C6600 + C6599 + C6598) * C151906 * C101365 +
            (C7662 + C7663 + C7664) * C151906 * C152226) *
               C151981 * C1346 -
           ((C6900 + C6901 + C6902) * C151906 * C152226 +
            (C6298 + C6297 + C6296) * C151906 * C101365) *
               C151981 * C1345 -
           ((C8809 + C8810 + C8811) * C151906 * C152226 +
            (C6603 + C6602 + C6601) * C151906 * C101365) *
               C151981 * C152321) *
              C152348 +
          (((C6301 + C6300 + C6299) * C151906 * C101365 +
            (C6906 + C6907 + C6908) * C151906 * C152226) *
               C151981 * C1345 -
           ((C7665 + C7666 + C7667) * C151906 * C152226 +
            (C6606 + C6605 + C6604) * C151906 * C101365) *
               C151981 * C1346 +
           ((C6609 + C6608 + C6607) * C151906 * C101365 +
            (C6223 * C1622 + C8800 + C8800 + C6218 * C1646 + C6225 * C2165 +
             C8801 + C8801 + C6219 * C2173 + C6227 * C8790 + C8802 + C8802 +
             C6220 * C8792) *
                C151906 * C152226) *
               C151981 * C152321) *
              C152315)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6230 + C6230 + C6218 * C152 + C6225 * C353 + C6231 +
            C6231 + C6219 * C377 + C6227 * C354 + C6232 + C6232 +
            C6220 * C378) *
               C151906 * C101365 +
           (C110024 + C110025 + C110026) * C151906 * C152226) *
              C151981 * C1433 -
          ((C110722 + C110721 + C110720) * C151906 * C152226 +
           (C6227 * C1442 + C6535 + C6535 + C6220 * C1458 + C6225 * C354 +
            C6536 + C6536 + C6219 * C378 + C6223 * C353 + C6537 + C6537 +
            C6218 * C377) *
               C151906 * C101365) *
              C151981 * C1434 +
          ((C6223 * C354 + C6538 + C6538 + C6218 * C378 + C6225 * C1442 +
            C6539 + C6539 + C6219 * C1458 + C6227 * C1443 + C6540 + C6540 +
            C6220 * C1459) *
               C151906 * C101365 +
           (C6223 * C1624 + C8279 + C8279 + C6218 * C1648 + C6225 * C2163 +
            C8278 + C8278 + C6219 * C2171 + C6227 * C8252 + C8277 + C8277 +
            C6220 * C8264) *
               C151906 * C152226) *
              C151981 * C1435 -
          ((C6227 * C9005 + C9014 + C9014 + C6220 * C9009 + C6225 * C8252 +
            C9013 + C9013 + C6219 * C8264 + C6223 * C2163 + C9012 + C9012 +
            C6218 * C2171) *
               C151906 * C152226 +
           (C6227 * C8008 + C8023 + C8023 + C6220 * C8016 + C6225 * C1443 +
            C8024 + C8024 + C6219 * C1459 + C6223 * C1442 + C8025 + C8025 +
            C6218 * C1458) *
               C151906 * C101365) *
              C151981 * C1436 +
          ((C6223 * C1443 + C8026 + C8026 + C6218 * C1459 + C6225 * C8008 +
            C8027 + C8027 + C6219 * C8016 + C6227 * C8009 + C8028 + C8028 +
            C6220 * C8017) *
               C151906 * C101365 +
           (C6223 * C8252 + C111063 + C111063 + C6218 * C8264 + C6225 * C9005 +
            C111064 + C111064 + C6219 * C9009 + C6227 * C61312 + C111065 +
            C111065 + C6220 * C61314) *
               C151906 * C152226) *
              C151981 * C1437) *
         C151935) /
            (p * q * std::sqrt(p + q));
}
