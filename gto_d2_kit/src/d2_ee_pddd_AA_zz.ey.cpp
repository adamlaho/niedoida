/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddd_AA_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1222_11_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150502 = ae + be;
    const double C150501 = ae * be;
    const double C150500 = zA - zB;
    const double C150508 = 0 * be;
    const double C150560 = 0 * ae;
    const double C150552 = 0 * be;
    const double C150609 = p + q;
    const double C150608 = p * q;
    const double C150617 = std::pow(ae, 2);
    const double C150615 = bs[3];
    const double C150614 = zP - zQ;
    const double C150623 = bs[4];
    const double C150621 = xP - xQ;
    const double C150631 = bs[5];
    const double C150640 = bs[6];
    const double C150651 = bs[7];
    const double C150666 = bs[8];
    const double C150699 = bs[2];
    const double C150806 = yP - yQ;
    const double C136 = bs[0];
    const double C152157 = xA - xB;
    const double C152182 = ce + de;
    const double C152181 = ce * de;
    const double C152180 = xC - xD;
    const double C152214 = yC - yD;
    const double C152232 = zC - zD;
    const double C152398 = yA - yB;
    const double C150509 = std::pow(C150502, 2);
    const double C150553 = 2 * C150502;
    const double C150511 = 2 * C150501;
    const double C150510 = C150501 * C150500;
    const double C152414 = std::pow(C150500, 2);
    const double C152478 = C150500 * be;
    const double C152477 = C150500 * ae;
    const double C150555 = C150500 * C150508;
    const double C150554 = -2 * C150508;
    const double C150568 = C150560 / C150502;
    const double C150610 = 2 * C150608;
    const double C150618 = std::pow(C150614, 2);
    const double C150692 = C150614 * ae;
    const double C150633 = std::pow(C150621, 2);
    const double C150818 = std::pow(C150806, 2);
    const double C152160 = C152157 * be;
    const double C152159 = C152157 * ae;
    const double C152158 = std::pow(C152157, 2);
    const double C152186 = 2 * C152182;
    const double C152185 = std::pow(C152182, 2);
    const double C152187 = C152180 * de;
    const double C152184 = C152180 * ce;
    const double C152183 = std::pow(C152180, 2);
    const double C152215 = std::pow(C152214, 2);
    const double C152274 = C152214 * de;
    const double C152272 = C152214 * ce;
    const double C152233 = std::pow(C152232, 2);
    const double C152316 = C152232 * de;
    const double C152314 = C152232 * ce;
    const double C152399 = std::pow(C152398, 2);
    const double C152450 = C152398 * be;
    const double C152449 = C152398 * ae;
    const double C150513 = 2 * C150509;
    const double C152518 = 4 * C150509;
    const double C150562 = C150509 * C150553;
    const double C152168 = std::pow(C150553, -1);
    const double C152550 = std::pow(C150553, -2);
    const double C152415 = C152414 * C150501;
    const double C150564 = C150555 / C150502;
    const double C150563 = ae * C150554;
    const double C150612 = C150610 / C150609;
    const double C152 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C150610 / C150609, 2) -
          (bs[1] * C150610) / C150609) *
         std::pow(ae, 2)) /
        C150509;
    const double C137 = -(C150621 * bs[1] * C150610) / C150609;
    const double C359 = -(C150806 * bs[1] * C150610) / C150609;
    const double C604 = -(C150614 * bs[1] * C150610) / C150609;
    const double C150625 = C150618 * C150623;
    const double C150634 = C150618 * C150631;
    const double C150642 = C150618 * C150640;
    const double C150654 = C150618 * C150651;
    const double C150669 = C150618 * C150666;
    const double C150693 = C150623 * C150692;
    const double C150702 = C150615 * C150692;
    const double C150716 = C150631 * C150692;
    const double C150728 = C150640 * C150692;
    const double C150749 = C150651 * C150692;
    const double C150776 = C150666 * C150692;
    const double C144 = (-(bs[1] * C150692 * C150610) / C150609) / C150502;
    const double C152161 = C152158 * C150501;
    const double C152199 = std::pow(C152186, -1);
    const double C152526 = std::pow(C152186, -2);
    const double C152200 = 2 * C152185;
    const double C152530 = C152185 * C152186;
    const double C152529 = 4 * C152185;
    const double C152519 = std::pow(C152184, 2);
    const double C152188 = C152183 * C152181;
    const double C152216 = C152215 * C152181;
    const double C152531 = std::pow(C152272, 2);
    const double C152234 = C152233 * C152181;
    const double C152533 = std::pow(C152314, 2);
    const double C152400 = C152399 * C150501;
    const double C150559 = C150508 / C150513;
    const double C150565 = C150552 / C150513;
    const double C152416 = C152415 / C150502;
    const double C150569 = 0 - C150564;
    const double C150616 = -C150612;
    const double C150624 = std::pow(C150612, 4);
    const double C150641 = std::pow(C150612, 6);
    const double C150667 = std::pow(C150612, 8);
    const double C150698 = std::pow(C150612, 2);
    const double C153 =
        ((xP - xQ) *
         (bs[2] * std::pow(C150612, 2) +
          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C150612, 3)) *
         std::pow(ae, 2)) /
        C150509;
    const double C152162 = C152161 / C150502;
    const double C152574 = 4 * C152530;
    const double C152573 = C152182 * C152529;
    const double C152189 = C152188 / C152182;
    const double C152217 = C152216 / C152182;
    const double C152235 = C152234 / C152182;
    const double C152401 = C152400 / C150502;
    const double C152417 = -C152416;
    const double C150573 = C150569 * ae;
    const double C150619 = std::pow(C150616, 3);
    const double C150632 = std::pow(C150616, 5);
    const double C150652 = std::pow(C150616, 7);
    const double C150626 = C150625 * C150624;
    const double C150630 = C150623 * C150624;
    const double C150694 = C150624 * C150693;
    const double C150643 = C150642 * C150641;
    const double C150650 = C150640 * C150641;
    const double C150732 = C150641 * C150728;
    const double C150670 = C150669 * C150667;
    const double C150782 = C150667 * C150776;
    const double C150701 = C150699 * C150698;
    const double C145 = (C150621 * C150698 * C150699 * C150692) / C150502;
    const double C371 = (C150806 * C150698 * C150699 * C150692) / C150502;
    const double C616 = (C150614 * C150698 * C150699 * C150692) / C150502 -
                        (ae * bs[1] * C150610) / (C150609 * C150502);
    const double C152163 = -C152162;
    const double C152190 = -C152189;
    const double C152218 = -C152217;
    const double C152236 = -C152235;
    const double C152402 = -C152401;
    const double C152418 = std::exp(C152417);
    const double C150575 = C150573 / C150502;
    const double C150622 = C150615 * C150619;
    const double C150703 = C150619 * C150702;
    const double C154 =
        ((bs[2] * std::pow(C150612, 2) + C150618 * C150615 * C150619) *
             C150617 +
         (C150615 * C150619 + C150618 * bs[4] * std::pow(C150612, 4)) *
             C150617 * std::pow(xP - xQ, 2)) /
        C150509;
    const double C383 =
        ((yP - yQ) *
         (bs[2] * std::pow(C150612, 2) + C150618 * C150615 * C150619) *
         C150617) /
        C150509;
    const double C628 =
        (2 * ae * C150698 * C150699 * C150692 +
         C150614 * (C150699 * C150698 + C150618 * C150615 * C150619) *
             C150617) /
        C150509;
    const double C150635 = C150634 * C150632;
    const double C150639 = C150631 * C150632;
    const double C150718 = C150632 * C150716;
    const double C150655 = C150654 * C150652;
    const double C150665 = C150651 * C150652;
    const double C150754 = C150652 * C150749;
    const double C150717 = C150630 * C150633;
    const double C150729 = C150621 * C150630;
    const double C150856 = C150630 * C150818;
    const double C150947 = C150630 * C150618;
    const double C150946 = C150614 * C150630;
    const double C150945 = C150630 * ae;
    const double C151053 = C150806 * C150630;
    const double C150709 = C150621 * C150694;
    const double C150844 = C150806 * C150694;
    const double C150930 = C150614 * C150694;
    const double C150941 = ae * C150694;
    const double C150752 = C150650 * C150633;
    const double C150779 = C150621 * C150650;
    const double C151165 = C150650 * C150818;
    const double C151458 = C150650 * C150618;
    const double C151457 = C150614 * C150650;
    const double C151456 = C150650 * ae;
    const double C151616 = C150806 * C150650;
    const double C150735 = C150732 * C150633;
    const double C150748 = C150621 * C150732;
    const double C151144 = C150732 * C150818;
    const double C151161 = C150806 * C150732;
    const double C151417 = C150614 * C150732;
    const double C151450 = ae * C150732;
    const double C150785 = C150782 * C150633;
    const double C151185 = C150621 * C150782;
    const double C151700 = C150782 * C150818;
    const double C151766 = C150806 * C150782;
    const double C151857 = C150614 * C150782;
    const double C150704 = C150701 * ae;
    const double C138 = C150701 * C150633 - (bs[1] * C150610) / C150609;
    const double C358 = C150806 * C150621 * C150701;
    const double C360 = C150701 * C150818 - (bs[1] * C150610) / C150609;
    const double C603 = C150614 * C150621 * C150701;
    const double C605 = C150701 * C150618 - (bs[1] * C150610) / C150609;
    const double C1179 = C150614 * C150806 * C150701;
    const double C152164 = std::exp(C152163);
    const double C152191 = std::exp(C152190);
    const double C152219 = std::exp(C152218);
    const double C152237 = std::exp(C152236);
    const double C152403 = std::exp(C152402);
    const double C164 = C152418 * C153;
    const double C150512 = C150510 * C152418;
    const double C134 =
        -((C152418 - (C150500 * 2 * C150501 * C150500 * C152418) / C150502) *
          2 * C150501) /
        C150502;
    const double C135 = -(2 * C150501 * C150500 * C152418) / C150502;
    const double C152479 = C152418 * C152477;
    const double C152482 = C152168 * C152418;
    const double C152558 = C152418 * C152478;
    const double C152551 = C152418 / C150553;
    const double C14682 = C152550 * C152418;
    const double C150576 = C150575 - C150565;
    const double C150627 = C150622 + C150626;
    const double C150710 = C150621 * C150622;
    const double C150845 = C150806 * C150622;
    const double C150932 = C150614 * C150622;
    const double C150931 = C150622 * ae;
    const double C139 =
        2 * C150621 * C150701 + C150621 * (C150701 + C150622 * C150633);
    const double C357 = C150806 * (C150701 + C150622 * C150633);
    const double C602 = C150614 * (C150701 + C150622 * C150633);
    const double C1470 =
        2 * C150806 * C150701 + C150806 * (C150701 + C150622 * C150818);
    const double C1652 = C150614 * (C150701 + C150622 * C150818);
    const double C2598 =
        2 * C150614 * C150701 + C150614 * (C150701 + C150622 * C150618);
    const double C150705 = C150614 * C150703;
    const double C146 =
        (C150698 * C150699 * C150692 + C150703 * C150633) / C150502;
    const double C147 =
        (2 * C150621 * C150703 + C150621 * (C150703 + C150694 * C150633)) /
        C150502;
    const double C369 = (C150806 * (C150703 + C150694 * C150633)) / C150502;
    const double C370 = (C150806 * C150621 * C150703) / C150502;
    const double C372 =
        (C150698 * C150699 * C150692 + C150703 * C150818) / C150502;
    const double C614 = (C150614 * (C150703 + C150694 * C150633) +
                         (C150701 + C150622 * C150633) * ae) /
                        C150502;
    const double C615 =
        (C150614 * C150621 * C150703 + C150621 * C150701 * ae) / C150502;
    const double C1185 =
        (C150614 * C150806 * C150703 + C150806 * C150701 * ae) / C150502;
    const double C1478 =
        (2 * C150806 * C150703 + C150806 * (C150703 + C150694 * C150818)) /
        C150502;
    const double C1664 = (C150614 * (C150703 + C150694 * C150818) +
                          (C150701 + C150622 * C150818) * ae) /
                         C150502;
    const double C167 = C152418 * C154;
    const double C6495 = C152418 * C383;
    const double C150636 = C150630 + C150635;
    const double C150644 = C150639 + C150643;
    const double C150730 = C150639 * C150633;
    const double C150751 = C150621 * C150639;
    const double C151146 = C150639 * C150818;
    const double C151164 = C150806 * C150639;
    const double C151420 = C150639 * C150618;
    const double C151419 = C150614 * C150639;
    const double C151418 = C150639 * ae;
    const double C150720 = C150718 * C150633;
    const double C150727 = C150621 * C150718;
    const double C150855 = C150718 * C150818;
    const double C150944 = C150614 * C150718;
    const double C151052 = C150806 * C150718;
    const double C151413 = ae * C150718;
    const double C150656 = C150650 + C150655;
    const double C150671 = C150665 + C150670;
    const double C150780 = C150665 * C150633;
    const double C151188 = C150621 * C150665;
    const double C151704 = C150665 * C150818;
    const double C151767 = C150806 * C150665;
    const double C151860 = C150665 * C150618;
    const double C151859 = C150614 * C150665;
    const double C151858 = C150665 * ae;
    const double C150757 = C150754 * C150633;
    const double C150775 = C150621 * C150754;
    const double C151162 = C150754 * C150818;
    const double C151455 = C150614 * C150754;
    const double C151615 = C150806 * C150754;
    const double C151851 = ae * C150754;
    const double C150719 = C150622 + C150717;
    const double C150733 = 2 * C150729;
    const double C150838 = C150806 * C150729;
    const double C150921 = C150614 * C150729;
    const double C150920 = C150729 * ae;
    const double C150858 = C150622 + C150856;
    const double C150951 = C150622 + C150947;
    const double C150950 = C150946 * ae;
    const double C151421 = 2 * C150946;
    const double C151056 = C150614 * C151053;
    const double C151055 = C151053 * ae;
    const double C151145 = 2 * C151053;
    const double C150711 = C150614 * C150709;
    const double C373 = (C150621 * C150703 + C150709 * C150818) / C150502;
    const double C150846 = C150614 * C150844;
    const double C150948 = 2 * C150941;
    const double C150756 = C150639 + C150752;
    const double C150783 = 2 * C150779;
    const double C151131 = C150779 * C150818;
    const double C151187 = C150806 * C150779;
    const double C151384 = C150779 * C150618;
    const double C151383 = C150614 * C150779;
    const double C151382 = C150779 * ae;
    const double C151169 = C150639 + C151165;
    const double C151466 = C150639 + C151458;
    const double C151465 = C151457 * ae;
    const double C151861 = 2 * C151457;
    const double C151624 = C151616 * C150618;
    const double C151623 = C150614 * C151616;
    const double C151622 = C151616 * ae;
    const double C151703 = 2 * C151616;
    const double C150737 = C150718 + C150735;
    const double C150753 = 2 * C150748;
    const double C150864 = C150748 * C150818;
    const double C150967 = C150614 * C150748;
    const double C151066 = C150806 * C150748;
    const double C151377 = ae * C150748;
    const double C151147 = C150718 + C151144;
    const double C151166 = 2 * C151161;
    const double C151239 = C150614 * C151161;
    const double C151611 = ae * C151161;
    const double C151463 = 2 * C151450;
    const double C150787 = C150754 + C150785;
    const double C151190 = C151185 * C150818;
    const double C151505 = C150614 * C151185;
    const double C151654 = C150806 * C151185;
    const double C151705 = C150754 + C151700;
    const double C151774 = C150614 * C151766;
    const double C152165 = C152164 * C152159;
    const double C152169 = C152168 * C152164;
    const double C152515 = C152164 * C152160;
    const double C152512 = C152164 / C150553;
    const double C51112 = C152550 * C152164;
    const double C152193 = C152191 * C152184;
    const double C152192 = C152191 / C152186;
    const double C152202 = C152199 * C152191;
    const double C152522 = C152191 * C152187;
    const double C152571 = C152526 * C152191;
    const double C152565 = C152191 * C152519;
    const double C152273 = C152219 / C152186;
    const double C152275 = C152219 * C152272;
    const double C152282 = C152199 * C152219;
    const double C152537 = C152219 * C152274;
    const double C152577 = C152526 * C152219;
    const double C152575 = C152219 * C152531;
    const double C152315 = C152237 / C152186;
    const double C152317 = C152237 * C152314;
    const double C152324 = C152199 * C152237;
    const double C152543 = C152237 * C152316;
    const double C152580 = C152526 * C152237;
    const double C152578 = C152237 * C152533;
    const double C152451 = C152403 * C152449;
    const double C152454 = C152168 * C152403;
    const double C152554 = C152403 * C152450;
    const double C152549 = C152403 / C150553;
    const double C6260 = C152550 * C152403;
    const double C150514 = 2 * C150512;
    const double C150561 = C150512 / C150509;
    const double C150556 = -4 * C150512;
    const double C14688 =
        ((0 * ae) / C150502 - C150512 / C150509) / (2 * C150502) +
        (0 * ae) / C150502;
    const double C31521 = (0 * ae) / C150502 - C150512 / C150509;
    const double C165 = C134 * C138;
    const double C162 = C134 * C137;
    const double C399 = C134 * C358;
    const double C644 = C134 * C603;
    const double C6496 = C134 * C360;
    const double C6494 = C134 * C359;
    const double C7457 = C134 * C1179;
    const double C163 = C135 * C145;
    const double C161 = C135 * C144;
    const double C402 = C135 * C371;
    const double C647 = C135 * C616;
    const double C152560 = C152479 / C150513;
    const double C152559 = C152479 * C152478;
    const double C152553 = C152479 / C150502;
    const double C14681 = (2 * C152168 * C152479) / C150502;
    const double C152561 = C152482 * C152478;
    const double C117234 = C152482 / C152518;
    const double C133725 = C152482 / C150553;
    const double C152597 = C152558 / C150502;
    const double C14680 = (C152418 * std::pow(C152477, 2)) / C150509 + C152551;
    const double C150628 = C150627 * C150617;
    const double C150712 = C150710 * ae;
    const double C1186 =
        (C150614 * C150806 * C150709 + C150806 * C150710 * ae) / C150502;
    const double C361 = C150621 * C150701 + C150710 * C150818;
    const double C606 = C150621 * C150701 + C150710 * C150618;
    const double C1180 = C150614 * C150806 * C150710;
    const double C1469 =
        2 * C150806 * C150710 + C150806 * (C150710 + C150729 * C150818);
    const double C1651 = C150614 * (C150710 + C150729 * C150818);
    const double C2597 =
        2 * C150614 * C150710 + C150614 * (C150710 + C150729 * C150618);
    const double C150847 = C150845 * ae;
    const double C1648 = C150806 * C150701 + C150845 * C150618;
    const double C3129 =
        2 * C150614 * C150845 + C150614 * (C150845 + C151053 * C150618);
    const double C150934 = C150932 * ae;
    const double C150933 = C150930 + C150931;
    const double C168 = C134 * C139;
    const double C396 = C134 * C357;
    const double C641 = C134 * C602;
    const double C6501 = C134 * C1470;
    const double C7455 = C134 * C1652;
    const double C150706 = C150705 + C150704;
    const double C166 = C135 * C146;
    const double C169 = C135 * C147;
    const double C397 = C135 * C369;
    const double C400 = C135 * C370;
    const double C403 = C135 * C372;
    const double C642 = C135 * C614;
    const double C645 = C135 * C615;
    const double C1198 = C135 * C1185;
    const double C1495 = C135 * C1478;
    const double C1689 = C135 * C1664;
    const double C150637 = C150636 * C150617;
    const double C150645 = C150644 * C150617;
    const double C150734 = C150630 + C150730;
    const double C150755 = 2 * C150751;
    const double C150865 = C150751 * C150818;
    const double C150970 = C150751 * C150618;
    const double C150969 = C150614 * C150751;
    const double C150968 = C150751 * ae;
    const double C151067 = C150806 * C150751;
    const double C151148 = C150630 + C151146;
    const double C151168 = 2 * C151164;
    const double C151242 = C151164 * C150618;
    const double C151241 = C150614 * C151164;
    const double C151240 = C151164 * ae;
    const double C151426 = C150630 + C151420;
    const double C151425 = C151419 * ae;
    const double C151459 = 2 * C151419;
    const double C151424 = C151417 + C151418;
    const double C150722 = C150694 + C150720;
    const double C150731 = 2 * C150727;
    const double C150837 = C150806 * C150727;
    const double C150919 = C150614 * C150727;
    const double C150964 = ae * C150727;
    const double C1477 =
        (2 * C150806 * C150709 + C150806 * (C150709 + C150727 * C150818)) /
        C150502;
    const double C1663 = (C150614 * (C150709 + C150727 * C150818) +
                          (C150710 + C150729 * C150818) * ae) /
                         C150502;
    const double C150857 = C150694 + C150855;
    const double C150949 = C150944 + C150945;
    const double C151054 = C150614 * C151052;
    const double C151143 = 2 * C151052;
    const double C151236 = ae * C151052;
    const double C151423 = 2 * C151413;
    const double C150657 = C150656 * C150617;
    const double C150672 = C150671 * C150617;
    const double C150784 = C150650 + C150780;
    const double C151192 = C151188 * C150818;
    const double C151508 = C151188 * C150618;
    const double C151507 = C150614 * C151188;
    const double C151506 = C151188 * ae;
    const double C151655 = C150806 * C151188;
    const double C151706 = C150650 + C151704;
    const double C151777 = C151767 * C150618;
    const double C151776 = C150614 * C151767;
    const double C151775 = C151767 * ae;
    const double C151870 = C150650 + C151860;
    const double C151869 = C151859 * ae;
    const double C151868 = C151857 + C151858;
    const double C150759 = C150732 + C150757;
    const double C150781 = 2 * C150775;
    const double C151129 = C150775 * C150818;
    const double C151184 = C150806 * C150775;
    const double C151381 = C150614 * C150775;
    const double C151500 = ae * C150775;
    const double C151167 = C150732 + C151162;
    const double C151464 = C151455 + C151456;
    const double C151621 = C150614 * C151615;
    const double C151699 = 2 * C151615;
    const double C151761 = ae * C151615;
    const double C151867 = 2 * C151851;
    const double C150721 = C150719 * ae;
    const double C140 = 3 * (C150701 + C150622 * C150633) +
                        C150621 * (2 * C150710 + C150621 * C150719);
    const double C356 = C150806 * (2 * C150710 + C150621 * C150719);
    const double C362 = C150701 + C150622 * C150633 + C150719 * C150818;
    const double C601 = C150614 * (2 * C150710 + C150621 * C150719);
    const double C607 = C150701 + C150622 * C150633 + C150719 * C150618;
    const double C1181 = C150614 * C150806 * C150719;
    const double C150840 = C150838 * ae;
    const double C1647 = C150806 * C150710 + C150838 * C150618;
    const double C150923 = C150921 * ae;
    const double C150860 = C150858 * ae;
    const double C1471 = 3 * (C150701 + C150622 * C150818) +
                         C150806 * (2 * C150845 + C150806 * C150858);
    const double C1653 = C150701 + C150622 * C150818 + C150858 * C150618;
    const double C2197 = C150614 * (2 * C150845 + C150806 * C150858);
    const double C150954 = C150951 * ae;
    const double C2599 = 3 * (C150701 + C150622 * C150618) +
                         C150614 * (2 * C150932 + C150614 * C150951);
    const double C151058 = C151056 * ae;
    const double C405 = C135 * C373;
    const double C150758 = C150621 * C150756;
    const double C150778 = 3 * C150756;
    const double C150874 = C150756 * C150818;
    const double C150993 = C150756 * C150618;
    const double C150992 = C150614 * C150756;
    const double C150991 = C150756 * ae;
    const double C151081 = C150806 * C150756;
    const double C151133 = C150751 + C151131;
    const double C151191 = 2 * C151187;
    const double C151288 = C151187 * C150618;
    const double C151287 = C150614 * C151187;
    const double C151286 = C151187 * ae;
    const double C151390 = C150751 + C151384;
    const double C151389 = C151383 * ae;
    const double C151509 = 2 * C151383;
    const double C151171 = C150806 * C151169;
    const double C151265 = C151169 * C150618;
    const double C151264 = C150614 * C151169;
    const double C151263 = C151169 * ae;
    const double C151702 = 3 * C151169;
    const double C151471 = C150614 * C151466;
    const double C151470 = C151466 * ae;
    const double C151862 = 3 * C151466;
    const double C151628 = C151164 + C151624;
    const double C151627 = C151623 * ae;
    const double C151768 = 2 * C151623;
    const double C150739 = C150621 * C150737;
    const double C150747 = 3 * C150737;
    const double C150830 = C150806 * C150737;
    const double C150908 = C150614 * C150737;
    const double C150987 = ae * C150737;
    const double C150866 = C150727 + C150864;
    const double C151068 = C150614 * C151066;
    const double C151128 = 2 * C151066;
    const double C151282 = ae * C151066;
    const double C151387 = 2 * C151377;
    const double C151149 = C150806 * C151147;
    const double C151160 = 3 * C151147;
    const double C151225 = C150614 * C151147;
    const double C151259 = ae * C151147;
    const double C151619 = 2 * C151611;
    const double C150789 = C150621 * C150787;
    const double C151329 = C150787 * C150818;
    const double C151551 = C150806 * C150787;
    const double C151579 = C150614 * C150787;
    const double C151193 = C150775 + C151190;
    const double C151660 = C150614 * C151654;
    const double C151707 = C150806 * C151705;
    const double C151817 = C150614 * C151705;
    const double C152516 = C152165 / C150513;
    const double C152514 = C152165 / C150502;
    const double C152513 = C152165 * C152160;
    const double C51111 = (2 * C152168 * C152165) / C150502;
    const double C152517 = C152169 * C152160;
    const double C126 = C152169 / C152518;
    const double C23303 = C152169 / C150553;
    const double C152563 = C152515 / C150502;
    const double C51110 = (C152164 * std::pow(C152159, 2)) / C150509 + C152512;
    const double C152194 = C152193 * C152187;
    const double C152201 = C152193 / C152200;
    const double C152523 = C152199 * C152193;
    const double C152521 = C152193 / C152182;
    const double C353 = (C152191 * std::pow(C152187, 2)) / C152185 + C152192;
    const double C152203 = C152202 * C152187;
    const double C152527 = C152184 * C152202;
    const double C152525 = 2 * C152202;
    const double C152581 = C152202 / C152529;
    const double C133 = C152202 / C152574;
    const double C3762 = C152202 / C152186;
    const double C152567 = C152522 / C152182;
    const double C354 = (-2 * C152199 * C152522) / C152182;
    const double C152602 = C152565 / C152185;
    const double C1373 = (C152219 * std::pow(C152274, 2)) / C152185 + C152273;
    const double C152276 = C152275 * C152274;
    const double C152281 = C152275 / C152200;
    const double C152535 = C152275 / C152182;
    const double C152532 = C152199 * C152275;
    const double C152283 = C152282 * C152274;
    const double C152541 = C152272 * C152282;
    const double C152540 = 2 * C152282;
    const double C152587 = C152282 / C152529;
    const double C1465 = C152282 / C152574;
    const double C3759 = C152282 / C152186;
    const double C152583 = C152537 / C152182;
    const double C1374 = (-2 * C152199 * C152537) / C152182;
    const double C152607 = C152575 / C152185;
    const double C2359 = (C152237 * std::pow(C152316, 2)) / C152185 + C152315;
    const double C152318 = C152317 * C152316;
    const double C152323 = C152317 / C152200;
    const double C152536 = C152317 / C152182;
    const double C152534 = C152199 * C152317;
    const double C152325 = C152324 * C152316;
    const double C152547 = C152314 * C152324;
    const double C152546 = 2 * C152324;
    const double C152593 = C152324 / C152529;
    const double C2594 = C152324 / C152574;
    const double C4953 = C152324 / C152186;
    const double C152589 = C152543 / C152182;
    const double C2360 = (-2 * C152199 * C152543) / C152182;
    const double C152609 = C152578 / C152185;
    const double C152556 = C152451 / C150513;
    const double C152555 = C152451 * C152450;
    const double C152552 = C152451 / C150502;
    const double C6259 = (2 * C152168 * C152451) / C150502;
    const double C152557 = C152454 * C152450;
    const double C59282 = C152454 / C152518;
    const double C73121 = C152454 / C150553;
    const double C152594 = C152554 / C150502;
    const double C6258 = (C152403 * std::pow(C152449, 2)) / C150509 + C152549;
    const double C150515 = C150500 * C150514;
    const double C100341 =
        (-C150514 / C150502) / (2 * C150502) - (0 * be) / C150502;
    const double C150572 = C150568 - C150561;
    const double C150566 = C150556 / C150502;
    const double C31535 = C31521 * C614;
    const double C31529 = C31521 * C615;
    const double C31524 = C31521 * C616;
    const double C31826 = C31521 * C1664;
    const double C31823 = C31521 * C1185;
    const double C181 = C162 + C163;
    const double C6514 = C6494 + C402;
    const double C152598 = C152559 / C150509;
    const double C31533 = C152553 * C154;
    const double C31527 = C152553 * C153;
    const double C40440 = C152553 * C383;
    const double C152599 = C152561 / C150502;
    const double C100336 = -C152597;
    const double C14710 = C14680 * C154;
    const double C14695 = C14680 * C153;
    const double C65032 = C14680 * C383;
    const double C155 =
        (2 * C150621 * C150628 +
         C150621 * (C150628 + (C150623 * C150624 +
                               C150618 * bs[5] * std::pow(C150616, 5)) *
                                  C150617 * std::pow(C150621, 2))) /
        C150509;
    const double C382 = ((yP - yQ) * C150621 * C150628) / C150509;
    const double C384 =
        ((bs[2] * std::pow(C150612, 2) + C150618 * C150615 * C150619) *
             C150617 +
         C150628 * std::pow(yP - yQ, 2)) /
        C150509;
    const double C627 = (2 * ae * C150621 * C150619 * C150615 * C150692 +
                         C150614 * C150621 * C150628) /
                        C150509;
    const double C1191 =
        (2 * ae * C150806 * C150703 + C150614 * C150806 * C150628) / C150509;
    const double C150713 = C150711 + C150712;
    const double C1200 = C135 * C1186;
    const double C31818 = C31521 * C1186;
    const double C404 = C134 * C361;
    const double C649 = C134 * C606;
    const double C1199 = C134 * C1180;
    const double C1837 = C134 * C1469;
    const double C2053 = C134 * C1651;
    const double C2985 = C134 * C2597;
    const double C150848 = C150846 + C150847;
    const double C8088 = C134 * C1648;
    const double C10121 = C134 * C3129;
    const double C150936 = ae * C150933;
    const double C150935 = C150614 * C150933;
    const double C150943 = 2 * C150933;
    const double C150707 = ae * C150706;
    const double C617 = (C150698 * C150699 * C150692 + C150614 * C150706 +
                         C150614 * C150701 * ae) /
                        C150502;
    const double C182 = C165 + C166;
    const double C183 = C168 + C169;
    const double C422 = C396 + C397;
    const double C423 = C399 + C400;
    const double C6515 = C6496 + C403;
    const double C667 = C641 + C642;
    const double C668 = C644 + C645;
    const double C7468 = C7457 + C1198;
    const double C6516 = C6501 + C1495;
    const double C7467 = C7455 + C1689;
    const double C150815 = C150621 * C150637;
    const double C150942 = C150614 * C150637;
    const double C151051 = C150806 * C150637;
    const double C156 =
        (3 * (C150628 + C150637 * C150633) +
         C150621 *
             (2 * C150621 * C150637 +
              C150621 * (C150637 + (C150631 * C150632 +
                                    C150618 * bs[6] * std::pow(C150612, 6)) *
                                       C150617 * C150633))) /
        C150509;
    const double C381 = ((yP - yQ) * (C150628 + C150637 * C150633)) / C150509;
    const double C385 =
        (C150621 * C150628 + C150621 * C150637 * std::pow(yP - yQ, 2)) /
        C150509;
    const double C626 =
        (2 * ae * (C150619 * C150615 * C150692 + C150694 * C150633) +
         C150614 * (C150628 + C150637 * C150633)) /
        C150509;
    const double C1192 =
        (2 * ae * C150806 * C150709 + C150614 * C150806 * C150621 * C150637) /
        C150509;
    const double C1486 =
        (2 * C150806 * C150628 +
         C150806 * (C150628 + C150637 * std::pow(C150806, 2))) /
        C150509;
    const double C1676 = (2 * ae * (C150703 + C150694 * C150818) +
                          C150614 * (C150628 + C150637 * C150818)) /
                         C150509;
    const double C150646 = C150645 * C150633;
    const double C150649 = C150621 * C150645;
    const double C151110 = C150645 * C150818;
    const double C151113 = C150806 * C150645;
    const double C151414 = C150614 * C150645;
    const double C1487 = (3 * (C150628 + C150637 * C150818) +
                          C150806 * (2 * C150806 * C150637 +
                                     C150806 * (C150637 + C150645 * C150818))) /
                         C150509;
    const double C150736 = C150621 * C150734;
    const double C150750 = 3 * C150734;
    const double C150831 = C150806 * C150734;
    const double C150910 = C150614 * C150734;
    const double C150909 = C150734 * ae;
    const double C1468 =
        2 * C150806 * C150719 + C150806 * (C150719 + C150734 * C150818);
    const double C1650 = C150614 * (C150719 + C150734 * C150818);
    const double C2596 =
        2 * C150614 * C150719 + C150614 * (C150719 + C150734 * C150618);
    const double C150867 = C150729 + C150865;
    const double C150974 = C150729 + C150970;
    const double C150973 = C150969 * ae;
    const double C151385 = 2 * C150969;
    const double C150972 = C150967 + C150968;
    const double C151070 = C150614 * C151067;
    const double C151069 = C151067 * ae;
    const double C151130 = 2 * C151067;
    const double C3130 =
        2 * C150614 * C150838 + C150614 * (C150838 + C151067 * C150618);
    const double C151150 = C150806 * C151148;
    const double C151163 = 3 * C151148;
    const double C151227 = C150614 * C151148;
    const double C151226 = C151148 * ae;
    const double C9387 =
        2 * C150614 * C150858 + C150614 * (C150858 + C151148 * C150618);
    const double C151246 = C151053 + C151242;
    const double C151245 = C151241 * ae;
    const double C151617 = 2 * C151241;
    const double C151244 = C151239 + C151240;
    const double C151430 = C150614 * C151426;
    const double C151429 = C151426 * ae;
    const double C151460 = 3 * C151426;
    const double C151431 = ae * C151424;
    const double C151428 = C150614 * C151424;
    const double C151454 = 2 * C151424;
    const double C150723 = C150614 * C150722;
    const double C148 = (3 * (C150703 + C150694 * C150633) +
                         C150621 * (2 * C150709 + C150621 * C150722)) /
                        C150502;
    const double C368 = (C150806 * (2 * C150709 + C150621 * C150722)) / C150502;
    const double C374 =
        (C150703 + C150694 * C150633 + C150722 * C150818) / C150502;
    const double C613 = (C150614 * (2 * C150709 + C150621 * C150722) +
                         (2 * C150710 + C150621 * C150719) * ae) /
                        C150502;
    const double C1187 =
        (C150614 * C150806 * C150722 + C150806 * C150719 * ae) / C150502;
    const double C1476 =
        (2 * C150806 * C150722 + C150806 * (C150722 + C150737 * C150818)) /
        C150502;
    const double C1662 = (C150614 * (C150722 + C150737 * C150818) +
                          (C150719 + C150734 * C150818) * ae) /
                         C150502;
    const double C150839 = C150614 * C150837;
    const double C150922 = C150919 + C150920;
    const double C150971 = 2 * C150964;
    const double C1494 = C135 * C1477;
    const double C1688 = C135 * C1663;
    const double C31831 = C31521 * C1663;
    const double C150859 = C150614 * C150857;
    const double C2205 = (2 * ae * (2 * C150844 + C150806 * C150857) +
                          C150614 * (2 * C150806 * C150637 +
                                     C150806 * (C150637 + C150645 * C150818))) /
                         C150509;
    const double C1479 = (3 * (C150703 + C150694 * C150818) +
                          C150806 * (2 * C150844 + C150806 * C150857)) /
                         C150502;
    const double C2201 = (C150614 * (2 * C150844 + C150806 * C150857) +
                          (2 * C150845 + C150806 * C150858) * ae) /
                         C150502;
    const double C150955 = ae * C150949;
    const double C150953 = C150614 * C150949;
    const double C151416 = 2 * C150949;
    const double C151057 = C151054 + C151055;
    const double C151243 = 2 * C151236;
    const double C150658 = C150657 * C150633;
    const double C150664 = C150621 * C150657;
    const double C151114 = C150657 * C150818;
    const double C151451 = C150614 * C150657;
    const double C151612 = C150806 * C150657;
    const double C150673 = C150672 * C150633;
    const double C151121 = C150621 * C150672;
    const double C151690 = C150672 * C150818;
    const double C151762 = C150806 * C150672;
    const double C151852 = C150614 * C150672;
    const double C150786 = C150621 * C150784;
    const double C151331 = C150784 * C150818;
    const double C151552 = C150806 * C150784;
    const double C151582 = C150784 * C150618;
    const double C151581 = C150614 * C150784;
    const double C151580 = C150784 * ae;
    const double C151194 = C150779 + C151192;
    const double C151516 = C150779 + C151508;
    const double C151515 = C151507 * ae;
    const double C151514 = C151505 + C151506;
    const double C151663 = C151655 * C150618;
    const double C151662 = C150614 * C151655;
    const double C151661 = C151655 * ae;
    const double C151708 = C150806 * C151706;
    const double C151820 = C151706 * C150618;
    const double C151819 = C150614 * C151706;
    const double C151818 = C151706 * ae;
    const double C151782 = C151616 + C151777;
    const double C151781 = C151776 * ae;
    const double C151780 = C151774 + C151775;
    const double C151876 = C150614 * C151870;
    const double C151875 = C151870 * ae;
    const double C151877 = ae * C151868;
    const double C151874 = C150614 * C151868;
    const double C150761 = C150621 * C150759;
    const double C150774 = 3 * C150759;
    const double C150873 = C150759 * C150818;
    const double C150990 = C150614 * C150759;
    const double C151080 = C150806 * C150759;
    const double C151575 = ae * C150759;
    const double C151132 = C150748 + C151129;
    const double C151189 = 2 * C151184;
    const double C151285 = C150614 * C151184;
    const double C151650 = ae * C151184;
    const double C151388 = C151381 + C151382;
    const double C151513 = 2 * C151500;
    const double C151170 = C150806 * C151167;
    const double C151262 = C150614 * C151167;
    const double C151698 = 3 * C151167;
    const double C151813 = ae * C151167;
    const double C151472 = ae * C151464;
    const double C151469 = C150614 * C151464;
    const double C151856 = 2 * C151464;
    const double C151626 = C151621 + C151622;
    const double C151772 = 2 * C151761;
    const double C171 = C134 * C140;
    const double C393 = C134 * C356;
    const double C407 = C134 * C362;
    const double C638 = C134 * C601;
    const double C652 = C134 * C607;
    const double C1202 = C134 * C1181;
    const double C2829 = C134 * C1647;
    const double C7833 = C134 * C1471;
    const double C8090 = C134 * C1653;
    const double C8092 = C134 * C2197;
    const double C150760 = C150755 + C150758;
    const double C150876 = C150734 + C150874;
    const double C150997 = C150734 + C150993;
    const double C150996 = C150992 * ae;
    const double C151583 = 2 * C150992;
    const double C151084 = C150614 * C151081;
    const double C151083 = C151081 * ae;
    const double C151330 = 2 * C151081;
    const double C151135 = C150806 * C151133;
    const double C151186 = 3 * C151133;
    const double C151216 = C150614 * C151133;
    const double C151215 = C151133 * ae;
    const double C151292 = C151067 + C151288;
    const double C151291 = C151287 * ae;
    const double C151656 = 2 * C151287;
    const double C151394 = C150614 * C151390;
    const double C151393 = C151390 * ae;
    const double C151510 = 3 * C151390;
    const double C151173 = C151168 + C151171;
    const double C151269 = C151148 + C151265;
    const double C151268 = C151264 * ae;
    const double C151821 = 2 * C151264;
    const double C151475 = C151459 + C151471;
    const double C151632 = C150614 * C151628;
    const double C151631 = C151628 * ae;
    const double C151769 = 3 * C151628;
    const double C150741 = C150731 + C150739;
    const double C150832 = C150614 * C150830;
    const double C150994 = 2 * C150987;
    const double C150868 = C150614 * C150866;
    const double C1480 = (3 * (C150709 + C150727 * C150818) +
                          C150806 * (2 * C150837 + C150806 * C150866)) /
                         C150502;
    const double C151289 = 2 * C151282;
    const double C151151 = C151143 + C151149;
    const double C151266 = 2 * C151259;
    const double C150791 = C150781 + C150789;
    const double C151332 = C150759 + C151329;
    const double C151555 = C150614 * C151551;
    const double C151195 = C150806 * C151193;
    const double C151308 = C150614 * C151193;
    const double C151709 = C151699 + C151707;
    const double C152562 = C152513 / C150509;
    const double C152564 = C152517 / C150502;
    const double C6261 = -C152563;
    const double C152195 = C152194 / C152185;
    const double C152568 = 2 * C152523;
    const double C152204 = C152203 / C152182;
    const double C152572 = C152527 / C152200;
    const double C152603 = C152521 - C152567;
    const double C3415 = -C152567;
    const double C152621 = C152602 + C152192;
    const double C152277 = C152276 / C152185;
    const double C152576 = 2 * C152532;
    const double C152284 = C152283 / C152182;
    const double C152586 = C152541 / C152200;
    const double C152611 = C152535 - C152583;
    const double C3275 = -C152583;
    const double C152624 = C152607 + C152273;
    const double C152319 = C152318 / C152185;
    const double C152579 = 2 * C152534;
    const double C152326 = C152325 / C152182;
    const double C152592 = C152547 / C152200;
    const double C152614 = C152536 - C152589;
    const double C4281 = -C152589;
    const double C152625 = C152609 + C152315;
    const double C152595 = C152555 / C150509;
    const double C152596 = C152557 / C150502;
    const double C51108 = -C152594;
    const double C150516 = C150515 / C150502;
    const double C100355 = C100341 * C614;
    const double C100349 = C100341 * C615;
    const double C100344 = C100341 * C616;
    const double C100651 = C100341 * C1663;
    const double C100646 = C100341 * C1664;
    const double C100643 = C100341 * C1185;
    const double C100638 = C100341 * C1186;
    const double C117242 =
        (C150572 / C150553 - (0 * be) / C150502) / C150553 + (0 * ae) / C150502;
    const double C133731 = C150572 / C150553 - (0 * be) / C150502;
    const double C187 = C181 + C163;
    const double C6519 = C6514 + C402;
    const double C152619 = C152551 - C152598;
    const double C152620 = C152560 - C152599;
    const double C100353 = C100336 * C154;
    const double C100347 = C100336 * C153;
    const double C109148 = C100336 * C383;
    const double C170 = C152418 * C155;
    const double C14713 = C14680 * C155;
    const double C31542 = C152553 * C155;
    const double C100362 = C100336 * C155;
    const double C401 = C152418 * C382;
    const double C14994 = C14680 * C382;
    const double C31822 = C152553 * C382;
    const double C100642 = C100336 * C382;
    const double C6497 = C152418 * C384;
    const double C40449 = C152553 * C384;
    const double C65042 = C14680 * C384;
    const double C109152 = C100336 * C384;
    const double C646 = C152418 * C627;
    const double C14698 = C14681 * C627;
    const double C15296 = C14680 * C627;
    const double C31530 = C152482 * C627;
    const double C32124 = C152553 * C627;
    const double C100350 = C152482 * C627;
    const double C100944 = C100336 * C627;
    const double C7458 = C152418 * C1191;
    const double C40442 = C152482 * C1191;
    const double C41662 = C152553 * C1191;
    const double C65034 = C14681 * C1191;
    const double C65962 = C14680 * C1191;
    const double C109150 = C152482 * C1191;
    const double C110082 = C100336 * C1191;
    const double C150714 = ae * C150713;
    const double C618 =
        (C150621 * C150703 + C150614 * C150713 + C150614 * C150710 * ae) /
        C150502;
    const double C424 = C404 + C405;
    const double C1212 = C1199 + C1200;
    const double C150849 = ae * C150848;
    const double C1660 =
        (C150806 * C150703 + C150614 * C150848 + C150614 * C150845 * ae) /
        C150502;
    const double C150937 = C150703 + C150935;
    const double C629 =
        ((C150701 + C150618 * C150615 * C150619) * C150617 + C150707 + C150707 +
         C150614 * (2 * ae * C150703 + C150614 * C150628)) /
        C150509;
    const double C648 = C135 * C617;
    const double C14692 = C14688 * C617;
    const double C32125 = C31521 * C617;
    const double C100945 = C100341 * C617;
    const double C188 = C182 + C166;
    const double C189 = C183 + C169;
    const double C430 = C422 + C397;
    const double C431 = C423 + C400;
    const double C6520 = C6515 + C403;
    const double C675 = C667 + C642;
    const double C676 = C668 + C645;
    const double C7472 = C7468 + C1198;
    const double C6521 = C6516 + C1495;
    const double C7471 = C7467 + C1689;
    const double C150952 = C150948 + C150942;
    const double C173 = C152418 * C156;
    const double C14728 = C14680 * C156;
    const double C31545 = C152553 * C156;
    const double C100365 = C100336 * C156;
    const double C398 = C152418 * C381;
    const double C15012 = C14680 * C381;
    const double C31816 = C152553 * C381;
    const double C100636 = C100336 * C381;
    const double C406 = C152418 * C385;
    const double C15003 = C14680 * C385;
    const double C31829 = C152553 * C385;
    const double C100649 = C100336 * C385;
    const double C643 = C152418 * C626;
    const double C14707 = C14681 * C626;
    const double C15314 = C14680 * C626;
    const double C31536 = C152482 * C626;
    const double C32118 = C152553 * C626;
    const double C100356 = C152482 * C626;
    const double C100938 = C100336 * C626;
    const double C1201 = C152418 * C1192;
    const double C14991 = C14681 * C1192;
    const double C16091 = C14680 * C1192;
    const double C31819 = C152482 * C1192;
    const double C32907 = C152553 * C1192;
    const double C100639 = C152482 * C1192;
    const double C101727 = C100336 * C1192;
    const double C6502 = C152418 * C1486;
    const double C42124 = C152553 * C1486;
    const double C66313 = C14680 * C1486;
    const double C109158 = C100336 * C1486;
    const double C7456 = C152418 * C1676;
    const double C40447 = C152482 * C1676;
    const double C42452 = C152553 * C1676;
    const double C65040 = C14681 * C1676;
    const double C66570 = C14680 * C1676;
    const double C109154 = C152482 * C1676;
    const double C110078 = C100336 * C1676;
    const double C150647 = C150637 + C150646;
    const double C150653 = 2 * C150649;
    const double C150965 = C150614 * C150649;
    const double C151065 = C150806 * C150649;
    const double C1485 =
        (2 * C150806 * C150815 +
         C150806 * (C150815 + C150649 * std::pow(C150806, 2))) /
        C150509;
    const double C1675 = (2 * ae * (C150709 + C150727 * C150818) +
                          C150614 * (C150815 + C150649 * C150818)) /
                         C150509;
    const double C151111 = C150637 + C151110;
    const double C151115 = 2 * C151113;
    const double C151237 = C150614 * C151113;
    const double C151427 = C151423 + C151414;
    const double C7834 = C152418 * C1487;
    const double C42134 = C152553 * C1487;
    const double C66323 = C14680 * C1487;
    const double C110437 = C100336 * C1487;
    const double C150738 = C150733 + C150736;
    const double C150833 = C150831 * ae;
    const double C1646 = C150806 * C150719 + C150831 * C150618;
    const double C3131 =
        2 * C150614 * C150831 + C150614 * (C150831 + C151081 * C150618);
    const double C150912 = C150910 * ae;
    const double C150911 = C150908 + C150909;
    const double C1835 = C134 * C1468;
    const double C2051 = C134 * C1650;
    const double C2983 = C134 * C2596;
    const double C150869 = C150867 * ae;
    const double C2202 = (C150614 * (2 * C150837 + C150806 * C150866) +
                          (2 * C150838 + C150806 * C150867) * ae) /
                         C150502;
    const double C1472 = 3 * (C150710 + C150729 * C150818) +
                         C150806 * (2 * C150838 + C150806 * C150867);
    const double C1654 = C150710 + C150729 * C150818 + C150867 * C150618;
    const double C2198 = C150614 * (2 * C150838 + C150806 * C150867);
    const double C9386 =
        2 * C150614 * C150867 + C150614 * (C150867 + C151133 * C150618);
    const double C150977 = C150974 * ae;
    const double C2600 = 3 * (C150710 + C150729 * C150618) +
                         C150614 * (2 * C150921 + C150614 * C150974);
    const double C150978 = ae * C150972;
    const double C150976 = C150614 * C150972;
    const double C151380 = 2 * C150972;
    const double C151072 = C151070 * ae;
    const double C151071 = C151068 + C151069;
    const double C9907 = C134 * C3130;
    const double C151152 = C151145 + C151150;
    const double C151229 = C151227 * ae;
    const double C151228 = C151225 + C151226;
    const double C10119 = C134 * C9387;
    const double C151249 = C151246 * ae;
    const double C9388 = 3 * (C150845 + C151053 * C150618) +
                         C150614 * (2 * C151056 + C150614 * C151246);
    const double C151250 = ae * C151244;
    const double C151248 = C150614 * C151244;
    const double C151614 = 2 * C151244;
    const double C151434 = C151421 + C151430;
    const double C151449 = C150645 + C151431;
    const double C151433 = C150718 + C151428;
    const double C150724 = C150723 + C150721;
    const double C172 = C135 * C148;
    const double C394 = C135 * C368;
    const double C408 = C135 * C374;
    const double C639 = C135 * C613;
    const double C31538 = C31521 * C613;
    const double C100358 = C100341 * C613;
    const double C1203 = C135 * C1187;
    const double C31812 = C31521 * C1187;
    const double C100632 = C100341 * C1187;
    const double C1493 = C135 * C1476;
    const double C1687 = C135 * C1662;
    const double C31837 = C31521 * C1662;
    const double C100657 = C100341 * C1662;
    const double C150841 = C150839 + C150840;
    const double C150925 = ae * C150922;
    const double C150924 = C150614 * C150922;
    const double C150966 = 2 * C150922;
    const double C1842 = C1837 + C1494;
    const double C2058 = C2053 + C1688;
    const double C150861 = C150859 + C150860;
    const double C8093 = C152418 * C2205;
    const double C42126 = C152482 * C2205;
    const double C43410 = C152553 * C2205;
    const double C66315 = C14681 * C2205;
    const double C67294 = C14680 * C2205;
    const double C109156 = C152482 * C2205;
    const double C110689 = C100336 * C2205;
    const double C1496 = C135 * C1479;
    const double C2210 = C135 * C2201;
    const double C33289 = C31521 * C2201;
    const double C102109 = C100341 * C2201;
    const double C151412 = C150637 + C150955;
    const double C150956 = C150694 + C150953;
    const double C151060 = ae * C151057;
    const double C151059 = C150614 * C151057;
    const double C151238 = 2 * C151057;
    const double C150659 = C150645 + C150658;
    const double C150668 = 2 * C150664;
    const double C151107 = C150664 * C150818;
    const double C151120 = C150806 * C150664;
    const double C151378 = C150614 * C150664;
    const double C1488 = (3 * (C150815 + C150649 * C150818) +
                          C150806 * (2 * C150806 * C150649 +
                                     C150806 * (C150649 + C150664 * C150818))) /
                         C150509;
    const double C2206 = (2 * ae * (2 * C150837 + C150806 * C150866) +
                          C150614 * (2 * C150806 * C150649 +
                                     C150806 * (C150649 + C150664 * C150818))) /
                         C150509;
    const double C151116 = C150645 + C151114;
    const double C151468 = C151463 + C151451;
    const double C151620 = C150614 * C151612;
    const double C151689 = 2 * C151612;
    const double C150674 = C150657 + C150673;
    const double C151123 = C151121 * C150818;
    const double C151501 = C150614 * C151121;
    const double C151651 = C150806 * C151121;
    const double C151691 = C150657 + C151690;
    const double C151773 = C150614 * C151762;
    const double C151873 = C151867 + C151852;
    const double C150788 = C150783 + C150786;
    const double C151333 = C150756 + C151331;
    const double C151558 = C151552 * C150618;
    const double C151557 = C150614 * C151552;
    const double C151556 = C151552 * ae;
    const double C151588 = C150756 + C151582;
    const double C151587 = C151581 * ae;
    const double C151586 = C151579 + C151580;
    const double C151196 = C150806 * C151194;
    const double C151311 = C151194 * C150618;
    const double C151310 = C150614 * C151194;
    const double C151309 = C151194 * ae;
    const double C151521 = C150614 * C151516;
    const double C151520 = C151516 * ae;
    const double C151522 = ae * C151514;
    const double C151519 = C150614 * C151514;
    const double C151667 = C151187 + C151663;
    const double C151666 = C151662 * ae;
    const double C151665 = C151660 + C151661;
    const double C151710 = C151703 + C151708;
    const double C151826 = C151169 + C151820;
    const double C151825 = C151819 * ae;
    const double C151824 = C151817 + C151818;
    const double C151786 = C150614 * C151782;
    const double C151785 = C151782 * ae;
    const double C151787 = ae * C151780;
    const double C151784 = C150614 * C151780;
    const double C151880 = C151861 + C151876;
    const double C151879 = C150754 + C151874;
    const double C150763 = C150753 + C150761;
    const double C150875 = C150737 + C150873;
    const double C150995 = C150990 + C150991;
    const double C151082 = C150614 * C151080;
    const double C151328 = 2 * C151080;
    const double C151548 = ae * C151080;
    const double C151585 = 2 * C151575;
    const double C151134 = C150806 * C151132;
    const double C151183 = 3 * C151132;
    const double C151214 = C150614 * C151132;
    const double C151305 = ae * C151132;
    const double C151290 = C151285 + C151286;
    const double C151658 = 2 * C151650;
    const double C151395 = ae * C151388;
    const double C151392 = C150614 * C151388;
    const double C151504 = 2 * C151388;
    const double C151172 = C151166 + C151170;
    const double C151267 = C151262 + C151263;
    const double C151823 = 2 * C151813;
    const double C151850 = C150657 + C151472;
    const double C151474 = C150732 + C151469;
    const double C151633 = ae * C151626;
    const double C151630 = C150614 * C151626;
    const double C151765 = 2 * C151626;
    const double C150762 = C150621 * C150760;
    const double C150777 = 4 * C150760;
    const double C150824 = C150806 * C150760;
    const double C150899 = C150614 * C150760;
    const double C150898 = C150760 * ae;
    const double C150878 = C150876 * ae;
    const double C1473 = 3 * (C150719 + C150734 * C150818) +
                         C150806 * (2 * C150831 + C150806 * C150876);
    const double C1655 = C150719 + C150734 * C150818 + C150876 * C150618;
    const double C2199 = C150614 * (2 * C150831 + C150806 * C150876);
    const double C151000 = C150997 * ae;
    const double C2601 = 3 * (C150719 + C150734 * C150618) +
                         C150614 * (2 * C150910 + C150614 * C150997);
    const double C151086 = C151084 * ae;
    const double C151137 = C151130 + C151135;
    const double C151218 = C151216 * ae;
    const double C151295 = C151292 * ae;
    const double C9390 = 3 * (C150838 + C151067 * C150618) +
                         C150614 * (2 * C151070 + C150614 * C151292);
    const double C151398 = C151385 + C151394;
    const double C151175 = C150806 * C151173;
    const double C151356 = C150614 * C151173;
    const double C151355 = C151173 * ae;
    const double C151701 = 4 * C151173;
    const double C151272 = C151269 * ae;
    const double C9389 = 3 * (C150858 + C151148 * C150618) +
                         C150614 * (2 * C151227 + C150614 * C151269);
    const double C151479 = C150614 * C151475;
    const double C151478 = C151475 * ae;
    const double C151863 = 4 * C151475;
    const double C151636 = C151617 + C151632;
    const double C150742 = C150614 * C150741;
    const double C149 = (4 * (2 * C150709 + C150621 * C150722) +
                         C150621 * (3 * C150722 + C150621 * C150741)) /
                        C150502;
    const double C375 =
        (2 * C150709 + C150621 * C150722 + C150741 * C150818) / C150502;
    const double C376 = (C150806 * (3 * C150722 + C150621 * C150741)) / C150502;
    const double C1497 = C135 * C1480;
    const double C151153 = C150614 * C151151;
    const double C7825 = (4 * (2 * C150844 + C150806 * C150857) +
                          C150806 * (3 * C150857 + C150806 * C151151)) /
                         C150502;
    const double C150793 = C150621 * C150791;
    const double C150882 = C150791 * C150818;
    const double C151013 = C150614 * C150791;
    const double C151094 = C150806 * C150791;
    const double C151334 = C150806 * C151332;
    const double C151343 = C150614 * C151332;
    const double C151197 = C151189 + C151195;
    const double C151711 = C150806 * C151709;
    const double C151728 = C150614 * C151709;
    const double C152600 = C152512 - C152562;
    const double C152601 = C152516 - C152564;
    const double C152196 = C152192 - C152195;
    const double C152604 = C152568 / C152182;
    const double C152205 = C152201 - C152204;
    const double C152622 = C152603 / C152186;
    const double C152278 = C152273 - C152277;
    const double C152608 = C152576 / C152182;
    const double C152285 = C152281 - C152284;
    const double C152626 = C152611 / C152186;
    const double C152320 = C152315 - C152319;
    const double C152610 = C152579 / C152182;
    const double C152327 = C152323 - C152326;
    const double C152628 = C152614 / C152186;
    const double C152617 = C152549 - C152595;
    const double C152618 = C152556 - C152596;
    const double C150517 = C152418 - C150516;
    const double C133735 = C133731 * C617;
    const double C193 = C187 + C164;
    const double C6524 = C6519 + C6495;
    const double C133771 = C152619 * C156;
    const double C133756 = C152619 * C155;
    const double C133753 = C152619 * C154;
    const double C133738 = C152619 * C153;
    const double C134055 = C152619 * C381;
    const double C134046 = C152619 * C385;
    const double C134037 = C152619 * C382;
    const double C134357 = C152619 * C626;
    const double C134339 = C152619 * C627;
    const double C135134 = C152619 * C1192;
    const double C142548 = C152619 * C384;
    const double C142538 = C152619 * C383;
    const double C143468 = C152619 * C1191;
    const double C143829 = C152619 * C1487;
    const double C143819 = C152619 * C1486;
    const double C144076 = C152619 * C1676;
    const double C144800 = C152619 * C2205;
    const double C117231 =
        (C152619 * C152477) / C150502 + (C152553 - C152597) / C150553;
    const double C133750 = C152620 * C626;
    const double C133741 = C152620 * C627;
    const double C134034 = C152620 * C1192;
    const double C142546 = C152620 * C1676;
    const double C142540 = C152620 * C1191;
    const double C143821 = C152620 * C2205;
    const double C117232 =
        (C152620 * C152477) / C150502 + (2 * C152482 + C152619) / C150553;
    const double C117233 = (C152477 * C152482) / C150513 + C152620 / C150553;
    const double C630 =
        (C150621 * C150628 + C150714 + C150714 +
         C150614 * (2 * ae * C150709 + C150614 * C150621 * C150637)) /
        C150509;
    const double C650 = C135 * C618;
    const double C14700 = C14688 * C618;
    const double C32120 = C31521 * C618;
    const double C100940 = C100341 * C618;
    const double C133743 = C133731 * C618;
    const double C432 = C424 + C405;
    const double C1216 = C1212 + C1200;
    const double C1672 =
        (C150806 * C150628 + C150849 + C150849 +
         C150614 * (2 * ae * C150844 + C150614 * C150806 * C150637)) /
        C150509;
    const double C1685 = C135 * C1660;
    const double C14995 = C14688 * C1660;
    const double C32904 = C31521 * C1660;
    const double C101724 = C100341 * C1660;
    const double C134038 = C133731 * C1660;
    const double C150938 = C150937 + C150934;
    const double C194 = C188 + C167;
    const double C195 = C189 + C170;
    const double C439 = C431 + C401;
    const double C6525 = C6520 + C6497;
    const double C684 = C676 + C646;
    const double C7476 = C7472 + C7458;
    const double C438 = C430 + C398;
    const double C683 = C675 + C643;
    const double C6526 = C6521 + C6502;
    const double C7475 = C7471 + C7456;
    const double C157 =
        (4 * (2 * C150621 * C150637 + C150621 * C150647) +
         C150621 * (3 * C150647 +
                    C150621 * (2 * C150621 * C150645 +
                               C150621 * (C150645 + (C150640 * C150641 +
                                                     C150618 * bs[7] *
                                                         std::pow(C150616, 7)) *
                                                        C150617 * C150633)))) /
        C150509;
    const double C380 =
        ((yP - yQ) * (2 * C150621 * C150637 + C150621 * C150647)) / C150509;
    const double C386 =
        (C150628 + C150637 * C150633 + C150647 * std::pow(yP - yQ, 2)) /
        C150509;
    const double C625 =
        (2 * ae *
             (2 * C150621 * C150694 +
              C150621 * (C150694 + C150632 * C150631 * C150692 * C150633)) +
         C150614 * (2 * C150621 * C150637 + C150621 * C150647)) /
        C150509;
    const double C1193 =
        (2 * ae * C150806 * C150722 + C150614 * C150806 * C150647) / C150509;
    const double C150975 = C150971 + C150965;
    const double C1838 = C152418 * C1485;
    const double C16915 = C14680 * C1485;
    const double C33734 = C152553 * C1485;
    const double C102554 = C100336 * C1485;
    const double C135958 = C152619 * C1485;
    const double C2054 = C152418 * C1675;
    const double C15006 = C14681 * C1675;
    const double C17223 = C14680 * C1675;
    const double C31832 = C152482 * C1675;
    const double C34046 = C152553 * C1675;
    const double C100652 = C152482 * C1675;
    const double C102866 = C100336 * C1675;
    const double C134049 = C152620 * C1675;
    const double C136266 = C152619 * C1675;
    const double C7829 =
        (4 * (2 * C151051 + C150806 * C151111) +
         C150806 * (3 * C151111 +
                    C150806 * (2 * C150806 * C150645 +
                               C150806 * (C150645 + C150657 * C150818)))) /
        C150509;
    const double C151247 = C151243 + C151237;
    const double C151432 = C150614 * C151427;
    const double C151448 = 2 * C151427;
    const double C150740 = C150738 * ae;
    const double C621 = (C150614 * (3 * C150722 + C150621 * C150741) +
                         (3 * C150719 + C150621 * C150738) * ae) /
                        C150502;
    const double C1188 =
        (C150614 * C150806 * C150741 + C150806 * C150738 * ae) / C150502;
    const double C141 = 4 * (2 * C150710 + C150621 * C150719) +
                        C150621 * (3 * C150719 + C150621 * C150738);
    const double C363 = 2 * C150710 + C150621 * C150719 + C150738 * C150818;
    const double C364 = C150806 * (3 * C150719 + C150621 * C150738);
    const double C608 = 2 * C150710 + C150621 * C150719 + C150738 * C150618;
    const double C609 = C150614 * (3 * C150719 + C150621 * C150738);
    const double C1182 = C150614 * C150806 * C150738;
    const double C1467 =
        2 * C150806 * C150738 + C150806 * (C150738 + C150760 * C150818);
    const double C1649 = C150614 * (C150738 + C150760 * C150818);
    const double C2595 =
        2 * C150614 * C150738 + C150614 * (C150738 + C150760 * C150618);
    const double C150834 = C150832 + C150833;
    const double C2827 = C134 * C1646;
    const double C26764 = C134 * C3131;
    const double C150914 = ae * C150911;
    const double C150913 = C150614 * C150911;
    const double C150989 = 2 * C150911;
    const double C150870 = C150868 + C150869;
    const double C2211 = C135 * C2202;
    const double C33287 = C31521 * C2202;
    const double C102107 = C100341 * C2202;
    const double C6505 = C134 * C1472;
    const double C6754 = C134 * C1654;
    const double C7461 = C134 * C2198;
    const double C9905 = C134 * C9386;
    const double C151376 = C150649 + C150978;
    const double C150979 = C150727 + C150976;
    const double C151074 = ae * C151071;
    const double C151073 = C150614 * C151071;
    const double C151284 = 2 * C151071;
    const double C151154 = C151152 * ae;
    const double C8078 = (C150614 * (3 * C150857 + C150806 * C151151) +
                          (3 * C150858 + C150806 * C151152) * ae) /
                         C150502;
    const double C7821 = 4 * (2 * C150845 + C150806 * C150858) +
                         C150806 * (3 * C150858 + C150806 * C151152);
    const double C8070 = 2 * C150845 + C150806 * C150858 + C151152 * C150618;
    const double C8072 = C150614 * (3 * C150858 + C150806 * C151152);
    const double C10112 =
        2 * C150614 * C151152 + C150614 * (C151152 + C151173 * C150618);
    const double C151231 = ae * C151228;
    const double C151230 = C150614 * C151228;
    const double C151261 = 2 * C151228;
    const double C151610 = C151113 + C151250;
    const double C151251 = C151052 + C151248;
    const double C151437 = C151434 * ae;
    const double C17994 = 4 * (2 * C150932 + C150614 * C150951) +
                          C150614 * (3 * C150951 + C150614 * C151434);
    const double C151462 = C151449 + C151431;
    const double C151436 = C151433 + C151425;
    const double C150725 = ae * C150724;
    const double C619 = (C150703 + C150694 * C150633 + C150614 * C150724 +
                         C150614 * C150719 * ae) /
                        C150502;
    const double C184 = C171 + C172;
    const double C421 = C393 + C394;
    const double C425 = C407 + C408;
    const double C666 = C638 + C639;
    const double C1213 = C1202 + C1203;
    const double C1841 = C1835 + C1493;
    const double C2057 = C2051 + C1687;
    const double C150842 = ae * C150841;
    const double C1659 =
        (C150806 * C150709 + C150614 * C150841 + C150614 * C150838 * ae) /
        C150502;
    const double C150926 = C150709 + C150924;
    const double C1845 = C1842 + C1494;
    const double C2061 = C2058 + C1688;
    const double C150862 = ae * C150861;
    const double C1665 = (C150703 + C150694 * C150818 + C150614 * C150861 +
                          C150614 * C150858 * ae) /
                         C150502;
    const double C7843 = C7833 + C1496;
    const double C8106 = C8092 + C2210;
    const double C151422 = C151412 + C150955;
    const double C150957 = C150956 + C150950;
    const double C151061 = C150844 + C151059;
    const double C150660 = C150621 * C150659;
    const double C150663 = 3 * C150659;
    const double C150988 = C150614 * C150659;
    const double C151079 = C150806 * C150659;
    const double C1484 =
        (2 * C150806 * C150647 +
         C150806 * (C150647 + C150659 * std::pow(C150806, 2))) /
        C150509;
    const double C1674 = (2 * ae * (C150722 + C150737 * C150818) +
                          C150614 * (C150647 + C150659 * C150818)) /
                         C150509;
    const double C151108 = C150649 + C151107;
    const double C151122 = 2 * C151120;
    const double C151283 = C150614 * C151120;
    const double C151391 = C151387 + C151378;
    const double C6506 = C152418 * C1488;
    const double C42130 = C152553 * C1488;
    const double C110925 = C100336 * C1488;
    const double C7462 = C152418 * C2206;
    const double C16913 = C14681 * C2206;
    const double C33732 = C152482 * C2206;
    const double C43141 = C152553 * C2206;
    const double C102552 = C152482 * C2206;
    const double C111228 = C100336 * C2206;
    const double C135956 = C152620 * C2206;
    const double C151117 = C150806 * C151116;
    const double C151260 = C150614 * C151116;
    const double C151688 = 3 * C151116;
    const double C151473 = C150614 * C151468;
    const double C151849 = 2 * C151468;
    const double C151625 = C151619 + C151620;
    const double C150675 = C150621 * C150674;
    const double C151208 = C150674 * C150818;
    const double C151549 = C150806 * C150674;
    const double C151576 = C150614 * C150674;
    const double C1489 = (3 * (C150647 + C150659 * C150818) +
                          C150806 * (2 * C150806 * C150659 +
                                     C150806 * (C150659 + C150674 * C150818))) /
                         C150509;
    const double C151124 = C150664 + C151123;
    const double C151518 = C151513 + C151501;
    const double C151659 = C150614 * C151651;
    const double C151692 = C150806 * C151691;
    const double C151814 = C150614 * C151691;
    const double C151779 = C151772 + C151773;
    const double C151878 = C150614 * C151873;
    const double C150790 = C150621 * C150788;
    const double C150883 = C150788 * C150818;
    const double C151016 = C150788 * C150618;
    const double C151015 = C150614 * C150788;
    const double C151014 = C150788 * ae;
    const double C151095 = C150806 * C150788;
    const double C151335 = C150806 * C151333;
    const double C151345 = C150614 * C151333;
    const double C151344 = C151333 * ae;
    const double C9901 =
        2 * C150614 * C150876 + C150614 * (C150876 + C151333 * C150618);
    const double C151562 = C151081 + C151558;
    const double C151561 = C151557 * ae;
    const double C151560 = C151555 + C151556;
    const double C151592 = C150614 * C151588;
    const double C151591 = C151588 * ae;
    const double C151593 = ae * C151586;
    const double C151590 = C150614 * C151586;
    const double C151198 = C151191 + C151196;
    const double C151315 = C151133 + C151311;
    const double C151314 = C151310 * ae;
    const double C151313 = C151308 + C151309;
    const double C151525 = C151509 + C151521;
    const double C151524 = C150775 + C151519;
    const double C151671 = C150614 * C151667;
    const double C151670 = C151667 * ae;
    const double C151672 = ae * C151665;
    const double C151669 = C150614 * C151665;
    const double C151712 = C150806 * C151710;
    const double C151731 = C151710 * C150618;
    const double C151730 = C150614 * C151710;
    const double C151729 = C151710 * ae;
    const double C151830 = C150614 * C151826;
    const double C151829 = C151826 * ae;
    const double C151831 = ae * C151824;
    const double C151828 = C150614 * C151824;
    const double C151790 = C151768 + C151786;
    const double C151789 = C151615 + C151784;
    const double C151884 = C150614 * C151880;
    const double C151883 = C151880 * ae;
    const double C151882 = C151879 + C151869;
    const double C150765 = C150621 * C150763;
    const double C150773 = 4 * C150763;
    const double C150823 = C150806 * C150763;
    const double C150897 = C150614 * C150763;
    const double C151010 = ae * C150763;
    const double C1475 =
        (2 * C150806 * C150741 + C150806 * (C150741 + C150763 * C150818)) /
        C150502;
    const double C1661 = (C150614 * (C150741 + C150763 * C150818) +
                          (C150738 + C150760 * C150818) * ae) /
                         C150502;
    const double C150877 = C150614 * C150875;
    const double C2207 = (2 * ae * (2 * C150830 + C150806 * C150875) +
                          C150614 * (2 * C150806 * C150659 +
                                     C150806 * (C150659 + C150674 * C150818))) /
                         C150509;
    const double C1481 = (3 * (C150722 + C150737 * C150818) +
                          C150806 * (2 * C150830 + C150806 * C150875)) /
                         C150502;
    const double C2203 = (C150614 * (2 * C150830 + C150806 * C150875) +
                          (2 * C150831 + C150806 * C150876) * ae) /
                         C150502;
    const double C151001 = ae * C150995;
    const double C150999 = C150614 * C150995;
    const double C151578 = 2 * C150995;
    const double C151085 = C151082 + C151083;
    const double C151553 = 2 * C151548;
    const double C151136 = C151128 + C151134;
    const double C151217 = C151214 + C151215;
    const double C151312 = 2 * C151305;
    const double C151296 = ae * C151290;
    const double C151294 = C150614 * C151290;
    const double C151653 = 2 * C151290;
    const double C151499 = C150664 + C151395;
    const double C151397 = C150748 + C151392;
    const double C151174 = C150806 * C151172;
    const double C151354 = C150614 * C151172;
    const double C151697 = 4 * C151172;
    const double C151725 = ae * C151172;
    const double C151273 = ae * C151267;
    const double C151271 = C150614 * C151267;
    const double C151816 = 2 * C151267;
    const double C151866 = C151850 + C151472;
    const double C151477 = C151474 + C151465;
    const double C151760 = C151612 + C151633;
    const double C151635 = C151161 + C151630;
    const double C150764 = C150750 + C150762;
    const double C150826 = C150824 * ae;
    const double C1645 = C150806 * C150738 + C150824 * C150618;
    const double C150901 = C150899 * ae;
    const double C6510 = C134 * C1473;
    const double C6759 = C134 * C1655;
    const double C7463 = C134 * C2199;
    const double C151139 = C151137 * ae;
    const double C7820 = 4 * (2 * C150838 + C150806 * C150867) +
                         C150806 * (3 * C150867 + C150806 * C151137);
    const double C8069 = 2 * C150838 + C150806 * C150867 + C151137 * C150618;
    const double C8071 = C150614 * (3 * C150867 + C150806 * C151137);
    const double C151401 = C151398 * ae;
    const double C17993 = 4 * (2 * C150921 + C150614 * C150974) +
                          C150614 * (3 * C150974 + C150614 * C151398);
    const double C151177 = C151163 + C151175;
    const double C151358 = C151356 * ae;
    const double C151482 = C151460 + C151479;
    const double C151638 = C151636 * ae;
    const double C18737 = 4 * (2 * C151056 + C150614 * C151246) +
                          C150614 * (3 * C151246 + C150614 * C151636);
    const double C175 = C135 * C149;
    const double C411 = C135 * C375;
    const double C414 = C135 * C376;
    const double C7839 = C135 * C7825;
    const double C150795 = C150774 + C150793;
    const double C150884 = C150763 + C150882;
    const double C151096 = C150614 * C151094;
    const double C151336 = C151328 + C151334;
    const double C151199 = C150806 * C151197;
    const double C151365 = C150614 * C151197;
    const double C151713 = C151698 + C151711;
    const double C123 =
        (C152600 * C152159) / C150502 + (C152514 - C152563) / C150553;
    const double C124 =
        (C152601 * C152159) / C150502 + (2 * C152169 + C152600) / C150553;
    const double C125 = (C152159 * C152169) / C150513 + C152601 / C150553;
    const double C152520 = C152196 * C152184;
    const double C152570 = C152525 + C152196;
    const double C152528 = C152205 / C152186;
    const double C152524 = C152205 * C152184;
    const double C829 = C152622 - (C152196 * C152187) / C152182;
    const double C152538 = C152278 * C152272;
    const double C152585 = C152540 + C152278;
    const double C152542 = C152285 / C152186;
    const double C152539 = C152285 * C152272;
    const double C1823 = C152626 - (C152278 * C152274) / C152182;
    const double C152544 = C152320 * C152314;
    const double C152591 = C152546 + C152320;
    const double C152548 = C152327 / C152186;
    const double C152545 = C152327 * C152314;
    const double C2973 = C152628 - (C152320 * C152316) / C152182;
    const double C59279 =
        (C152617 * C152449) / C150502 + (C152552 - C152594) / C150553;
    const double C59280 =
        (C152618 * C152449) / C150502 + (2 * C152454 + C152617) / C150553;
    const double C59281 = (C152449 * C152454) / C150513 + C152618 / C150553;
    const double C150518 = C150517 * C150511;
    const double C150558 = C150517 * ae;
    const double C14684 =
        (((0 - (C150500 * C150508) / C150502) * ae) / C150502 -
         (0 * be) / C150513) /
            (2 * C150502) +
        ((C150500 * ((C150517 * ae) / C150502 - C150508 / C150513) + C152553) *
         ae) /
            C150502 +
        (0 * ae) / C150502 - C150512 / C150509;
    const double C14686 =
        ((C150517 * ae) / C150502 - C150508 / C150513) / (2 * C150502) +
        ((C150500 * ((0 * ae) / C150502 - C150512 / C150509) + C152482) * ae) /
            C150502;
    const double C31519 = (C150517 * ae) / C150502 - C150508 / C150513;
    const double C100339 =
        (-C150508 / C150502) / (2 * C150502) - (C150517 * be) / C150502;
    const double C199 = C193 * C152403;
    const double C6264 = C193 * C6258;
    const double C23305 = C193 * C152552;
    const double C51114 = C193 * C51108;
    const double C73125 = C193 * C152617;
    const double C651 = C152418 * C630;
    const double C14701 = C14682 * C630;
    const double C15305 = C14680 * C630;
    const double C15293 = C14681 * C630;
    const double C32131 = C152553 * C630;
    const double C32121 = C152482 * C630;
    const double C100951 = C100336 * C630;
    const double C100941 = C152482 * C630;
    const double C133744 = C133725 * C630;
    const double C134348 = C152619 * C630;
    const double C134336 = C152620 * C630;
    const double C669 = C649 + C650;
    const double C440 = C432 + C406;
    const double C1220 = C1216 + C1201;
    const double C8089 = C152418 * C1672;
    const double C41660 = C152482 * C1672;
    const double C42448 = C152553 * C1672;
    const double C65036 = C14682 * C1672;
    const double C65960 = C14681 * C1672;
    const double C66564 = C14680 * C1672;
    const double C110080 = C152482 * C1672;
    const double C110681 = C100336 * C1672;
    const double C142542 = C133725 * C1672;
    const double C143466 = C152620 * C1672;
    const double C144070 = C152619 * C1672;
    const double C8104 = C8088 + C1685;
    const double C150939 = ae * C150938;
    const double C2606 =
        (2 * C150706 + C150614 * C150938 + (C150701 + C150622 * C150618) * ae) /
        C150502;
    const double C200 = C194 * C152403;
    const double C6269 = C194 * C6258;
    const double C23307 = C194 * C152552;
    const double C51116 = C194 * C51108;
    const double C73130 = C194 * C152617;
    const double C201 = C195 * C152403;
    const double C6270 = C195 * C6258;
    const double C23310 = C195 * C152552;
    const double C51119 = C195 * C51108;
    const double C73131 = C195 * C152617;
    const double C447 = C439 * C152403;
    const double C6265 = C439 * C6259;
    const double C6500 = C439 * C6258;
    const double C23306 = C439 * C152454;
    const double C23539 = C439 * C152552;
    const double C51115 = C439 * C152454;
    const double C51348 = C439 * C51108;
    const double C73126 = C439 * C152618;
    const double C73357 = C439 * C152617;
    const double C692 = C684 * C152403;
    const double C6751 = C684 * C6258;
    const double C23771 = C684 * C152552;
    const double C51580 = C684 * C51108;
    const double C73587 = C684 * C152617;
    const double C446 = C438 * C152403;
    const double C6268 = C438 * C6259;
    const double C6507 = C438 * C6258;
    const double C23308 = C438 * C152454;
    const double C23537 = C438 * C152552;
    const double C51117 = C438 * C152454;
    const double C51346 = C438 * C51108;
    const double C73129 = C438 * C152618;
    const double C73361 = C438 * C152617;
    const double C691 = C683 * C152403;
    const double C6756 = C683 * C6258;
    const double C23769 = C683 * C152552;
    const double C51578 = C683 * C51108;
    const double C73591 = C683 * C152617;
    const double C176 = C152418 * C157;
    const double C31554 = C152553 * C157;
    const double C100374 = C100336 * C157;
    const double C395 = C152418 * C380;
    const double C15571 = C14680 * C380;
    const double C31841 = C152553 * C380;
    const double C100661 = C100336 * C380;
    const double C134614 = C152619 * C380;
    const double C409 = C152418 * C386;
    const double C15027 = C14680 * C386;
    const double C31835 = C152553 * C386;
    const double C100655 = C100336 * C386;
    const double C134070 = C152619 * C386;
    const double C640 = C152418 * C625;
    const double C14716 = C14681 * C625;
    const double C15783 = C14680 * C625;
    const double C31539 = C152482 * C625;
    const double C32143 = C152553 * C625;
    const double C100359 = C152482 * C625;
    const double C100963 = C100336 * C625;
    const double C133759 = C152620 * C625;
    const double C134826 = C152619 * C625;
    const double C1204 = C152418 * C1193;
    const double C15015 = C14681 * C1193;
    const double C16106 = C14680 * C1193;
    const double C31813 = C152482 * C1193;
    const double C32913 = C152553 * C1193;
    const double C100633 = C152482 * C1193;
    const double C101733 = C100336 * C1193;
    const double C134058 = C152620 * C1193;
    const double C135149 = C152619 * C1193;
    const double C7840 = C152418 * C7829;
    const double C93605 = C152553 * C7829;
    const double C110445 = C100336 * C7829;
    const double C150743 = C150742 + C150740;
    const double C659 = C135 * C621;
    const double C31547 = C31521 * C621;
    const double C100367 = C100341 * C621;
    const double C1206 = C135 * C1188;
    const double C31843 = C31521 * C1188;
    const double C100663 = C100341 * C1188;
    const double C174 = C134 * C141;
    const double C410 = C134 * C363;
    const double C413 = C134 * C364;
    const double C655 = C134 * C608;
    const double C658 = C134 * C609;
    const double C1205 = C134 * C1182;
    const double C1833 = C134 * C1467;
    const double C2049 = C134 * C1649;
    const double C2981 = C134 * C2595;
    const double C150835 = ae * C150834;
    const double C1658 =
        (C150806 * C150722 + C150614 * C150834 + C150614 * C150831 * ae) /
        C150502;
    const double C150915 = C150722 + C150913;
    const double C150871 = ae * C150870;
    const double C1666 = (C150709 + C150727 * C150818 + C150614 * C150870 +
                          C150614 * C150867 * ae) /
                         C150502;
    const double C6517 = C6505 + C1497;
    const double C7469 = C7461 + C2211;
    const double C151386 = C151376 + C150978;
    const double C150980 = C150979 + C150973;
    const double C151075 = C150837 + C151073;
    const double C151155 = C151153 + C151154;
    const double C8101 = C135 * C8078;
    const double C33292 = C31521 * C8078;
    const double C102112 = C100341 * C8078;
    const double C7838 = C134 * C7821;
    const double C8097 = C134 * C8070;
    const double C8822 = C134 * C8072;
    const double C61721 = C134 * C10112;
    const double C151232 = C150857 + C151230;
    const double C151618 = C151610 + C151250;
    const double C151252 = C151251 + C151245;
    const double C151439 = ae * C151436;
    const double C151438 = C150614 * C151436;
    const double C151453 = 3 * C151436;
    const double C631 = (C150628 + C150637 * C150633 + C150725 + C150725 +
                         C150614 * (2 * ae * C150722 + C150614 * C150647)) /
                        C150509;
    const double C653 = C135 * C619;
    const double C14703 = C14688 * C619;
    const double C32114 = C31521 * C619;
    const double C100934 = C100341 * C619;
    const double C133746 = C133731 * C619;
    const double C190 = C184 + C172;
    const double C429 = C421 + C394;
    const double C433 = C425 + C408;
    const double C674 = C666 + C639;
    const double C1217 = C1213 + C1203;
    const double C1844 = C1841 + C1493;
    const double C2060 = C2057 + C1687;
    const double C1671 =
        (C150806 * C150815 + C150842 + C150842 +
         C150614 * (2 * ae * C150837 + C150614 * C150806 * C150649)) /
        C150509;
    const double C1684 = C135 * C1659;
    const double C14987 = C14688 * C1659;
    const double C32909 = C31521 * C1659;
    const double C101729 = C100341 * C1659;
    const double C134030 = C133731 * C1659;
    const double C150927 = C150926 + C150923;
    const double C1848 = C1845 + C1838;
    const double C2064 = C2061 + C2054;
    const double C1677 = (C150628 + C150637 * C150818 + C150862 + C150862 +
                          C150614 * (2 * ae * C150857 +
                                     C150614 * (C150637 + C150645 * C150818))) /
                         C150509;
    const double C1690 = C135 * C1665;
    const double C15000 = C14688 * C1665;
    const double C33525 = C31521 * C1665;
    const double C102345 = C100341 * C1665;
    const double C134043 = C133731 * C1665;
    const double C7846 = C7843 + C1496;
    const double C8111 = C8106 + C2210;
    const double C151435 = C151422 + C151432;
    const double C150959 = ae * C150957;
    const double C150958 = C150614 * C150957;
    const double C151415 = 3 * C150957;
    const double C151062 = C151061 + C151058;
    const double C150661 = C150653 + C150660;
    const double C150998 = C150994 + C150988;
    const double C1836 = C152418 * C1484;
    const double C33730 = C152553 * C1484;
    const double C102550 = C100336 * C1484;
    const double C2052 = C152418 * C1674;
    const double C15024 = C14681 * C1674;
    const double C31838 = C152482 * C1674;
    const double C34042 = C152553 * C1674;
    const double C100658 = C152482 * C1674;
    const double C102862 = C100336 * C1674;
    const double C134067 = C152620 * C1674;
    const double C7828 =
        (4 * (2 * C151065 + C150806 * C151108) +
         C150806 *
             (3 * C151108 +
              C150806 * (2 * C150806 * C150664 +
                         C150806 * (C150664 + C150621 * C150672 * C150818)))) /
        C150509;
    const double C151293 = C151289 + C151283;
    const double C151396 = C150614 * C151391;
    const double C151498 = 2 * C151391;
    const double C151118 = C151115 + C151117;
    const double C151270 = C151266 + C151260;
    const double C151476 = C151462 + C151473;
    const double C151629 = C150614 * C151625;
    const double C151759 = 2 * C151625;
    const double C150676 = C150668 + C150675;
    const double C151209 = C150659 + C151208;
    const double C151554 = C150614 * C151549;
    const double C151589 = C151585 + C151576;
    const double C6511 = C152418 * C1489;
    const double C151125 = C150806 * C151124;
    const double C151306 = C150614 * C151124;
    const double C151523 = C150614 * C151518;
    const double C151664 = C151658 + C151659;
    const double C151693 = C151689 + C151692;
    const double C151827 = C151823 + C151814;
    const double C151783 = C150614 * C151779;
    const double C150792 = C150778 + C150790;
    const double C150885 = C150760 + C150883;
    const double C151020 = C150760 + C151016;
    const double C151019 = C151015 * ae;
    const double C151018 = C151013 + C151014;
    const double C151098 = C150614 * C151095;
    const double C151097 = C151095 * ae;
    const double C3132 =
        2 * C150614 * C150824 + C150614 * (C150824 + C151095 * C150618);
    const double C151337 = C151330 + C151335;
    const double C151347 = C151345 * ae;
    const double C151346 = C151343 + C151344;
    const double C151564 = C151562 * ae;
    const double C18307 = 3 * (C150831 + C151081 * C150618) +
                          C150614 * (2 * C151084 + C150614 * C151562);
    const double C151565 = ae * C151560;
    const double C151563 = C150614 * C151560;
    const double C151596 = C151583 + C151592;
    const double C151595 = C150759 + C151590;
    const double C151200 = C150806 * C151198;
    const double C151367 = C150614 * C151198;
    const double C151366 = C151198 * ae;
    const double C10113 =
        2 * C150614 * C151137 + C150614 * (C151137 + C151198 * C150618);
    const double C151318 = C151315 * ae;
    const double C9391 = 3 * (C150867 + C151133 * C150618) +
                         C150614 * (2 * C151216 + C150614 * C151315);
    const double C151319 = ae * C151313;
    const double C151317 = C150614 * C151313;
    const double C151529 = C150614 * C151525;
    const double C151528 = C151525 * ae;
    const double C151527 = C151524 + C151515;
    const double C151675 = C151656 + C151671;
    const double C151674 = C151184 + C151669;
    const double C151714 = C151702 + C151712;
    const double C151735 = C151173 + C151731;
    const double C151734 = C151730 * ae;
    const double C151733 = C151728 + C151729;
    const double C151834 = C151821 + C151830;
    const double C151833 = C151167 + C151828;
    const double C151794 = C150614 * C151790;
    const double C151793 = C151790 * ae;
    const double C151792 = C151789 + C151781;
    const double C151887 = C151862 + C151884;
    const double C151888 = ae * C151882;
    const double C151886 = C150614 * C151882;
    const double C150767 = C150747 + C150765;
    const double C150825 = C150614 * C150823;
    const double C150900 = C150897 + C150898;
    const double C151017 = 2 * C151010;
    const double C1492 = C135 * C1475;
    const double C1686 = C135 * C1661;
    const double C31846 = C31521 * C1661;
    const double C100666 = C100341 * C1661;
    const double C150879 = C150877 + C150878;
    const double C7464 = C152418 * C2207;
    const double C33728 = C152482 * C2207;
    const double C102548 = C152482 * C2207;
    const double C1498 = C135 * C1481;
    const double C2212 = C135 * C2203;
    const double C33285 = C31521 * C2203;
    const double C102105 = C100341 * C2203;
    const double C151574 = C150659 + C151001;
    const double C151002 = C150737 + C150999;
    const double C151088 = ae * C151085;
    const double C151087 = C150614 * C151085;
    const double C151550 = 2 * C151085;
    const double C151138 = C150614 * C151136;
    const double C7824 = (4 * (2 * C150837 + C150806 * C150866) +
                          C150806 * (3 * C150866 + C150806 * C151136)) /
                         C150502;
    const double C8077 = (C150614 * (3 * C150866 + C150806 * C151136) +
                          (3 * C150867 + C150806 * C151137) * ae) /
                         C150502;
    const double C151220 = ae * C151217;
    const double C151219 = C150614 * C151217;
    const double C151307 = 2 * C151217;
    const double C151649 = C151120 + C151296;
    const double C151297 = C151066 + C151294;
    const double C151512 = C151499 + C151395;
    const double C151400 = C151397 + C151389;
    const double C151176 = C151160 + C151174;
    const double C151357 = C151354 + C151355;
    const double C151732 = 2 * C151725;
    const double C151812 = C151116 + C151273;
    const double C151274 = C151147 + C151271;
    const double C151881 = C151866 + C151878;
    const double C151483 = ae * C151477;
    const double C151481 = C150614 * C151477;
    const double C151855 = 3 * C151477;
    const double C151771 = C151760 + C151633;
    const double C151637 = C151635 + C151627;
    const double C150766 = C150764 * ae;
    const double C142 = 5 * (3 * C150719 + C150621 * C150738) +
                        C150621 * (4 * C150738 + C150621 * C150764);
    const double C365 = 3 * C150719 + C150621 * C150738 + C150764 * C150818;
    const double C366 = C150806 * (4 * C150738 + C150621 * C150764);
    const double C610 = 3 * C150719 + C150621 * C150738 + C150764 * C150618;
    const double C611 = C150614 * (4 * C150738 + C150621 * C150764);
    const double C1183 = C150614 * C150806 * C150764;
    const double C2825 = C134 * C1645;
    const double C7835 = C134 * C7820;
    const double C8094 = C134 * C8069;
    const double C8613 = C134 * C8071;
    const double C151179 = C151177 * ae;
    const double C7822 = 5 * (3 * C150858 + C150806 * C151152) +
                         C150806 * (4 * C151152 + C150806 * C151177);
    const double C8073 = 3 * C150858 + C150806 * C151152 + C151177 * C150618;
    const double C8815 = C150614 * (4 * C151152 + C150806 * C151177);
    const double C151486 = C151482 * ae;
    const double C17995 = 5 * (3 * C150951 + C150614 * C151434) +
                          C150614 * (4 * C151434 + C150614 * C151482);
    const double C150797 = C150621 * C150795;
    const double C151033 = C150806 * C150795;
    const double C151040 = C150614 * C150795;
    const double C150886 = C150614 * C150884;
    const double C1482 = (3 * (C150741 + C150763 * C150818) +
                          C150806 * (2 * C150823 + C150806 * C150884)) /
                         C150502;
    const double C151338 = C150614 * C151336;
    const double C8313 = (4 * (2 * C150830 + C150806 * C150875) +
                          C150806 * (3 * C150875 + C150806 * C151336)) /
                         C150502;
    const double C151201 = C151183 + C151199;
    const double C151715 = C150806 * C151713;
    const double C151748 = C150614 * C151713;
    const double C152566 = C152520 / C152182;
    const double C152605 = C152570 / C152186;
    const double C152606 = C152572 + C152528;
    const double C831 = C152528 - C152203 / C152200;
    const double C152569 = C152524 / C152182;
    const double C152582 = C152538 / C152182;
    const double C152612 = C152585 / C152186;
    const double C152613 = C152586 + C152542;
    const double C1825 = C152542 - C152283 / C152200;
    const double C152584 = C152539 / C152182;
    const double C152588 = C152544 / C152182;
    const double C152615 = C152591 / C152186;
    const double C152616 = C152592 + C152548;
    const double C2975 = C152548 - C152325 / C152200;
    const double C152590 = C152545 / C152182;
    const double C150526 = C150500 * C150518;
    const double C14683 =
        (ae * -2 * C150508) / (C150509 * 2 * C150502) +
        (((C150500 *
           ((-4 * C150512) / C150502 - (C150500 * C150518) / C150502) * ae) /
              C150502 +
          2 * ((C150517 * ae) / C150502 - C150508 / C150513)) *
         ae) /
            C150502 -
        C150518 / C150513;
    const double C14687 = (-C150518 / C150502) / (4 * C150509);
    const double C31520 = (-C150518 / C150502) / (2 * C150502);
    const double C100340 = (-C150518 / C150502) / (2 * C150502);
    const double C117241 = (-C150518 / C150502) / (4 * C150562);
    const double C133730 = (-C150518 / C150502) / (4 * C150509);
    const double C150567 = C150558 / C150502;
    const double C14729 = C14684 * C149;
    const double C14727 = C14684 * C148;
    const double C14712 = C14684 * C147;
    const double C14709 = C14684 * C146;
    const double C14694 = C14684 * C145;
    const double C14690 = C14684 * C144;
    const double C15031 = C14684 * C375;
    const double C15030 = C14684 * C368;
    const double C15026 = C14684 * C374;
    const double C15011 = C14684 * C369;
    const double C15002 = C14684 * C373;
    const double C14998 = C14684 * C372;
    const double C14997 = C14684 * C371;
    const double C14993 = C14684 * C370;
    const double C15332 = C14684 * C613;
    const double C15328 = C14684 * C619;
    const double C15313 = C14684 * C614;
    const double C15304 = C14684 * C618;
    const double C15300 = C14684 * C617;
    const double C15299 = C14684 * C616;
    const double C15295 = C14684 * C615;
    const double C15572 = C14684 * C376;
    const double C15784 = C14684 * C621;
    const double C16107 = C14684 * C1188;
    const double C16105 = C14684 * C1187;
    const double C16090 = C14684 * C1186;
    const double C16086 = C14684 * C1185;
    const double C16477 = C14684 * C1480;
    const double C16474 = C14684 * C1479;
    const double C16473 = C14684 * C1478;
    const double C16470 = C14684 * C1477;
    const double C16710 = C14684 * C1665;
    const double C16709 = C14684 * C1664;
    const double C16706 = C14684 * C1663;
    const double C16703 = C14684 * C1660;
    const double C16700 = C14684 * C1659;
    const double C16916 = C14684 * C1476;
    const double C17224 = C14684 * C1662;
    const double C17433 = C14684 * C2202;
    const double C17430 = C14684 * C2201;
    const double C66324 = C14684 * C7825;
    const double C67295 = C14684 * C8078;
    const double C14724 = C14686 * C621;
    const double C14715 = C14686 * C613;
    const double C14706 = C14686 * C614;
    const double C14697 = C14686 * C615;
    const double C14691 = C14686 * C616;
    const double C15032 = C14686 * C1661;
    const double C15029 = C14686 * C1188;
    const double C15023 = C14686 * C1662;
    const double C15014 = C14686 * C1187;
    const double C15005 = C14686 * C1663;
    const double C14999 = C14686 * C1664;
    const double C14996 = C14686 * C1185;
    const double C14990 = C14686 * C1186;
    const double C15316 = C14686 * C619;
    const double C15298 = C14686 * C617;
    const double C15292 = C14686 * C618;
    const double C16093 = C14686 * C1659;
    const double C16087 = C14686 * C1660;
    const double C16475 = C14686 * C8078;
    const double C16472 = C14686 * C2201;
    const double C16469 = C14686 * C2202;
    const double C16708 = C14686 * C1665;
    const double C16917 = C14686 * C2203;
    const double C31553 = C31519 * C149;
    const double C31544 = C31519 * C148;
    const double C31541 = C31519 * C147;
    const double C31532 = C31519 * C146;
    const double C31526 = C31519 * C145;
    const double C31523 = C31519 * C144;
    const double C31852 = C31519 * C376;
    const double C31849 = C31519 * C375;
    const double C31840 = C31519 * C368;
    const double C31834 = C31519 * C374;
    const double C31828 = C31519 * C373;
    const double C31825 = C31519 * C372;
    const double C31824 = C31519 * C371;
    const double C31821 = C31519 * C370;
    const double C31815 = C31519 * C369;
    const double C32154 = C31519 * C621;
    const double C32142 = C31519 * C613;
    const double C32136 = C31519 * C619;
    const double C32130 = C31519 * C618;
    const double C32127 = C31519 * C617;
    const double C32126 = C31519 * C616;
    const double C32123 = C31519 * C615;
    const double C32117 = C31519 * C614;
    const double C32921 = C31519 * C1188;
    const double C32912 = C31519 * C1187;
    const double C32906 = C31519 * C1186;
    const double C32903 = C31519 * C1185;
    const double C33295 = C31519 * C1481;
    const double C33293 = C31519 * C1480;
    const double C33291 = C31519 * C1479;
    const double C33290 = C31519 * C1478;
    const double C33288 = C31519 * C1477;
    const double C33286 = C31519 * C1476;
    const double C33527 = C31519 * C1665;
    const double C33526 = C31519 * C1664;
    const double C33524 = C31519 * C1663;
    const double C33522 = C31519 * C1662;
    const double C33520 = C31519 * C1660;
    const double C33518 = C31519 * C1659;
    const double C33735 = C31519 * C1475;
    const double C34047 = C31519 * C1661;
    const double C34259 = C31519 * C2203;
    const double C34257 = C31519 * C2202;
    const double C34255 = C31519 * C2201;
    const double C42135 = C31519 * C7825;
    const double C43411 = C31519 * C8078;
    const double C100373 = C100339 * C149;
    const double C100364 = C100339 * C148;
    const double C100361 = C100339 * C147;
    const double C100352 = C100339 * C146;
    const double C100346 = C100339 * C145;
    const double C100343 = C100339 * C144;
    const double C100672 = C100339 * C376;
    const double C100669 = C100339 * C375;
    const double C100660 = C100339 * C368;
    const double C100654 = C100339 * C374;
    const double C100648 = C100339 * C373;
    const double C100645 = C100339 * C372;
    const double C100644 = C100339 * C371;
    const double C100641 = C100339 * C370;
    const double C100635 = C100339 * C369;
    const double C100974 = C100339 * C621;
    const double C100962 = C100339 * C613;
    const double C100956 = C100339 * C619;
    const double C100950 = C100339 * C618;
    const double C100947 = C100339 * C617;
    const double C100946 = C100339 * C616;
    const double C100943 = C100339 * C615;
    const double C100937 = C100339 * C614;
    const double C101741 = C100339 * C1188;
    const double C101732 = C100339 * C1187;
    const double C101726 = C100339 * C1186;
    const double C101723 = C100339 * C1185;
    const double C102115 = C100339 * C1481;
    const double C102113 = C100339 * C1480;
    const double C102111 = C100339 * C1479;
    const double C102110 = C100339 * C1478;
    const double C102108 = C100339 * C1477;
    const double C102106 = C100339 * C1476;
    const double C102347 = C100339 * C1665;
    const double C102346 = C100339 * C1664;
    const double C102344 = C100339 * C1663;
    const double C102342 = C100339 * C1662;
    const double C102340 = C100339 * C1660;
    const double C102338 = C100339 * C1659;
    const double C102555 = C100339 * C1475;
    const double C102867 = C100339 * C1661;
    const double C103079 = C100339 * C2203;
    const double C103077 = C100339 * C2202;
    const double C103075 = C100339 * C2201;
    const double C110444 = C100339 * C7825;
    const double C110699 = C100339 * C8078;
    const double C677 = C669 + C650;
    const double C448 = C440 * C152403;
    const double C6266 = C440 * C6260;
    const double C6503 = C440 * C6258;
    const double C6499 = C440 * C6259;
    const double C23540 = C440 * C152552;
    const double C23538 = C440 * C152454;
    const double C51349 = C440 * C51108;
    const double C51347 = C440 * C152454;
    const double C73127 = C440 * C73121;
    const double C73358 = C440 * C152617;
    const double C73356 = C440 * C152618;
    const double C1224 = C1220 * C152403;
    const double C6750 = C1220 * C6259;
    const double C7459 = C1220 * C6258;
    const double C23770 = C1220 * C152454;
    const double C24466 = C1220 * C152552;
    const double C51579 = C1220 * C152454;
    const double C52275 = C1220 * C51108;
    const double C73586 = C1220 * C152618;
    const double C74281 = C1220 * C152617;
    const double C8109 = C8104 + C1685;
    const double C2614 =
        (2 * (2 * ae * C150703 + C150614 * C150628) + C150939 + C150939 +
         C150614 * (C150628 + C150936 + C150936 +
                    C150614 * (2 * ae * C150694 + C150614 * C150637))) /
        C150509;
    const double C2623 = C135 * C2606;
    const double C15301 = C14686 * C2606;
    const double C15297 = C14688 * C2606;
    const double C18011 = C14684 * C2606;
    const double C32128 = C31521 * C2606;
    const double C34824 = C31519 * C2606;
    const double C100948 = C100341 * C2606;
    const double C103644 = C100339 * C2606;
    const double C117247 = C117242 * C2606;
    const double C134340 = C133731 * C2606;
    const double C23315 = C23307 + C23308;
    const double C51124 = C51116 + C51117;
    const double C150744 = ae * C150743;
    const double C620 = (2 * C150709 + C150621 * C150722 + C150614 * C150743 +
                         C150614 * C150738 * ae) /
                        C150502;
    const double C185 = C174 + C175;
    const double C426 = C410 + C411;
    const double C427 = C413 + C414;
    const double C672 = C658 + C659;
    const double C1214 = C1205 + C1206;
    const double C1670 =
        (C150806 * C150647 + C150835 + C150835 +
         C150614 * (2 * ae * C150830 + C150614 * C150806 * C150659)) /
        C150509;
    const double C1683 = C135 * C1658;
    const double C15017 = C14688 * C1658;
    const double C16102 = C14686 * C1658;
    const double C18317 = C14684 * C1658;
    const double C32915 = C31521 * C1658;
    const double C33516 = C31519 * C1658;
    const double C101735 = C100341 * C1658;
    const double C102336 = C100339 * C1658;
    const double C134060 = C133731 * C1658;
    const double C150916 = C150915 + C150912;
    const double C1678 = (C150815 + C150649 * C150818 + C150871 + C150871 +
                          C150614 * (2 * ae * C150866 +
                                     C150614 * (C150649 + C150664 * C150818))) /
                         C150509;
    const double C1691 = C135 * C1666;
    const double C15008 = C14688 * C1666;
    const double C16713 = C14684 * C1666;
    const double C16705 = C14686 * C1666;
    const double C33529 = C31519 * C1666;
    const double C33523 = C31521 * C1666;
    const double C102349 = C100339 * C1666;
    const double C102343 = C100341 * C1666;
    const double C134051 = C133731 * C1666;
    const double C6522 = C6517 + C1497;
    const double C7473 = C7469 + C2211;
    const double C150982 = ae * C150980;
    const double C150981 = C150614 * C150980;
    const double C151379 = 3 * C150980;
    const double C151076 = C151075 + C151072;
    const double C151156 = ae * C151155;
    const double C8076 = (2 * C150844 + C150806 * C150857 + C150614 * C151155 +
                          C150614 * C151152 * ae) /
                         C150502;
    const double C7845 = C7838 + C7839;
    const double C8826 = C8822 + C8101;
    const double C151233 = C151232 + C151229;
    const double C151254 = ae * C151252;
    const double C151253 = C150614 * C151252;
    const double C151613 = 3 * C151252;
    const double C151461 = C151448 + C151439;
    const double C151440 = C151416 + C151438;
    const double C654 = C152418 * C631;
    const double C14704 = C14682 * C631;
    const double C15329 = C14680 * C631;
    const double C15317 = C14681 * C631;
    const double C32137 = C152553 * C631;
    const double C32115 = C152482 * C631;
    const double C100957 = C100336 * C631;
    const double C100935 = C152482 * C631;
    const double C133747 = C133725 * C631;
    const double C134372 = C152619 * C631;
    const double C134360 = C152620 * C631;
    const double C670 = C652 + C653;
    const double C196 = C190 + C173;
    const double C437 = C429 + C395;
    const double C441 = C433 + C409;
    const double C682 = C674 + C640;
    const double C1221 = C1217 + C1204;
    const double C2830 = C152418 * C1671;
    const double C14988 = C14682 * C1671;
    const double C16094 = C14681 * C1671;
    const double C18316 = C14680 * C1671;
    const double C32910 = C152482 * C1671;
    const double C35128 = C152553 * C1671;
    const double C101730 = C152482 * C1671;
    const double C103948 = C100336 * C1671;
    const double C134031 = C133725 * C1671;
    const double C135137 = C152620 * C1671;
    const double C137344 = C152619 * C1671;
    const double C2834 = C2829 + C1684;
    const double C150928 = ae * C150927;
    const double C2605 =
        (2 * C150713 + C150614 * C150927 + (C150710 + C150729 * C150618) * ae) /
        C150502;
    const double C1851 = C1848 * C152403;
    const double C6504 = C1848 * C6259;
    const double C6498 = C1848 * C6260;
    const double C8318 = C1848 * C6258;
    const double C23541 = C1848 * C152454;
    const double C25228 = C1848 * C152552;
    const double C51350 = C1848 * C152454;
    const double C53037 = C1848 * C51108;
    const double C73359 = C1848 * C152618;
    const double C73355 = C1848 * C73121;
    const double C75041 = C1848 * C152617;
    const double C2067 = C2064 * C152403;
    const double C6749 = C2064 * C6260;
    const double C7460 = C2064 * C6259;
    const double C8616 = C2064 * C6258;
    const double C24467 = C2064 * C152454;
    const double C25522 = C2064 * C152552;
    const double C52276 = C2064 * C152454;
    const double C53331 = C2064 * C51108;
    const double C73585 = C2064 * C73121;
    const double C74282 = C2064 * C152618;
    const double C75334 = C2064 * C152617;
    const double C8091 = C152418 * C1677;
    const double C42462 = C152553 * C1677;
    const double C42454 = C152482 * C1677;
    const double C65038 = C14682 * C1677;
    const double C66580 = C14680 * C1677;
    const double C66572 = C14681 * C1677;
    const double C110076 = C152482 * C1677;
    const double C110685 = C100336 * C1677;
    const double C142544 = C133725 * C1677;
    const double C144086 = C152619 * C1677;
    const double C144078 = C152620 * C1677;
    const double C8105 = C8090 + C1690;
    const double C7849 = C7846 + C7834;
    const double C8116 = C8111 + C8093;
    const double C150960 = C150943 + C150958;
    const double C151063 = ae * C151062;
    const double C3133 =
        (2 * C150848 + C150614 * C151062 + (C150845 + C151053 * C150618) * ae) /
        C150502;
    const double C158 =
        (5 * (3 * C150647 + C150621 * C150661) +
         C150621 *
             (4 * C150661 +
              C150621 *
                  (3 * C150659 +
                   C150621 * (2 * C150621 * C150657 +
                              C150621 * (C150657 + (C150651 * C150652 +
                                                    C150618 * bs[8] *
                                                        std::pow(C150612, 8)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C387 = (2 * C150621 * C150637 + C150621 * C150647 +
                         C150661 * std::pow(yP - yQ, 2)) /
                        C150509;
    const double C388 =
        ((yP - yQ) * (3 * C150647 + C150621 * C150661)) / C150509;
    const double C633 = (2 * ae * (3 * C150722 + C150621 * C150741) +
                         C150614 * (3 * C150647 + C150621 * C150661)) /
                        C150509;
    const double C1194 =
        (2 * ae * C150806 * C150741 + C150614 * C150806 * C150661) / C150509;
    const double C1847 = C1844 + C1836;
    const double C2063 = C2060 + C2052;
    const double C7837 = C152418 * C7828;
    const double C151399 = C151386 + C151396;
    const double C7830 =
        (5 * (3 * C151111 + C150806 * C151118) +
         C150806 * (4 * C151118 +
                    C150806 * (3 * C151116 +
                               C150806 * (2 * C150806 * C150657 +
                                          C150806 * (C150657 +
                                                     C150672 * C150818))))) /
        C150509;
    const double C8084 = (2 * ae * (3 * C150857 + C150806 * C151151) +
                          C150614 * (3 * C151111 + C150806 * C151118)) /
                         C150509;
    const double C151480 = C150614 * C151476;
    const double C151848 = 3 * C151476;
    const double C151634 = C151618 + C151629;
    const double C150677 = C150621 * C150676;
    const double C151011 = C150614 * C150676;
    const double C151093 = C150806 * C150676;
    const double C1483 =
        (2 * C150806 * C150661 +
         C150806 * (C150661 + C150676 * std::pow(C150806, 2))) /
        C150509;
    const double C1490 =
        (3 * (C150661 + C150676 * C150818) +
         C150806 *
             (2 * C150806 * C150676 +
              C150806 * (C150676 +
                         (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)) *
                             C150818))) /
        C150509;
    const double C1673 = (2 * ae * (C150741 + C150763 * C150818) +
                          C150614 * (C150661 + C150676 * C150818)) /
                         C150509;
    const double C2208 =
        (2 * ae * (2 * C150823 + C150806 * C150884) +
         C150614 *
             (2 * C150806 * C150676 +
              C150806 * (C150676 +
                         (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)) *
                             C150818))) /
        C150509;
    const double C8314 =
        (4 * (2 * C151079 + C150806 * C151209) +
         C150806 *
             (3 * C151209 +
              C150806 *
                  (2 * C150806 * C150674 +
                   C150806 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150818)))) /
        C150509;
    const double C8611 =
        (2 * ae *
             (3 * C150875 +
              C150806 *
                  (2 * C151080 + C150806 * (C150759 + C150787 * C150818))) +
         C150614 *
             (3 * C151209 +
              C150806 *
                  (2 * C150806 * C150674 +
                   C150806 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150818)))) /
        C150509;
    const double C151559 = C151553 + C151554;
    const double C151594 = C150614 * C151589;
    const double C151126 = C151122 + C151125;
    const double C151316 = C151312 + C151306;
    const double C151668 = C150614 * C151664;
    const double C151694 = C150806 * C151693;
    const double C151726 = C150614 * C151693;
    const double C151832 = C150614 * C151827;
    const double C150794 = C150621 * C150792;
    const double C151034 = C150806 * C150792;
    const double C151042 = C150614 * C150792;
    const double C151041 = C150792 * ae;
    const double C1829 =
        2 * C150806 * C150764 + C150806 * (C150764 + C150792 * C150818);
    const double C2045 = C150614 * (C150764 + C150792 * C150818);
    const double C2977 =
        2 * C150614 * C150764 + C150614 * (C150764 + C150792 * C150618);
    const double C150887 = C150885 * ae;
    const double C2204 = (C150614 * (2 * C150823 + C150806 * C150884) +
                          (2 * C150824 + C150806 * C150885) * ae) /
                         C150502;
    const double C1474 = 3 * (C150738 + C150760 * C150818) +
                         C150806 * (2 * C150824 + C150806 * C150885);
    const double C1656 = C150738 + C150760 * C150818 + C150885 * C150618;
    const double C2200 = C150614 * (2 * C150824 + C150806 * C150885);
    const double C151023 = C151020 * ae;
    const double C2602 = 3 * (C150738 + C150760 * C150618) +
                         C150614 * (2 * C150899 + C150614 * C151020);
    const double C151024 = ae * C151018;
    const double C151022 = C150614 * C151018;
    const double C151100 = C151098 * ae;
    const double C151099 = C151096 + C151097;
    const double C151339 = C151337 * ae;
    const double C8610 = (C150614 * (3 * C150875 + C150806 * C151336) +
                          (3 * C150876 + C150806 * C151337) * ae) /
                         C150502;
    const double C8312 = 4 * (2 * C150831 + C150806 * C150876) +
                         C150806 * (3 * C150876 + C150806 * C151337);
    const double C8609 = C150614 * (3 * C150876 + C150806 * C151337);
    const double C9700 = 2 * C150831 + C150806 * C150876 + C151337 * C150618;
    const double C151349 = ae * C151346;
    const double C151348 = C150614 * C151346;
    const double C151566 = C151080 + C151563;
    const double C151599 = C151596 * ae;
    const double C18522 = 4 * (2 * C150910 + C150614 * C150997) +
                          C150614 * (3 * C150997 + C150614 * C151596);
    const double C151598 = C151595 + C151587;
    const double C151202 = C151186 + C151200;
    const double C151369 = C151367 * ae;
    const double C151368 = C151365 + C151366;
    const double C151320 = C151132 + C151317;
    const double C151532 = C151510 + C151529;
    const double C151533 = ae * C151527;
    const double C151531 = C150614 * C151527;
    const double C151677 = C151675 * ae;
    const double C18738 = 4 * (2 * C151070 + C150614 * C151292) +
                          C150614 * (3 * C151292 + C150614 * C151675);
    const double C151676 = C151674 + C151666;
    const double C151716 = C150806 * C151714;
    const double C151750 = C150614 * C151714;
    const double C151749 = C151714 * ae;
    const double C61717 =
        2 * C150614 * C151177 + C150614 * (C151177 + C151714 * C150618);
    const double C151738 = C151735 * ae;
    const double C61259 = 3 * (C151152 + C151173 * C150618) +
                          C150614 * (2 * C151356 + C150614 * C151735);
    const double C151739 = ae * C151733;
    const double C151737 = C150614 * C151733;
    const double C151837 = C151834 * ae;
    const double C68548 = 4 * (2 * C151227 + C150614 * C151269) +
                          C150614 * (3 * C151269 + C150614 * C151834);
    const double C151836 = C151833 + C151825;
    const double C151797 = C151769 + C151794;
    const double C151798 = ae * C151792;
    const double C151796 = C150614 * C151792;
    const double C151892 = C150614 * C151887;
    const double C151891 = C151887 * ae;
    const double C151890 = C151856 + C151886;
    const double C150768 = C150614 * C150767;
    const double C150 = (5 * (3 * C150722 + C150621 * C150741) +
                         C150621 * (4 * C150741 + C150621 * C150767)) /
                        C150502;
    const double C377 =
        (3 * C150722 + C150621 * C150741 + C150767 * C150818) / C150502;
    const double C378 = (C150806 * (4 * C150741 + C150621 * C150767)) / C150502;
    const double C623 = (C150614 * (4 * C150741 + C150621 * C150767) +
                         (4 * C150738 + C150621 * C150764) * ae) /
                        C150502;
    const double C1189 =
        (C150614 * C150806 * C150767 + C150806 * C150764 * ae) / C150502;
    const double C1830 =
        (2 * C150806 * C150767 + C150806 * (C150767 + C150795 * C150818)) /
        C150502;
    const double C2046 = (C150614 * (C150767 + C150795 * C150818) +
                          (C150764 + C150792 * C150818) * ae) /
                         C150502;
    const double C150827 = C150825 + C150826;
    const double C150903 = ae * C150900;
    const double C150902 = C150614 * C150900;
    const double C151012 = 2 * C150900;
    const double C1840 = C1833 + C1492;
    const double C2056 = C2049 + C1686;
    const double C150880 = ae * C150879;
    const double C1667 = (C150722 + C150737 * C150818 + C150614 * C150879 +
                          C150614 * C150876 * ae) /
                         C150502;
    const double C6518 = C6510 + C1498;
    const double C7470 = C7463 + C2212;
    const double C151584 = C151574 + C151001;
    const double C151003 = C151002 + C150996;
    const double C151089 = C150830 + C151087;
    const double C151140 = C151138 + C151139;
    const double C7836 = C135 * C7824;
    const double C42137 = C31519 * C7824;
    const double C110926 = C100339 * C7824;
    const double C8100 = C135 * C8077;
    const double C16478 = C14686 * C8077;
    const double C33294 = C31521 * C8077;
    const double C43413 = C31519 * C8077;
    const double C102114 = C100341 * C8077;
    const double C111229 = C100339 * C8077;
    const double C151221 = C150866 + C151219;
    const double C151657 = C151649 + C151296;
    const double C151298 = C151297 + C151291;
    const double C151526 = C151512 + C151523;
    const double C151403 = ae * C151400;
    const double C151402 = C150614 * C151400;
    const double C151503 = 3 * C151400;
    const double C151178 = C150614 * C151176;
    const double C8819 =
        (2 * ae * (4 * C151151 + C150806 * C151176) +
         C150614 * (4 * C151118 +
                    C150806 * (3 * C151116 +
                               C150806 * (2 * C150806 * C150657 +
                                          C150806 * (C150657 +
                                                     C150672 * C150818))))) /
        C150509;
    const double C7826 = (5 * (3 * C150857 + C150806 * C151151) +
                          C150806 * (4 * C151151 + C150806 * C151176)) /
                         C150502;
    const double C8817 = (C150614 * (4 * C151151 + C150806 * C151176) +
                          (4 * C151152 + C150806 * C151177) * ae) /
                         C150502;
    const double C151360 = ae * C151357;
    const double C151359 = C150614 * C151357;
    const double C151727 = 2 * C151357;
    const double C151822 = C151812 + C151273;
    const double C151275 = C151274 + C151268;
    const double C151885 = C150614 * C151881;
    const double C151865 = C151849 + C151483;
    const double C151485 = C151454 + C151481;
    const double C151788 = C151771 + C151783;
    const double C151640 = ae * C151637;
    const double C151639 = C150614 * C151637;
    const double C151764 = 3 * C151637;
    const double C177 = C134 * C142;
    const double C416 = C134 * C365;
    const double C837 = C134 * C366;
    const double C661 = C134 * C610;
    const double C979 = C134 * C611;
    const double C1208 = C134 * C1183;
    const double C60262 = C134 * C7822;
    const double C60417 = C134 * C8073;
    const double C60880 = C134 * C8815;
    const double C150799 = C150773 + C150797;
    const double C151035 = C150614 * C151033;
    const double C1499 = C135 * C1482;
    const double C8319 = C135 * C8313;
    const double C151203 = C150614 * C151201;
    const double C7827 = (5 * (3 * C150866 + C150806 * C151136) +
                          C150806 * (4 * C151136 + C150806 * C151201)) /
                         C150502;
    const double C151717 = C151697 + C151715;
    const double C152630 = C152566 + C152622;
    const double C830 = C152605 - (C152205 * C152187) / C152182;
    const double C132 = C152606 / C152186 - C152203 / C152573;
    const double C152623 = C152569 + C152605;
    const double C152631 = C152582 + C152626;
    const double C1824 = C152612 - (C152285 * C152274) / C152182;
    const double C1464 = C152613 / C152186 - C152283 / C152573;
    const double C152627 = C152584 + C152612;
    const double C152632 = C152588 + C152628;
    const double C2974 = C152615 - (C152327 * C152316) / C152182;
    const double C2593 = C152616 / C152186 - C152325 / C152573;
    const double C152629 = C152590 + C152615;
    const double C150557 = C150526 / C150502;
    const double C14685 =
        (((-4 * C150512) / C150502 - C150526 / C150502) * ae) / C150513 +
        ((2 * ((0 * ae) / C150502 - C150512 / C150509) - C150526 / C150513) *
         ae) /
            C150502;
    const double C31518 =
        (((-4 * C150512) / C150502 - C150526 / C150502) * ae) / C150502;
    const double C100338 =
        -(((-4 * C150512) / C150502 - C150526 / C150502) * be) / C150502;
    const double C14726 = C14683 * C140;
    const double C14711 = C14683 * C139;
    const double C14708 = C14683 * C138;
    const double C14693 = C14683 * C137;
    const double C15025 = C14683 * C362;
    const double C15010 = C14683 * C357;
    const double C15001 = C14683 * C361;
    const double C14992 = C14683 * C358;
    const double C15327 = C14683 * C607;
    const double C15312 = C14683 * C602;
    const double C15303 = C14683 * C606;
    const double C15294 = C14683 * C603;
    const double C15570 = C14683 * C356;
    const double C15782 = C14683 * C601;
    const double C16104 = C14683 * C1181;
    const double C16089 = C14683 * C1180;
    const double C16914 = C14683 * C1469;
    const double C17222 = C14683 * C1651;
    const double C18315 = C14683 * C1647;
    const double C18530 = C14683 * C2597;
    const double C65041 = C14683 * C360;
    const double C65031 = C14683 * C359;
    const double C65961 = C14683 * C1179;
    const double C66322 = C14683 * C1471;
    const double C66312 = C14683 * C1470;
    const double C66579 = C14683 * C1653;
    const double C66569 = C14683 * C1652;
    const double C66563 = C14683 * C1648;
    const double C67293 = C14683 * C2197;
    const double C68556 = C14683 * C3129;
    const double C14720 = C14687 * C610;
    const double C14717 = C14687 * C608;
    const double C14702 = C14687 * C607;
    const double C14699 = C14687 * C606;
    const double C15019 = C14687 * C1655;
    const double C15016 = C14687 * C1646;
    const double C15007 = C14687 * C1654;
    const double C14986 = C14687 * C1647;
    const double C15321 = C14687 * C2601;
    const double C15318 = C14687 * C2596;
    const double C15309 = C14687 * C2600;
    const double C15288 = C14687 * C2597;
    const double C15566 = C14687 * C1645;
    const double C15778 = C14687 * C2595;
    const double C16098 = C14687 * C3131;
    const double C16095 = C14687 * C3130;
    const double C16910 = C14687 * C8069;
    const double C17218 = C14687 * C9386;
    const double C18311 = C14687 * C9390;
    const double C18526 = C14687 * C17993;
    const double C65037 = C14687 * C1653;
    const double C65035 = C14687 * C1648;
    const double C65957 = C14687 * C3129;
    const double C66318 = C14687 * C8073;
    const double C66316 = C14687 * C8070;
    const double C66575 = C14687 * C9389;
    const double C66573 = C14687 * C9387;
    const double C66567 = C14687 * C9388;
    const double C67289 = C14687 * C10112;
    const double C68552 = C14687 * C18737;
    const double C31549 = C31520 * C611;
    const double C31546 = C31520 * C609;
    const double C31537 = C31520 * C601;
    const double C31534 = C31520 * C602;
    const double C31528 = C31520 * C603;
    const double C31845 = C31520 * C1649;
    const double C31842 = C31520 * C1182;
    const double C31836 = C31520 * C1650;
    const double C31830 = C31520 * C1651;
    const double C31817 = C31520 * C1180;
    const double C31811 = C31520 * C1181;
    const double C32147 = C31520 * C2595;
    const double C32144 = C31520 * C608;
    const double C32138 = C31520 * C2596;
    const double C32132 = C31520 * C2597;
    const double C32119 = C31520 * C606;
    const double C32113 = C31520 * C607;
    const double C32392 = C31520 * C1183;
    const double C32600 = C31520 * C610;
    const double C32917 = C31520 * C1645;
    const double C32914 = C31520 * C1646;
    const double C32908 = C31520 * C1647;
    const double C33731 = C31520 * C2198;
    const double C33727 = C31520 * C2199;
    const double C34043 = C31520 * C1654;
    const double C34039 = C31520 * C1655;
    const double C35125 = C31520 * C3130;
    const double C35121 = C31520 * C3131;
    const double C35341 = C31520 * C2600;
    const double C35337 = C31520 * C2601;
    const double C40446 = C31520 * C1652;
    const double C40441 = C31520 * C1179;
    const double C41659 = C31520 * C1648;
    const double C42131 = C31520 * C8072;
    const double C42127 = C31520 * C8071;
    const double C42125 = C31520 * C2197;
    const double C42459 = C31520 * C9387;
    const double C42455 = C31520 * C9386;
    const double C42453 = C31520 * C1653;
    const double C42449 = C31520 * C3129;
    const double C43138 = C31520 * C8069;
    const double C43407 = C31520 * C8070;
    const double C44813 = C31520 * C9390;
    const double C45081 = C31520 * C9388;
    const double C93602 = C31520 * C8815;
    const double C93834 = C31520 * C10112;
    const double C94525 = C31520 * C8073;
    const double C95775 = C31520 * C9389;
    const double C100369 = C100340 * C611;
    const double C100366 = C100340 * C609;
    const double C100357 = C100340 * C601;
    const double C100354 = C100340 * C602;
    const double C100348 = C100340 * C603;
    const double C100665 = C100340 * C1649;
    const double C100662 = C100340 * C1182;
    const double C100656 = C100340 * C1650;
    const double C100650 = C100340 * C1651;
    const double C100637 = C100340 * C1180;
    const double C100631 = C100340 * C1181;
    const double C100967 = C100340 * C2595;
    const double C100964 = C100340 * C608;
    const double C100958 = C100340 * C2596;
    const double C100952 = C100340 * C2597;
    const double C100939 = C100340 * C606;
    const double C100933 = C100340 * C607;
    const double C101212 = C100340 * C1183;
    const double C101420 = C100340 * C610;
    const double C101737 = C100340 * C1645;
    const double C101734 = C100340 * C1646;
    const double C101728 = C100340 * C1647;
    const double C102551 = C100340 * C2198;
    const double C102547 = C100340 * C2199;
    const double C102863 = C100340 * C1654;
    const double C102859 = C100340 * C1655;
    const double C103945 = C100340 * C3130;
    const double C103941 = C100340 * C3131;
    const double C104161 = C100340 * C2600;
    const double C104157 = C100340 * C2601;
    const double C109155 = C100340 * C2197;
    const double C109153 = C100340 * C1652;
    const double C109149 = C100340 * C1179;
    const double C110079 = C100340 * C1648;
    const double C110075 = C100340 * C1653;
    const double C110440 = C100340 * C8815;
    const double C110438 = C100340 * C8072;
    const double C110692 = C100340 * C10112;
    const double C110690 = C100340 * C8070;
    const double C110686 = C100340 * C9387;
    const double C110682 = C100340 * C3129;
    const double C110922 = C100340 * C8071;
    const double C111225 = C100340 * C8069;
    const double C111432 = C100340 * C8073;
    const double C112298 = C100340 * C9386;
    const double C112704 = C100340 * C9388;
    const double C112700 = C100340 * C9389;
    const double C127442 = C100340 * C9390;
    const double C133763 = C133730 * C610;
    const double C133760 = C133730 * C608;
    const double C133745 = C133730 * C607;
    const double C133742 = C133730 * C606;
    const double C134062 = C133730 * C1655;
    const double C134059 = C133730 * C1646;
    const double C134050 = C133730 * C1654;
    const double C134029 = C133730 * C1647;
    const double C134364 = C133730 * C2601;
    const double C134361 = C133730 * C2596;
    const double C134352 = C133730 * C2600;
    const double C134331 = C133730 * C2597;
    const double C134609 = C133730 * C1645;
    const double C134821 = C133730 * C2595;
    const double C135141 = C133730 * C3131;
    const double C135138 = C133730 * C3130;
    const double C135953 = C133730 * C8069;
    const double C136261 = C133730 * C9386;
    const double C137339 = C133730 * C9390;
    const double C137551 = C133730 * C17993;
    const double C142543 = C133730 * C1653;
    const double C142541 = C133730 * C1648;
    const double C143463 = C133730 * C3129;
    const double C143824 = C133730 * C8073;
    const double C143822 = C133730 * C8070;
    const double C144081 = C133730 * C9389;
    const double C144079 = C133730 * C9387;
    const double C144073 = C133730 * C9388;
    const double C144795 = C133730 * C10112;
    const double C146052 = C133730 * C18737;
    const double C150571 = C150567 - C150559;
    const double C685 = C677 + C651;
    const double C8114 = C8109 + C8089;
    const double C632 =
        (2 * C150621 * C150637 + C150621 * C150647 + C150744 + C150744 +
         C150614 * (2 * ae * C150741 + C150614 * C150661)) /
        C150509;
    const double C656 = C135 * C620;
    const double C14718 = C14688 * C620;
    const double C15333 = C14684 * C620;
    const double C15331 = C14686 * C620;
    const double C32151 = C31519 * C620;
    const double C32145 = C31521 * C620;
    const double C100971 = C100339 * C620;
    const double C100965 = C100341 * C620;
    const double C133761 = C133731 * C620;
    const double C191 = C185 + C175;
    const double C434 = C426 + C411;
    const double C435 = C427 + C414;
    const double C680 = C672 + C659;
    const double C1218 = C1214 + C1206;
    const double C2828 = C152418 * C1670;
    const double C15018 = C14682 * C1670;
    const double C16103 = C14681 * C1670;
    const double C32916 = C152482 * C1670;
    const double C35124 = C152553 * C1670;
    const double C101736 = C152482 * C1670;
    const double C103944 = C100336 * C1670;
    const double C134061 = C133725 * C1670;
    const double C135146 = C152620 * C1670;
    const double C2833 = C2827 + C1683;
    const double C150917 = ae * C150916;
    const double C2604 =
        (2 * C150724 + C150614 * C150916 + (C150719 + C150734 * C150618) * ae) /
        C150502;
    const double C6755 = C152418 * C1678;
    const double C15009 = C14682 * C1678;
    const double C17221 = C14681 * C1678;
    const double C34044 = C152482 * C1678;
    const double C42458 = C152553 * C1678;
    const double C102864 = C152482 * C1678;
    const double C112301 = C100336 * C1678;
    const double C134052 = C133725 * C1678;
    const double C136264 = C152620 * C1678;
    const double C6763 = C6754 + C1691;
    const double C6527 = C6522 + C6506;
    const double C7477 = C7473 + C7462;
    const double C150983 = C150966 + C150981;
    const double C151077 = ae * C151076;
    const double C3134 =
        (2 * C150841 + C150614 * C151076 + (C150838 + C151067 * C150618) * ae) /
        C150502;
    const double C8082 = (2 * C151051 + C150806 * C151111 + C151156 + C151156 +
                          C150614 * (2 * ae * C151151 + C150614 * C151118)) /
                         C150509;
    const double C8098 = C135 * C8076;
    const double C16471 = C14688 * C8076;
    const double C17431 = C14686 * C8076;
    const double C34256 = C31521 * C8076;
    const double C42463 = C31519 * C8076;
    const double C66581 = C14684 * C8076;
    const double C103076 = C100341 * C8076;
    const double C110696 = C100339 * C8076;
    const double C135514 = C133731 * C8076;
    const double C7848 = C7845 + C7839;
    const double C8827 = C8826 + C8101;
    const double C151234 = ae * C151233;
    const double C9393 =
        (2 * C150861 + C150614 * C151233 + (C150858 + C151148 * C150618) * ae) /
        C150502;
    const double C151255 = C151238 + C151253;
    const double C151467 = C151461 + C151439;
    const double C151441 = C151440 + C151429;
    const double C678 = C670 + C653;
    const double C202 = C196 * C152403;
    const double C6275 = C196 * C6258;
    const double C23311 = C196 * C152552;
    const double C51120 = C196 * C51108;
    const double C73136 = C196 * C152617;
    const double C445 = C437 * C152403;
    const double C6271 = C437 * C6259;
    const double C6967 = C437 * C6258;
    const double C23309 = C437 * C152454;
    const double C23544 = C437 * C152552;
    const double C51118 = C437 * C152454;
    const double C51353 = C437 * C51108;
    const double C73132 = C437 * C152618;
    const double C73793 = C437 * C152617;
    const double C449 = C441 * C152403;
    const double C6267 = C441 * C6260;
    const double C6513 = C441 * C6258;
    const double C6508 = C441 * C6259;
    const double C23542 = C441 * C152552;
    const double C23536 = C441 * C152454;
    const double C51351 = C441 * C51108;
    const double C51345 = C441 * C152454;
    const double C73128 = C441 * C73121;
    const double C73366 = C441 * C152617;
    const double C73362 = C441 * C152618;
    const double C690 = C682 * C152403;
    const double C7164 = C682 * C6258;
    const double C23776 = C682 * C152552;
    const double C51585 = C682 * C51108;
    const double C73990 = C682 * C152617;
    const double C1225 = C1221 * C152403;
    const double C6757 = C1221 * C6259;
    const double C7466 = C1221 * C6258;
    const double C23768 = C1221 * C152454;
    const double C24468 = C1221 * C152552;
    const double C51577 = C1221 * C152454;
    const double C52277 = C1221 * C51108;
    const double C73592 = C1221 * C152618;
    const double C74286 = C1221 * C152617;
    const double C2837 = C2834 + C1684;
    const double C2613 =
        (2 * (2 * ae * C150709 + C150614 * C150815) + C150928 + C150928 +
         C150614 * (C150815 + C150925 + C150925 +
                    C150614 * (2 * ae * C150727 + C150614 * C150649))) /
        C150509;
    const double C2622 = C135 * C2605;
    const double C15307 = C14686 * C2605;
    const double C15289 = C14688 * C2605;
    const double C18008 = C14684 * C2605;
    const double C32133 = C31521 * C2605;
    const double C34822 = C31519 * C2605;
    const double C100953 = C100341 * C2605;
    const double C103642 = C100339 * C2605;
    const double C117248 = C117242 * C2605;
    const double C134332 = C133731 * C2605;
    const double C8110 = C8105 + C1690;
    const double C150961 = C150960 + C150954;
    const double C3137 =
        (2 * (2 * ae * C150844 + C150614 * C151051) + C151063 + C151063 +
         C150614 *
             (C151051 + C151060 + C151060 +
              C150614 * (2 * ae * C151052 + C150614 * C150806 * C150645))) /
        C150509;
    const double C3142 = C135 * C3133;
    const double C16088 = C14688 * C3133;
    const double C16702 = C14686 * C3133;
    const double C18744 = C14684 * C3133;
    const double C33519 = C31521 * C3133;
    const double C35553 = C31519 * C3133;
    const double C102339 = C100341 * C3133;
    const double C104373 = C100339 * C3133;
    const double C117410 = C117242 * C3133;
    const double C135131 = C133731 * C3133;
    const double C179 = C152418 * C158;
    const double C412 = C152418 * C387;
    const double C31850 = C152553 * C387;
    const double C100670 = C100336 * C387;
    const double C415 = C152418 * C388;
    const double C32395 = C152553 * C388;
    const double C101215 = C100336 * C388;
    const double C660 = C152418 * C633;
    const double C14725 = C14681 * C633;
    const double C31548 = C152482 * C633;
    const double C32603 = C152553 * C633;
    const double C100368 = C152482 * C633;
    const double C101423 = C100336 * C633;
    const double C133768 = C152620 * C633;
    const double C1207 = C152418 * C1194;
    const double C15569 = C14681 * C1194;
    const double C31844 = C152482 * C1194;
    const double C32922 = C152553 * C1194;
    const double C100664 = C152482 * C1194;
    const double C101742 = C100336 * C1194;
    const double C134612 = C152620 * C1194;
    const double C1850 = C1847 * C152403;
    const double C6512 = C1847 * C6259;
    const double C6509 = C1847 * C6260;
    const double C23543 = C1847 * C152454;
    const double C25226 = C1847 * C152552;
    const double C51352 = C1847 * C152454;
    const double C53035 = C1847 * C51108;
    const double C73365 = C1847 * C152618;
    const double C73363 = C1847 * C73121;
    const double C2066 = C2063 * C152403;
    const double C6758 = C2063 * C6260;
    const double C7465 = C2063 * C6259;
    const double C24469 = C2063 * C152454;
    const double C25520 = C2063 * C152552;
    const double C52278 = C2063 * C152454;
    const double C53329 = C2063 * C51108;
    const double C73593 = C2063 * C73121;
    const double C74285 = C2063 * C152618;
    const double C60263 = C152418 * C7830;
    const double C8823 = C152418 * C8084;
    const double C42132 = C152482 * C8084;
    const double C66321 = C14681 * C8084;
    const double C94528 = C152553 * C8084;
    const double C110439 = C152482 * C8084;
    const double C111435 = C100336 * C8084;
    const double C143827 = C152620 * C8084;
    const double C150678 = C150663 + C150677;
    const double C151021 = C151017 + C151011;
    const double C1834 = C152418 * C1483;
    const double C2050 = C152418 * C1673;
    const double C31847 = C152482 * C1673;
    const double C100667 = C152482 * C1673;
    const double C7831 =
        (5 * (3 * C151108 + C150806 * C151126) +
         C150806 *
             (4 * C151126 +
              C150806 * (3 * C151124 +
                         C150806 * (2 * C150806 * C151121 +
                                    C150806 * (C151121 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150818))))) /
        C150509;
    const double C8083 = (2 * ae * (3 * C150866 + C150806 * C151136) +
                          C150614 * (3 * C151108 + C150806 * C151126)) /
                         C150509;
    const double C8820 =
        (2 * ae * (4 * C151136 + C150806 * C151201) +
         C150614 *
             (4 * C151126 +
              C150806 * (3 * C151124 +
                         C150806 * (2 * C150806 * C151121 +
                                    C150806 * (C151121 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150818))))) /
        C150509;
    const double C151695 = C151688 + C151694;
    const double C151736 = C151732 + C151726;
    const double C150796 = C150777 + C150794;
    const double C151036 = C151034 * ae;
    const double C2821 = C150806 * C150764 + C151034 * C150618;
    const double C151044 = C151042 * ae;
    const double C151043 = C151040 + C151041;
    const double C150888 = C150886 + C150887;
    const double C2213 = C135 * C2204;
    const double C33736 = C31521 * C2204;
    const double C102556 = C100341 * C2204;
    const double C151025 = C150763 + C151022;
    const double C151102 = ae * C151099;
    const double C151101 = C150614 * C151099;
    const double C151340 = C151338 + C151339;
    const double C8617 = C135 * C8610;
    const double C33296 = C31521 * C8610;
    const double C102116 = C100341 * C8610;
    const double C151350 = C150875 + C151348;
    const double C151567 = C151566 + C151561;
    const double C151601 = ae * C151598;
    const double C151600 = C150614 * C151598;
    const double C151204 = C151202 * ae;
    const double C8818 = (C150614 * (4 * C151136 + C150806 * C151201) +
                          (4 * C151137 + C150806 * C151202) * ae) /
                         C150502;
    const double C7823 = 5 * (3 * C150867 + C150806 * C151137) +
                         C150806 * (4 * C151137 + C150806 * C151202);
    const double C8074 = 3 * C150867 + C150806 * C151137 + C151202 * C150618;
    const double C8816 = C150614 * (4 * C151137 + C150806 * C151202);
    const double C151371 = ae * C151368;
    const double C151370 = C150614 * C151368;
    const double C151321 = C151320 + C151314;
    const double C151536 = C151532 * ae;
    const double C17996 = 5 * (3 * C150974 + C150614 * C151398) +
                          C150614 * (4 * C151398 + C150614 * C151532);
    const double C151535 = C151504 + C151531;
    const double C151679 = ae * C151676;
    const double C151678 = C150614 * C151676;
    const double C151718 = C151701 + C151716;
    const double C151752 = C151750 * ae;
    const double C151751 = C151748 + C151749;
    const double C151740 = C151172 + C151737;
    const double C151839 = ae * C151836;
    const double C151838 = C150614 * C151836;
    const double C151800 = C151797 * ae;
    const double C67864 = 5 * (3 * C151246 + C150614 * C151636) +
                          C150614 * (4 * C151636 + C150614 * C151797);
    const double C151799 = C151765 + C151796;
    const double C151895 = C151863 + C151892;
    const double C151894 = C151890 + C151875;
    const double C150769 = C150768 + C150766;
    const double C178 = C135 * C150;
    const double C31555 = C31519 * C150;
    const double C100375 = C100339 * C150;
    const double C417 = C135 * C377;
    const double C31853 = C31519 * C377;
    const double C100673 = C100339 * C377;
    const double C419 = C135 * C378;
    const double C32396 = C31519 * C378;
    const double C101216 = C100339 * C378;
    const double C664 = C135 * C623;
    const double C14730 = C14686 * C623;
    const double C31550 = C31521 * C623;
    const double C32604 = C31519 * C623;
    const double C100370 = C100341 * C623;
    const double C101424 = C100339 * C623;
    const double C1209 = C135 * C1189;
    const double C15573 = C14686 * C1189;
    const double C31851 = C31521 * C1189;
    const double C32923 = C31519 * C1189;
    const double C100671 = C100341 * C1189;
    const double C101743 = C100339 * C1189;
    const double C1839 = C135 * C1830;
    const double C2055 = C135 * C2046;
    const double C31854 = C31521 * C2046;
    const double C100674 = C100341 * C2046;
    const double C150828 = ae * C150827;
    const double C1657 =
        (C150806 * C150741 + C150614 * C150827 + C150614 * C150824 * ae) /
        C150502;
    const double C150904 = C150741 + C150902;
    const double C1843 = C1840 + C1492;
    const double C2059 = C2056 + C1686;
    const double C1679 = (C150647 + C150659 * C150818 + C150880 + C150880 +
                          C150614 * (2 * ae * C150875 +
                                     C150614 * (C150659 + C150674 * C150818))) /
                         C150509;
    const double C1692 = C135 * C1667;
    const double C15020 = C14688 * C1667;
    const double C17225 = C14686 * C1667;
    const double C33531 = C31519 * C1667;
    const double C33521 = C31521 * C1667;
    const double C102351 = C100339 * C1667;
    const double C102341 = C100341 * C1667;
    const double C134063 = C133731 * C1667;
    const double C6523 = C6518 + C1498;
    const double C7474 = C7470 + C2212;
    const double C151597 = C151584 + C151594;
    const double C151005 = ae * C151003;
    const double C151004 = C150614 * C151003;
    const double C151577 = 3 * C151003;
    const double C151090 = C151089 + C151086;
    const double C151141 = ae * C151140;
    const double C8075 = (2 * C150837 + C150806 * C150866 + C150614 * C151140 +
                          C150614 * C151137 * ae) /
                         C150502;
    const double C7844 = C7835 + C7836;
    const double C8618 = C8613 + C8100;
    const double C151222 = C151221 + C151218;
    const double C151673 = C151657 + C151668;
    const double C151300 = ae * C151298;
    const double C151299 = C150614 * C151298;
    const double C151652 = 3 * C151298;
    const double C151530 = C150614 * C151526;
    const double C151511 = C151498 + C151403;
    const double C151404 = C151380 + C151402;
    const double C151180 = C151178 + C151179;
    const double C60881 = C152418 * C8819;
    const double C93603 = C152482 * C8819;
    const double C110442 = C152482 * C8819;
    const double C7841 = C135 * C7826;
    const double C93606 = C31519 * C7826;
    const double C110446 = C100339 * C7826;
    const double C8824 = C135 * C8817;
    const double C42136 = C31521 * C8817;
    const double C66325 = C14686 * C8817;
    const double C94529 = C31519 * C8817;
    const double C110441 = C100341 * C8817;
    const double C111436 = C100339 * C8817;
    const double C151361 = C151151 + C151359;
    const double C151835 = C151822 + C151832;
    const double C151277 = ae * C151275;
    const double C151276 = C150614 * C151275;
    const double C151815 = 3 * C151275;
    const double C151872 = C151865 + C151483;
    const double C151487 = C151485 + C151470;
    const double C151791 = C150614 * C151788;
    const double C151770 = C151759 + C151640;
    const double C151641 = C151614 + C151639;
    const double C150800 = C150614 * C150799;
    const double C1196 =
        (2 * ae * C150806 * C150799 +
         C150614 * C150806 *
             (4 * C150676 +
              C150621 *
                  (3 * C150674 +
                   C150621 * (2 * C150621 * C150672 +
                              C150621 * (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C151 = (6 * (4 * C150741 + C150621 * C150767) +
                         C150621 * (5 * C150767 + C150621 * C150799)) /
                        C150502;
    const double C379 =
        (4 * C150741 + C150621 * C150767 + C150799 * C150818) / C150502;
    const double C834 = (C150806 * (5 * C150767 + C150621 * C150799)) / C150502;
    const double C7842 = C135 * C7827;
    const double C151719 = C150614 * C151717;
    const double C60259 = (6 * (4 * C151151 + C150806 * C151176) +
                           C150806 * (5 * C151176 + C150806 * C151717)) /
                          C150502;
    const double C129 =
        (C152621 + 2 * C152196) / C152186 - (C152630 * C152187) / C152182;
    const double C130 = (C152604 + 2 * C152205 + C152630) / C152186 -
                        (C152623 * C152187) / C152182;
    const double C131 = (C152571 + C152202 / C152182 + C152623) / C152186 -
                        (C152606 * C152187) / C152182;
    const double C1461 =
        (C152624 + 2 * C152278) / C152186 - (C152631 * C152274) / C152182;
    const double C1462 = (C152608 + 2 * C152285 + C152631) / C152186 -
                         (C152627 * C152274) / C152182;
    const double C1463 = (C152577 + C152282 / C152182 + C152627) / C152186 -
                         (C152613 * C152274) / C152182;
    const double C2590 =
        (C152625 + 2 * C152320) / C152186 - (C152632 * C152316) / C152182;
    const double C2591 = (C152610 + 2 * C152327 + C152632) / C152186 -
                         (C152629 * C152316) / C152182;
    const double C2592 = (C152580 + C152324 / C152182 + C152629) / C152186 -
                         (C152616 * C152316) / C152182;
    const double C150570 = C150566 - C150557;
    const double C14723 = C14685 * C609;
    const double C14714 = C14685 * C601;
    const double C14705 = C14685 * C602;
    const double C14696 = C14685 * C603;
    const double C15022 = C14685 * C1650;
    const double C15013 = C14685 * C1181;
    const double C15004 = C14685 * C1651;
    const double C14989 = C14685 * C1180;
    const double C15324 = C14685 * C2596;
    const double C15315 = C14685 * C607;
    const double C15306 = C14685 * C2597;
    const double C15291 = C14685 * C606;
    const double C15568 = C14685 * C1182;
    const double C15780 = C14685 * C608;
    const double C16101 = C14685 * C1646;
    const double C16092 = C14685 * C1647;
    const double C16912 = C14685 * C2198;
    const double C17220 = C14685 * C1654;
    const double C18313 = C14685 * C3130;
    const double C18528 = C14685 * C2600;
    const double C65039 = C14685 * C1652;
    const double C65033 = C14685 * C1179;
    const double C65959 = C14685 * C1648;
    const double C66320 = C14685 * C8072;
    const double C66314 = C14685 * C2197;
    const double C66577 = C14685 * C9387;
    const double C66571 = C14685 * C1653;
    const double C66565 = C14685 * C3129;
    const double C67291 = C14685 * C8070;
    const double C68554 = C14685 * C9388;
    const double C31552 = C31518 * C141;
    const double C31543 = C31518 * C140;
    const double C31540 = C31518 * C139;
    const double C31531 = C31518 * C138;
    const double C31525 = C31518 * C137;
    const double C31848 = C31518 * C363;
    const double C31839 = C31518 * C356;
    const double C31833 = C31518 * C362;
    const double C31827 = C31518 * C361;
    const double C31820 = C31518 * C358;
    const double C31814 = C31518 * C357;
    const double C32150 = C31518 * C608;
    const double C32141 = C31518 * C601;
    const double C32135 = C31518 * C607;
    const double C32129 = C31518 * C606;
    const double C32122 = C31518 * C603;
    const double C32116 = C31518 * C602;
    const double C32394 = C31518 * C364;
    const double C32602 = C31518 * C609;
    const double C32920 = C31518 * C1182;
    const double C32911 = C31518 * C1181;
    const double C32905 = C31518 * C1180;
    const double C33733 = C31518 * C1469;
    const double C33729 = C31518 * C1468;
    const double C34045 = C31518 * C1651;
    const double C34041 = C31518 * C1650;
    const double C35127 = C31518 * C1647;
    const double C35123 = C31518 * C1646;
    const double C35343 = C31518 * C2597;
    const double C35339 = C31518 * C2596;
    const double C40448 = C31518 * C360;
    const double C40439 = C31518 * C359;
    const double C41661 = C31518 * C1179;
    const double C42133 = C31518 * C1471;
    const double C42129 = C31518 * C1472;
    const double C42123 = C31518 * C1470;
    const double C42461 = C31518 * C1653;
    const double C42457 = C31518 * C1654;
    const double C42451 = C31518 * C1652;
    const double C42447 = C31518 * C1648;
    const double C43140 = C31518 * C2198;
    const double C43409 = C31518 * C2197;
    const double C44815 = C31518 * C3130;
    const double C45083 = C31518 * C3129;
    const double C93604 = C31518 * C7821;
    const double C93836 = C31518 * C8070;
    const double C94527 = C31518 * C8072;
    const double C95777 = C31518 * C9387;
    const double C100372 = C100338 * C141;
    const double C100363 = C100338 * C140;
    const double C100360 = C100338 * C139;
    const double C100351 = C100338 * C138;
    const double C100345 = C100338 * C137;
    const double C100668 = C100338 * C363;
    const double C100659 = C100338 * C356;
    const double C100653 = C100338 * C362;
    const double C100647 = C100338 * C361;
    const double C100640 = C100338 * C358;
    const double C100634 = C100338 * C357;
    const double C100970 = C100338 * C608;
    const double C100961 = C100338 * C601;
    const double C100955 = C100338 * C607;
    const double C100949 = C100338 * C606;
    const double C100942 = C100338 * C603;
    const double C100936 = C100338 * C602;
    const double C101214 = C100338 * C364;
    const double C101422 = C100338 * C609;
    const double C101740 = C100338 * C1182;
    const double C101731 = C100338 * C1181;
    const double C101725 = C100338 * C1180;
    const double C102553 = C100338 * C1469;
    const double C102549 = C100338 * C1468;
    const double C102865 = C100338 * C1651;
    const double C102861 = C100338 * C1650;
    const double C103947 = C100338 * C1647;
    const double C103943 = C100338 * C1646;
    const double C104163 = C100338 * C2597;
    const double C104159 = C100338 * C2596;
    const double C109157 = C100338 * C1470;
    const double C109151 = C100338 * C360;
    const double C109147 = C100338 * C359;
    const double C110081 = C100338 * C1179;
    const double C110077 = C100338 * C1652;
    const double C110443 = C100338 * C7821;
    const double C110436 = C100338 * C1471;
    const double C110695 = C100338 * C8070;
    const double C110688 = C100338 * C2197;
    const double C110684 = C100338 * C1653;
    const double C110680 = C100338 * C1648;
    const double C110924 = C100338 * C1472;
    const double C111227 = C100338 * C2198;
    const double C111434 = C100338 * C8072;
    const double C112300 = C100338 * C1654;
    const double C112706 = C100338 * C3129;
    const double C112702 = C100338 * C9387;
    const double C127444 = C100338 * C3130;
    const double C14743 = C14726 + C14727;
    const double C14738 = C14711 + C14712;
    const double C14737 = C14708 + C14709;
    const double C14732 = C14693 + C14694;
    const double C15045 = C15025 + C15026;
    const double C15040 = C15010 + C15011;
    const double C15037 = C15001 + C15002;
    const double C15036 = C14992 + C14993;
    const double C15347 = C15327 + C15328;
    const double C15342 = C15312 + C15313;
    const double C15339 = C15303 + C15304;
    const double C15338 = C15294 + C15295;
    const double C15577 = C15570 + C15030;
    const double C15789 = C15782 + C15332;
    const double C16115 = C16104 + C16105;
    const double C16110 = C16089 + C16090;
    const double C16921 = C16914 + C16470;
    const double C17229 = C17222 + C16706;
    const double C18322 = C18315 + C16700;
    const double C65048 = C65041 + C14998;
    const double C65043 = C65031 + C14997;
    const double C65965 = C65961 + C16086;
    const double C66332 = C66322 + C16474;
    const double C66327 = C66312 + C16473;
    const double C66592 = C66579 + C16710;
    const double C66587 = C66569 + C16709;
    const double C66584 = C66563 + C16703;
    const double C67300 = C67293 + C17430;
    const double C14735 = C14702 + C14703;
    const double C14734 = C14699 + C14700;
    const double C15042 = C15016 + C15017;
    const double C15039 = C15007 + C15008;
    const double C15034 = C14986 + C14987;
    const double C65046 = C65037 + C15000;
    const double C65045 = C65035 + C14995;
    const double C31564 = C31546 + C31547;
    const double C31561 = C31537 + C31538;
    const double C31560 = C31534 + C31535;
    const double C31558 = C31528 + C31529;
    const double C31865 = C31845 + C31846;
    const double C31864 = C31842 + C31843;
    const double C31862 = C31836 + C31837;
    const double C31860 = C31830 + C31831;
    const double C31857 = C31817 + C31818;
    const double C31855 = C31811 + C31812;
    const double C32159 = C32119 + C32120;
    const double C32157 = C32113 + C32114;
    const double C32928 = C32914 + C32915;
    const double C32926 = C32908 + C32909;
    const double C33739 = C33731 + C33287;
    const double C33737 = C33727 + C33285;
    const double C34051 = C34043 + C33523;
    const double C40455 = C40446 + C31826;
    const double C40454 = C40441 + C31823;
    const double C41665 = C41659 + C32904;
    const double C42143 = C42131 + C33292;
    const double C42141 = C42127 + C33294;
    const double C42140 = C42125 + C33289;
    const double C42470 = C42453 + C33525;
    const double C100384 = C100366 + C100367;
    const double C100381 = C100357 + C100358;
    const double C100380 = C100354 + C100355;
    const double C100378 = C100348 + C100349;
    const double C100685 = C100665 + C100666;
    const double C100684 = C100662 + C100663;
    const double C100682 = C100656 + C100657;
    const double C100680 = C100650 + C100651;
    const double C100677 = C100637 + C100638;
    const double C100675 = C100631 + C100632;
    const double C100979 = C100939 + C100940;
    const double C100977 = C100933 + C100934;
    const double C101748 = C101734 + C101735;
    const double C101746 = C101728 + C101729;
    const double C102559 = C102551 + C102107;
    const double C102557 = C102547 + C102105;
    const double C102871 = C102863 + C102343;
    const double C109164 = C109155 + C102109;
    const double C109163 = C109153 + C100646;
    const double C109161 = C109149 + C100643;
    const double C110085 = C110079 + C101724;
    const double C110083 = C110075 + C102345;
    const double C110449 = C110438 + C102112;
    const double C110928 = C110922 + C102114;
    const double C133778 = C133745 + C133746;
    const double C133777 = C133742 + C133743;
    const double C134085 = C134059 + C134060;
    const double C134082 = C134050 + C134051;
    const double C134077 = C134029 + C134030;
    const double C142552 = C142543 + C134043;
    const double C142551 = C142541 + C134038;
    const double C117236 =
        ((((0 - (C150500 * C150552) / C150502) * ae) / C150502 -
          (0 * be) / C150513 + C150508 / C150502) /
             C150553 -
         ((C150500 * C150576 + 0) * be) / C150502) /
            C150553 +
        ((C150500 * (C150576 / C150553 -
                     ((C150500 * C150571 + C152553) * be) / C150502 + C150572) +
          C152619) *
         ae) /
            C150502 +
        C150571 / C150553 - ((C150500 * C150572 + C152482) * be) / C150502;
    const double C117238 =
        (C150576 / C150553 - ((C150500 * C150571 + C152553) * be) / C150502 +
         C150572) /
            C150553 +
        ((C150500 * (C150571 / C150553 -
                     ((C150500 * C150572 + C152482) * be) / C150502) +
          C152620) *
         ae) /
            C150502 +
        2 * (C150572 / C150553 - (0 * be) / C150502);
    const double C117240 =
        (C150571 / C150553 - ((C150500 * C150572 + C152482) * be) / C150502) /
            C150553 +
        ((C150500 * (C150572 / C150553 - (0 * be) / C150502) + C133725) * ae) /
            C150502;
    const double C133727 = C150576 / C150553 -
                           ((C150500 * C150571 + C152553) * be) / C150502 +
                           C150572;
    const double C133729 =
        C150571 / C150553 - ((C150500 * C150572 + C152482) * be) / C150502;
    const double C693 = C685 * C152403;
    const double C6752 = C685 * C6258;
    const double C23772 = C685 * C152552;
    const double C51581 = C685 * C51108;
    const double C73588 = C685 * C152617;
    const double C657 = C152418 * C632;
    const double C14719 = C14682 * C632;
    const double C15781 = C14681 * C632;
    const double C32152 = C152553 * C632;
    const double C32146 = C152482 * C632;
    const double C100972 = C100336 * C632;
    const double C100966 = C152482 * C632;
    const double C133762 = C133725 * C632;
    const double C134824 = C152620 * C632;
    const double C671 = C655 + C656;
    const double C14740 = C14717 + C14718;
    const double C32166 = C32144 + C32145;
    const double C100986 = C100964 + C100965;
    const double C133783 = C133760 + C133761;
    const double C197 = C191 + C176;
    const double C2836 = C2833 + C1683;
    const double C2612 =
        (2 * (2 * ae * C150722 + C150614 * C150647) + C150917 + C150917 +
         C150614 * (C150647 + C150914 + C150914 +
                    C150614 * (2 * ae * C150737 + C150614 * C150659))) /
        C150509;
    const double C2621 = C135 * C2604;
    const double C15325 = C14686 * C2604;
    const double C15319 = C14688 * C2604;
    const double C18532 = C14684 * C2604;
    const double C32139 = C31521 * C2604;
    const double C34820 = C31519 * C2604;
    const double C100959 = C100341 * C2604;
    const double C103640 = C100339 * C2604;
    const double C117255 = C117242 * C2604;
    const double C134362 = C133731 * C2604;
    const double C6765 = C6763 + C1691;
    const double C6529 = C6527 * C6260;
    const double C8317 = C6527 * C6259;
    const double C25227 = C6527 * C152454;
    const double C53036 = C6527 * C152454;
    const double C73360 = C6527 * C73121;
    const double C75040 = C6527 * C152618;
    const double C7479 = C7477 * C6260;
    const double C8615 = C7477 * C6259;
    const double C25521 = C7477 * C152454;
    const double C53330 = C7477 * C152454;
    const double C74283 = C7477 * C73121;
    const double C75333 = C7477 * C152618;
    const double C150984 = C150983 + C150977;
    const double C3138 =
        (2 * (2 * ae * C150837 + C150614 * C151065) + C151077 + C151077 +
         C150614 *
             (C151065 + C151074 + C151074 +
              C150614 * (2 * ae * C151066 + C150614 * C150806 * C150664))) /
        C150509;
    const double C3143 = C135 * C3134;
    const double C16096 = C14688 * C3134;
    const double C16699 = C14686 * C3134;
    const double C18747 = C14684 * C3134;
    const double C33517 = C31521 * C3134;
    const double C35555 = C31519 * C3134;
    const double C102337 = C100341 * C3134;
    const double C104375 = C100339 * C3134;
    const double C117421 = C117242 * C3134;
    const double C135139 = C133731 * C3134;
    const double C8099 = C152418 * C8082;
    const double C43408 = C152482 * C8082;
    const double C66317 = C14682 * C8082;
    const double C67292 = C14681 * C8082;
    const double C93837 = C152553 * C8082;
    const double C110697 = C100336 * C8082;
    const double C110691 = C152482 * C8082;
    const double C143823 = C133725 * C8082;
    const double C144798 = C152620 * C8082;
    const double C8108 = C8097 + C8098;
    const double C66329 = C66316 + C16471;
    const double C43415 = C43407 + C34256;
    const double C110707 = C110690 + C103076;
    const double C143835 = C143822 + C135514;
    const double C7851 = C7848 + C7840;
    const double C9399 =
        (2 * (2 * ae * C150857 + C150614 * C151111) + C151234 + C151234 +
         C150614 * (C151111 + C151231 + C151231 +
                    C150614 * (2 * ae * C151147 + C150614 * C151116))) /
        C150509;
    const double C9406 = C135 * C9393;
    const double C16711 = C14686 * C9393;
    const double C16707 = C14688 * C9393;
    const double C33528 = C31521 * C9393;
    const double C45085 = C31519 * C9393;
    const double C68558 = C14684 * C9393;
    const double C102348 = C100341 * C9393;
    const double C112003 = C100339 * C9393;
    const double C117417 = C117242 * C9393;
    const double C135750 = C133731 * C9393;
    const double C151256 = C151255 + C151249;
    const double C151484 = C151467 + C151480;
    const double C151443 = ae * C151441;
    const double C151442 = C150614 * C151441;
    const double C151452 = 4 * C151441;
    const double C686 = C678 + C654;
    const double C23316 = C23309 + C23310;
    const double C51125 = C51118 + C51119;
    const double C23548 = C23536 + C23537;
    const double C51357 = C51345 + C51346;
    const double C23780 = C23768 + C23769;
    const double C51589 = C51577 + C51578;
    const double C2840 = C2837 + C2830;
    const double C2986 = C152418 * C2613;
    const double C15308 = C14681 * C2613;
    const double C15290 = C14682 * C2613;
    const double C18531 = C14680 * C2613;
    const double C32134 = C152482 * C2613;
    const double C35344 = C152553 * C2613;
    const double C100954 = C152482 * C2613;
    const double C104164 = C100336 * C2613;
    const double C134351 = C152620 * C2613;
    const double C134333 = C133725 * C2613;
    const double C137556 = C152619 * C2613;
    const double C2990 = C2985 + C2622;
    const double C15336 = C15288 + C15289;
    const double C18537 = C18530 + C18008;
    const double C32162 = C32132 + C32133;
    const double C100982 = C100952 + C100953;
    const double C134379 = C134331 + C134332;
    const double C8115 = C8110 + C8091;
    const double C150962 = ae * C150961;
    const double C2607 = (3 * C150938 + C150614 * C150961 +
                          (2 * C150932 + C150614 * C150951) * ae) /
                         C150502;
    const double C10122 = C152418 * C3137;
    const double C42450 = C152482 * C3137;
    const double C45084 = C152553 * C3137;
    const double C65958 = C14682 * C3137;
    const double C66566 = C14681 * C3137;
    const double C68557 = C14680 * C3137;
    const double C110683 = C152482 * C3137;
    const double C112707 = C100336 * C3137;
    const double C143464 = C133725 * C3137;
    const double C144072 = C152620 * C3137;
    const double C146057 = C152619 * C3137;
    const double C10126 = C10121 + C3142;
    const double C65963 = C65957 + C16088;
    const double C68563 = C68556 + C18744;
    const double C42468 = C42449 + C33519;
    const double C110703 = C110682 + C102339;
    const double C143469 = C143463 + C135131;
    const double C442 = C434 + C412;
    const double C443 = C435 + C415;
    const double C688 = C680 + C660;
    const double C1222 = C1218 + C1207;
    const double C23549 = C23542 + C23543;
    const double C51358 = C51351 + C51352;
    const double C24472 = C24468 + C24469;
    const double C52281 = C52277 + C52278;
    const double C8828 = C8827 + C8823;
    const double C159 =
        (6 * (4 * C150661 + C150621 * C150678) +
         C150621 *
             (5 * C150678 +
              C150621 *
                  (4 * C150676 +
                   C150621 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C389 =
        (3 * C150647 + C150621 * C150661 + C150678 * std::pow(yP - yQ, 2)) /
        C150509;
    const double C390 =
        ((yP - yQ) * (4 * C150661 + C150621 * C150678)) / C150509;
    const double C391 =
        (4 * C150661 + C150621 * C150678 +
         (4 * C150676 +
          C150621 *
              (3 * C150674 +
               C150621 * (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)))) *
             std::pow(yP - yQ, 2)) /
        C150509;
    const double C635 = (2 * ae * (4 * C150741 + C150621 * C150767) +
                         C150614 * (4 * C150661 + C150621 * C150678)) /
                        C150509;
    const double C835 =
        ((yP - yQ) *
         (5 * C150678 +
          C150621 *
              (4 * C150676 +
               C150621 * (3 * C150674 +
                          C150621 * (2 * C150621 * C150672 +
                                     C150621 * (C150672 +
                                                (C150666 * C150667 +
                                                 C150618 * bs[9] *
                                                     std::pow(C150616, 9)) *
                                                    C150617 * C150633)))))) /
        C150509;
    const double C977 =
        (2 * ae * (5 * C150767 + C150621 * C150799) +
         C150614 *
             (5 * C150678 +
              C150621 *
                  (4 * C150676 +
                   C150621 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C1195 =
        (2 * ae * C150806 * C150767 + C150614 * C150806 * C150678) / C150509;
    const double C1831 =
        (2 * C150806 * C150678 +
         C150806 *
             (C150678 +
              (3 * C150674 +
               C150621 * (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633))) *
                  C150818)) /
        C150509;
    const double C2047 =
        (2 * ae * (C150767 + C150795 * C150818) +
         C150614 *
             (C150678 +
              (3 * C150674 +
               C150621 * (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633))) *
                  C150818)) /
        C150509;
    const double C8614 = C152418 * C8083;
    const double C42128 = C152482 * C8083;
    const double C110923 = C152482 * C8083;
    const double C60260 =
        (6 * (4 * C151118 + C150806 * C151695) +
         C150806 *
             (5 * C151695 +
              C150806 *
                  (4 * C151693 +
                   C150806 *
                       (3 * C151691 +
                        C150806 *
                            (2 * C150806 * C150672 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150818)))))) /
        C150509;
    const double C60878 =
        (2 * ae * (5 * C151176 + C150806 * C151717) +
         C150614 *
             (5 * C151695 +
              C150806 *
                  (4 * C151693 +
                   C150806 *
                       (3 * C151691 +
                        C150806 *
                            (2 * C150806 * C150672 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150818)))))) /
        C150509;
    const double C150798 = C150796 * ae;
    const double C976 = (C150614 * (5 * C150767 + C150621 * C150799) +
                         (5 * C150764 + C150621 * C150796) * ae) /
                        C150502;
    const double C1190 =
        (C150614 * C150806 * C150799 + C150806 * C150796 * ae) / C150502;
    const double C143 = 6 * (4 * C150738 + C150621 * C150764) +
                        C150621 * (5 * C150764 + C150621 * C150796);
    const double C367 = 4 * C150738 + C150621 * C150764 + C150796 * C150818;
    const double C612 = 4 * C150738 + C150621 * C150764 + C150796 * C150618;
    const double C833 = C150806 * (5 * C150764 + C150621 * C150796);
    const double C975 = C150614 * (5 * C150764 + C150621 * C150796);
    const double C1184 = C150614 * C150806 * C150796;
    const double C151037 = C151035 + C151036;
    const double C151046 = ae * C151043;
    const double C151045 = C150614 * C151043;
    const double C150889 = ae * C150888;
    const double C1668 = (C150741 + C150763 * C150818 + C150614 * C150888 +
                          C150614 * C150885 * ae) /
                         C150502;
    const double C151026 = C151025 + C151019;
    const double C151103 = C150823 + C151101;
    const double C151341 = ae * C151340;
    const double C9701 = (2 * C150830 + C150806 * C150875 + C150614 * C151340 +
                          C150614 * C151337 * ae) /
                         C150502;
    const double C151351 = C151350 + C151347;
    const double C151569 = ae * C151567;
    const double C151568 = C150614 * C151567;
    const double C151602 = C151578 + C151600;
    const double C151205 = C151203 + C151204;
    const double C8825 = C135 * C8818;
    const double C42138 = C31521 * C8818;
    const double C110927 = C100341 * C8818;
    const double C151372 = C151136 + C151370;
    const double C151323 = ae * C151321;
    const double C151322 = C150614 * C151321;
    const double C151537 = C151535 + C151520;
    const double C151680 = C151653 + C151678;
    const double C151720 = C151718 * ae;
    const double C60877 = (C150614 * (5 * C151176 + C150806 * C151717) +
                           (5 * C151177 + C150806 * C151718) * ae) /
                          C150502;
    const double C60258 = 6 * (4 * C151152 + C150806 * C151177) +
                          C150806 * (5 * C151177 + C150806 * C151718);
    const double C60413 = 4 * C151152 + C150806 * C151177 + C151718 * C150618;
    const double C60876 = C150614 * (5 * C151177 + C150806 * C151718);
    const double C151754 = ae * C151751;
    const double C151753 = C150614 * C151751;
    const double C151741 = C151740 + C151734;
    const double C151840 = C151816 + C151838;
    const double C151801 = C151799 + C151785;
    const double C151898 = C151895 * ae;
    const double C119311 = 6 * (4 * C151434 + C150614 * C151482) +
                           C150614 * (5 * C151482 + C150614 * C151895);
    const double C151899 = ae * C151894;
    const double C151897 = C150614 * C151894;
    const double C150770 = ae * C150769;
    const double C622 = (3 * C150722 + C150621 * C150741 + C150614 * C150769 +
                         C150614 * C150764 * ae) /
                        C150502;
    const double C186 = C177 + C178;
    const double C428 = C416 + C417;
    const double C840 = C837 + C419;
    const double C982 = C979 + C664;
    const double C31565 = C31549 + C31550;
    const double C100385 = C100369 + C100370;
    const double C1215 = C1208 + C1209;
    const double C32399 = C32392 + C31851;
    const double C101219 = C101212 + C100671;
    const double C1669 =
        (C150806 * C150661 + C150828 + C150828 +
         C150614 * (2 * ae * C150823 + C150614 * C150806 * C150676)) /
        C150509;
    const double C1682 = C135 * C1657;
    const double C15028 = C14688 * C1657;
    const double C16108 = C14686 * C1657;
    const double C32918 = C31521 * C1657;
    const double C35129 = C31519 * C1657;
    const double C101738 = C100341 * C1657;
    const double C103949 = C100339 * C1657;
    const double C134071 = C133731 * C1657;
    const double C150905 = C150904 + C150901;
    const double C1846 = C1843 + C1834;
    const double C2062 = C2059 + C2050;
    const double C6760 = C152418 * C1679;
    const double C15021 = C14682 * C1679;
    const double C34040 = C152482 * C1679;
    const double C102860 = C152482 * C1679;
    const double C134064 = C133725 * C1679;
    const double C6764 = C6759 + C1692;
    const double C15043 = C15019 + C15020;
    const double C34049 = C34039 + C33521;
    const double C102869 = C102859 + C102341;
    const double C134086 = C134062 + C134063;
    const double C6528 = C6523 + C6511;
    const double C7478 = C7474 + C7464;
    const double C151006 = C150989 + C151004;
    const double C151091 = ae * C151090;
    const double C3135 =
        (2 * C150834 + C150614 * C151090 + (C150831 + C151081 * C150618) * ae) /
        C150502;
    const double C8081 = (2 * C151065 + C150806 * C151108 + C151141 + C151141 +
                          C150614 * (2 * ae * C151136 + C150614 * C151126)) /
                         C150509;
    const double C8095 = C135 * C8075;
    const double C16468 = C14688 * C8075;
    const double C17434 = C14686 * C8075;
    const double C34258 = C31521 * C8075;
    const double C42465 = C31519 * C8075;
    const double C103078 = C100341 * C8075;
    const double C112302 = C100339 * C8075;
    const double C135511 = C133731 * C8075;
    const double C7847 = C7844 + C7836;
    const double C8619 = C8618 + C8100;
    const double C151223 = ae * C151222;
    const double C9392 =
        (2 * C150870 + C150614 * C151222 + (C150867 + C151133 * C150618) * ae) /
        C150502;
    const double C151301 = C151284 + C151299;
    const double C151517 = C151511 + C151403;
    const double C151405 = C151404 + C151393;
    const double C151181 = ae * C151180;
    const double C8079 = (3 * C150857 + C150806 * C151151 + C150614 * C151180 +
                          C150614 * C151177 * ae) /
                         C150502;
    const double C60265 = C60262 + C7841;
    const double C60883 = C60880 + C8824;
    const double C93608 = C93602 + C42136;
    const double C110450 = C110440 + C110441;
    const double C151362 = C151361 + C151358;
    const double C151278 = C151261 + C151276;
    const double C151889 = C151872 + C151885;
    const double C151489 = ae * C151487;
    const double C151488 = C150614 * C151487;
    const double C151854 = 4 * C151487;
    const double C151778 = C151770 + C151640;
    const double C151642 = C151641 + C151631;
    const double C180 = C135 * C151;
    const double C420 = C135 * C379;
    const double C839 = C135 * C834;
    const double C60264 = C135 * C60259;
    const double C150574 = C150570 * ae;
    const double C14742 = C14723 + C14724;
    const double C14739 = C14714 + C14715;
    const double C14736 = C14705 + C14706;
    const double C14733 = C14696 + C14697;
    const double C15044 = C15022 + C15023;
    const double C15041 = C15013 + C15014;
    const double C15038 = C15004 + C15005;
    const double C15035 = C14989 + C14990;
    const double C15343 = C15315 + C15316;
    const double C15340 = C15306 + C15307;
    const double C15337 = C15291 + C15292;
    const double C15576 = C15568 + C15029;
    const double C15788 = C15780 + C15331;
    const double C16114 = C16101 + C16102;
    const double C16111 = C16092 + C16093;
    const double C16920 = C16912 + C16469;
    const double C17228 = C17220 + C16705;
    const double C65047 = C65039 + C14999;
    const double C65044 = C65033 + C14996;
    const double C65964 = C65959 + C16087;
    const double C66331 = C66320 + C16475;
    const double C66328 = C66314 + C16472;
    const double C66588 = C66571 + C16708;
    const double C66585 = C66565 + C16702;
    const double C67299 = C67291 + C17431;
    const double C31566 = C31552 + C31553;
    const double C31563 = C31543 + C31544;
    const double C31562 = C31540 + C31541;
    const double C31559 = C31531 + C31532;
    const double C31557 = C31525 + C31526;
    const double C31866 = C31848 + C31849;
    const double C31863 = C31839 + C31840;
    const double C31861 = C31833 + C31834;
    const double C31859 = C31827 + C31828;
    const double C31858 = C31820 + C31821;
    const double C31856 = C31814 + C31815;
    const double C32168 = C32150 + C32151;
    const double C32165 = C32141 + C32142;
    const double C32163 = C32135 + C32136;
    const double C32161 = C32129 + C32130;
    const double C32160 = C32122 + C32123;
    const double C32158 = C32116 + C32117;
    const double C32400 = C32394 + C31852;
    const double C32608 = C32602 + C32154;
    const double C32930 = C32920 + C32921;
    const double C32927 = C32911 + C32912;
    const double C32925 = C32905 + C32906;
    const double C33740 = C33733 + C33288;
    const double C33738 = C33729 + C33286;
    const double C34052 = C34045 + C33524;
    const double C34050 = C34041 + C33522;
    const double C35134 = C35127 + C33518;
    const double C35132 = C35123 + C33516;
    const double C35350 = C35343 + C34822;
    const double C40456 = C40448 + C31825;
    const double C40453 = C40439 + C31824;
    const double C41666 = C41661 + C32903;
    const double C42144 = C42133 + C33291;
    const double C42142 = C42129 + C33293;
    const double C42139 = C42123 + C33290;
    const double C42474 = C42461 + C33527;
    const double C42472 = C42457 + C33529;
    const double C42469 = C42451 + C33526;
    const double C42467 = C42447 + C33520;
    const double C43144 = C43140 + C34257;
    const double C43416 = C43409 + C34255;
    const double C45090 = C45083 + C35553;
    const double C93609 = C93604 + C42135;
    const double C93841 = C93836 + C42463;
    const double C94532 = C94527 + C43411;
    const double C100386 = C100372 + C100373;
    const double C100383 = C100363 + C100364;
    const double C100382 = C100360 + C100361;
    const double C100379 = C100351 + C100352;
    const double C100377 = C100345 + C100346;
    const double C100686 = C100668 + C100669;
    const double C100683 = C100659 + C100660;
    const double C100681 = C100653 + C100654;
    const double C100679 = C100647 + C100648;
    const double C100678 = C100640 + C100641;
    const double C100676 = C100634 + C100635;
    const double C100988 = C100970 + C100971;
    const double C100985 = C100961 + C100962;
    const double C100983 = C100955 + C100956;
    const double C100981 = C100949 + C100950;
    const double C100980 = C100942 + C100943;
    const double C100978 = C100936 + C100937;
    const double C101220 = C101214 + C100672;
    const double C101428 = C101422 + C100974;
    const double C101750 = C101740 + C101741;
    const double C101747 = C101731 + C101732;
    const double C101745 = C101725 + C101726;
    const double C102560 = C102553 + C102108;
    const double C102558 = C102549 + C102106;
    const double C102872 = C102865 + C102344;
    const double C102870 = C102861 + C102342;
    const double C103954 = C103947 + C102338;
    const double C103952 = C103943 + C102336;
    const double C104170 = C104163 + C103642;
    const double C109165 = C109157 + C102110;
    const double C109162 = C109151 + C100645;
    const double C109160 = C109147 + C100644;
    const double C110086 = C110081 + C101723;
    const double C110084 = C110077 + C102346;
    const double C110451 = C110443 + C110444;
    const double C110448 = C110436 + C102111;
    const double C110709 = C110695 + C110696;
    const double C110706 = C110688 + C103075;
    const double C110704 = C110684 + C102347;
    const double C110702 = C110680 + C102340;
    const double C110929 = C110924 + C102113;
    const double C111232 = C111227 + C103077;
    const double C111439 = C111434 + C110699;
    const double C112305 = C112300 + C102349;
    const double C112713 = C112706 + C104373;
    const double C14755 = C14743 + C14727;
    const double C14750 = C14738 + C14712;
    const double C14749 = C14737 + C14709;
    const double C14744 = C14732 + C14694;
    const double C15057 = C15045 + C15026;
    const double C15052 = C15040 + C15011;
    const double C15049 = C15037 + C15002;
    const double C15048 = C15036 + C14993;
    const double C15359 = C15347 + C15328;
    const double C15354 = C15342 + C15313;
    const double C15351 = C15339 + C15304;
    const double C15350 = C15338 + C15295;
    const double C15580 = C15577 + C15030;
    const double C15792 = C15789 + C15332;
    const double C16121 = C16115 + C16105;
    const double C16116 = C16110 + C16090;
    const double C16924 = C16921 + C16470;
    const double C17232 = C17229 + C16706;
    const double C18325 = C18322 + C16700;
    const double C65054 = C65048 + C14998;
    const double C65049 = C65043 + C14997;
    const double C65968 = C65965 + C16086;
    const double C66338 = C66332 + C16474;
    const double C66333 = C66327 + C16473;
    const double C66601 = C66592 + C16710;
    const double C66596 = C66587 + C16709;
    const double C66593 = C66584 + C16703;
    const double C67303 = C67300 + C17430;
    const double C14747 = C14735 + C14703;
    const double C14746 = C14734 + C14700;
    const double C15054 = C15042 + C15017;
    const double C15051 = C15039 + C15008;
    const double C15046 = C15034 + C14987;
    const double C65052 = C65046 + C15000;
    const double C65051 = C65045 + C14995;
    const double C31574 = C31564 + C31547;
    const double C31571 = C31561 + C31538;
    const double C31570 = C31560 + C31535;
    const double C31568 = C31558 + C31529;
    const double C31877 = C31865 + C31846;
    const double C31876 = C31864 + C31843;
    const double C31874 = C31862 + C31837;
    const double C31872 = C31860 + C31831;
    const double C31869 = C31857 + C31818;
    const double C31867 = C31855 + C31812;
    const double C32171 = C32159 + C32120;
    const double C32169 = C32157 + C32114;
    const double C32934 = C32928 + C32915;
    const double C32932 = C32926 + C32909;
    const double C33743 = C33739 + C33287;
    const double C33741 = C33737 + C33285;
    const double C34055 = C34051 + C33523;
    const double C40459 = C40455 + C31826;
    const double C40458 = C40454 + C31823;
    const double C41667 = C41665 + C32904;
    const double C42149 = C42143 + C33292;
    const double C42147 = C42141 + C33294;
    const double C42146 = C42140 + C33289;
    const double C42478 = C42470 + C33525;
    const double C100394 = C100384 + C100367;
    const double C100391 = C100381 + C100358;
    const double C100390 = C100380 + C100355;
    const double C100388 = C100378 + C100349;
    const double C100697 = C100685 + C100666;
    const double C100696 = C100684 + C100663;
    const double C100694 = C100682 + C100657;
    const double C100692 = C100680 + C100651;
    const double C100689 = C100677 + C100638;
    const double C100687 = C100675 + C100632;
    const double C100991 = C100979 + C100940;
    const double C100989 = C100977 + C100934;
    const double C101754 = C101748 + C101735;
    const double C101752 = C101746 + C101729;
    const double C102563 = C102559 + C102107;
    const double C102561 = C102557 + C102105;
    const double C102875 = C102871 + C102343;
    const double C109170 = C109164 + C102109;
    const double C109169 = C109163 + C100646;
    const double C109167 = C109161 + C100643;
    const double C110089 = C110085 + C101724;
    const double C110087 = C110083 + C102345;
    const double C110453 = C110449 + C102112;
    const double C110930 = C110928 + C102114;
    const double C133790 = C133778 + C133746;
    const double C133789 = C133777 + C133743;
    const double C134097 = C134085 + C134060;
    const double C134094 = C134082 + C134051;
    const double C134089 = C134077 + C134030;
    const double C142558 = C142552 + C134043;
    const double C142557 = C142551 + C134038;
    const double C117260 = C117236 * C148;
    const double C117259 = C117236 * C147;
    const double C117252 = C117236 * C146;
    const double C117251 = C117236 * C145;
    const double C117244 = C117236 * C144;
    const double C117430 = C117236 * C374;
    const double C117429 = C117236 * C369;
    const double C117425 = C117236 * C373;
    const double C117418 = C117236 * C370;
    const double C117414 = C117236 * C372;
    const double C117413 = C117236 * C371;
    const double C117600 = C117236 * C619;
    const double C117599 = C117236 * C614;
    const double C117595 = C117236 * C618;
    const double C117588 = C117236 * C615;
    const double C117584 = C117236 * C617;
    const double C117583 = C117236 * C616;
    const double C117734 = C117236 * C368;
    const double C117868 = C117236 * C613;
    const double C118074 = C117236 * C1187;
    const double C118073 = C117236 * C1186;
    const double C118066 = C117236 * C1185;
    const double C118310 = C117236 * C1479;
    const double C118309 = C117236 * C1478;
    const double C118468 = C117236 * C1665;
    const double C118467 = C117236 * C1664;
    const double C118463 = C117236 * C1660;
    const double C118602 = C117236 * C1477;
    const double C118800 = C117236 * C1663;
    const double C118934 = C117236 * C2201;
    const double C119318 = C117236 * C2606;
    const double C119517 = C117236 * C1659;
    const double C119651 = C117236 * C2605;
    const double C119785 = C117236 * C3133;
    const double C117261 = C117238 * C621;
    const double C117258 = C117238 * C613;
    const double C117253 = C117238 * C614;
    const double C117250 = C117238 * C615;
    const double C117245 = C117238 * C616;
    const double C117431 = C117238 * C1662;
    const double C117428 = C117238 * C1187;
    const double C117424 = C117238 * C1663;
    const double C117419 = C117238 * C1186;
    const double C117415 = C117238 * C1664;
    const double C117412 = C117238 * C1185;
    const double C117601 = C117238 * C2604;
    const double C117598 = C117238 * C619;
    const double C117594 = C117238 * C2605;
    const double C117589 = C117238 * C618;
    const double C117585 = C117238 * C2606;
    const double C117582 = C117238 * C617;
    const double C117735 = C117238 * C1188;
    const double C117869 = C117238 * C620;
    const double C118075 = C117238 * C1658;
    const double C118072 = C117238 * C1659;
    const double C118067 = C117238 * C1660;
    const double C118311 = C117238 * C8078;
    const double C118308 = C117238 * C2201;
    const double C118469 = C117238 * C9393;
    const double C118466 = C117238 * C1665;
    const double C118462 = C117238 * C3133;
    const double C118603 = C117238 * C2202;
    const double C118801 = C117238 * C1666;
    const double C118935 = C117238 * C8076;
    const double C119518 = C117238 * C3134;
    const double C117257 = C117240 * C620;
    const double C117254 = C117240 * C619;
    const double C117249 = C117240 * C618;
    const double C117246 = C117240 * C617;
    const double C117432 = C117240 * C1667;
    const double C117427 = C117240 * C1658;
    const double C117423 = C117240 * C1666;
    const double C117420 = C117240 * C1659;
    const double C117416 = C117240 * C1665;
    const double C117411 = C117240 * C1660;
    const double C117597 = C117240 * C2604;
    const double C117590 = C117240 * C2605;
    const double C117581 = C117240 * C2606;
    const double C117736 = C117240 * C1657;
    const double C118071 = C117240 * C3134;
    const double C118068 = C117240 * C3133;
    const double C118307 = C117240 * C8076;
    const double C118465 = C117240 * C9393;
    const double C118604 = C117240 * C8075;
    const double C133772 = C133727 * C149;
    const double C133770 = C133727 * C148;
    const double C133755 = C133727 * C147;
    const double C133752 = C133727 * C146;
    const double C133737 = C133727 * C145;
    const double C133733 = C133727 * C144;
    const double C134074 = C133727 * C375;
    const double C134073 = C133727 * C368;
    const double C134069 = C133727 * C374;
    const double C134054 = C133727 * C369;
    const double C134045 = C133727 * C373;
    const double C134041 = C133727 * C372;
    const double C134040 = C133727 * C371;
    const double C134036 = C133727 * C370;
    const double C134376 = C133727 * C620;
    const double C134375 = C133727 * C613;
    const double C134371 = C133727 * C619;
    const double C134356 = C133727 * C614;
    const double C134347 = C133727 * C618;
    const double C134343 = C133727 * C617;
    const double C134342 = C133727 * C616;
    const double C134338 = C133727 * C615;
    const double C134615 = C133727 * C376;
    const double C134827 = C133727 * C621;
    const double C135150 = C133727 * C1188;
    const double C135148 = C133727 * C1187;
    const double C135133 = C133727 * C1186;
    const double C135129 = C133727 * C1185;
    const double C135520 = C133727 * C1480;
    const double C135517 = C133727 * C1479;
    const double C135516 = C133727 * C1478;
    const double C135513 = C133727 * C1477;
    const double C135756 = C133727 * C1666;
    const double C135753 = C133727 * C1665;
    const double C135752 = C133727 * C1664;
    const double C135749 = C133727 * C1663;
    const double C135746 = C133727 * C1660;
    const double C135743 = C133727 * C1659;
    const double C135959 = C133727 * C1476;
    const double C136267 = C133727 * C1662;
    const double C136476 = C133727 * C2202;
    const double C136473 = C133727 * C2201;
    const double C137042 = C133727 * C2606;
    const double C137039 = C133727 * C2605;
    const double C137345 = C133727 * C1658;
    const double C137557 = C133727 * C2604;
    const double C137766 = C133727 * C3134;
    const double C137763 = C133727 * C3133;
    const double C143830 = C133727 * C7825;
    const double C144087 = C133727 * C8076;
    const double C144801 = C133727 * C8078;
    const double C146058 = C133727 * C9393;
    const double C133773 = C133729 * C623;
    const double C133767 = C133729 * C621;
    const double C133758 = C133729 * C613;
    const double C133749 = C133729 * C614;
    const double C133740 = C133729 * C615;
    const double C133734 = C133729 * C616;
    const double C134075 = C133729 * C1661;
    const double C134072 = C133729 * C1188;
    const double C134066 = C133729 * C1662;
    const double C134057 = C133729 * C1187;
    const double C134048 = C133729 * C1663;
    const double C134042 = C133729 * C1664;
    const double C134039 = C133729 * C1185;
    const double C134033 = C133729 * C1186;
    const double C134374 = C133729 * C620;
    const double C134368 = C133729 * C2604;
    const double C134359 = C133729 * C619;
    const double C134350 = C133729 * C2605;
    const double C134344 = C133729 * C2606;
    const double C134341 = C133729 * C617;
    const double C134335 = C133729 * C618;
    const double C134616 = C133729 * C1189;
    const double C135151 = C133729 * C1657;
    const double C135145 = C133729 * C1658;
    const double C135136 = C133729 * C1659;
    const double C135130 = C133729 * C1660;
    const double C135521 = C133729 * C8077;
    const double C135518 = C133729 * C8078;
    const double C135515 = C133729 * C2201;
    const double C135512 = C133729 * C2202;
    const double C135754 = C133729 * C9393;
    const double C135751 = C133729 * C1665;
    const double C135748 = C133729 * C1666;
    const double C135745 = C133729 * C3133;
    const double C135742 = C133729 * C3134;
    const double C135960 = C133729 * C2203;
    const double C136268 = C133729 * C1667;
    const double C136477 = C133729 * C8075;
    const double C136474 = C133729 * C8076;
    const double C143831 = C133729 * C8817;
    const double C679 = C671 + C656;
    const double C14752 = C14740 + C14718;
    const double C32178 = C32166 + C32145;
    const double C100998 = C100986 + C100965;
    const double C133795 = C133783 + C133761;
    const double C203 = C197 * C152403;
    const double C23314 = C197 * C152552;
    const double C51123 = C197 * C51108;
    const double C2839 = C2836 + C2828;
    const double C2984 = C152418 * C2612;
    const double C15326 = C14681 * C2612;
    const double C15320 = C14682 * C2612;
    const double C32140 = C152482 * C2612;
    const double C35340 = C152553 * C2612;
    const double C100960 = C152482 * C2612;
    const double C104160 = C100336 * C2612;
    const double C134369 = C152620 * C2612;
    const double C134363 = C133725 * C2612;
    const double C2989 = C2983 + C2621;
    const double C15346 = C15324 + C15325;
    const double C15344 = C15318 + C15319;
    const double C32164 = C32138 + C32139;
    const double C35348 = C35339 + C34820;
    const double C100984 = C100958 + C100959;
    const double C104168 = C104159 + C103640;
    const double C134387 = C134361 + C134362;
    const double C6767 = C6765 + C6755;
    const double C150985 = ae * C150984;
    const double C2608 = (3 * C150927 + C150614 * C150984 +
                          (2 * C150921 + C150614 * C150974) * ae) /
                         C150502;
    const double C9908 = C152418 * C3138;
    const double C16097 = C14682 * C3138;
    const double C18314 = C14681 * C3138;
    const double C35126 = C152482 * C3138;
    const double C44816 = C152553 * C3138;
    const double C103946 = C152482 * C3138;
    const double C127445 = C100336 * C3138;
    const double C135140 = C133725 * C3138;
    const double C137342 = C152620 * C3138;
    const double C9912 = C9907 + C3143;
    const double C16112 = C16095 + C16096;
    const double C18321 = C18313 + C16699;
    const double C35133 = C35125 + C33517;
    const double C44818 = C44815 + C35555;
    const double C103953 = C103945 + C102337;
    const double C127447 = C127444 + C104375;
    const double C135155 = C135138 + C135139;
    const double C8113 = C8108 + C8098;
    const double C66335 = C66329 + C16471;
    const double C43417 = C43415 + C34256;
    const double C110715 = C110707 + C103076;
    const double C143841 = C143835 + C135514;
    const double C10120 = C152418 * C9399;
    const double C42460 = C152482 * C9399;
    const double C66578 = C14681 * C9399;
    const double C66574 = C14682 * C9399;
    const double C95778 = C152553 * C9399;
    const double C110687 = C152482 * C9399;
    const double C112703 = C100336 * C9399;
    const double C144084 = C152620 * C9399;
    const double C144080 = C133725 * C9399;
    const double C10125 = C10119 + C9406;
    const double C66591 = C66577 + C16711;
    const double C66589 = C66573 + C16707;
    const double C42473 = C42459 + C33528;
    const double C95782 = C95777 + C45085;
    const double C110705 = C110686 + C102348;
    const double C112711 = C112702 + C112003;
    const double C144095 = C144079 + C135750;
    const double C151257 = ae * C151256;
    const double C9394 = (3 * C151062 + C150614 * C151256 +
                          (2 * C151056 + C150614 * C151246) * ae) /
                         C150502;
    const double C151444 = C151415 + C151442;
    const double C694 = C686 * C152403;
    const double C6762 = C686 * C6258;
    const double C23774 = C686 * C152552;
    const double C51583 = C686 * C51108;
    const double C73596 = C686 * C152617;
    const double C2843 = C2840 * C152403;
    const double C6753 = C2840 * C6259;
    const double C9706 = C2840 * C6258;
    const double C23773 = C2840 * C152454;
    const double C26569 = C2840 * C152552;
    const double C51582 = C2840 * C152454;
    const double C54377 = C2840 * C51108;
    const double C73589 = C2840 * C152618;
    const double C76379 = C2840 * C152617;
    const double C2993 = C2990 + C2622;
    const double C15348 = C15336 + C15289;
    const double C18540 = C18537 + C18008;
    const double C32174 = C32162 + C32133;
    const double C100994 = C100982 + C100953;
    const double C134391 = C134379 + C134332;
    const double C2615 =
        (3 * (C150628 + C150936 + C150936 + C150614 * C150952) + C150962 +
         C150962 +
         C150614 *
             (2 * C150952 + C150959 + C150959 +
              C150614 * (C150637 + C150955 + C150955 +
                         C150614 * (2 * ae * C150718 + C150614 * C150645)))) /
        C150509;
    const double C2624 = C135 * C2607;
    const double C15302 = C14688 * C2607;
    const double C18012 = C14684 * C2607;
    const double C18010 = C14686 * C2607;
    const double C34825 = C31519 * C2607;
    const double C34823 = C31521 * C2607;
    const double C103645 = C100339 * C2607;
    const double C103643 = C100341 * C2607;
    const double C117586 = C117240 * C2607;
    const double C117580 = C117242 * C2607;
    const double C119319 = C117236 * C2607;
    const double C119317 = C117238 * C2607;
    const double C134345 = C133731 * C2607;
    const double C137043 = C133727 * C2607;
    const double C137041 = C133729 * C2607;
    const double C10128 = C10126 + C3142;
    const double C65966 = C65963 + C16088;
    const double C68566 = C68563 + C18744;
    const double C42476 = C42468 + C33519;
    const double C110711 = C110703 + C102339;
    const double C143472 = C143469 + C135131;
    const double C450 = C442 * C152403;
    const double C6272 = C442 * C6260;
    const double C6966 = C442 * C6259;
    const double C23547 = C442 * C152552;
    const double C23545 = C442 * C152454;
    const double C51356 = C442 * C51108;
    const double C51354 = C442 * C152454;
    const double C73133 = C442 * C73121;
    const double C73792 = C442 * C152618;
    const double C451 = C443 * C152403;
    const double C6274 = C443 * C6259;
    const double C23312 = C443 * C152454;
    const double C23978 = C443 * C152552;
    const double C51121 = C443 * C152454;
    const double C51787 = C443 * C51108;
    const double C73135 = C443 * C152618;
    const double C696 = C688 * C152403;
    const double C24175 = C688 * C152552;
    const double C51984 = C688 * C51108;
    const double C1226 = C1222 * C152403;
    const double C7163 = C1222 * C6259;
    const double C23777 = C1222 * C152454;
    const double C24471 = C1222 * C152552;
    const double C51586 = C1222 * C152454;
    const double C52280 = C1222 * C51108;
    const double C73989 = C1222 * C152618;
    const double C418 = C152418 * C389;
    const double C838 = C152418 * C390;
    const double C980 = C152418 * C635;
    const double C31551 = C152482 * C635;
    const double C100371 = C152482 * C635;
    const double C1210 = C152418 * C1195;
    const double C32393 = C152482 * C1195;
    const double C101213 = C152482 * C1195;
    const double C150801 = C150800 + C150798;
    const double C981 = C135 * C976;
    const double C31556 = C31521 * C976;
    const double C100376 = C100341 * C976;
    const double C1211 = C135 * C1190;
    const double C32397 = C31521 * C1190;
    const double C101217 = C100341 * C1190;
    const double C151038 = ae * C151037;
    const double C2822 =
        (C150806 * C150767 + C150614 * C151037 + C150614 * C151034 * ae) /
        C150502;
    const double C151047 = C150767 + C151045;
    const double C1680 =
        (C150661 + C150676 * C150818 + C150889 + C150889 +
         C150614 *
             (2 * ae * C150884 +
              C150614 * (C150676 +
                         (2 * C150621 * C150672 +
                          C150621 * (C150672 +
                                     (C150666 * C150667 +
                                      C150618 * bs[9] * std::pow(C150616, 9)) *
                                         C150617 * C150633)) *
                             C150818))) /
        C150509;
    const double C1693 = C135 * C1668;
    const double C15033 = C14688 * C1668;
    const double C34048 = C31521 * C1668;
    const double C102868 = C100341 * C1668;
    const double C134076 = C133731 * C1668;
    const double C151028 = ae * C151026;
    const double C151027 = C150614 * C151026;
    const double C151104 = C151103 + C151100;
    const double C9702 =
        (2 * C151079 + C150806 * C151209 + C151341 + C151341 +
         C150614 *
             (2 * ae * C151336 +
              C150614 *
                  (2 * C150806 * C150674 +
                   C150806 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150818)))) /
        C150509;
    const double C9707 = C135 * C9701;
    const double C16918 = C14688 * C9701;
    const double C34260 = C31521 * C9701;
    const double C103080 = C100341 * C9701;
    const double C135961 = C133731 * C9701;
    const double C151352 = ae * C151351;
    const double C9902 =
        (2 * C150879 + C150614 * C151351 + (C150876 + C151333 * C150618) * ae) /
        C150502;
    const double C151570 = C151550 + C151568;
    const double C151603 = C151602 + C151591;
    const double C151206 = ae * C151205;
    const double C8080 = (3 * C150866 + C150806 * C151136 + C150614 * C151205 +
                          C150614 * C151202 * ae) /
                         C150502;
    const double C151373 = C151372 + C151369;
    const double C151324 = C151307 + C151322;
    const double C151539 = ae * C151537;
    const double C151538 = C150614 * C151537;
    const double C151681 = C151680 + C151670;
    const double C151721 = C151719 + C151720;
    const double C60882 = C135 * C60877;
    const double C93607 = C31521 * C60877;
    const double C110447 = C100341 * C60877;
    const double C151755 = C151176 + C151753;
    const double C151743 = ae * C151741;
    const double C151742 = C150614 * C151741;
    const double C151841 = C151840 + C151829;
    const double C151803 = ae * C151801;
    const double C151802 = C150614 * C151801;
    const double C151900 = C151855 + C151897;
    const double C634 = (3 * C150647 + C150621 * C150661 + C150770 + C150770 +
                         C150614 * (2 * ae * C150767 + C150614 * C150678)) /
                        C150509;
    const double C662 = C135 * C622;
    const double C14721 = C14688 * C622;
    const double C15785 = C14686 * C622;
    const double C32155 = C31519 * C622;
    const double C32153 = C31521 * C622;
    const double C100975 = C100339 * C622;
    const double C100973 = C100341 * C622;
    const double C117262 = C117240 * C622;
    const double C133764 = C133731 * C622;
    const double C134828 = C133729 * C622;
    const double C192 = C186 + C178;
    const double C436 = C428 + C417;
    const double C841 = C840 + C419;
    const double C983 = C982 + C664;
    const double C31575 = C31565 + C31550;
    const double C100395 = C100385 + C100370;
    const double C1219 = C1215 + C1209;
    const double C32401 = C32399 + C31851;
    const double C101221 = C101219 + C100671;
    const double C2826 = C152418 * C1669;
    const double C15567 = C14682 * C1669;
    const double C32919 = C152482 * C1669;
    const double C101739 = C152482 * C1669;
    const double C134610 = C133725 * C1669;
    const double C2832 = C2825 + C1682;
    const double C15575 = C15566 + C15028;
    const double C32929 = C32917 + C32918;
    const double C101749 = C101737 + C101738;
    const double C134618 = C134609 + C134071;
    const double C150906 = ae * C150905;
    const double C2603 =
        (2 * C150743 + C150614 * C150905 + (C150738 + C150760 * C150618) * ae) /
        C150502;
    const double C1849 = C1846 * C152403;
    const double C6965 = C1846 * C6260;
    const double C23546 = C1846 * C152454;
    const double C51355 = C1846 * C152454;
    const double C73791 = C1846 * C73121;
    const double C2065 = C2062 * C152403;
    const double C7162 = C2062 * C6260;
    const double C24470 = C2062 * C152454;
    const double C52279 = C2062 * C152454;
    const double C73988 = C2062 * C73121;
    const double C6766 = C6764 + C1692;
    const double C15055 = C15043 + C15020;
    const double C34053 = C34049 + C33521;
    const double C102873 = C102869 + C102341;
    const double C134098 = C134086 + C134063;
    const double C6530 = C6528 * C6260;
    const double C25225 = C6528 * C152454;
    const double C53034 = C6528 * C152454;
    const double C73364 = C6528 * C73121;
    const double C7480 = C7478 * C6260;
    const double C25519 = C7478 * C152454;
    const double C53328 = C7478 * C152454;
    const double C74284 = C7478 * C73121;
    const double C151007 = C151006 + C151000;
    const double C3139 =
        (2 * (2 * ae * C150830 + C150614 * C151079) + C151091 + C151091 +
         C150614 *
             (C151079 + C151088 + C151088 +
              C150614 * (2 * ae * C151080 + C150614 * C150806 * C150674))) /
        C150509;
    const double C3144 = C135 * C3135;
    const double C16099 = C14688 * C3135;
    const double C18318 = C14686 * C3135;
    const double C33515 = C31521 * C3135;
    const double C35557 = C31519 * C3135;
    const double C102335 = C100341 * C3135;
    const double C104377 = C100339 * C3135;
    const double C117426 = C117242 * C3135;
    const double C118076 = C117240 * C3135;
    const double C135142 = C133731 * C3135;
    const double C137346 = C133729 * C3135;
    const double C8096 = C152418 * C8081;
    const double C16911 = C14682 * C8081;
    const double C43139 = C152482 * C8081;
    const double C111226 = C152482 * C8081;
    const double C135954 = C133725 * C8081;
    const double C8107 = C8094 + C8095;
    const double C16919 = C16910 + C16468;
    const double C43143 = C43138 + C34258;
    const double C111231 = C111225 + C103078;
    const double C135962 = C135953 + C135511;
    const double C7850 = C7847 + C7837;
    const double C8620 = C8619 + C8614;
    const double C9398 =
        (2 * (2 * ae * C150866 + C150614 * C151108) + C151223 + C151223 +
         C150614 * (C151108 + C151220 + C151220 +
                    C150614 * (2 * ae * C151132 + C150614 * C151124))) /
        C150509;
    const double C9405 = C135 * C9392;
    const double C16714 = C14686 * C9392;
    const double C16704 = C14688 * C9392;
    const double C33530 = C31521 * C9392;
    const double C45087 = C31519 * C9392;
    const double C102350 = C100341 * C9392;
    const double C112504 = C100339 * C9392;
    const double C117422 = C117242 * C9392;
    const double C118802 = C117240 * C9392;
    const double C135757 = C133729 * C9392;
    const double C135747 = C133731 * C9392;
    const double C151302 = C151301 + C151295;
    const double C151534 = C151517 + C151530;
    const double C151407 = ae * C151405;
    const double C151406 = C150614 * C151405;
    const double C151502 = 4 * C151405;
    const double C8085 =
        (3 * C151111 + C150806 * C151118 + C151181 + C151181 +
         C150614 * (2 * ae * C151176 +
                    C150614 * (3 * C151116 +
                               C150806 * (2 * C150806 * C150657 +
                                          C150806 * (C150657 +
                                                     C150672 * C150818))))) /
        C150509;
    const double C8102 = C135 * C8079;
    const double C16476 = C14688 * C8079;
    const double C43412 = C31521 * C8079;
    const double C67296 = C14686 * C8079;
    const double C93838 = C31519 * C8079;
    const double C110700 = C100339 * C8079;
    const double C110698 = C100341 * C8079;
    const double C118312 = C117240 * C8079;
    const double C135519 = C133731 * C8079;
    const double C144802 = C133729 * C8079;
    const double C60266 = C60265 + C7841;
    const double C60884 = C60883 + C8824;
    const double C93610 = C93608 + C42136;
    const double C110454 = C110450 + C110441;
    const double C151363 = ae * C151362;
    const double C10114 =
        (2 * C151155 + C150614 * C151362 + (C151152 + C151173 * C150618) * ae) /
        C150502;
    const double C151279 = C151278 + C151272;
    const double C151893 = C150614 * C151889;
    const double C151864 = C151848 + C151489;
    const double C151490 = C151453 + C151488;
    const double C151795 = C151778 + C151791;
    const double C151644 = ae * C151642;
    const double C151643 = C150614 * C151642;
    const double C151763 = 4 * C151642;
    const double C117235 =
        ((ae * -2 * C150552) / C150562 -
         (((C150500 * C150563) / C150509 + 2 * C150576) * be) / C150502) /
            C150553 +
        ((C150500 *
              (C150563 / C150562 -
               (((C150500 * C150574) / C150502 + 2 * C150571) * be) / C150502 -
               C150518 / C150513) +
          2 * (C150576 / C150553 -
               ((C150500 * C150571 + C152553) * be) / C150502 + C150572)) *
         ae) /
            C150502 +
        C150574 / C150513 - ((2 * C150572 - C150526 / C150513) * be) / C150502;
    const double C117237 =
        (C150563 / C150562 -
         (((C150500 * C150574) / C150502 + 2 * C150571) * be) / C150502 -
         C150518 / C150513) /
            C150553 +
        ((C150500 * (C150574 / C150513 -
                     ((2 * C150572 - C150526 / C150513) * be) / C150502) +
          2 * (C150571 / C150553 -
               ((C150500 * C150572 + C152482) * be) / C150502)) *
         ae) /
            C150502 +
        (-2 * C150518) / (C150502 * 4 * C150509);
    const double C117239 =
        (C150574 / C150513 -
         ((2 * C150572 - C150526 / C150513) * be) / C150502) /
            C150553 +
        ((2 * (C150572 / C150553 - (0 * be) / C150502) -
          C150526 / (C150502 * 4 * C150509)) *
         ae) /
            C150502;
    const double C133726 =
        C150563 / C150562 -
        (((C150500 * C150574) / C150502 + 2 * C150571) * be) / C150502 -
        C150518 / C150513;
    const double C133728 =
        C150574 / C150513 - ((2 * C150572 - C150526 / C150513) * be) / C150502;
    const double C14754 = C14742 + C14724;
    const double C14751 = C14739 + C14715;
    const double C14748 = C14736 + C14706;
    const double C14745 = C14733 + C14697;
    const double C15056 = C15044 + C15023;
    const double C15053 = C15041 + C15014;
    const double C15050 = C15038 + C15005;
    const double C15047 = C15035 + C14990;
    const double C15355 = C15343 + C15316;
    const double C15352 = C15340 + C15307;
    const double C15349 = C15337 + C15292;
    const double C15579 = C15576 + C15029;
    const double C15791 = C15788 + C15331;
    const double C16120 = C16114 + C16102;
    const double C16117 = C16111 + C16093;
    const double C16923 = C16920 + C16469;
    const double C17231 = C17228 + C16705;
    const double C65053 = C65047 + C14999;
    const double C65050 = C65044 + C14996;
    const double C65967 = C65964 + C16087;
    const double C66337 = C66331 + C16475;
    const double C66334 = C66328 + C16472;
    const double C66597 = C66588 + C16708;
    const double C66594 = C66585 + C16702;
    const double C67302 = C67299 + C17431;
    const double C31576 = C31566 + C31553;
    const double C31573 = C31563 + C31544;
    const double C31572 = C31562 + C31541;
    const double C31569 = C31559 + C31532;
    const double C31567 = C31557 + C31526;
    const double C31878 = C31866 + C31849;
    const double C31875 = C31863 + C31840;
    const double C31873 = C31861 + C31834;
    const double C31871 = C31859 + C31828;
    const double C31870 = C31858 + C31821;
    const double C31868 = C31856 + C31815;
    const double C32180 = C32168 + C32151;
    const double C32177 = C32165 + C32142;
    const double C32175 = C32163 + C32136;
    const double C32173 = C32161 + C32130;
    const double C32172 = C32160 + C32123;
    const double C32170 = C32158 + C32117;
    const double C32402 = C32400 + C31852;
    const double C32610 = C32608 + C32154;
    const double C32936 = C32930 + C32921;
    const double C32933 = C32927 + C32912;
    const double C32931 = C32925 + C32906;
    const double C33744 = C33740 + C33288;
    const double C33742 = C33738 + C33286;
    const double C34056 = C34052 + C33524;
    const double C34054 = C34050 + C33522;
    const double C35138 = C35134 + C33518;
    const double C35136 = C35132 + C33516;
    const double C35354 = C35350 + C34822;
    const double C40460 = C40456 + C31825;
    const double C40457 = C40453 + C31824;
    const double C41668 = C41666 + C32903;
    const double C42150 = C42144 + C33291;
    const double C42148 = C42142 + C33293;
    const double C42145 = C42139 + C33290;
    const double C42482 = C42474 + C33527;
    const double C42480 = C42472 + C33529;
    const double C42477 = C42469 + C33526;
    const double C42475 = C42467 + C33520;
    const double C43146 = C43144 + C34257;
    const double C43418 = C43416 + C34255;
    const double C45092 = C45090 + C35553;
    const double C93611 = C93609 + C42135;
    const double C93843 = C93841 + C42463;
    const double C94534 = C94532 + C43411;
    const double C100396 = C100386 + C100373;
    const double C100393 = C100383 + C100364;
    const double C100392 = C100382 + C100361;
    const double C100389 = C100379 + C100352;
    const double C100387 = C100377 + C100346;
    const double C100698 = C100686 + C100669;
    const double C100695 = C100683 + C100660;
    const double C100693 = C100681 + C100654;
    const double C100691 = C100679 + C100648;
    const double C100690 = C100678 + C100641;
    const double C100688 = C100676 + C100635;
    const double C101000 = C100988 + C100971;
    const double C100997 = C100985 + C100962;
    const double C100995 = C100983 + C100956;
    const double C100993 = C100981 + C100950;
    const double C100992 = C100980 + C100943;
    const double C100990 = C100978 + C100937;
    const double C101222 = C101220 + C100672;
    const double C101430 = C101428 + C100974;
    const double C101756 = C101750 + C101741;
    const double C101753 = C101747 + C101732;
    const double C101751 = C101745 + C101726;
    const double C102564 = C102560 + C102108;
    const double C102562 = C102558 + C102106;
    const double C102876 = C102872 + C102344;
    const double C102874 = C102870 + C102342;
    const double C103958 = C103954 + C102338;
    const double C103956 = C103952 + C102336;
    const double C104174 = C104170 + C103642;
    const double C109171 = C109165 + C102110;
    const double C109168 = C109162 + C100645;
    const double C109166 = C109160 + C100644;
    const double C110090 = C110086 + C101723;
    const double C110088 = C110084 + C102346;
    const double C110455 = C110451 + C110444;
    const double C110452 = C110448 + C102111;
    const double C110717 = C110709 + C110696;
    const double C110714 = C110706 + C103075;
    const double C110712 = C110704 + C102347;
    const double C110710 = C110702 + C102340;
    const double C110931 = C110929 + C102113;
    const double C111234 = C111232 + C103077;
    const double C111441 = C111439 + C110699;
    const double C112307 = C112305 + C102349;
    const double C112717 = C112713 + C104373;
    const double C14767 = C14755 + C14728;
    const double C14762 = C14750 + C14713;
    const double C14761 = C14749 + C14710;
    const double C14756 = C14744 + C14695;
    const double C15069 = C15057 + C15027;
    const double C15064 = C15052 + C15012;
    const double C15061 = C15049 + C15003;
    const double C15060 = C15048 + C14994;
    const double C15371 = C15359 + C15329;
    const double C15366 = C15354 + C15314;
    const double C15363 = C15351 + C15305;
    const double C15362 = C15350 + C15296;
    const double C15583 = C15580 + C15571;
    const double C15795 = C15792 + C15783;
    const double C16127 = C16121 + C16106;
    const double C16122 = C16116 + C16091;
    const double C16927 = C16924 + C16915;
    const double C17235 = C17232 + C17223;
    const double C18328 = C18325 + C18316;
    const double C65060 = C65054 + C65042;
    const double C65055 = C65049 + C65032;
    const double C65971 = C65968 + C65962;
    const double C66344 = C66338 + C66323;
    const double C66339 = C66333 + C66313;
    const double C66610 = C66601 + C66580;
    const double C66605 = C66596 + C66570;
    const double C66602 = C66593 + C66564;
    const double C67306 = C67303 + C67294;
    const double C14759 = C14747 + C14704;
    const double C14758 = C14746 + C14701;
    const double C15066 = C15054 + C15018;
    const double C15063 = C15051 + C15009;
    const double C15058 = C15046 + C14988;
    const double C65058 = C65052 + C65038;
    const double C65057 = C65051 + C65036;
    const double C31584 = C31574 + C31548;
    const double C31581 = C31571 + C31539;
    const double C31580 = C31570 + C31536;
    const double C31578 = C31568 + C31530;
    const double C31889 = C31877 + C31847;
    const double C31888 = C31876 + C31844;
    const double C31886 = C31874 + C31838;
    const double C31884 = C31872 + C31832;
    const double C31881 = C31869 + C31819;
    const double C31879 = C31867 + C31813;
    const double C32183 = C32171 + C32121;
    const double C32181 = C32169 + C32115;
    const double C32940 = C32934 + C32916;
    const double C32938 = C32932 + C32910;
    const double C33747 = C33743 + C33732;
    const double C33745 = C33741 + C33728;
    const double C34059 = C34055 + C34044;
    const double C40463 = C40459 + C40447;
    const double C40462 = C40458 + C40442;
    const double C41669 = C41667 + C41660;
    const double C42155 = C42149 + C42132;
    const double C42153 = C42147 + C42128;
    const double C42152 = C42146 + C42126;
    const double C42486 = C42478 + C42454;
    const double C100404 = C100394 + C100368;
    const double C100401 = C100391 + C100359;
    const double C100400 = C100390 + C100356;
    const double C100398 = C100388 + C100350;
    const double C100709 = C100697 + C100667;
    const double C100708 = C100696 + C100664;
    const double C100706 = C100694 + C100658;
    const double C100704 = C100692 + C100652;
    const double C100701 = C100689 + C100639;
    const double C100699 = C100687 + C100633;
    const double C101003 = C100991 + C100941;
    const double C101001 = C100989 + C100935;
    const double C101760 = C101754 + C101736;
    const double C101758 = C101752 + C101730;
    const double C102567 = C102563 + C102552;
    const double C102565 = C102561 + C102548;
    const double C102879 = C102875 + C102864;
    const double C109176 = C109170 + C109156;
    const double C109175 = C109169 + C109154;
    const double C109173 = C109167 + C109150;
    const double C110093 = C110089 + C110080;
    const double C110091 = C110087 + C110076;
    const double C110457 = C110453 + C110439;
    const double C110932 = C110930 + C110923;
    const double C133802 = C133790 + C133747;
    const double C133801 = C133789 + C133744;
    const double C134109 = C134097 + C134061;
    const double C134106 = C134094 + C134052;
    const double C134101 = C134089 + C134031;
    const double C142564 = C142558 + C142544;
    const double C142563 = C142557 + C142542;
    const double C687 = C679 + C657;
    const double C14764 = C14752 + C14719;
    const double C32190 = C32178 + C32146;
    const double C101010 = C100998 + C100966;
    const double C133807 = C133795 + C133762;
    const double C2842 = C2839 * C152403;
    const double C6761 = C2839 * C6259;
    const double C23775 = C2839 * C152454;
    const double C26567 = C2839 * C152552;
    const double C51584 = C2839 * C152454;
    const double C54375 = C2839 * C51108;
    const double C73595 = C2839 * C152618;
    const double C2992 = C2989 + C2621;
    const double C15358 = C15346 + C15325;
    const double C15356 = C15344 + C15319;
    const double C32176 = C32164 + C32139;
    const double C35352 = C35348 + C34820;
    const double C100996 = C100984 + C100959;
    const double C104172 = C104168 + C103640;
    const double C134399 = C134387 + C134362;
    const double C6769 = C6767 * C6260;
    const double C9705 = C6767 * C6259;
    const double C26568 = C6767 * C152454;
    const double C54376 = C6767 * C152454;
    const double C73590 = C6767 * C73121;
    const double C76378 = C6767 * C152618;
    const double C2616 =
        (3 * (C150815 + C150925 + C150925 + C150614 * C150975) + C150985 +
         C150985 +
         C150614 *
             (2 * C150975 + C150982 + C150982 +
              C150614 * (C150649 + C150978 + C150978 +
                         C150614 * (2 * ae * C150748 + C150614 * C150664)))) /
        C150509;
    const double C2625 = C135 * C2608;
    const double C15310 = C14688 * C2608;
    const double C18015 = C14684 * C2608;
    const double C18007 = C14686 * C2608;
    const double C34827 = C31519 * C2608;
    const double C34821 = C31521 * C2608;
    const double C103647 = C100339 * C2608;
    const double C103641 = C100341 * C2608;
    const double C117593 = C117240 * C2608;
    const double C117591 = C117242 * C2608;
    const double C119652 = C117238 * C2608;
    const double C134353 = C133731 * C2608;
    const double C137046 = C133727 * C2608;
    const double C137038 = C133729 * C2608;
    const double C9914 = C9912 + C3143;
    const double C16118 = C16112 + C16096;
    const double C18324 = C18321 + C16699;
    const double C35137 = C35133 + C33517;
    const double C44820 = C44818 + C35555;
    const double C103957 = C103953 + C102337;
    const double C127449 = C127447 + C104375;
    const double C135161 = C135155 + C135139;
    const double C8118 = C8113 + C8099;
    const double C66341 = C66335 + C66317;
    const double C43419 = C43417 + C43408;
    const double C110723 = C110715 + C110691;
    const double C143847 = C143841 + C143823;
    const double C10127 = C10125 + C9406;
    const double C66600 = C66591 + C16711;
    const double C66598 = C66589 + C16707;
    const double C42481 = C42473 + C33528;
    const double C95784 = C95782 + C45085;
    const double C110713 = C110705 + C102348;
    const double C112715 = C112711 + C112003;
    const double C144104 = C144095 + C135750;
    const double C9400 =
        (3 * (C151051 + C151060 + C151060 + C150614 * C151247) + C151257 +
         C151257 +
         C150614 * (2 * C151247 + C151254 + C151254 +
                    C150614 * (C151113 + C151250 + C151250 +
                               C150614 * (2 * ae * C151161 +
                                          C150614 * C150806 * C150657)))) /
        C150509;
    const double C9407 = C135 * C9394;
    const double C16701 = C14688 * C9394;
    const double C18745 = C14686 * C9394;
    const double C35554 = C31521 * C9394;
    const double C44163 = C31519 * C9394;
    const double C67868 = C14684 * C9394;
    const double C104374 = C100341 * C9394;
    const double C112004 = C100339 * C9394;
    const double C118069 = C117242 * C9394;
    const double C118461 = C117240 * C9394;
    const double C119786 = C117238 * C9394;
    const double C135744 = C133731 * C9394;
    const double C137764 = C133729 * C9394;
    const double C145371 = C133727 * C9394;
    const double C151445 = C151444 + C151437;
    const double C2996 = C2993 + C2986;
    const double C15360 = C15348 + C15290;
    const double C18543 = C18540 + C18531;
    const double C32186 = C32174 + C32134;
    const double C101006 = C100994 + C100954;
    const double C134403 = C134391 + C134333;
    const double C10130 = C10128 + C10122;
    const double C65969 = C65966 + C65958;
    const double C68569 = C68566 + C68557;
    const double C42484 = C42476 + C42450;
    const double C110719 = C110711 + C110683;
    const double C143475 = C143472 + C143464;
    const double C23976 = C23544 + C23545;
    const double C51785 = C51353 + C51354;
    const double C23317 = C23311 + C23312;
    const double C51126 = C51120 + C51121;
    const double C24173 = C23776 + C23777;
    const double C51982 = C51585 + C51586;
    const double C150802 = ae * C150801;
    const double C624 = (4 * C150741 + C150621 * C150767 + C150614 * C150801 +
                         C150614 * C150796 * ae) /
                        C150502;
    const double C2823 =
        (C150806 * C150678 + C151038 + C151038 +
         C150614 *
             (2 * ae * C151033 +
              C150614 * C150806 *
                  (3 * C150674 +
                   C150621 * (2 * C150621 * C150672 +
                              C150621 * (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C2831 = C135 * C2822;
    const double C15574 = C14688 * C2822;
    const double C32924 = C31521 * C2822;
    const double C101744 = C100341 * C2822;
    const double C134617 = C133731 * C2822;
    const double C151048 = C151047 + C151044;
    const double C151029 = C151012 + C151027;
    const double C151105 = ae * C151104;
    const double C3136 =
        (2 * C150827 + C150614 * C151104 + (C150824 + C151095 * C150618) * ae) /
        C150502;
    const double C9903 =
        (2 * (2 * ae * C150875 + C150614 * C151209) + C151352 + C151352 +
         C150614 *
             (C151209 + C151349 + C151349 +
              C150614 *
                  (2 * ae * C151332 +
                   C150614 * (C150674 + (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633) *
                                            C150818)))) /
        C150509;
    const double C9910 = C135 * C9902;
    const double C17226 = C14688 * C9902;
    const double C33532 = C31521 * C9902;
    const double C102352 = C100341 * C9902;
    const double C117433 = C117242 * C9902;
    const double C136269 = C133731 * C9902;
    const double C151571 = C151570 + C151564;
    const double C151605 = ae * C151603;
    const double C151604 = C150614 * C151603;
    const double C8086 =
        (3 * C151108 + C150806 * C151126 + C151206 + C151206 +
         C150614 *
             (2 * ae * C151201 +
              C150614 * (3 * C151124 +
                         C150806 * (2 * C150806 * C151121 +
                                    C150806 * (C151121 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150818))))) /
        C150509;
    const double C8103 = C135 * C8080;
    const double C16479 = C14688 * C8080;
    const double C43414 = C31521 * C8080;
    const double C111230 = C100341 * C8080;
    const double C135522 = C133731 * C8080;
    const double C151374 = ae * C151373;
    const double C10115 =
        (2 * C151140 + C150614 * C151373 + (C151137 + C151198 * C150618) * ae) /
        C150502;
    const double C151325 = C151324 + C151318;
    const double C151540 = C151503 + C151538;
    const double C151683 = ae * C151681;
    const double C151682 = C150614 * C151681;
    const double C151722 = ae * C151721;
    const double C60414 = (4 * C151151 + C150806 * C151176 + C150614 * C151721 +
                           C150614 * C151718 * ae) /
                          C150502;
    const double C151756 = C151755 + C151752;
    const double C151744 = C151727 + C151742;
    const double C151843 = ae * C151841;
    const double C151842 = C150614 * C151841;
    const double C151804 = C151764 + C151802;
    const double C151901 = C151900 + C151883;
    const double C663 = C152418 * C634;
    const double C14722 = C14682 * C634;
    const double C32601 = C152482 * C634;
    const double C101421 = C152482 * C634;
    const double C133765 = C133725 * C634;
    const double C673 = C661 + C662;
    const double C14741 = C14720 + C14721;
    const double C32607 = C32600 + C32153;
    const double C101427 = C101420 + C100973;
    const double C133784 = C133763 + C133764;
    const double C198 = C192 + C179;
    const double C444 = C436 + C418;
    const double C842 = C841 + C838;
    const double C984 = C983 + C980;
    const double C31585 = C31575 + C31551;
    const double C100405 = C100395 + C100371;
    const double C1223 = C1219 + C1210;
    const double C32403 = C32401 + C32393;
    const double C101223 = C101221 + C101213;
    const double C2835 = C2832 + C1682;
    const double C15578 = C15575 + C15028;
    const double C32935 = C32929 + C32918;
    const double C101755 = C101749 + C101738;
    const double C134621 = C134618 + C134071;
    const double C2611 =
        (2 * (2 * ae * C150741 + C150614 * C150661) + C150906 + C150906 +
         C150614 * (C150661 + C150903 + C150903 +
                    C150614 * (2 * ae * C150763 + C150614 * C150676))) /
        C150509;
    const double C2620 = C135 * C2603;
    const double C15334 = C14686 * C2603;
    const double C15330 = C14688 * C2603;
    const double C32148 = C31521 * C2603;
    const double C35345 = C31519 * C2603;
    const double C100968 = C100341 * C2603;
    const double C104165 = C100339 * C2603;
    const double C117256 = C117242 * C2603;
    const double C117870 = C117240 * C2603;
    const double C134377 = C133729 * C2603;
    const double C134373 = C133731 * C2603;
    const double C6768 = C6766 + C6760;
    const double C15067 = C15055 + C15021;
    const double C34057 = C34053 + C34040;
    const double C102877 = C102873 + C102860;
    const double C134110 = C134098 + C134064;
    const double C151008 = ae * C151007;
    const double C2609 = (3 * C150916 + C150614 * C151007 +
                          (2 * C150910 + C150614 * C150997) * ae) /
                         C150502;
    const double C16100 = C14682 * C3139;
    const double C26765 = C152418 * C3139;
    const double C35122 = C152482 * C3139;
    const double C103942 = C152482 * C3139;
    const double C135143 = C133725 * C3139;
    const double C26769 = C26764 + C3144;
    const double C16113 = C16098 + C16099;
    const double C35131 = C35121 + C33515;
    const double C103951 = C103941 + C102335;
    const double C135156 = C135141 + C135142;
    const double C8112 = C8107 + C8095;
    const double C16922 = C16919 + C16468;
    const double C43145 = C43143 + C34258;
    const double C111233 = C111231 + C103078;
    const double C135965 = C135962 + C135511;
    const double C8316 = C7850 * C6260;
    const double C75039 = C7850 * C73121;
    const double C8621 = C8620 * C6260;
    const double C75332 = C8620 * C73121;
    const double C9906 = C152418 * C9398;
    const double C17219 = C14682 * C9398;
    const double C42456 = C152482 * C9398;
    const double C112299 = C152482 * C9398;
    const double C136262 = C133725 * C9398;
    const double C9911 = C9905 + C9405;
    const double C17227 = C17218 + C16704;
    const double C42471 = C42455 + C33530;
    const double C112304 = C112298 + C102350;
    const double C136270 = C136261 + C135747;
    const double C151303 = ae * C151302;
    const double C9396 = (3 * C151076 + C150614 * C151302 +
                          (2 * C151070 + C150614 * C151292) * ae) /
                         C150502;
    const double C151408 = C151379 + C151406;
    const double C60418 = C152418 * C8085;
    const double C66319 = C14682 * C8085;
    const double C94526 = C152482 * C8085;
    const double C111433 = C152482 * C8085;
    const double C143825 = C133725 * C8085;
    const double C60420 = C60417 + C8102;
    const double C66330 = C66318 + C16476;
    const double C94531 = C94525 + C43412;
    const double C111438 = C111432 + C110698;
    const double C143836 = C143824 + C135519;
    const double C60267 = C60266 + C60263;
    const double C60885 = C60884 + C60881;
    const double C93612 = C93610 + C93603;
    const double C110458 = C110454 + C110442;
    const double C10116 =
        (2 * (2 * ae * C151151 + C150614 * C151118) + C151363 + C151363 +
         C150614 * (C151118 + C151360 + C151360 +
                    C150614 * (2 * ae * C151172 +
                               C150614 * (2 * C150806 * C150657 +
                                          C150806 * (C150657 +
                                                     C150672 * C150818))))) /
        C150509;
    const double C10123 = C135 * C10114;
    const double C17432 = C14688 * C10114;
    const double C42464 = C31521 * C10114;
    const double C66582 = C14686 * C10114;
    const double C95779 = C31519 * C10114;
    const double C110693 = C100341 * C10114;
    const double C112708 = C100339 * C10114;
    const double C118306 = C117242 * C10114;
    const double C118936 = C117240 * C10114;
    const double C136475 = C133731 * C10114;
    const double C144088 = C133729 * C10114;
    const double C151280 = ae * C151279;
    const double C9395 = (3 * C151233 + C150614 * C151279 +
                          (2 * C151227 + C150614 * C151269) * ae) /
                         C150502;
    const double C151871 = C151864 + C151489;
    const double C151491 = C151490 + C151478;
    const double C151645 = C151613 + C151643;
    const double C133769 = C133726 * C140;
    const double C133754 = C133726 * C139;
    const double C133751 = C133726 * C138;
    const double C133736 = C133726 * C137;
    const double C134068 = C133726 * C362;
    const double C134053 = C133726 * C357;
    const double C134044 = C133726 * C361;
    const double C134035 = C133726 * C358;
    const double C134370 = C133726 * C607;
    const double C134355 = C133726 * C602;
    const double C134346 = C133726 * C606;
    const double C134337 = C133726 * C603;
    const double C134613 = C133726 * C356;
    const double C134825 = C133726 * C601;
    const double C135147 = C133726 * C1181;
    const double C135132 = C133726 * C1180;
    const double C135957 = C133726 * C1469;
    const double C136265 = C133726 * C1651;
    const double C137343 = C133726 * C1647;
    const double C137555 = C133726 * C2597;
    const double C142547 = C133726 * C360;
    const double C142537 = C133726 * C359;
    const double C143467 = C133726 * C1179;
    const double C143828 = C133726 * C1471;
    const double C143818 = C133726 * C1470;
    const double C144085 = C133726 * C1653;
    const double C144075 = C133726 * C1652;
    const double C144069 = C133726 * C1648;
    const double C144799 = C133726 * C2197;
    const double C146056 = C133726 * C3129;
    const double C133766 = C133728 * C609;
    const double C133757 = C133728 * C601;
    const double C133748 = C133728 * C602;
    const double C133739 = C133728 * C603;
    const double C134065 = C133728 * C1650;
    const double C134056 = C133728 * C1181;
    const double C134047 = C133728 * C1651;
    const double C134032 = C133728 * C1180;
    const double C134367 = C133728 * C2596;
    const double C134358 = C133728 * C607;
    const double C134349 = C133728 * C2597;
    const double C134334 = C133728 * C606;
    const double C134611 = C133728 * C1182;
    const double C134823 = C133728 * C608;
    const double C135144 = C133728 * C1646;
    const double C135135 = C133728 * C1647;
    const double C135955 = C133728 * C2198;
    const double C136263 = C133728 * C1654;
    const double C137341 = C133728 * C3130;
    const double C137553 = C133728 * C2600;
    const double C142545 = C133728 * C1652;
    const double C142539 = C133728 * C1179;
    const double C143465 = C133728 * C1648;
    const double C143826 = C133728 * C8072;
    const double C143820 = C133728 * C2197;
    const double C144083 = C133728 * C9387;
    const double C144077 = C133728 * C1653;
    const double C144071 = C133728 * C3129;
    const double C144797 = C133728 * C8070;
    const double C146054 = C133728 * C9388;
    const double C14766 = C14754 + C14725;
    const double C14763 = C14751 + C14716;
    const double C14760 = C14748 + C14707;
    const double C14757 = C14745 + C14698;
    const double C15068 = C15056 + C15024;
    const double C15065 = C15053 + C15015;
    const double C15062 = C15050 + C15006;
    const double C15059 = C15047 + C14991;
    const double C15367 = C15355 + C15317;
    const double C15364 = C15352 + C15308;
    const double C15361 = C15349 + C15293;
    const double C15582 = C15579 + C15569;
    const double C15794 = C15791 + C15781;
    const double C16126 = C16120 + C16103;
    const double C16123 = C16117 + C16094;
    const double C16926 = C16923 + C16913;
    const double C17234 = C17231 + C17221;
    const double C65059 = C65053 + C65040;
    const double C65056 = C65050 + C65034;
    const double C65970 = C65967 + C65960;
    const double C66343 = C66337 + C66321;
    const double C66340 = C66334 + C66315;
    const double C66606 = C66597 + C66572;
    const double C66603 = C66594 + C66566;
    const double C67305 = C67302 + C67292;
    const double C31586 = C31576 + C31554;
    const double C31583 = C31573 + C31545;
    const double C31582 = C31572 + C31542;
    const double C31579 = C31569 + C31533;
    const double C31577 = C31567 + C31527;
    const double C31890 = C31878 + C31850;
    const double C31887 = C31875 + C31841;
    const double C31885 = C31873 + C31835;
    const double C31883 = C31871 + C31829;
    const double C31882 = C31870 + C31822;
    const double C31880 = C31868 + C31816;
    const double C32192 = C32180 + C32152;
    const double C32189 = C32177 + C32143;
    const double C32187 = C32175 + C32137;
    const double C32185 = C32173 + C32131;
    const double C32184 = C32172 + C32124;
    const double C32182 = C32170 + C32118;
    const double C32404 = C32402 + C32395;
    const double C32612 = C32610 + C32603;
    const double C32942 = C32936 + C32922;
    const double C32939 = C32933 + C32913;
    const double C32937 = C32931 + C32907;
    const double C33748 = C33744 + C33734;
    const double C33746 = C33742 + C33730;
    const double C34060 = C34056 + C34046;
    const double C34058 = C34054 + C34042;
    const double C35142 = C35138 + C35128;
    const double C35140 = C35136 + C35124;
    const double C35358 = C35354 + C35344;
    const double C40464 = C40460 + C40449;
    const double C40461 = C40457 + C40440;
    const double C41670 = C41668 + C41662;
    const double C42156 = C42150 + C42134;
    const double C42154 = C42148 + C42130;
    const double C42151 = C42145 + C42124;
    const double C42490 = C42482 + C42462;
    const double C42488 = C42480 + C42458;
    const double C42485 = C42477 + C42452;
    const double C42483 = C42475 + C42448;
    const double C43148 = C43146 + C43141;
    const double C43420 = C43418 + C43410;
    const double C45094 = C45092 + C45084;
    const double C93613 = C93611 + C93605;
    const double C93845 = C93843 + C93837;
    const double C94536 = C94534 + C94528;
    const double C100406 = C100396 + C100374;
    const double C100403 = C100393 + C100365;
    const double C100402 = C100392 + C100362;
    const double C100399 = C100389 + C100353;
    const double C100397 = C100387 + C100347;
    const double C100710 = C100698 + C100670;
    const double C100707 = C100695 + C100661;
    const double C100705 = C100693 + C100655;
    const double C100703 = C100691 + C100649;
    const double C100702 = C100690 + C100642;
    const double C100700 = C100688 + C100636;
    const double C101012 = C101000 + C100972;
    const double C101009 = C100997 + C100963;
    const double C101007 = C100995 + C100957;
    const double C101005 = C100993 + C100951;
    const double C101004 = C100992 + C100944;
    const double C101002 = C100990 + C100938;
    const double C101224 = C101222 + C101215;
    const double C101432 = C101430 + C101423;
    const double C101762 = C101756 + C101742;
    const double C101759 = C101753 + C101733;
    const double C101757 = C101751 + C101727;
    const double C102568 = C102564 + C102554;
    const double C102566 = C102562 + C102550;
    const double C102880 = C102876 + C102866;
    const double C102878 = C102874 + C102862;
    const double C103962 = C103958 + C103948;
    const double C103960 = C103956 + C103944;
    const double C104178 = C104174 + C104164;
    const double C109177 = C109171 + C109158;
    const double C109174 = C109168 + C109152;
    const double C109172 = C109166 + C109148;
    const double C110094 = C110090 + C110082;
    const double C110092 = C110088 + C110078;
    const double C110459 = C110455 + C110445;
    const double C110456 = C110452 + C110437;
    const double C110725 = C110717 + C110697;
    const double C110722 = C110714 + C110689;
    const double C110720 = C110712 + C110685;
    const double C110718 = C110710 + C110681;
    const double C110933 = C110931 + C110925;
    const double C111236 = C111234 + C111228;
    const double C111443 = C111441 + C111435;
    const double C112309 = C112307 + C112301;
    const double C112721 = C112717 + C112707;
    const double C695 = C687 * C152403;
    const double C23779 = C687 * C152552;
    const double C51588 = C687 * C51108;
    const double C23781 = C23774 + C23775;
    const double C51590 = C51583 + C51584;
    const double C2995 = C2992 + C2984;
    const double C15370 = C15358 + C15326;
    const double C15368 = C15356 + C15320;
    const double C32188 = C32176 + C32140;
    const double C35356 = C35352 + C35340;
    const double C101008 = C100996 + C100960;
    const double C104176 = C104172 + C104160;
    const double C134411 = C134399 + C134363;
    const double C15311 = C14682 * C2616;
    const double C18529 = C14681 * C2616;
    const double C35342 = C152482 * C2616;
    const double C104162 = C152482 * C2616;
    const double C134354 = C133725 * C2616;
    const double C137554 = C152620 * C2616;
    const double C15341 = C15309 + C15310;
    const double C18536 = C18528 + C18007;
    const double C35349 = C35341 + C34821;
    const double C104169 = C104161 + C103641;
    const double C134384 = C134352 + C134353;
    const double C9916 = C9914 + C9908;
    const double C16124 = C16118 + C16097;
    const double C18327 = C18324 + C18314;
    const double C35141 = C35137 + C35126;
    const double C44822 = C44820 + C44816;
    const double C103961 = C103957 + C103946;
    const double C127451 = C127449 + C127445;
    const double C135167 = C135161 + C135140;
    const double C10129 = C10127 + C10120;
    const double C66609 = C66600 + C66578;
    const double C66607 = C66598 + C66574;
    const double C42489 = C42481 + C42460;
    const double C95786 = C95784 + C95778;
    const double C110721 = C110713 + C110687;
    const double C112719 = C112715 + C112703;
    const double C144113 = C144104 + C144080;
    const double C45082 = C152482 * C9400;
    const double C66568 = C14682 * C9400;
    const double C68555 = C14681 * C9400;
    const double C112705 = C152482 * C9400;
    const double C144074 = C133725 * C9400;
    const double C146055 = C152620 * C9400;
    const double C66586 = C66567 + C16701;
    const double C68562 = C68554 + C18745;
    const double C45089 = C45081 + C35554;
    const double C112712 = C112704 + C104374;
    const double C144092 = C144073 + C135744;
    const double C151446 = ae * C151445;
    const double C17998 = (4 * C150961 + C150614 * C151445 +
                           (3 * C150951 + C150614 * C151434) * ae) /
                          C150502;
    const double C2999 = C2996 * C152403;
    const double C9909 = C2996 * C6258;
    const double C26768 = C2996 * C152552;
    const double C54575 = C2996 * C51108;
    const double C76576 = C2996 * C152617;
    const double C636 =
        (4 * C150661 + C150621 * C150678 + C150802 + C150802 +
         C150614 *
             (2 * ae * C150799 +
              C150614 *
                  (4 * C150676 +
                   C150621 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C665 = C135 * C624;
    const double C14731 = C14688 * C624;
    const double C32605 = C31521 * C624;
    const double C101425 = C100341 * C624;
    const double C133774 = C133731 * C624;
    const double C151049 = ae * C151048;
    const double C2978 =
        (2 * C150769 + C150614 * C151048 + (C150764 + C150792 * C150618) * ae) /
        C150502;
    const double C151030 = C151029 + C151023;
    const double C3140 =
        (2 * (2 * ae * C150823 + C150614 * C151093) + C151105 + C151105 +
         C150614 *
             (C151093 + C151102 + C151102 +
              C150614 * (2 * ae * C151094 +
                         C150614 * C150806 *
                             (2 * C150621 * C150672 +
                              C150621 * (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C3145 = C135 * C3136;
    const double C16109 = C14688 * C3136;
    const double C35130 = C31521 * C3136;
    const double C103950 = C100341 * C3136;
    const double C117737 = C117242 * C3136;
    const double C135152 = C133731 * C3136;
    const double C151572 = ae * C151571;
    const double C18308 = (3 * C151090 + C150614 * C151571 +
                           (2 * C151084 + C150614 * C151562) * ae) /
                          C150502;
    const double C151606 = C151577 + C151604;
    const double C10117 =
        (2 * (2 * ae * C151136 + C150614 * C151126) + C151374 + C151374 +
         C150614 *
             (C151126 + C151371 + C151371 +
              C150614 * (2 * ae * C151197 +
                         C150614 * (2 * C150806 * C151121 +
                                    C150806 * (C151121 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150818))))) /
        C150509;
    const double C10124 = C135 * C10115;
    const double C17435 = C14688 * C10115;
    const double C42466 = C31521 * C10115;
    const double C112303 = C100341 * C10115;
    const double C118605 = C117242 * C10115;
    const double C136478 = C133731 * C10115;
    const double C151326 = ae * C151325;
    const double C9397 = (3 * C151222 + C150614 * C151325 +
                          (2 * C151216 + C150614 * C151315) * ae) /
                         C150502;
    const double C151541 = C151540 + C151528;
    const double C151684 = C151652 + C151682;
    const double C60415 =
        (4 * C151118 + C150806 * C151695 + C151722 + C151722 +
         C150614 *
             (2 * ae * C151717 +
              C150614 *
                  (4 * C151693 +
                   C150806 *
                       (3 * C151691 +
                        C150806 *
                            (2 * C150806 * C150672 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150818)))))) /
        C150509;
    const double C60419 = C135 * C60414;
    const double C66326 = C14688 * C60414;
    const double C94530 = C31521 * C60414;
    const double C111437 = C100341 * C60414;
    const double C143832 = C133731 * C60414;
    const double C151757 = ae * C151756;
    const double C61718 =
        (2 * C151180 + C150614 * C151756 + (C151177 + C151714 * C150618) * ae) /
        C150502;
    const double C151745 = C151744 + C151738;
    const double C151844 = C151815 + C151842;
    const double C151805 = C151804 + C151793;
    const double C151903 = ae * C151901;
    const double C151902 = C150614 * C151901;
    const double C681 = C673 + C662;
    const double C14753 = C14741 + C14721;
    const double C32609 = C32607 + C32153;
    const double C101429 = C101427 + C100973;
    const double C133796 = C133784 + C133764;
    const double C204 = C198 * C152403;
    const double C452 = C444 * C152403;
    const double C6273 = C444 * C6260;
    const double C23977 = C444 * C152454;
    const double C51786 = C444 * C152454;
    const double C73134 = C444 * C73121;
    const double C843 = C842 * C152403;
    const double C23313 = C842 * C152454;
    const double C51122 = C842 * C152454;
    const double C985 = C984 * C152403;
    const double C1227 = C1223 * C152403;
    const double C24174 = C1223 * C152454;
    const double C51983 = C1223 * C152454;
    const double C2838 = C2835 + C2826;
    const double C15581 = C15578 + C15567;
    const double C32941 = C32935 + C32919;
    const double C101761 = C101755 + C101739;
    const double C134624 = C134621 + C134610;
    const double C2982 = C152418 * C2611;
    const double C15779 = C14682 * C2611;
    const double C32149 = C152482 * C2611;
    const double C100969 = C152482 * C2611;
    const double C134822 = C133725 * C2611;
    const double C2988 = C2981 + C2620;
    const double C15787 = C15778 + C15330;
    const double C32167 = C32147 + C32148;
    const double C100987 = C100967 + C100968;
    const double C134830 = C134821 + C134373;
    const double C6770 = C6768 * C6260;
    const double C26566 = C6768 * C152454;
    const double C54374 = C6768 * C152454;
    const double C73594 = C6768 * C73121;
    const double C2617 =
        (3 * (C150647 + C150914 + C150914 + C150614 * C150998) + C151008 +
         C151008 +
         C150614 *
             (2 * C150998 + C151005 + C151005 +
              C150614 * (C150659 + C151001 + C151001 +
                         C150614 * (2 * ae * C150759 + C150614 * C150674)))) /
        C150509;
    const double C2626 = C135 * C2609;
    const double C15322 = C14688 * C2609;
    const double C18533 = C14686 * C2609;
    const double C34829 = C31519 * C2609;
    const double C34819 = C31521 * C2609;
    const double C103649 = C100339 * C2609;
    const double C103639 = C100341 * C2609;
    const double C117602 = C117240 * C2609;
    const double C117596 = C117242 * C2609;
    const double C134365 = C133731 * C2609;
    const double C137558 = C133729 * C2609;
    const double C26770 = C26769 + C3144;
    const double C16119 = C16113 + C16099;
    const double C35135 = C35131 + C33515;
    const double C103955 = C103951 + C102335;
    const double C135162 = C135156 + C135142;
    const double C8117 = C8112 + C8096;
    const double C16925 = C16922 + C16911;
    const double C43147 = C43145 + C43139;
    const double C111235 = C111233 + C111226;
    const double C135968 = C135965 + C135954;
    const double C9913 = C9911 + C9405;
    const double C17230 = C17227 + C16704;
    const double C42479 = C42471 + C33530;
    const double C112306 = C112304 + C102350;
    const double C136273 = C136270 + C135747;
    const double C9402 =
        (3 * (C151065 + C151074 + C151074 + C150614 * C151293) + C151303 +
         C151303 +
         C150614 * (2 * C151293 + C151300 + C151300 +
                    C150614 * (C151120 + C151296 + C151296 +
                               C150614 * (2 * ae * C151184 +
                                          C150614 * C150806 * C151121)))) /
        C150509;
    const double C9409 = C135 * C9396;
    const double C16698 = C14688 * C9396;
    const double C18748 = C14686 * C9396;
    const double C35556 = C31521 * C9396;
    const double C44165 = C31519 * C9396;
    const double C104376 = C100341 * C9396;
    const double C118070 = C117242 * C9396;
    const double C119519 = C117240 * C9396;
    const double C126794 = C100339 * C9396;
    const double C135741 = C133731 * C9396;
    const double C137767 = C133729 * C9396;
    const double C151409 = C151408 + C151401;
    const double C60421 = C60420 + C8102;
    const double C66336 = C66330 + C16476;
    const double C94533 = C94531 + C43412;
    const double C111440 = C111438 + C110698;
    const double C143842 = C143836 + C135519;
    const double C61722 = C152418 * C10116;
    const double C67290 = C14682 * C10116;
    const double C93835 = C152482 * C10116;
    const double C110694 = C152482 * C10116;
    const double C144796 = C133725 * C10116;
    const double C61724 = C61721 + C10123;
    const double C67298 = C67289 + C17432;
    const double C93840 = C93834 + C42464;
    const double C110708 = C110692 + C110693;
    const double C144804 = C144795 + C136475;
    const double C9401 =
        (3 * (C151111 + C151231 + C151231 + C150614 * C151270) + C151280 +
         C151280 +
         C150614 * (2 * C151270 + C151277 + C151277 +
                    C150614 * (C151116 + C151273 + C151273 +
                               C150614 * (2 * ae * C151167 +
                                          C150614 * (C150657 +
                                                     C150672 * C150818))))) /
        C150509;
    const double C9408 = C135 * C9395;
    const double C16712 = C14688 * C9395;
    const double C45086 = C31521 * C9395;
    const double C68559 = C14686 * C9395;
    const double C95095 = C31519 * C9395;
    const double C112006 = C100339 * C9395;
    const double C112002 = C100341 * C9395;
    const double C118470 = C117240 * C9395;
    const double C118464 = C117242 * C9395;
    const double C135755 = C133731 * C9395;
    const double C146059 = C133729 * C9395;
    const double C151896 = C151871 + C151893;
    const double C151493 = ae * C151491;
    const double C151492 = C150614 * C151491;
    const double C151853 = 5 * C151491;
    const double C151646 = C151645 + C151638;
    const double C133786 = C133769 + C133770;
    const double C133781 = C133754 + C133755;
    const double C133780 = C133751 + C133752;
    const double C133775 = C133736 + C133737;
    const double C134088 = C134068 + C134069;
    const double C134083 = C134053 + C134054;
    const double C134080 = C134044 + C134045;
    const double C134079 = C134035 + C134036;
    const double C134390 = C134370 + C134371;
    const double C134385 = C134355 + C134356;
    const double C134382 = C134346 + C134347;
    const double C134381 = C134337 + C134338;
    const double C134620 = C134613 + C134073;
    const double C134832 = C134825 + C134375;
    const double C135158 = C135147 + C135148;
    const double C135153 = C135132 + C135133;
    const double C135964 = C135957 + C135513;
    const double C136272 = C136265 + C135749;
    const double C137350 = C137343 + C135743;
    const double C137562 = C137555 + C137039;
    const double C142554 = C142547 + C134041;
    const double C142549 = C142537 + C134040;
    const double C143471 = C143467 + C135129;
    const double C143838 = C143828 + C135517;
    const double C143833 = C143818 + C135516;
    const double C144098 = C144085 + C135753;
    const double C144093 = C144075 + C135752;
    const double C144090 = C144069 + C135746;
    const double C144806 = C144799 + C136473;
    const double C146063 = C146056 + C137763;
    const double C133785 = C133766 + C133767;
    const double C133782 = C133757 + C133758;
    const double C133779 = C133748 + C133749;
    const double C133776 = C133739 + C133740;
    const double C134087 = C134065 + C134066;
    const double C134084 = C134056 + C134057;
    const double C134081 = C134047 + C134048;
    const double C134078 = C134032 + C134033;
    const double C134389 = C134367 + C134368;
    const double C134386 = C134358 + C134359;
    const double C134383 = C134349 + C134350;
    const double C134380 = C134334 + C134335;
    const double C134619 = C134611 + C134072;
    const double C134831 = C134823 + C134374;
    const double C135157 = C135144 + C135145;
    const double C135154 = C135135 + C135136;
    const double C135963 = C135955 + C135512;
    const double C136271 = C136263 + C135748;
    const double C137349 = C137341 + C135742;
    const double C137561 = C137553 + C137038;
    const double C142553 = C142545 + C134042;
    const double C142550 = C142539 + C134039;
    const double C143470 = C143465 + C135130;
    const double C143837 = C143826 + C135518;
    const double C143834 = C143820 + C135515;
    const double C144097 = C144083 + C135754;
    const double C144094 = C144077 + C135751;
    const double C144091 = C144071 + C135745;
    const double C144805 = C144797 + C136474;
    const double C146062 = C146054 + C137764;
    const double C31589 = C31583 + C31584;
    const double C31588 = C31581 + C31582;
    const double C31587 = C31579 + C31580;
    const double C32391 = C31887 + C31888;
    const double C41013 = C31888 + C31887;
    const double C31892 = C31885 + C31886;
    const double C40452 = C31886 + C31885;
    const double C40450 = C31883 + C31884;
    const double C40444 = C31884 + C31883;
    const double C40445 = C31881 + C31882;
    const double C40443 = C31882 + C31881;
    const double C31891 = C31879 + C31880;
    const double C40451 = C31880 + C31879;
    const double C32599 = C32189 + C32190;
    const double C32193 = C32181 + C32182;
    const double C32943 = C32939 + C32940;
    const double C41664 = C32940 + C32939;
    const double C41663 = C32937 + C32938;
    const double C41658 = C32938 + C32937;
    const double C42750 = C33747 + C33748;
    const double C42749 = C33748 + C33747;
    const double C43142 = C34059 + C34060;
    const double C43137 = C34060 + C34059;
    const double C92363 = C40464 + C40463;
    const double C93601 = C42156 + C42155;
    const double C93600 = C42152 + C42151;
    const double C93832 = C42486 + C42485;
    const double C94524 = C43420 + C43419;
    const double C100409 = C100403 + C100404;
    const double C100408 = C100401 + C100402;
    const double C100407 = C100399 + C100400;
    const double C101211 = C100707 + C100708;
    const double C123758 = C100708 + C100707;
    const double C100712 = C100705 + C100706;
    const double C123209 = C100706 + C100705;
    const double C109159 = C100704 + C100703;
    const double C123207 = C100703 + C100704;
    const double C123206 = C100701 + C100702;
    const double C123205 = C100702 + C100701;
    const double C100711 = C100699 + C100700;
    const double C123208 = C100700 + C100699;
    const double C101419 = C101009 + C101010;
    const double C101013 = C101001 + C101002;
    const double C101763 = C101759 + C101760;
    const double C124405 = C101760 + C101759;
    const double C124404 = C101757 + C101758;
    const double C124403 = C101758 + C101757;
    const double C110921 = C102568 + C102567;
    const double C125406 = C102567 + C102568;
    const double C111224 = C102880 + C102879;
    const double C125793 = C102879 + C102880;
    const double C110435 = C109176 + C109177;
    const double C109178 = C109174 + C109175;
    const double C110679 = C110091 + C110092;
    const double C110460 = C110456 + C110457;
    const double C111431 = C110722 + C110723;
    const double C2998 = C2995 * C152403;
    const double C26766 = C2995 * C152552;
    const double C54573 = C2995 * C51108;
    const double C32194 = C32187 + C32188;
    const double C101014 = C101007 + C101008;
    const double C15353 = C15341 + C15310;
    const double C18539 = C18536 + C18007;
    const double C35353 = C35349 + C34821;
    const double C104173 = C104169 + C103641;
    const double C134396 = C134384 + C134353;
    const double C9918 = C9916 * C6259;
    const double C26767 = C9916 * C152454;
    const double C54574 = C9916 * C152454;
    const double C76575 = C9916 * C152618;
    const double C44554 = C35141 + C35142;
    const double C44553 = C35142 + C35141;
    const double C127183 = C103961 + C103962;
    const double C127182 = C103962 + C103961;
    const double C93833 = C42490 + C42489;
    const double C110726 = C110720 + C110721;
    const double C66595 = C66586 + C16701;
    const double C68565 = C68562 + C18745;
    const double C45091 = C45089 + C35554;
    const double C112716 = C112712 + C104374;
    const double C144101 = C144092 + C135744;
    const double C18002 =
        (4 * (2 * C150952 + C150959 + C150959 + C150614 * C151435) + C151446 +
         C151446 +
         C150614 * (3 * C151435 + C151443 + C151443 +
                    C150614 * (2 * C151427 + C151439 + C151439 +
                               C150614 * (C150645 + C151431 + C151431 +
                                          C150614 * (2 * ae * C150732 +
                                                     C150614 * C150657))))) /
        C150509;
    const double C18013 = C14686 * C17998;
    const double C18009 = C14688 * C17998;
    const double C34826 = C31521 * C17998;
    const double C103646 = C100341 * C17998;
    const double C117587 = C117242 * C17998;
    const double C119320 = C117238 * C17998;
    const double C119316 = C117240 * C17998;
    const double C137044 = C133729 * C17998;
    const double C137040 = C133731 * C17998;
    const double C2979 =
        (2 * (2 * ae * C150767 + C150614 * C150678) + C151049 + C151049 +
         C150614 *
             (C150678 + C151046 + C151046 +
              C150614 *
                  (2 * ae * C150795 +
                   C150614 *
                       (3 * C150674 +
                        C150621 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C2987 = C135 * C2978;
    const double C15786 = C14688 * C2978;
    const double C32156 = C31521 * C2978;
    const double C100976 = C100341 * C2978;
    const double C117263 = C117242 * C2978;
    const double C134829 = C133731 * C2978;
    const double C151031 = ae * C151030;
    const double C2610 = (3 * C150905 + C150614 * C151030 +
                          (2 * C150899 + C150614 * C151020) * ae) /
                         C150502;
    const double C18309 =
        (3 * (C151079 + C151088 + C151088 + C150614 * C151559) + C151572 +
         C151572 +
         C150614 *
             (2 * C151559 + C151569 + C151569 +
              C150614 * (C151549 + C151565 + C151565 +
                         C150614 * (2 * ae * C151551 +
                                    C150614 * C150806 *
                                        (C150672 + (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                       C150617 * C150633))))) /
        C150509;
    const double C18319 = C14688 * C18308;
    const double C26275 = C135 * C18308;
    const double C35558 = C31521 * C18308;
    const double C104378 = C100341 * C18308;
    const double C118077 = C117242 * C18308;
    const double C137347 = C133731 * C18308;
    const double C151607 = C151606 + C151599;
    const double C9403 =
        (3 * (C151108 + C151220 + C151220 + C150614 * C151316) + C151326 +
         C151326 +
         C150614 *
             (2 * C151316 + C151323 + C151323 +
              C150614 * (C151124 + C151319 + C151319 +
                         C150614 * (2 * ae * C151193 +
                                    C150614 * (C151121 +
                                               C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617 * C150818))))) /
        C150509;
    const double C9410 = C135 * C9397;
    const double C16715 = C14688 * C9397;
    const double C45088 = C31521 * C9397;
    const double C112505 = C100341 * C9397;
    const double C118803 = C117242 * C9397;
    const double C135758 = C133731 * C9397;
    const double C151543 = ae * C151541;
    const double C151542 = C150614 * C151541;
    const double C151685 = C151684 + C151677;
    const double C61719 =
        (2 * (2 * ae * C151176 + C150614 * C151695) + C151757 + C151757 +
         C150614 *
             (C151695 + C151754 + C151754 +
              C150614 *
                  (2 * ae * C151713 +
                   C150614 *
                       (3 * C151691 +
                        C150806 *
                            (2 * C150806 * C150672 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150818)))))) /
        C150509;
    const double C61723 = C135 * C61718;
    const double C67297 = C14688 * C61718;
    const double C93839 = C31521 * C61718;
    const double C110701 = C100341 * C61718;
    const double C118313 = C117242 * C61718;
    const double C144803 = C133731 * C61718;
    const double C151746 = ae * C151745;
    const double C61260 = (3 * C151362 + C150614 * C151745 +
                           (2 * C151356 + C150614 * C151735) * ae) /
                          C150502;
    const double C151845 = C151844 + C151837;
    const double C151807 = ae * C151805;
    const double C151806 = C150614 * C151805;
    const double C151904 = C151854 + C151902;
    const double C689 = C681 + C663;
    const double C14765 = C14753 + C14722;
    const double C32611 = C32609 + C32601;
    const double C101431 = C101429 + C101421;
    const double C133808 = C133796 + C133765;
    const double C2841 = C2838 * C152403;
    const double C23778 = C2838 * C152454;
    const double C51587 = C2838 * C152454;
    const double C2991 = C2988 + C2620;
    const double C15790 = C15787 + C15330;
    const double C32179 = C32167 + C32148;
    const double C100999 = C100987 + C100968;
    const double C134833 = C134830 + C134373;
    const double C15323 = C14682 * C2617;
    const double C35338 = C152482 * C2617;
    const double C104158 = C152482 * C2617;
    const double C134366 = C133725 * C2617;
    const double C15345 = C15321 + C15322;
    const double C35347 = C35337 + C34819;
    const double C104167 = C104157 + C103639;
    const double C134388 = C134364 + C134365;
    const double C26771 = C26770 + C26765;
    const double C16125 = C16119 + C16100;
    const double C35139 = C35135 + C35122;
    const double C103959 = C103955 + C103942;
    const double C135168 = C135162 + C135143;
    const double C9704 = C8117 * C6260;
    const double C76377 = C8117 * C73121;
    const double C9915 = C9913 + C9906;
    const double C17233 = C17230 + C17219;
    const double C42487 = C42479 + C42456;
    const double C112308 = C112306 + C112299;
    const double C136276 = C136273 + C136262;
    const double C18312 = C14682 * C9402;
    const double C44814 = C152482 * C9402;
    const double C127443 = C152482 * C9402;
    const double C137340 = C133725 * C9402;
    const double C18320 = C18311 + C16698;
    const double C44817 = C44813 + C35556;
    const double C127446 = C127442 + C104376;
    const double C137348 = C137339 + C135741;
    const double C151410 = ae * C151409;
    const double C17997 = (4 * C150984 + C150614 * C151409 +
                           (3 * C150974 + C150614 * C151398) * ae) /
                          C150502;
    const double C60422 = C60421 + C60418;
    const double C66342 = C66336 + C66319;
    const double C94535 = C94533 + C94526;
    const double C111442 = C111440 + C111433;
    const double C143848 = C143842 + C143825;
    const double C61725 = C61724 + C10123;
    const double C67301 = C67298 + C17432;
    const double C93842 = C93840 + C42464;
    const double C110716 = C110708 + C110693;
    const double C144807 = C144804 + C136475;
    const double C66576 = C14682 * C9401;
    const double C95776 = C152482 * C9401;
    const double C112701 = C152482 * C9401;
    const double C144082 = C133725 * C9401;
    const double C66590 = C66575 + C16712;
    const double C95781 = C95775 + C45086;
    const double C112710 = C112700 + C112002;
    const double C144096 = C144081 + C135755;
    const double C151494 = C151452 + C151492;
    const double C151647 = ae * C151646;
    const double C18739 = (4 * C151256 + C150614 * C151646 +
                           (3 * C151246 + C150614 * C151636) * ae) /
                          C150502;
    const double C133798 = C133786 + C133770;
    const double C133793 = C133781 + C133755;
    const double C133792 = C133780 + C133752;
    const double C133787 = C133775 + C133737;
    const double C134100 = C134088 + C134069;
    const double C134095 = C134083 + C134054;
    const double C134092 = C134080 + C134045;
    const double C134091 = C134079 + C134036;
    const double C134402 = C134390 + C134371;
    const double C134397 = C134385 + C134356;
    const double C134394 = C134382 + C134347;
    const double C134393 = C134381 + C134338;
    const double C134623 = C134620 + C134073;
    const double C134835 = C134832 + C134375;
    const double C135164 = C135158 + C135148;
    const double C135159 = C135153 + C135133;
    const double C135967 = C135964 + C135513;
    const double C136275 = C136272 + C135749;
    const double C137353 = C137350 + C135743;
    const double C137565 = C137562 + C137039;
    const double C142560 = C142554 + C134041;
    const double C142555 = C142549 + C134040;
    const double C143474 = C143471 + C135129;
    const double C143844 = C143838 + C135517;
    const double C143839 = C143833 + C135516;
    const double C144107 = C144098 + C135753;
    const double C144102 = C144093 + C135752;
    const double C144099 = C144090 + C135746;
    const double C144809 = C144806 + C136473;
    const double C146066 = C146063 + C137763;
    const double C133797 = C133785 + C133767;
    const double C133794 = C133782 + C133758;
    const double C133791 = C133779 + C133749;
    const double C133788 = C133776 + C133740;
    const double C134099 = C134087 + C134066;
    const double C134096 = C134084 + C134057;
    const double C134093 = C134081 + C134048;
    const double C134090 = C134078 + C134033;
    const double C134401 = C134389 + C134368;
    const double C134398 = C134386 + C134359;
    const double C134395 = C134383 + C134350;
    const double C134392 = C134380 + C134335;
    const double C134622 = C134619 + C134072;
    const double C134834 = C134831 + C134374;
    const double C135163 = C135157 + C135145;
    const double C135160 = C135154 + C135136;
    const double C135966 = C135963 + C135512;
    const double C136274 = C136271 + C135748;
    const double C137352 = C137349 + C135742;
    const double C137564 = C137561 + C137038;
    const double C142559 = C142553 + C134042;
    const double C142556 = C142550 + C134039;
    const double C143473 = C143470 + C135130;
    const double C143843 = C143837 + C135518;
    const double C143840 = C143834 + C135515;
    const double C144106 = C144097 + C135754;
    const double C144103 = C144094 + C135751;
    const double C144100 = C144091 + C135745;
    const double C144808 = C144805 + C136474;
    const double C146065 = C146062 + C137764;
    const double C31592 = C31589 * C152403;
    const double C31591 = C31588 * C152403;
    const double C31590 = C31587 * C152403;
    const double C32398 = C32391 * C152403;
    const double C31894 = C31892 * C152403;
    const double C31893 = C31891 * C152403;
    const double C32606 = C32599 * C152403;
    const double C32195 = C32193 * C152403;
    const double C32944 = C32943 * C152403;
    const double C100412 = C100409 * C152403;
    const double C100411 = C100408 * C152403;
    const double C100410 = C100407 * C152403;
    const double C101218 = C101211 * C152403;
    const double C100714 = C100712 * C152403;
    const double C100713 = C100711 * C152403;
    const double C101426 = C101419 * C152403;
    const double C101015 = C101013 * C152403;
    const double C101764 = C101763 * C152403;
    const double C32196 = C32194 * C152403;
    const double C101016 = C101014 * C152403;
    const double C15365 = C15353 + C15311;
    const double C18542 = C18539 + C18529;
    const double C35357 = C35353 + C35342;
    const double C104177 = C104173 + C104162;
    const double C134408 = C134396 + C134354;
    const double C66604 = C66595 + C66568;
    const double C68568 = C68565 + C68555;
    const double C45093 = C45091 + C45082;
    const double C112720 = C112716 + C112705;
    const double C144110 = C144101 + C144074;
    const double C2618 =
        (3 * (C150661 + C150903 + C150903 + C150614 * C151021) + C151031 +
         C151031 +
         C150614 *
             (2 * C151021 + C151028 + C151028 +
              C150614 *
                  (C150676 + C151024 + C151024 +
                   C150614 *
                       (2 * ae * C150791 +
                        C150614 *
                            (2 * C150621 * C150672 +
                             C150621 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C2627 = C135 * C2610;
    const double C15335 = C14688 * C2610;
    const double C35346 = C31521 * C2610;
    const double C104166 = C100341 * C2610;
    const double C117871 = C117242 * C2610;
    const double C134378 = C133731 * C2610;
    const double C151608 = ae * C151607;
    const double C18523 = (4 * C151007 + C150614 * C151607 +
                           (3 * C150997 + C150614 * C151596) * ae) /
                          C150502;
    const double C151544 = C151502 + C151542;
    const double C151686 = ae * C151685;
    const double C18740 = (4 * C151302 + C150614 * C151685 +
                           (3 * C151292 + C150614 * C151675) * ae) /
                          C150502;
    const double C61261 =
        (3 * (C151118 + C151360 + C151360 + C150614 * C151736) + C151746 +
         C151746 +
         C150614 *
             (2 * C151736 + C151743 + C151743 +
              C150614 *
                  (C151693 + C151739 + C151739 +
                   C150614 *
                       (2 * ae * C151709 +
                        C150614 *
                            (2 * C150806 * C150672 +
                             C150806 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150818)))))) /
        C150509;
    const double C61263 = C135 * C61260;
    const double C66583 = C14688 * C61260;
    const double C95780 = C31521 * C61260;
    const double C112709 = C100341 * C61260;
    const double C118937 = C117242 * C61260;
    const double C144089 = C133731 * C61260;
    const double C151846 = ae * C151845;
    const double C68549 = (4 * C151279 + C150614 * C151845 +
                           (3 * C151269 + C150614 * C151834) * ae) /
                          C150502;
    const double C151808 = C151763 + C151806;
    const double C151905 = C151904 + C151891;
    const double C697 = C689 * C152403;
    const double C2994 = C2991 + C2982;
    const double C15793 = C15790 + C15779;
    const double C32191 = C32179 + C32149;
    const double C101011 = C100999 + C100969;
    const double C134836 = C134833 + C134822;
    const double C15357 = C15345 + C15322;
    const double C35351 = C35347 + C34819;
    const double C104171 = C104167 + C103639;
    const double C134400 = C134388 + C134365;
    const double C26772 = C26771 * C152454;
    const double C54572 = C26771 * C152454;
    const double C9917 = C9915 * C6260;
    const double C76574 = C9915 * C73121;
    const double C18323 = C18320 + C16698;
    const double C44819 = C44817 + C35556;
    const double C127448 = C127446 + C104376;
    const double C137351 = C137348 + C135741;
    const double C18001 =
        (4 * (2 * C150975 + C150982 + C150982 + C150614 * C151399) + C151410 +
         C151410 +
         C150614 * (3 * C151399 + C151407 + C151407 +
                    C150614 * (2 * C151391 + C151403 + C151403 +
                               C150614 * (C150664 + C151395 + C151395 +
                                          C150614 * (2 * ae * C150775 +
                                                     C150614 * C151121))))) /
        C150509;
    const double C18016 = C14686 * C17997;
    const double C18006 = C14688 * C17997;
    const double C34828 = C31521 * C17997;
    const double C103648 = C100341 * C17997;
    const double C117592 = C117242 * C17997;
    const double C119653 = C117240 * C17997;
    const double C137047 = C133729 * C17997;
    const double C137037 = C133731 * C17997;
    const double C61726 = C61725 + C61722;
    const double C67304 = C67301 + C67290;
    const double C93844 = C93842 + C93835;
    const double C110724 = C110716 + C110694;
    const double C144810 = C144807 + C144796;
    const double C66599 = C66590 + C16712;
    const double C95783 = C95781 + C45086;
    const double C112714 = C112710 + C112002;
    const double C144105 = C144096 + C135755;
    const double C151495 = C151494 + C151486;
    const double C18741 =
        (4 * (2 * C151247 + C151254 + C151254 + C150614 * C151634) + C151647 +
         C151647 +
         C150614 * (3 * C151634 + C151644 + C151644 +
                    C150614 * (2 * C151625 + C151640 + C151640 +
                               C150614 * (C151612 + C151633 + C151633 +
                                          C150614 * (2 * ae * C151615 +
                                                     C150614 * C150806 *
                                                         C150672))))) /
        C150509;
    const double C18746 = C14688 * C18739;
    const double C44164 = C31521 * C18739;
    const double C67869 = C14686 * C18739;
    const double C112005 = C100341 * C18739;
    const double C118460 = C117242 * C18739;
    const double C119787 = C117240 * C18739;
    const double C137765 = C133731 * C18739;
    const double C145372 = C133729 * C18739;
    const double C133810 = C133798 + C133771;
    const double C133805 = C133793 + C133756;
    const double C133804 = C133792 + C133753;
    const double C133799 = C133787 + C133738;
    const double C134112 = C134100 + C134070;
    const double C134107 = C134095 + C134055;
    const double C134104 = C134092 + C134046;
    const double C134103 = C134091 + C134037;
    const double C134414 = C134402 + C134372;
    const double C134409 = C134397 + C134357;
    const double C134406 = C134394 + C134348;
    const double C134405 = C134393 + C134339;
    const double C134626 = C134623 + C134614;
    const double C134838 = C134835 + C134826;
    const double C135170 = C135164 + C135149;
    const double C135165 = C135159 + C135134;
    const double C135970 = C135967 + C135958;
    const double C136278 = C136275 + C136266;
    const double C137356 = C137353 + C137344;
    const double C137568 = C137565 + C137556;
    const double C142566 = C142560 + C142548;
    const double C142561 = C142555 + C142538;
    const double C143477 = C143474 + C143468;
    const double C143850 = C143844 + C143829;
    const double C143845 = C143839 + C143819;
    const double C144116 = C144107 + C144086;
    const double C144111 = C144102 + C144076;
    const double C144108 = C144099 + C144070;
    const double C144812 = C144809 + C144800;
    const double C146069 = C146066 + C146057;
    const double C133809 = C133797 + C133768;
    const double C133806 = C133794 + C133759;
    const double C133803 = C133791 + C133750;
    const double C133800 = C133788 + C133741;
    const double C134111 = C134099 + C134067;
    const double C134108 = C134096 + C134058;
    const double C134105 = C134093 + C134049;
    const double C134102 = C134090 + C134034;
    const double C134413 = C134401 + C134369;
    const double C134410 = C134398 + C134360;
    const double C134407 = C134395 + C134351;
    const double C134404 = C134392 + C134336;
    const double C134625 = C134622 + C134612;
    const double C134837 = C134834 + C134824;
    const double C135169 = C135163 + C135146;
    const double C135166 = C135160 + C135137;
    const double C135969 = C135966 + C135956;
    const double C136277 = C136274 + C136264;
    const double C137355 = C137352 + C137342;
    const double C137567 = C137564 + C137554;
    const double C142565 = C142559 + C142546;
    const double C142562 = C142556 + C142540;
    const double C143476 = C143473 + C143466;
    const double C143849 = C143843 + C143827;
    const double C143846 = C143840 + C143821;
    const double C144115 = C144106 + C144084;
    const double C144112 = C144103 + C144078;
    const double C144109 = C144100 + C144072;
    const double C144811 = C144808 + C144798;
    const double C146068 = C146065 + C146055;
    const double C18524 =
        (4 * (2 * C150998 + C151005 + C151005 + C150614 * C151597) + C151608 +
         C151608 +
         C150614 *
             (3 * C151597 + C151605 + C151605 +
              C150614 *
                  (2 * C151589 + C151601 + C151601 +
                   C150614 *
                       (C150674 + C151593 + C151593 +
                        C150614 *
                            (2 * ae * C150787 +
                             C150614 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150633)))))) /
        C150509;
    const double C18534 = C14688 * C18523;
    const double C34830 = C31521 * C18523;
    const double C103650 = C100341 * C18523;
    const double C117603 = C117242 * C18523;
    const double C137559 = C133731 * C18523;
    const double C151545 = C151544 + C151536;
    const double C18742 =
        (4 * (2 * C151293 + C151300 + C151300 + C150614 * C151673) + C151686 +
         C151686 +
         C150614 *
             (3 * C151673 + C151683 + C151683 +
              C150614 * (2 * C151664 + C151679 + C151679 +
                         C150614 * (C151651 + C151672 + C151672 +
                                    C150614 * (2 * ae * C151654 +
                                               C150614 * C150806 * C150621 *
                                                   (C150666 * C150667 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150616, 9)) *
                                                   C150617))))) /
        C150509;
    const double C18749 = C14688 * C18740;
    const double C44166 = C31521 * C18740;
    const double C119520 = C117242 * C18740;
    const double C126795 = C100341 * C18740;
    const double C137768 = C133731 * C18740;
    const double C68550 =
        (4 * (2 * C151270 + C151277 + C151277 + C150614 * C151835) + C151846 +
         C151846 +
         C150614 *
             (3 * C151835 + C151843 + C151843 +
              C150614 *
                  (2 * C151827 + C151839 + C151839 +
                   C150614 *
                       (C151691 + C151831 + C151831 +
                        C150614 *
                            (2 * ae * C151705 +
                             C150614 * (C150672 + (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                      C150617 * C150818)))))) /
        C150509;
    const double C68560 = C14688 * C68549;
    const double C95096 = C31521 * C68549;
    const double C112007 = C100341 * C68549;
    const double C118471 = C117242 * C68549;
    const double C146060 = C133731 * C68549;
    const double C151809 = C151808 + C151800;
    const double C151907 = ae * C151905;
    const double C151906 = C150614 * C151905;
    const double C2997 = C2994 * C152403;
    const double C15369 = C15357 + C15323;
    const double C35355 = C35351 + C35338;
    const double C104175 = C104171 + C104158;
    const double C134412 = C134400 + C134366;
    const double C18326 = C18323 + C18312;
    const double C44821 = C44819 + C44814;
    const double C127450 = C127448 + C127443;
    const double C137354 = C137351 + C137340;
    const double C18527 = C14682 * C18001;
    const double C137552 = C133725 * C18001;
    const double C18535 = C18526 + C18006;
    const double C137560 = C137551 + C137037;
    const double C66608 = C66599 + C66576;
    const double C95785 = C95783 + C95776;
    const double C112718 = C112714 + C112701;
    const double C144114 = C144105 + C144082;
    const double C151496 = ae * C151495;
    const double C17999 = (5 * C151445 + C150614 * C151495 +
                           (4 * C151434 + C150614 * C151482) * ae) /
                          C150502;
    const double C68553 = C14682 * C18741;
    const double C146053 = C133725 * C18741;
    const double C68561 = C68552 + C18746;
    const double C146061 = C146052 + C137765;
    const double C151546 = ae * C151545;
    const double C18000 = (5 * C151409 + C150614 * C151545 +
                           (4 * C151398 + C150614 * C151532) * ae) /
                          C150502;
    const double C151810 = ae * C151809;
    const double C67865 = (5 * C151646 + C150614 * C151809 +
                           (4 * C151636 + C150614 * C151797) * ae) /
                          C150502;
    const double C151908 = C151853 + C151906;
    const double C18538 = C18535 + C18006;
    const double C137563 = C137560 + C137037;
    const double C18003 =
        (5 * (3 * C151435 + C151443 + C151443 + C150614 * C151484) + C151496 +
         C151496 +
         C150614 *
             (4 * C151484 + C151493 + C151493 +
              C150614 *
                  (3 * C151476 + C151489 + C151489 +
                   C150614 * (2 * C151468 + C151483 + C151483 +
                              C150614 * (C150657 + C151472 + C151472 +
                                         C150614 * (2 * ae * C150754 +
                                                    C150614 * C150672)))))) /
        C150509;
    const double C18014 = C14688 * C17999;
    const double C119321 = C117240 * C17999;
    const double C119315 = C117242 * C17999;
    const double C137045 = C133731 * C17999;
    const double C68564 = C68561 + C18746;
    const double C146064 = C146061 + C137765;
    const double C18004 =
        (5 * (3 * C151399 + C151407 + C151407 + C150614 * C151534) + C151546 +
         C151546 +
         C150614 *
             (4 * C151534 + C151543 + C151543 +
              C150614 *
                  (3 * C151526 + C151539 + C151539 +
                   C150614 *
                       (2 * C151518 + C151533 + C151533 +
                        C150614 * (C151121 + C151522 + C151522 +
                                   C150614 * (2 * ae * C151185 +
                                              C150614 * C150621 *
                                                  (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                  C150617)))))) /
        C150509;
    const double C18017 = C14688 * C18000;
    const double C119654 = C117242 * C18000;
    const double C137048 = C133731 * C18000;
    const double C67866 =
        (5 * (3 * C151634 + C151644 + C151644 + C150614 * C151795) + C151810 +
         C151810 +
         C150614 *
             (4 * C151795 + C151807 + C151807 +
              C150614 *
                  (3 * C151788 + C151803 + C151803 +
                   C150614 *
                       (2 * C151779 + C151798 + C151798 +
                        C150614 * (C151762 + C151787 + C151787 +
                                   C150614 * (2 * ae * C151766 +
                                              C150614 * C150806 *
                                                  (C150666 * C150667 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150616, 9)) *
                                                  C150617)))))) /
        C150509;
    const double C67870 = C14688 * C67865;
    const double C119788 = C117242 * C67865;
    const double C145373 = C133731 * C67865;
    const double C151909 = C151908 + C151898;
    const double C18541 = C18538 + C18527;
    const double C137566 = C137563 + C137552;
    const double C68567 = C68564 + C68553;
    const double C146067 = C146064 + C146053;
    const double C151910 = ae * C151909;
    const double C119312 = (6 * C151495 + C150614 * C151909 +
                            (5 * C151482 + C150614 * C151895) * ae) /
                           C150502;
    const double C119313 =
        (6 * (4 * C151484 + C151493 + C151493 + C150614 * C151896) + C151910 +
         C151910 +
         C150614 *
             (5 * C151896 + C151907 + C151907 +
              C150614 *
                  (4 * C151889 + C151903 + C151903 +
                   C150614 *
                       (3 * C151881 + C151899 + C151899 +
                        C150614 *
                            (2 * C151873 + C151888 + C151888 +
                             C150614 *
                                 (C150672 + C151877 + C151877 +
                                  C150614 * (2 * ae * C150782 +
                                             C150614 *
                                                 (C150666 * C150667 +
                                                  C150618 * bs[9] *
                                                      std::pow(C150616, 9)) *
                                                 C150617))))))) /
        C150509;
    const double C119322 = C117242 * C119312;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152278 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152285 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C3759) *
              C152196 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152285 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152278 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C3759) *
              C152205 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C152278 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C152285 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152536 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152278 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152536) *
               C152285 +
           (((C6525 * C152552 + C6526 * C152454) * C152600 +
             (C23540 + C23541) * C152601 + C23549 * C23303) *
                C152536 -
            ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
             (C8116 * C152454 + C7475 * C152552) * C152600) *
                C152324) *
               C3759) *
              C3415 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152536) *
               C152278 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152536 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152285 +
           (((C25522 + C25521) * C152600 + (C25520 + C25519) * C152601 +
             (C2062 * C152552 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C23303) *
                C152324 -
            ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
             (C23541 + C23540) * C152600) *
                C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152631 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152627 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152613 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C152237 * C152587) *
              C3415 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152627 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152631 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152613 +
           ((C25228 + C25227) * C152600 + (C25226 + C25225) * C152601 +
            (C1846 * C152552 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C23303) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C3275 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152282) *
              C152630 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152282 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C3275) *
              C152623 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C3275 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C152282) *
              C152606 +
          ((C23976 * C152600 + (C23978 + C23977) * C152601 +
            (C842 * C152552 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C23303) *
               C152237 * C152282 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152625 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152610 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
              C8114 * C152454) *
                 C152600 +
             (C23772 + C23773) * C152601 + C23781 * C23303) *
                C152580) *
               C3275 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152610 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152625 -
            ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
             (C8115 * C152454 + C8114 * C152552) * C152600) *
                C152580) *
               C152282) *
              C3415 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152610 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152625 -
            ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
             (C23773 + C23772) * C152600) *
                C152580) *
               C3275 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152625 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152610 +
            ((C26569 + C26568) * C152600 + (C26567 + C26566) * C152601 +
             (C2838 * C152552 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C23303) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152536 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C3275 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152536) *
               C152282) *
              C152196 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152536) *
               C3275 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152536 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152282) *
              C152205 +
          (((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
                C152536 -
            ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
             C23780 * C152600) *
                C152324) *
               C3275 +
           ((C24472 * C152600 + (C24471 + C24470) * C152601 +
             (C1223 * C152552 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C23303) *
                C152324 -
            ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
             C23548 * C152600) *
                C152536) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C3275 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152282) *
              C152630 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152282 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C3275) *
              C152623 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C3275 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C152282) *
              C152606 +
          ((C23976 * C152600 + (C23978 + C23977) * C152601 +
            (C842 * C152552 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C23303) *
               C152237 * C152282 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152631 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152627 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152613 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C152237 * C152587) *
              C3415 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152627 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152631 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152613 +
           ((C25228 + C25227) * C152600 + (C25226 + C25225) * C152601 +
            (C1846 * C152552 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C23303) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C4281 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152278 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C4281) *
               C152285 +
           (((C6525 * C152552 + C6526 * C152454) * C152600 +
             (C23540 + C23541) * C152601 + C23549 * C23303) *
                C4281 -
            ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
             (C8116 * C152454 + C7475 * C152552) * C152600) *
                C152324) *
               C3759) *
              C152521 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C4281) *
               C152278 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C4281 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152285 +
           (((C25522 + C25521) * C152600 + (C25520 + C25519) * C152601 +
             (C2062 * C152552 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C23303) *
                C152324 -
            ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
             (C23541 + C23540) * C152600) *
                C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152320 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C4953) *
              C152278 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152327 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152320 -
           ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C4953) *
              C152285 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152320 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152327 +
           ((C8115 * C152552 + C8118 * C152454) * C152600 +
            (C6767 * C152552 + C8117 * C152454) * C152601 +
            (C6768 * C152552 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C23303) *
               C4953) *
              C3759) *
         C152191) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C4281 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C152631 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152324 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C4281) *
              C152627 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C4281 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152324) *
              C152613 +
          (((C8116 * C152552 + C8828 * C152454) * C152600 +
            (C7477 * C152552 + C8620 * C152454) * C152601 +
            (C7478 * C152552 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C23303) *
               C152324 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C4281 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C3275 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C4281) *
               C152282) *
              C152621 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C4281) *
               C3275 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C4281 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152282) *
              C152604 +
          (((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
                C4281 -
            ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
             C23780 * C152600) *
                C152324) *
               C3275 +
           ((C24472 * C152600 + (C24471 + C24470) * C152601 +
             (C1223 * C152552 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C23303) *
                C152324 -
            ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
             C23548 * C152600) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152632 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152616 -
           ((C26772 + C26766) * C23303 + (C26767 + C26768) * C152601 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152552) *
                C152600) *
               C152593) *
              C3275 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152629 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152632 -
           ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C152616 +
           ((C10130 * C152552 + C10129 * C152454) * C152600 +
            (C9916 * C152552 + C9915 * C152454) * C152601 +
            (C26771 * C152552 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C152454) *
                C23303) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152320 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
              C8114 * C152454) *
                 C152600 +
             (C23772 + C23773) * C152601 + C23781 * C23303) *
                C4953) *
               C3275 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152327 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152320 -
            ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
             (C8115 * C152454 + C8114 * C152552) * C152600) *
                C4953) *
               C152282) *
              C152521 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152327 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152320 -
            ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
             (C23773 + C23772) * C152600) *
                C4953) *
               C3275 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152320 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152327 +
            ((C26569 + C26568) * C152600 + (C26567 + C26566) * C152601 +
             (C2838 * C152552 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C23303) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C4281 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C3275 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C4281) *
               C152282) *
              C152621 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C4281) *
               C3275 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C4281 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152282) *
              C152604 +
          (((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
                C4281 -
            ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
             C23780 * C152600) *
                C152324) *
               C3275 +
           ((C24472 * C152600 + (C24471 + C24470) * C152601 +
             (C1223 * C152552 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C23303) *
                C152324 -
            ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
             C23548 * C152600) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C4281 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C152631 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152324 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C4281) *
              C152627 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C4281 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152324) *
              C152613 +
          (((C8116 * C152552 + C8828 * C152454) * C152600 +
            (C7477 * C152552 + C8620 * C152454) * C152601 +
            (C7478 * C152552 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C23303) *
               C152324 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C1823 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C1824 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C1825 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C152237 * C152587) *
              C152521 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C1824 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C1823 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C1825 +
           ((C25228 + C25227) * C152600 + (C25226 + C25225) * C152601 +
            (C1846 * C152552 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C23303) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152535 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152282) *
              C829 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152282 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152535) *
              C830 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C152535 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C152282) *
              C831 +
          ((C23976 * C152600 + (C23978 + C23977) * C152601 +
            (C842 * C152552 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C23303) *
               C152237 * C152282 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C2359 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
              C8114 * C152454) *
                 C152600 +
             (C23772 + C23773) * C152601 + C23781 * C23303) *
                C152580) *
               C152535 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C2360 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C2359 -
            ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
             (C8115 * C152454 + C8114 * C152552) * C152600) *
                C152580) *
               C152282) *
              C152521 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C2360 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C2359 -
            ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
             (C23773 + C23772) * C152600) *
                C152580) *
               C152535 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C2359 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C2360 +
            ((C26569 + C26568) * C152600 + (C26567 + C26566) * C152601 +
             (C2838 * C152552 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C23303) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152536 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C1823 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152324 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152536) *
              C1824 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152536 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152324) *
              C1825 +
          (((C8116 * C152552 + C8828 * C152454) * C152600 +
            (C7477 * C152552 + C8620 * C152454) * C152601 +
            (C7478 * C152552 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C23303) *
               C152324 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152536 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152535 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152536) *
               C152282) *
              C353 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152536) *
               C152535 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152536 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152282) *
              C354 +
          (((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
                C152536 -
            ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
             C23780 * C152600) *
                C152324) *
               C152535 +
           ((C24472 * C152600 + (C24471 + C24470) * C152601 +
             (C1223 * C152552 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C23303) *
                C152324 -
            ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
             C23548 * C152600) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C2973 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C2975 -
           ((C26772 + C26766) * C23303 + (C26767 + C26768) * C152601 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152552) *
                C152600) *
               C152593) *
              C152535 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C2974 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C2973 -
           ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C2975 +
           ((C10130 * C152552 + C10129 * C152454) * C152600 +
            (C9916 * C152552 + C9915 * C152454) * C152601 +
            (C26771 * C152552 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C152454) *
                C23303) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
                C6524 * C152454) *
                   C152600 +
               (C23305 + C23306) * C152601 + C23315 * C23303) *
                  C152237 * C152219 * C129 -
              (C23316 * C23303 + (C23308 + C23307) * C152601 +
               (C23306 + C23305) * C152600) *
                  C152237 * C152219 * C130 +
              (C23315 * C152600 + (C23310 + C23309) * C152601 +
               C23317 * C23303) *
                  C152237 * C152219 * C131 -
              ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
               C23316 * C152600) *
                  C152237 * C152219 * C132 +
              (C23317 * C152600 + (C23314 + C23313) * C152601 +
               (C198 * C152552 +
                (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
                   C23303) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
                 C6524 * C152454) *
                    C152600 +
                (C23305 + C23306) * C152601 + C23315 * C23303) *
                   C152237 * C152624 -
               (C23548 * C23303 + (C23538 + C23539) * C152601 +
                (C6525 * C152454 + C6524 * C152552) * C152600) *
                   C152237 * C152608 +
               ((C6525 * C152552 + C6526 * C152454) * C152600 +
                (C23540 + C23541) * C152601 + C23549 * C23303) *
                   C152237 * C152577) *
                  C353 +
              (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
                (C23544 + C23545) * C23303) *
                   C152237 * C152608 -
               (C23316 * C23303 + (C23308 + C23307) * C152601 +
                (C23306 + C23305) * C152600) *
                   C152237 * C152624 -
               ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
                (C23541 + C23540) * C152600) *
                   C152237 * C152577) *
                  C354 +
              ((C23315 * C152600 + (C23310 + C23309) * C152601 +
                C23317 * C23303) *
                   C152237 * C152624 -
               ((C444 * C152454 + C443 * C152552) * C23303 +
                (C23545 + C23544) * C152601 + C23548 * C152600) *
                   C152237 * C152608 +
               (C23549 * C152600 + (C23547 + C23546) * C152601 +
                (C444 * C152552 +
                 (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                    C23303) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152625 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C152219 * C353 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            (C23776 + C23777) * C23303) *
               C152610 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152625 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C152580) *
              C152219 * C354 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152625 -
           ((C1223 * C152454 + C688 * C152552) * C23303 +
            (C23777 + C23776) * C152601 + C23780 * C152600) *
               C152610 +
           (C23781 * C152600 + (C23779 + C23778) * C152601 +
            (C689 * C152552 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C23303) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C1373 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C1374 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C152621 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C1374 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C1373 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C152604 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C1373 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C1374 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C1461 -
          (C23548 * C23303 + (C23538 + C23539) * C152601 +
           (C6525 * C152454 + C6524 * C152552) * C152600) *
              C152237 * C1462 +
          ((C6525 * C152552 + C6526 * C152454) * C152600 +
           (C23540 + C23541) * C152601 + C23549 * C23303) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C152552) * C23303 +
           (C6527 * C152454 + C1848 * C152552) * C152601 +
           (C7849 * C152454 + C6526 * C152552) * C152600) *
              C152237 * C1464 +
          ((C7849 * C152552 + C7851 * C152454) * C152600 +
           (C6527 * C152552 + C7850 * C152454) * C152601 +
           (C6528 * C152552 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C23303) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152625 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C1373 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152610 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152625 -
           ((C6768 * C152454 + C2839 * C152552) * C23303 +
            (C6767 * C152454 + C2840 * C152552) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C152580) *
              C1374 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152625 -
           ((C7478 * C152454 + C2063 * C152552) * C23303 +
            (C7477 * C152454 + C2064 * C152552) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152610 +
           ((C8115 * C152552 + C8118 * C152454) * C152600 +
            (C6767 * C152552 + C8117 * C152454) * C152601 +
            (C6768 * C152552 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C23303) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C2359 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C152219 * C152621 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C2360 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C2359 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C152580) *
              C152219 * C152604 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C2359 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C2360 +
           (C23781 * C152600 + (C23779 + C23778) * C152601 +
            (C689 * C152552 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C23303) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C2359 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C152624 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C2360 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C2359 -
           ((C6768 * C152454 + C2839 * C152552) * C23303 +
            (C6767 * C152454 + C2840 * C152552) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C152580) *
              C152608 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C2359 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C2360 +
           ((C8115 * C152552 + C8118 * C152454) * C152600 +
            (C6767 * C152552 + C8117 * C152454) * C152601 +
            (C6768 * C152552 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C23303) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C2590 -
          (C23780 * C23303 + (C23770 + C23771) * C152601 +
           (C7476 * C152454 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
               C152600) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
            C8114 * C152454) *
               C152600 +
           (C23772 + C23773) * C152601 + C23781 * C23303) *
              C2592 -
          (((C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C152454 +
            C2995 * C152552) *
               C23303 +
           (C9916 * C152454 + C2996 * C152552) * C152601 +
           (C10130 * C152454 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152552) *
               C152600) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C152552 +
            (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C152454) *
               C152600 +
           ((C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C152552 +
            (C134 * C9390 + C9409 + C9409 + C152418 * C9402) * C152454) *
               C152601 +
           ((C134 * C2601 + C2626 + C2626 + C152418 * C2617) * C152552 +
            (C134 * C18307 + C26275 + C26275 + C152418 * C18309) * C152454) *
               C23303) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152536 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C1373 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152536) *
               C1374 +
           (((C6525 * C152552 + C6526 * C152454) * C152600 +
             (C23540 + C23541) * C152601 + C23549 * C23303) *
                C152536 -
            ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
             (C8116 * C152454 + C7475 * C152552) * C152600) *
                C152324) *
               C152577) *
              C152521 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152536) *
               C1373 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152536 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C1374 +
           (((C25522 + C25521) * C152600 + (C25520 + C25519) * C152601 +
             (C2062 * C152552 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C23303) *
                C152324 -
            ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
             (C23541 + C23540) * C152600) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152536 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C152219 * C829 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C152324 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152536) *
              C152219 * C830 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152536 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C152324) *
              C152219 * C831 +
          ((C24173 * C152600 + (C24175 + C24174) * C152601 +
            (C984 * C152552 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C23303) *
               C152324 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C2973 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C2975 -
           ((C26772 + C26766) * C23303 + (C26767 + C26768) * C152601 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152552) *
                C152600) *
               C152593) *
              C152219 * C152521 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C2974 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C2973 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C2975 +
           ((C26768 + C26767) * C152600 + (C26766 + C26772) * C152601 +
            (C2994 * C152552 +
             (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152454) *
                C23303) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152624 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152608 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C353 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            (C23544 + C23545) * C23303) *
               C152237 * C152608 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152624 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C354 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C152552) * C23303 +
            (C23545 + C23544) * C152601 + C23548 * C152600) *
               C152237 * C152608 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C152219 * C129 -
          (C23316 * C23303 + (C23308 + C23307) * C152601 +
           (C23306 + C23305) * C152600) *
              C152237 * C152219 * C130 +
          (C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
              C152237 * C152219 * C131 -
          ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
           C23316 * C152600) *
              C152237 * C152219 * C132 +
          (C23317 * C152600 + (C23314 + C23313) * C152601 +
           (C198 * C152552 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C23303) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C1373 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C1374 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C152621 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C1374 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C1373 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C152604 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C1373 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C1374 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C1461 -
          (C23548 * C23303 + (C23538 + C23539) * C152601 +
           (C6525 * C152454 + C6524 * C152552) * C152600) *
              C152237 * C1462 +
          ((C6525 * C152552 + C6526 * C152454) * C152600 +
           (C23540 + C23541) * C152601 + C23549 * C23303) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C152552) * C23303 +
           (C6527 * C152454 + C1848 * C152552) * C152601 +
           (C7849 * C152454 + C6526 * C152552) * C152600) *
              C152237 * C1464 +
          ((C7849 * C152552 + C7851 * C152454) * C152600 +
           (C6527 * C152552 + C7850 * C152454) * C152601 +
           (C6528 * C152552 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C23303) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C2359 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C152219 * C152621 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C2360 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C2359 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C152580) *
              C152219 * C152604 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C2359 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C2360 +
           (C23781 * C152600 + (C23779 + C23778) * C152601 +
            (C689 * C152552 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C23303) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C2359 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C152624 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C2360 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C2359 -
           ((C6768 * C152454 + C2839 * C152552) * C23303 +
            (C6767 * C152454 + C2840 * C152552) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C152580) *
              C152608 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C2359 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C2360 +
           ((C8115 * C152552 + C8118 * C152454) * C152600 +
            (C6767 * C152552 + C8117 * C152454) * C152601 +
            (C6768 * C152552 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C23303) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C4281 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152535 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C4281) *
               C152282) *
              C152196 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C4281) *
               C152535 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C4281 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152282) *
              C152205 +
          (((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
                C4281 -
            ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
             C23780 * C152600) *
                C152324) *
               C152535 +
           ((C24472 * C152600 + (C24471 + C24470) * C152601 +
             (C1223 * C152552 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C23303) *
                C152324 -
            ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
             C23548 * C152600) *
                C4281) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152320 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
              C8114 * C152454) *
                 C152600 +
             (C23772 + C23773) * C152601 + C23781 * C23303) *
                C4953) *
               C152535 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152327 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152320 -
            ((C26566 + C26567) * C23303 + (C26568 + C26569) * C152601 +
             (C8115 * C152454 + C8114 * C152552) * C152600) *
                C4953) *
               C152282) *
              C3415 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152327 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152320 -
            ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
             (C23773 + C23772) * C152600) *
                C4953) *
               C152535 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152320 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152327 +
            ((C26569 + C26568) * C152600 + (C26567 + C26566) * C152601 +
             (C2838 * C152552 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C23303) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C4281 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152624 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C4281) *
               C152608 +
           (((C6525 * C152552 + C6526 * C152454) * C152600 +
             (C23540 + C23541) * C152601 + C23549 * C23303) *
                C4281 -
            ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
             (C8116 * C152454 + C7475 * C152552) * C152600) *
                C152324) *
               C152577) *
              C3415 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C4281) *
               C152624 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C4281 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152608 +
           (((C25522 + C25521) * C152600 + (C25520 + C25519) * C152601 +
             (C2062 * C152552 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C23303) *
                C152324 -
            ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
             (C23541 + C23540) * C152600) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C4281 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C152219 * C152630 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C152324 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C4281) *
              C152219 * C152623 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C4281 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C152324) *
              C152219 * C152606 +
          ((C24173 * C152600 + (C24175 + C24174) * C152601 +
            (C984 * C152552 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C23303) *
               C152324 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152632 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152616 -
           ((C26772 + C26766) * C23303 + (C26767 + C26768) * C152601 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152552) *
                C152600) *
               C152593) *
              C152219 * C3415 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C152629 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152632 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C152616 +
           ((C26768 + C26767) * C152600 + (C26766 + C26772) * C152601 +
            (C2994 * C152552 +
             (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152454) *
                C23303) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152320 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C4953) *
              C152219 * C152196 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C152327 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152320 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C4953) *
              C152219 * C152205 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152320 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C152327 +
           (C23781 * C152600 + (C23779 + C23778) * C152601 +
            (C689 * C152552 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C23303) *
               C4953) *
              C152219 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C4281 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C152219 * C152630 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C152324 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C4281) *
              C152219 * C152623 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C4281 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C152324) *
              C152219 * C152606 +
          ((C24173 * C152600 + (C24175 + C24174) * C152601 +
            (C984 * C152552 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C23303) *
               C152324 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C4281 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152624 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C4281) *
               C152608 +
           (((C6525 * C152552 + C6526 * C152454) * C152600 +
             (C23540 + C23541) * C152601 + C23549 * C23303) *
                C4281 -
            ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
             (C8116 * C152454 + C7475 * C152552) * C152600) *
                C152324) *
               C152577) *
              C3415 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C4281) *
               C152624 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C4281 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152608 +
           (((C25522 + C25521) * C152600 + (C25520 + C25519) * C152601 +
             (C2062 * C152552 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C23303) *
                C152324 -
            ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
             (C23541 + C23540) * C152600) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152535 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152282) *
              C829 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C152282 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152535) *
              C830 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C152535 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C152282) *
              C831 +
          ((C23976 * C152600 + (C23978 + C23977) * C152601 +
            (C842 * C152552 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C23303) *
               C152237 * C152282 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C1823 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C1824 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C1825 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C152237 * C152587) *
              C152521 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C1824 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C1823 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C1825 +
           ((C25228 + C25227) * C152600 + (C25226 + C25225) * C152601 +
            (C1846 * C152552 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C23303) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152536 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C152535 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152536) *
               C152282) *
              C353 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152536) *
               C152535 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152536 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C152282) *
              C354 +
          (((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
                C152536 -
            ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
             C23780 * C152600) *
                C152324) *
               C152535 +
           ((C24472 * C152600 + (C24471 + C24470) * C152601 +
             (C1223 * C152552 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C23303) *
                C152324 -
            ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
             C23548 * C152600) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152536 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C1823 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152324 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152536) *
              C1824 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152536 -
           ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152324) *
              C1825 +
          (((C8116 * C152552 + C8828 * C152454) * C152600 +
            (C7477 * C152552 + C8620 * C152454) * C152601 +
            (C7478 * C152552 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C23303) *
               C152324 -
           ((C25225 + C25226) * C23303 + (C25227 + C25228) * C152601 +
            (C7849 * C152454 + C6526 * C152552) * C152600) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152624 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152608 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C353 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            (C23544 + C23545) * C23303) *
               C152237 * C152608 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152624 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C354 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C152552) * C23303 +
            (C23545 + C23544) * C152601 + C23548 * C152600) *
               C152237 * C152608 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C152219 * C129 -
          (C23316 * C23303 + (C23308 + C23307) * C152601 +
           (C23306 + C23305) * C152600) *
              C152237 * C152219 * C130 +
          (C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
              C152237 * C152219 * C131 -
          ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
           C23316 * C152600) *
              C152237 * C152219 * C132 +
          (C23317 * C152600 + (C23314 + C23313) * C152601 +
           (C198 * C152552 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C23303) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152625 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C152219 * C353 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            (C23776 + C23777) * C23303) *
               C152610 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152625 -
           ((C23778 + C23779) * C23303 + (C23775 + C23774) * C152601 +
            (C23773 + C23772) * C152600) *
               C152580) *
              C152219 * C354 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152625 -
           ((C1223 * C152454 + C688 * C152552) * C23303 +
            (C23777 + C23776) * C152601 + C23780 * C152600) *
               C152610 +
           (C23781 * C152600 + (C23779 + C23778) * C152601 +
            (C689 * C152552 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C23303) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C1373 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C1374 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C152621 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C1374 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C1373 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C152604 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C1373 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C1374 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C1461 -
          (C23548 * C23303 + (C23538 + C23539) * C152601 +
           (C6525 * C152454 + C6524 * C152552) * C152600) *
              C152237 * C1462 +
          ((C6525 * C152552 + C6526 * C152454) * C152600 +
           (C23540 + C23541) * C152601 + C23549 * C23303) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C152552) * C23303 +
           (C6527 * C152454 + C1848 * C152552) * C152601 +
           (C7849 * C152454 + C6526 * C152552) * C152600) *
              C152237 * C1464 +
          ((C7849 * C152552 + C7851 * C152454) * C152600 +
           (C6527 * C152552 + C7850 * C152454) * C152601 +
           (C6528 * C152552 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C23303) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152625 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152552 +
             C8114 * C152454) *
                C152600 +
            (C23772 + C23773) * C152601 + C23781 * C23303) *
               C152580) *
              C1373 +
          (((C7476 * C152552 + C7475 * C152454) * C152600 +
            (C24466 + C24467) * C152601 + C24472 * C23303) *
               C152610 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152625 -
           ((C6768 * C152454 + C2839 * C152552) * C23303 +
            (C6767 * C152454 + C2840 * C152552) * C152601 +
            (C8115 * C152454 + C8114 * C152552) * C152600) *
               C152580) *
              C1374 +
          (((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152625 -
           ((C7478 * C152454 + C2063 * C152552) * C23303 +
            (C7477 * C152454 + C2064 * C152552) * C152601 +
            (C8116 * C152454 + C7475 * C152552) * C152600) *
               C152610 +
           ((C8115 * C152552 + C8118 * C152454) * C152600 +
            (C6767 * C152552 + C8117 * C152454) * C152601 +
            (C6768 * C152552 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C23303) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152536 -
           (C23780 * C23303 + (C23770 + C23771) * C152601 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                C152600) *
               C152324) *
              C152219 * C829 +
          (((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
            C24173 * C23303) *
               C152324 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152536) *
              C152219 * C830 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152536 -
           ((C24174 + C24175) * C23303 + (C23777 + C23776) * C152601 +
            C23780 * C152600) *
               C152324) *
              C152219 * C831 +
          ((C24173 * C152600 + (C24175 + C24174) * C152601 +
            (C984 * C152552 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C23303) *
               C152324 -
           ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
            C23316 * C152600) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
              C6524 * C152454) *
                 C152600 +
             (C23305 + C23306) * C152601 + C23315 * C23303) *
                C152536 -
            (C23780 * C23303 + (C23770 + C23771) * C152601 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152552) *
                 C152600) *
                C152324) *
               C1373 +
           (((C7476 * C152552 + C7475 * C152454) * C152600 +
             (C24466 + C24467) * C152601 + C24472 * C23303) *
                C152324 -
            (C23548 * C23303 + (C23538 + C23539) * C152601 +
             (C6525 * C152454 + C6524 * C152552) * C152600) *
                C152536) *
               C1374 +
           (((C6525 * C152552 + C6526 * C152454) * C152600 +
             (C23540 + C23541) * C152601 + C23549 * C23303) *
                C152536 -
            ((C25519 + C25520) * C23303 + (C25521 + C25522) * C152601 +
             (C8116 * C152454 + C7475 * C152552) * C152600) *
                C152324) *
               C152577) *
              C152521 +
          ((((C23771 + C23770) * C152600 + (C23769 + C23768) * C152601 +
             C24173 * C23303) *
                C152324 -
            (C23316 * C23303 + (C23308 + C23307) * C152601 +
             (C23306 + C23305) * C152600) *
                C152536) *
               C1373 +
           (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
             C23976 * C23303) *
                C152536 -
            ((C24470 + C24471) * C23303 + (C24469 + C24468) * C152601 +
             (C24467 + C24466) * C152600) *
                C152324) *
               C1374 +
           (((C25522 + C25521) * C152600 + (C25520 + C25519) * C152601 +
             (C2062 * C152552 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C23303) *
                C152324 -
            ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
             (C23541 + C23540) * C152600) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C152219 * C129 -
          (C23316 * C23303 + (C23308 + C23307) * C152601 +
           (C23306 + C23305) * C152600) *
              C152237 * C152219 * C130 +
          (C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
              C152237 * C152219 * C131 -
          ((C23313 + C23314) * C23303 + (C23312 + C23311) * C152601 +
           C23316 * C152600) *
              C152237 * C152219 * C132 +
          (C23317 * C152600 + (C23314 + C23313) * C152601 +
           (C198 * C152552 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C23303) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C152624 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C152608 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C353 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            (C23544 + C23545) * C23303) *
               C152237 * C152608 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C152624 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C354 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C152552) * C23303 +
            (C23545 + C23544) * C152601 + C23548 * C152600) *
               C152237 * C152608 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
             C6524 * C152454) *
                C152600 +
            (C23305 + C23306) * C152601 + C23315 * C23303) *
               C152237 * C1373 -
           (C23548 * C23303 + (C23538 + C23539) * C152601 +
            (C6525 * C152454 + C6524 * C152552) * C152600) *
               C152237 * C1374 +
           ((C6525 * C152552 + C6526 * C152454) * C152600 +
            (C23540 + C23541) * C152601 + C23549 * C23303) *
               C152237 * C152577) *
              C152621 +
          (((C23539 + C23538) * C152600 + (C23537 + C23536) * C152601 +
            C23976 * C23303) *
               C152237 * C1374 -
           (C23316 * C23303 + (C23308 + C23307) * C152601 +
            (C23306 + C23305) * C152600) *
               C152237 * C1373 -
           ((C23546 + C23547) * C23303 + (C23543 + C23542) * C152601 +
            (C23541 + C23540) * C152600) *
               C152237 * C152577) *
              C152604 +
          ((C23315 * C152600 + (C23310 + C23309) * C152601 + C23317 * C23303) *
               C152237 * C1373 -
           ((C23977 + C23978) * C23303 + (C23545 + C23544) * C152601 +
            C23548 * C152600) *
               C152237 * C1374 +
           (C23549 * C152600 + (C23547 + C23546) * C152601 +
            (C444 * C152552 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152552 +
            C6524 * C152454) *
               C152600 +
           (C23305 + C23306) * C152601 + C23315 * C23303) *
              C152237 * C1461 -
          (C23548 * C23303 + (C23538 + C23539) * C152601 +
           (C6525 * C152454 + C6524 * C152552) * C152600) *
              C152237 * C1462 +
          ((C6525 * C152552 + C6526 * C152454) * C152600 +
           (C23540 + C23541) * C152601 + C23549 * C23303) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C152552) * C23303 +
           (C6527 * C152454 + C1848 * C152552) * C152601 +
           (C7849 * C152454 + C6526 * C152552) * C152600) *
              C152237 * C1464 +
          ((C7849 * C152552 + C7851 * C152454) * C152600 +
           (C6527 * C152552 + C7850 * C152454) * C152601 +
           (C6528 * C152552 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C23303) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152278 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152285 +
           (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152285 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152278 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            (C42750 * C152454 + C40444 * C152552) * C6261) *
               C152237 * C3759) *
              C152205 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C152278 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152285 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152278 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152536) *
               C152285 +
           ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                 C6261 +
             (C40450 * C152552 + C42749 * C152454) * C152169) *
                C152536 -
            (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                 C6261) *
                C152324) *
               C3759) *
              C3415 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152536) *
               C152278 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152285 +
           (((C43137 * C152552 + (C43148 + C43147) * C152454) * C6261 +
             ((C34058 + C34057) * C152552 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
             (C42750 * C152454 + C40444 * C152552) * C6261) *
                C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152631 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152627 +
           (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152237 * C152613 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C152237 * C152587) *
              C3415 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152627 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152631 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            (C42750 * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152613 +
           ((C42749 * C152552 + (C42154 + C42153) * C152454) * C6261 +
            ((C33746 + C33745) * C152552 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C3275 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152282) *
              C152630 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C3275 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C32391 * C152552 + (C31890 + C31889) * C152454) * C6261 +
            ((C32404 + C32403) * C152552 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152625 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152610 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C152552 +
              (C42483 + C42484) * C152454) *
                 C6261 +
             ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
                C152580) *
               C3275 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152610 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152625 -
            (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                 C6261) *
                C152580) *
               C152282) *
              C3415 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152610 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152625 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
                C152580) *
               C3275 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152625 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152610 +
            ((C44553 * C152552 + (C42488 + C42487) * C152454) * C6261 +
             ((C35140 + C35139) * C152552 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C3275 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152536) *
               C152282) *
              C152196 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152536) *
               C3275 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C31587 * C152552 + C40451 * C152454) * C6261 +
             ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                C152536 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                 C152169 +
             (C41664 * C152454 + C32193 * C152552) * C6261) *
                C152324) *
               C3275 +
           (((C32943 * C152552 + (C34058 + C34057) * C152454) * C6261 +
             ((C32942 + C32941) * C152552 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
             (C40452 * C152454 + C31891 * C152552) * C6261) *
                C152536) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C3275 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152282) *
              C152630 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C3275 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C32391 * C152552 + (C31890 + C31889) * C152454) * C6261 +
            ((C32404 + C32403) * C152552 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152631 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152627 +
           (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152237 * C152613 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C152237 * C152587) *
              C3415 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152627 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152631 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            (C42750 * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152613 +
           ((C42749 * C152552 + (C42154 + C42153) * C152454) * C6261 +
            ((C33746 + C33745) * C152552 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152278 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C4281) *
               C152285 +
           ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                 C6261 +
             (C40450 * C152552 + C42749 * C152454) * C152169) *
                C4281 -
            (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                 C6261) *
                C152324) *
               C3759) *
              C152521 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C4281) *
               C152278 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152285 +
           (((C43137 * C152552 + (C43148 + C43147) * C152454) * C6261 +
             ((C34058 + C34057) * C152552 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
             (C42750 * C152454 + C40444 * C152552) * C6261) *
                C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152320 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152327 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
               C4953) *
              C152278 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C152327 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152320 -
           (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C4953) *
              C152285 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152320 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C152327 +
           (((C42490 + C42489) * C152552 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C6261 +
            ((C42488 + C42487) * C152552 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C4953) *
              C3759) *
         C152191) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C152631 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C4281) *
              C152627 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C4281 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C152324) *
              C152613 +
          ((((C43420 + C43419) * C152552 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C6261 +
            ((C43148 + C43147) * C152552 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C3275 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C4281) *
               C152282) *
              C152621 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C4281) *
               C3275 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C31587 * C152552 + C40451 * C152454) * C6261 +
             ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                C4281 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                 C152169 +
             (C41664 * C152454 + C32193 * C152552) * C6261) *
                C152324) *
               C3275 +
           (((C32943 * C152552 + (C34058 + C34057) * C152454) * C6261 +
             ((C32942 + C32941) * C152552 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
             (C40452 * C152454 + C31891 * C152552) * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152632 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152629 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
               C152616 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C152552) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C152552) *
                C6261) *
               C152593) *
              C3275 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C152629 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152632 -
           (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C152616 +
           (((C45094 + C45093) * C152552 +
             (C31518 * C9387 + C45085 + C45085 + C152553 * C9399 +
              C31520 * C9389 + C45086 + C45086 + C152482 * C9401) *
                 C152454) *
                C6261 +
            ((C44822 + C44821) * C152552 +
             (C31518 * C9386 + C45087 + C45087 + C152553 * C9398 +
              C31520 * C9391 + C45088 + C45088 + C152482 * C9403) *
                 C152454) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152320 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152327 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C152552 +
              (C42483 + C42484) * C152454) *
                 C6261 +
             ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
                C4953) *
               C3275 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152327 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152320 -
            (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                 C6261) *
                C4953) *
               C152282) *
              C152521 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152327 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152320 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
                C4953) *
               C3275 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152320 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152327 +
            ((C44553 * C152552 + (C42488 + C42487) * C152454) * C6261 +
             ((C35140 + C35139) * C152552 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C3275 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C4281) *
               C152282) *
              C152621 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C4281) *
               C3275 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C31587 * C152552 + C40451 * C152454) * C6261 +
             ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                C4281 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                 C152169 +
             (C41664 * C152454 + C32193 * C152552) * C6261) *
                C152324) *
               C3275 +
           (((C32943 * C152552 + (C34058 + C34057) * C152454) * C6261 +
             ((C32942 + C32941) * C152552 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
             (C40452 * C152454 + C31891 * C152552) * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C152631 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C4281) *
              C152627 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C4281 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C152324) *
              C152613 +
          ((((C43420 + C43419) * C152552 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C6261 +
            ((C43148 + C43147) * C152552 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C1823 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C1824 +
           (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152237 * C1825 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C152237 * C152587) *
              C152521 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C1824 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C1823 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            (C42750 * C152454 + C40444 * C152552) * C6261) *
               C152237 * C1825 +
           ((C42749 * C152552 + (C42154 + C42153) * C152454) * C6261 +
            ((C33746 + C33745) * C152552 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152535 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152282) *
              C829 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152535) *
              C830 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C152535 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152282) *
              C831 +
          (((C32391 * C152552 + (C31890 + C31889) * C152454) * C6261 +
            ((C32404 + C32403) * C152552 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C2359 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C2360 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C152552 +
              (C42483 + C42484) * C152454) *
                 C6261 +
             ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
                C152580) *
               C152535 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C2360 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C2359 -
            (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                 C6261) *
                C152580) *
               C152282) *
              C152521 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C2360 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C2359 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
                C152580) *
               C152535 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C2359 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C2360 +
            ((C44553 * C152552 + (C42488 + C42487) * C152454) * C6261 +
             ((C35140 + C35139) * C152552 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152536 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C1823 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152536) *
              C1824 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152536 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C152324) *
              C1825 +
          ((((C43420 + C43419) * C152552 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C6261 +
            ((C43148 + C43147) * C152552 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152535 +
           ((((C41670 + C41669) * C152552 +
              (C31518 * C1652 + C33526 + C33526 + C152553 * C1676 +
               C31520 * C1653 + C33525 + C33525 + C152482 * C1677) *
                  C152454) *
                 C6261 +
             (C41663 * C152552 + (C34060 + C34059) * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152536) *
               C152282) *
              C353 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152536) *
               C152535 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             ((C34059 + C34060) * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C31587 * C152552 + C40451 * C152454) * C6261 +
             ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                C152536 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                 C152169 +
             (C41664 * C152454 + C32193 * C152552) * C6261) *
                C152324) *
               C152535 +
           (((C32943 * C152552 + (C34058 + C34057) * C152454) * C6261 +
             ((C32942 + C32941) * C152552 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
             (C40452 * C152454 + C31891 * C152552) * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C2973 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C2974 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
               C2975 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C152552) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C152552) *
                C6261) *
               C152593) *
              C152535 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C2974 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C2973 -
           (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C2975 +
           (((C45094 + C45093) * C152552 +
             (C31518 * C9387 + C45085 + C45085 + C152553 * C9399 +
              C31520 * C9389 + C45086 + C45086 + C152482 * C9401) *
                 C152454) *
                C6261 +
            ((C44822 + C44821) * C152552 +
             (C31518 * C9386 + C45087 + C45087 + C152553 * C9398 +
              C31520 * C9391 + C45088 + C45088 + C152482 * C9403) *
                 C152454) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                 C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                    C152552 +
                (C31518 * C359 + C31824 + C31824 + C152553 * C383 +
                 C31520 * C1179 + C31823 + C31823 + C152482 * C1191) *
                    C152454) *
                   C6261 +
               ((C31577 + C31578) * C152552 + (C31882 + C31881) * C152454) *
                   C152169) *
                  C152237 * C152219 * C129 -
              ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
               ((C31881 + C31882) * C152454 + (C31578 + C31577) * C152552) *
                   C6261) *
                  C152237 * C152219 * C130 +
              ((C31587 * C152552 + (C31880 + C31879) * C152454) * C6261 +
               ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                  C152237 * C152219 * C131 -
              (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                   C152169 +
               ((C31888 + C31887) * C152454 + C31588 * C152552) * C6261) *
                  C152237 * C152219 * C132 +
              ((C31589 * C152552 + (C32404 + C32403) * C152454) * C6261 +
               ((C31586 + C31585) * C152552 +
                (C31518 * C366 + C32396 + C32396 + C152553 * C390 +
                 C31520 * C1184 + C32397 + C32397 + C152482 * C1196) *
                    C152454) *
                   C152169) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                  C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                     C152552 +
                 (C40461 + C40462) * C152454) *
                    C6261 +
                ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                   C152237 * C152624 -
               ((C40444 * C152454 + C40445 * C152552) * C152169 +
                ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                    C6261) *
                   C152237 * C152608 +
               (((C40464 + C40463) * C152552 +
                 (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
                  C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                     C152454) *
                    C6261 +
                (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
                   C152237 * C152577) *
                  C353 +
              (((C40443 * C152552 + C40450 * C152454) * C6261 +
                (C40451 * C152552 + C31892 * C152454) * C152169) *
                   C152237 * C152608 -
               ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
                (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                   C152237 * C152624 -
               (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
                ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
                   C152237 * C152577) *
                  C354 +
              (((C31587 * C152552 + C40451 * C152454) * C6261 +
                ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                   C152237 * C152624 -
               (((C31889 + C31890) * C152454 + (C31888 + C31887) * C152552) *
                    C152169 +
                (C40452 * C152454 + C31891 * C152552) * C6261) *
                   C152237 * C152608 +
               ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
                ((C31890 + C31889) * C152552 +
                 (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
                  C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                     C152454) *
                    C152169) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152625 -
           (((C32938 + C32937) * C152454 + (C32183 + C32184) * C152552) *
                C152169 +
            ((C31520 * C1648 + C32904 + C32904 + C152482 * C1672 +
              C31518 * C1179 + C32903 + C32903 + C152553 * C1191) *
                 C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C31518 * C1648 + C33520 + C33520 + C152553 * C1672 +
              C31520 * C3129 + C33519 + C33519 + C152482 * C3137) *
                 C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C152219 * C353 +
          ((((C32184 + C32183) * C152552 + (C32937 + C32938) * C152454) *
                C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152610 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152625 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            ((C35141 + C35142) * C152454 + (C32186 + C32185) * C152552) *
                C6261) *
               C152580) *
              C152219 * C354 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152625 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            ((C32940 + C32939) * C152454 + C32193 * C152552) * C6261) *
               C152610 +
           ((C32194 * C152552 + (C35140 + C35139) * C152454) * C6261 +
            ((C32192 + C32191) * C152552 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C1374 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C1374 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C40461 + C40462) * C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C152552) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
               C6261) *
              C152237 * C1462 +
          (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) * C6261 +
           (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + (C33747 + C33748) * C152552) *
               C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
               C6261) *
              C152237 * C1464 +
          (((C42156 + C42155) * C152552 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C6261 +
           ((C42154 + C42153) * C152552 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152625 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C1373 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + (C34060 + C34059) * C152454) * C152169) *
               C152610 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152625 -
           (((C42487 + C42488) * C152454 + (C35141 + C35142) * C152552) *
                C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C152580) *
              C1374 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152625 -
           (((C31520 * C8069 + C34258 + C34258 + C152482 * C8081 +
              C31518 * C2198 + C34257 + C34257 + C152553 * C2206) *
                 C152454 +
             (C34059 + C34060) * C152552) *
                C152169 +
            ((C31520 * C8070 + C34256 + C34256 + C152482 * C8082 +
              C31518 * C2197 + C34255 + C34255 + C152553 * C2205) *
                 C152454 +
             (C42486 + C42485) * C152552) *
                C6261) *
               C152610 +
           (((C42490 + C42489) * C152552 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C6261 +
            ((C42488 + C42487) * C152552 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C152219 * C152621 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C2360 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C2359 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            ((C35141 + C35142) * C152454 + (C32186 + C32185) * C152552) *
                C6261) *
               C152580) *
              C152219 * C152604 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C2359 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            (C41664 * C152454 + C32193 * C152552) * C6261) *
               C2360 +
           ((C32194 * C152552 + (C35140 + C35139) * C152454) * C6261 +
            ((C32192 + C32191) * C152552 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C152624 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C2360 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C2359 -
           (((C42487 + C42488) * C152454 + (C35141 + C35142) * C152552) *
                C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C152580) *
              C152608 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C2359 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C2360 +
           (((C42490 + C42489) * C152552 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C6261 +
            ((C42488 + C42487) * C152552 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C40461 + C40462) * C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
              C2590 -
          ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
           ((C41669 + C41670) * C152454 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152552) *
               C6261) *
              C2591 +
          (((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152552 +
            (C42483 + C42484) * C152454) *
               C6261 +
           ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
               C152169) *
              C2592 -
          (((C31520 * C9390 + C35556 + C35556 + C152482 * C9402 +
             C31518 * C3130 + C35555 + C35555 + C152553 * C3138) *
                C152454 +
            (C35357 + C35358) * C152552) *
               C152169 +
           ((C31520 * C9388 + C35554 + C35554 + C152482 * C9400 +
             C31518 * C3129 + C35553 + C35553 + C152553 * C3137) *
                C152454 +
            (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
             C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                C152552) *
               C6261) *
              C2593 +
          (((C31518 * C2599 + C34825 + C34825 + C152553 * C2615 +
             C31520 * C17994 + C34826 + C34826 + C152482 * C18002) *
                C152552 +
            (C31518 * C9388 + C44163 + C44163 + C152553 * C9400 +
             C31520 * C18737 + C44164 + C44164 + C152482 * C18741) *
                C152454) *
               C6261 +
           ((C31518 * C2600 + C34827 + C34827 + C152553 * C2616 +
             C31520 * C17993 + C34828 + C34828 + C152482 * C18001) *
                C152552 +
            (C31518 * C9390 + C44165 + C44165 + C152553 * C9402 +
             C31520 * C18738 + C44166 + C44166 + C152482 * C18742) *
                C152454) *
               C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C1373 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152536) *
               C1374 +
           ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                 C6261 +
             (C40450 * C152552 + C42749 * C152454) * C152169) *
                C152536 -
            (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
             ((C31520 * C8070 + C34256 + C34256 + C152482 * C8082 +
               C31518 * C2197 + C34255 + C34255 + C152553 * C2205) *
                  C152454 +
              (C42486 + C42485) * C152552) *
                 C6261) *
                C152324) *
               C152577) *
              C152521 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152536) *
               C1373 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C1374 +
           (((C43137 * C152552 + (C43148 + C43147) * C152454) * C6261 +
             ((C34058 + C34057) * C152552 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
             (C42750 * C152454 + C40444 * C152552) * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152536 -
           (((C32938 + C32937) * C152454 + (C32183 + C32184) * C152552) *
                C152169 +
            ((C31520 * C1648 + C32904 + C32904 + C152482 * C1672 +
              C31518 * C1179 + C32903 + C32903 + C152553 * C1191) *
                 C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C152219 * C829 +
          ((((C32184 + C32183) * C152552 + (C32937 + C32938) * C152454) *
                C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152536) *
              C152219 * C830 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152536 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            ((C32940 + C32939) * C152454 + C32193 * C152552) * C6261) *
               C152324) *
              C152219 * C831 +
          (((C32599 * C152552 + (C32942 + C32941) * C152454) * C6261 +
            ((C32612 + C32611) * C152552 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C2973 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C2974 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
               C2975 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C152552) *
                C152169 +
            ((C31520 * C9388 + C35554 + C35554 + C152482 * C9400 +
              C31518 * C3129 + C35553 + C35553 + C152553 * C3137) *
                 C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C152552) *
                C6261) *
               C152593) *
              C152219 * C152521 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C2974 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C2973 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
               C2975 +
           (((C35358 + C35357) * C152552 + (C44822 + C44821) * C152454) *
                C6261 +
            ((C35356 + C35355) * C152552 +
             (C31518 * C3131 + C35557 + C35557 + C152553 * C3139 +
              C31520 * C18307 + C35558 + C35558 + C152482 * C18309) *
                 C152454) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152624 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152608 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152608 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152624 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C152624 -
           (((C31889 + C31890) * C152454 + (C31888 + C31887) * C152552) *
                C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152608 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C31518 * C359 + C31824 + C31824 + C152553 * C383 + C31520 * C1179 +
             C31823 + C31823 + C152482 * C1191) *
                C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + (C31882 + C31881) * C152454) *
               C152169) *
              C152237 * C152219 * C129 -
          ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
           ((C31881 + C31882) * C152454 + (C31578 + C31577) * C152552) *
               C6261) *
              C152237 * C152219 * C130 +
          ((C31587 * C152552 + (C31880 + C31879) * C152454) * C6261 +
           ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
               C152169 +
           ((C31888 + C31887) * C152454 + C31588 * C152552) * C6261) *
              C152237 * C152219 * C132 +
          ((C31589 * C152552 + (C32404 + C32403) * C152454) * C6261 +
           ((C31586 + C31585) * C152552 +
            (C31518 * C366 + C32396 + C32396 + C152553 * C390 + C31520 * C1184 +
             C32397 + C32397 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C1374 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C1374 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C40461 + C40462) * C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C152552) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
               C6261) *
              C152237 * C1462 +
          (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) * C6261 +
           (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + (C33747 + C33748) * C152552) *
               C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
               C6261) *
              C152237 * C1464 +
          (((C42156 + C42155) * C152552 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C6261 +
           ((C42154 + C42153) * C152552 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C152219 * C152621 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C2360 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C2359 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            ((C35141 + C35142) * C152454 + (C32186 + C32185) * C152552) *
                C6261) *
               C152580) *
              C152219 * C152604 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C2359 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            (C41664 * C152454 + C32193 * C152552) * C6261) *
               C2360 +
           ((C32194 * C152552 + (C35140 + C35139) * C152454) * C6261 +
            ((C32192 + C32191) * C152552 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C152624 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C2360 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C2359 -
           (((C42487 + C42488) * C152454 + (C35141 + C35142) * C152552) *
                C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C152580) *
              C152608 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C2359 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C2360 +
           (((C42490 + C42489) * C152552 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C6261 +
            ((C42488 + C42487) * C152552 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152535 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C4281) *
               C152282) *
              C152196 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C4281) *
               C152535 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C31587 * C152552 + C40451 * C152454) * C6261 +
             ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                C4281 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                 C152169 +
             (C41664 * C152454 + C32193 * C152552) * C6261) *
                C152324) *
               C152535 +
           (((C32943 * C152552 + (C34058 + C34057) * C152454) * C6261 +
             ((C32942 + C32941) * C152552 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
             (C40452 * C152454 + C31891 * C152552) * C6261) *
                C4281) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152320 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152327 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C152552 +
              (C42483 + C42484) * C152454) *
                 C6261 +
             ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
                C4953) *
               C152535 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152327 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152320 -
            (((C42487 + C42488) * C152454 + C44554 * C152552) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                 C6261) *
                C4953) *
               C152282) *
              C3415 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152327 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152320 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
                C4953) *
               C152535 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152320 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152327 +
            ((C44553 * C152552 + (C42488 + C42487) * C152454) * C6261 +
             ((C35140 + C35139) * C152552 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152624 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C4281) *
               C152608 +
           ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                 C6261 +
             (C40450 * C152552 + C42749 * C152454) * C152169) *
                C4281 -
            (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                 C6261) *
                C152324) *
               C152577) *
              C3415 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C4281) *
               C152624 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152608 +
           (((C43137 * C152552 + (C43148 + C43147) * C152454) * C6261 +
             ((C34058 + C34057) * C152552 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
             (C42750 * C152454 + C40444 * C152552) * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C152219 * C152630 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C4281 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            (C41664 * C152454 + C32193 * C152552) * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C32599 * C152552 + (C32942 + C32941) * C152454) * C6261 +
            ((C32612 + C32611) * C152552 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152632 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152629 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
               C152616 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C152552) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C152552) *
                C6261) *
               C152593) *
              C152219 * C3415 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152629 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152632 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
               C152616 +
           (((C35358 + C35357) * C152552 + (C44822 + C44821) * C152454) *
                C6261 +
            ((C35356 + C35355) * C152552 +
             (C31518 * C3131 + C35557 + C35557 + C152553 * C3139 +
              C31520 * C18307 + C35558 + C35558 + C152482 * C18309) *
                 C152454) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152320 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152327 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + C44553 * C152454) * C152169) *
               C4953) *
              C152219 * C152196 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152327 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152320 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C152552) * C6261) *
               C4953) *
              C152219 * C152205 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152320 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            (C41664 * C152454 + C32193 * C152552) * C6261) *
               C152327 +
           ((C32194 * C152552 + (C35140 + C35139) * C152454) * C6261 +
            ((C32192 + C32191) * C152552 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C4953) *
              C152219 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C152219 * C152630 +
          ((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C4281 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            (C41664 * C152454 + C32193 * C152552) * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C32599 * C152552 + (C32942 + C32941) * C152454) * C6261 +
            ((C32612 + C32611) * C152552 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152624 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C4281) *
               C152608 +
           ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                 C6261 +
             (C40450 * C152552 + C42749 * C152454) * C152169) *
                C4281 -
            (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                 C6261) *
                C152324) *
               C152577) *
              C3415 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C4281) *
               C152624 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152608 +
           (((C43137 * C152552 + (C43148 + C43147) * C152454) * C6261 +
             ((C34058 + C34057) * C152552 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
             (C42750 * C152454 + C40444 * C152552) * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152535 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152282) *
              C829 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152535) *
              C830 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C152535 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152282) *
              C831 +
          (((C32391 * C152552 + (C31890 + C31889) * C152454) * C6261 +
            ((C32404 + C32403) * C152552 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C1823 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C1824 +
           (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152237 * C1825 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C152237 * C152587) *
              C152521 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C1824 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C1823 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            (C42750 * C152454 + C40444 * C152552) * C6261) *
               C152237 * C1825 +
           ((C42749 * C152552 + (C42154 + C42153) * C152454) * C6261 +
            ((C33746 + C33745) * C152552 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C152535 +
           ((((C41670 + C41669) * C152552 +
              (C31518 * C1652 + C33526 + C33526 + C152553 * C1676 +
               C31520 * C1653 + C33525 + C33525 + C152482 * C1677) *
                  C152454) *
                 C6261 +
             (C41663 * C152552 + (C34060 + C34059) * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152536) *
               C152282) *
              C353 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152536) *
               C152535 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             ((C34059 + C34060) * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C31587 * C152552 + C40451 * C152454) * C6261 +
             ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
                C152536 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                 C152169 +
             (C41664 * C152454 + C32193 * C152552) * C6261) *
                C152324) *
               C152535 +
           (((C32943 * C152552 + (C34058 + C34057) * C152454) * C6261 +
             ((C32942 + C32941) * C152552 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
             (C40452 * C152454 + C31891 * C152552) * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152536 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C1823 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152536) *
              C1824 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + C42749 * C152454) * C152169) *
               C152536 -
           (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C152552) *
                C6261) *
               C152324) *
              C1825 +
          ((((C43420 + C43419) * C152552 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C6261 +
            ((C43148 + C43147) * C152552 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C152552) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
                C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152624 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152608 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152608 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152624 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C152624 -
           (((C31889 + C31890) * C152454 + (C31888 + C31887) * C152552) *
                C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152608 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C31518 * C359 + C31824 + C31824 + C152553 * C383 + C31520 * C1179 +
             C31823 + C31823 + C152482 * C1191) *
                C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + (C31882 + C31881) * C152454) *
               C152169) *
              C152237 * C152219 * C129 -
          ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
           ((C31881 + C31882) * C152454 + (C31578 + C31577) * C152552) *
               C6261) *
              C152237 * C152219 * C130 +
          ((C31587 * C152552 + (C31880 + C31879) * C152454) * C6261 +
           ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
               C152169 +
           ((C31888 + C31887) * C152454 + C31588 * C152552) * C6261) *
              C152237 * C152219 * C132 +
          ((C31589 * C152552 + (C32404 + C32403) * C152454) * C6261 +
           ((C31586 + C31585) * C152552 +
            (C31518 * C366 + C32396 + C32396 + C152553 * C390 + C31520 * C1184 +
             C32397 + C32397 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152625 -
           (((C32938 + C32937) * C152454 + (C32183 + C32184) * C152552) *
                C152169 +
            ((C31520 * C1648 + C32904 + C32904 + C152482 * C1672 +
              C31518 * C1179 + C32903 + C32903 + C152553 * C1191) *
                 C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C31518 * C1648 + C33520 + C33520 + C152553 * C1672 +
              C31520 * C3129 + C33519 + C33519 + C152482 * C3137) *
                 C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C152219 * C353 +
          ((((C32184 + C32183) * C152552 + (C32937 + C32938) * C152454) *
                C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152610 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152625 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C152552) *
                C152169 +
            ((C35141 + C35142) * C152454 + (C32186 + C32185) * C152552) *
                C6261) *
               C152580) *
              C152219 * C354 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152625 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            ((C32940 + C32939) * C152454 + C32193 * C152552) * C6261) *
               C152610 +
           ((C32194 * C152552 + (C35140 + C35139) * C152454) * C6261 +
            ((C32192 + C32191) * C152552 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C1374 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C1374 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C40461 + C40462) * C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C152552) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
               C6261) *
              C152237 * C1462 +
          (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) * C6261 +
           (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + (C33747 + C33748) * C152552) *
               C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
               C6261) *
              C152237 * C1464 +
          (((C42156 + C42155) * C152552 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C6261 +
           ((C42154 + C42153) * C152552 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152625 -
           ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152552 +
             (C42483 + C42484) * C152454) *
                C6261 +
            ((C32185 + C32186) * C152552 + (C35142 + C35141) * C152454) *
                C152169) *
               C152580) *
              C1373 +
          ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                C6261 +
            (C41663 * C152552 + (C34060 + C34059) * C152454) * C152169) *
               C152610 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152625 -
           (((C42487 + C42488) * C152454 + (C35141 + C35142) * C152552) *
                C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C152552) *
                C6261) *
               C152580) *
              C1374 +
          ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152625 -
           (((C31520 * C8069 + C34258 + C34258 + C152482 * C8081 +
              C31518 * C2198 + C34257 + C34257 + C152553 * C2206) *
                 C152454 +
             (C34059 + C34060) * C152552) *
                C152169 +
            ((C31520 * C8070 + C34256 + C34256 + C152482 * C8082 +
              C31518 * C2197 + C34255 + C34255 + C152553 * C2205) *
                 C152454 +
             (C42486 + C42485) * C152552) *
                C6261) *
               C152610 +
           (((C42490 + C42489) * C152552 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C6261 +
            ((C42488 + C42487) * C152552 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152536 -
           (((C32938 + C32937) * C152454 + (C32183 + C32184) * C152552) *
                C152169 +
            ((C31520 * C1648 + C32904 + C32904 + C152482 * C1672 +
              C31518 * C1179 + C32903 + C32903 + C152553 * C1191) *
                 C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152552) *
                C6261) *
               C152324) *
              C152219 * C829 +
          ((((C32184 + C32183) * C152552 + (C32937 + C32938) * C152454) *
                C6261 +
            ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152536) *
              C152219 * C830 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152536 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C152552) *
                C152169 +
            ((C32940 + C32939) * C152454 + C32193 * C152552) * C6261) *
               C152324) *
              C152219 * C831 +
          (((C32599 * C152552 + (C32942 + C32941) * C152454) * C6261 +
            ((C32612 + C32611) * C152552 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
                C152169 +
            (C41013 * C152454 + C31588 * C152552) * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C152552 +
              (C40461 + C40462) * C152454) *
                 C6261 +
             ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C152552) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C152552) *
                 C6261) *
                C152324) *
               C1373 +
           ((((C41670 + C41669) * C152552 + (C42485 + C42486) * C152454) *
                 C6261 +
             (C41663 * C152552 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C152552) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                 C6261) *
                C152536) *
               C1374 +
           ((((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) *
                 C6261 +
             (C40450 * C152552 + C42749 * C152454) * C152169) *
                C152536 -
            (((C43147 + C43148) * C152454 + C43142 * C152552) * C152169 +
             ((C31520 * C8070 + C34256 + C34256 + C152482 * C8082 +
               C31518 * C2197 + C34255 + C34255 + C152553 * C2205) *
                  C152454 +
              (C42486 + C42485) * C152552) *
                 C6261) *
                C152324) *
               C152577) *
              C152521 +
          (((((C32184 + C32183) * C152552 + C41663 * C152454) * C6261 +
             ((C32182 + C32181) * C152552 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
                C152536) *
               C1373 +
           (((C40443 * C152552 + C40450 * C152454) * C6261 +
             (C40451 * C152552 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C152552) * C152169 +
             (C43142 * C152454 + C41658 * C152552) * C6261) *
                C152324) *
               C1374 +
           (((C43137 * C152552 + (C43148 + C43147) * C152454) * C6261 +
             ((C34058 + C34057) * C152552 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
             (C42750 * C152454 + C40444 * C152552) * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C31518 * C359 + C31824 + C31824 + C152553 * C383 + C31520 * C1179 +
             C31823 + C31823 + C152482 * C1191) *
                C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + (C31882 + C31881) * C152454) *
               C152169) *
              C152237 * C152219 * C129 -
          ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
           ((C31881 + C31882) * C152454 + (C31578 + C31577) * C152552) *
               C6261) *
              C152237 * C152219 * C130 +
          ((C31587 * C152552 + (C31880 + C31879) * C152454) * C6261 +
           ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C32403 + C32404) * C152454 + (C31584 + C31583) * C152552) *
               C152169 +
           ((C31888 + C31887) * C152454 + C31588 * C152552) * C6261) *
              C152237 * C152219 * C132 +
          ((C31589 * C152552 + (C32404 + C32403) * C152454) * C6261 +
           ((C31586 + C31585) * C152552 +
            (C31518 * C366 + C32396 + C32396 + C152553 * C390 + C31520 * C1184 +
             C32397 + C32397 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C152624 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C152608 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C152608 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C152624 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C152624 -
           (((C31889 + C31890) * C152454 + (C31888 + C31887) * C152552) *
                C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C152608 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152552 +
             (C40461 + C40462) * C152454) *
                C6261 +
            ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C152552) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
                C6261) *
               C152237 * C1374 +
           (((C40464 + C40463) * C152552 +
             (C31518 * C1470 + C33290 + C33290 + C152553 * C1486 +
              C31520 * C2197 + C33289 + C33289 + C152482 * C2205) *
                 C152454) *
                C6261 +
            (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C152552 + C40450 * C152454) * C6261 +
            (C40451 * C152552 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C152552) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C152552) * C6261) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C152552) * C152169 +
            ((C33747 + C33748) * C152454 + C40444 * C152552) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C152552 + C40451 * C152454) * C6261 +
            ((C31582 + C31581) * C152552 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C152552) * C152169 +
            (C40452 * C152454 + C31891 * C152552) * C6261) *
               C152237 * C1374 +
           ((C31892 * C152552 + (C33746 + C33745) * C152454) * C6261 +
            ((C31890 + C31889) * C152552 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152552 +
            (C40461 + C40462) * C152454) *
               C6261 +
           ((C31577 + C31578) * C152552 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C152552) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C152552) *
               C6261) *
              C152237 * C1462 +
          (((C40464 + C40463) * C152552 + (C42151 + C42152) * C152454) * C6261 +
           (C40450 * C152552 + (C33748 + C33747) * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + (C33747 + C33748) * C152552) *
               C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C152552) *
               C6261) *
              C152237 * C1464 +
          (((C42156 + C42155) * C152552 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C6261 +
           ((C42154 + C42153) * C152552 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152278 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152285 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152285 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152278 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C3759) *
              C152205 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152278 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152285 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152278 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152285 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C3759) *
              C152196 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152285 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152278 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C3759) *
              C152205 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152278 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152285 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152278 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152285 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152285 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152278 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C3759) *
              C152205 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152278 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152285 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152278 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152285 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C152536 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C3759) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C152278 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152285 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152278 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152285 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152536 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C3759) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C152278 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152285 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152536 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152278 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152536) *
               C152285 +
           (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
              C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
              C15000 + C14682 * C1677) *
                 C152403 * C6261 +
             (C15061 + C15062 + C15063) * C152403 * C152169) *
                C152536 -
            ((C17233 + C17234 + C17235) * C152403 * C152169 +
             (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                 C152403 * C6261) *
                C152324) *
               C3759) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152536) *
               C152278 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152536 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152285 +
           (((C17235 + C17234 + C17233) * C152403 * C6261 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152403 * C152169) *
                C152324 -
            ((C15067 + C15068 + C15069) * C152403 * C152169 +
             (C15063 + C15062 + C15061) * C152403 * C6261) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C3275 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C152282) *
                  C152630 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C152282 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C3275) *
                  C152623 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152237 * C3275 -
               (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                   C152237 * C152282) *
                  C152606 +
              ((C445 * C123 + C451 * C124 + C843 * C125 +
                (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
                   C152237 * C152282 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C152237 * C3275) *
                  C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C152631 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C152627 +
               ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152237 * C152613 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 *
                    C123) *
                   C152237 * C152587) *
                  C3415 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C152627 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C152631 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152237 * C152613 +
               (C1851 * C123 + C1850 * C124 + C1849 * C125 +
                (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 *
                    C126) *
                   C152237 * C152587) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152625 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152610 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152580) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152610 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152625 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C152580) *
               C152282) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152610 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152625 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152625 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152610 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C3275 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C152630 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C3275 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152631 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152627 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152613 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C3415 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152627 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152631 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152613 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152625 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152610 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C152580) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152610 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152625 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C152580) *
               C152282) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152610 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152625 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C152580) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152625 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152610 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C3275 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152282) *
              C152630 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152282 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C3275 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C15583 + C15582 + C15581) * C152403 * C6261 +
            (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
             C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
             C15574 + C14682 * C2823) *
                C152403 * C152169) *
               C152237 * C152282 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152631 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152627 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152613 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C152237 * C152587) *
              C3415 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152627 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152631 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152613 +
           ((C16927 + C16926 + C16925) * C152403 * C6261 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152403 * C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152625 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152610 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C152403 * C6261 +
             (C15363 + C15364 + C15365) * C152403 * C152169) *
                C152580) *
               C3275 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152610 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152625 -
            ((C18326 + C18327 + C18328) * C152403 * C152169 +
             (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
              C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
              C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                 C152403 * C6261) *
                C152580) *
               C152282) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152610 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152625 -
            ((C15369 + C15370 + C15371) * C152403 * C152169 +
             (C15365 + C15364 + C15363) * C152403 * C6261) *
                C152580) *
               C3275 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152625 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152610 +
            ((C18328 + C18327 + C18326) * C152403 * C6261 +
             (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
              C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
              C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                 C152403 * C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152282) *
              C152196 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C152536 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C3275 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152282) *
              C152196 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152205 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152536 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C3275 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152536) *
               C152282) *
              C152196 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152536) *
               C3275 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152536 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C14761 + C14760 + C14759) * C152403 * C6261 +
             (C14762 + C14763 + C14764) * C152403 * C152169) *
                C152536 -
            ((C15793 + C15794 + C15795) * C152403 * C152169 +
             (C15368 + C15367 + C15366) * C152403 * C6261) *
                C152324) *
               C3275 +
           (((C16127 + C16126 + C16125) * C152403 * C6261 +
             (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
              C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
              C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                 C152403 * C152169) *
                C152324 -
            ((C15581 + C15582 + C15583) * C152403 * C152169 +
             (C15066 + C15065 + C15064) * C152403 * C6261) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152631 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152627 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152613 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152237 * C152587) *
              C3415 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152627 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152631 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152613 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 * C126) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C3275 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152282) *
              C152630 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152282 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C3275) *
              C152623 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C3275 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152282) *
              C152606 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
               C152237 * C152282 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
               C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C3275 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C152630 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C3275 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152631 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152627 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152613 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C3415 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152627 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152631 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152613 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C3275 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152282) *
              C152630 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152282 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C3275 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C15583 + C15582 + C15581) * C152403 * C6261 +
            (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
             C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
             C15574 + C14682 * C2823) *
                C152403 * C152169) *
               C152237 * C152282 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152631 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152627 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152613 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C152237 * C152587) *
              C3415 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152627 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152631 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152613 +
           ((C16927 + C16926 + C16925) * C152403 * C6261 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152403 * C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152278 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152285 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C4281 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C3759) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152278 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152285 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152278 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152285 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C3759) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152278 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152285 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C4281 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152278 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C4281) *
               C152285 +
           (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
              C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
              C15000 + C14682 * C1677) *
                 C152403 * C6261 +
             (C15061 + C15062 + C15063) * C152403 * C152169) *
                C4281 -
            ((C17233 + C17234 + C17235) * C152403 * C152169 +
             (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                 C152403 * C6261) *
                C152324) *
               C3759) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C4281) *
               C152278 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C4281 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152285 +
           (((C17235 + C17234 + C17233) * C152403 * C6261 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152403 * C152169) *
                C152324 -
            ((C15067 + C15068 + C15069) * C152403 * C152169 +
             (C15063 + C15062 + C15061) * C152403 * C6261) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152320 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C4953) *
              C152278 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152327 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152320 -
           ((C9704 + C9705 + C9706) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C4953) *
              C152285 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152320 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152327 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152320 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152278 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152327 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152320 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C4953) *
              C152285 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152320 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152327 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152320 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152327 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C4953) *
              C152278 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152327 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152320 -
           ((C18326 + C18327 + C18328) * C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C4953) *
              C152285 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152320 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152327 +
           ((C14683 * C1653 + C16710 + C16710 + C14680 * C1677 +
             C14685 * C9387 + C16711 + C16711 + C14681 * C9399 +
             C14687 * C9389 + C16712 + C16712 + C14682 * C9401) *
                C152403 * C6261 +
            (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
             C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
             C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                C152403 * C152169) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C4281 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 *
                     C123) *
                    C152324) *
                   C3275 +
               (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152324 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 *
                     C123) *
                    C4281) *
                   C152282) *
                  C152621 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152324 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C4281) *
                   C3275 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C4281 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152324) *
                   C152282) *
                  C152604 +
              (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                    C4281 -
                (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                    C152324) *
                   C3275 +
               ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
                 (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                     C126) *
                    C152324 -
                (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                    C4281) *
                   C152282) *
                  C152571) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C4281 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C152324) *
                  C152631 +
              (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C152324 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C4281) *
                  C152627 +
              (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C4281 -
               (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                    C123) *
                   C152324) *
                  C152613 +
              (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 *
                    C123 +
                (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 *
                    C124 +
                (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 *
                    C125 +
                (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 *
                    C126) *
                   C152324 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 *
                    C123) *
                   C4281) *
                  C152587) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152632 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152616 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C3275 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152629 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152632 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152616 +
           ((C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C152403 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152418 * C3138) * C152403 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C152403 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152403 * C126) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152282) *
              C152621 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C4281 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C3275 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152631 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C4281) *
              C152627 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C4281 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C152613 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152632 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152616 -
           ((C9917 + C9918 + C9909) * C152169 +
            (C10129 * C6260 + C10130 * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C3275 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152629 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152632 -
           ((C9704 + C9705 + C9706) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152616 +
           ((C10130 * C6258 + C10129 * C6259 +
             (C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C6260) *
                C6261 +
            (C9916 * C6258 + C9915 * C6259 +
             (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C6260) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C4281 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C3275 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C4281) *
               C152282) *
              C152621 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C4281) *
               C3275 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C4281 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C14761 + C14760 + C14759) * C152403 * C6261 +
             (C14762 + C14763 + C14764) * C152403 * C152169) *
                C4281 -
            ((C15793 + C15794 + C15795) * C152403 * C152169 +
             (C15368 + C15367 + C15366) * C152403 * C6261) *
                C152324) *
               C3275 +
           (((C16127 + C16126 + C16125) * C152403 * C6261 +
             (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
              C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
              C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                 C152403 * C152169) *
                C152324 -
            ((C15581 + C15582 + C15583) * C152403 * C152169 +
             (C15066 + C15065 + C15064) * C152403 * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C4281 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C152631 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152324 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C4281) *
              C152627 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C4281 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152324) *
              C152613 +
          (((C14683 * C2197 + C17430 + C17430 + C14680 * C2205 +
             C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
             C14687 * C10112 + C17432 + C17432 + C14682 * C10116) *
                C152403 * C6261 +
            (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
             C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
             C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                C152403 * C152169) *
               C152324 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152632 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152629 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152616 -
           ((C18541 + C18542 + C18543) * C152403 * C152169 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C152403 * C6261) *
               C152593) *
              C3275 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152629 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152632 -
           ((C18326 + C18327 + C18328) * C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C152616 +
           ((C14683 * C3129 + C18744 + C18744 + C14680 * C3137 +
             C14685 * C9388 + C18745 + C18745 + C14681 * C9400 +
             C14687 * C18737 + C18746 + C18746 + C14682 * C18741) *
                C152403 * C6261 +
            (C14683 * C3130 + C18747 + C18747 + C14680 * C3138 +
             C14685 * C9390 + C18748 + C18748 + C14681 * C9402 +
             C14687 * C18738 + C18749 + C18749 + C14682 * C18742) *
                C152403 * C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152320 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C4953) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152327 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152320 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C4953) *
               C152282) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152327 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152320 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C4953) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152320 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152327 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152320 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152327 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152320 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C4953) *
               C152282) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152327 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152320 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152320 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152327 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152320 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152327 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C152403 * C6261 +
             (C15363 + C15364 + C15365) * C152403 * C152169) *
                C4953) *
               C3275 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152327 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152320 -
            ((C18326 + C18327 + C18328) * C152403 * C152169 +
             (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
              C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
              C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                 C152403 * C6261) *
                C4953) *
               C152282) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152327 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152320 -
            ((C15369 + C15370 + C15371) * C152403 * C152169 +
             (C15365 + C15364 + C15363) * C152403 * C6261) *
                C4953) *
               C3275 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152320 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152327 +
            ((C18328 + C18327 + C18326) * C152403 * C6261 +
             (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
              C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
              C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                 C152403 * C152169) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152631 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152324 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C4281) *
              C152627 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C4281 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152324) *
              C152613 +
          (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 * C126) *
               C152324 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152282) *
              C152621 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152604 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152282) *
              C152621 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C4281 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C3275 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152631 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C4281) *
              C152627 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C4281 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C152613 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C4281 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C3275 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C4281) *
               C152282) *
              C152621 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C4281) *
               C3275 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C4281 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C14761 + C14760 + C14759) * C152403 * C6261 +
             (C14762 + C14763 + C14764) * C152403 * C152169) *
                C4281 -
            ((C15793 + C15794 + C15795) * C152403 * C152169 +
             (C15368 + C15367 + C15366) * C152403 * C6261) *
                C152324) *
               C3275 +
           (((C16127 + C16126 + C16125) * C152403 * C6261 +
             (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
              C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
              C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                 C152403 * C152169) *
                C152324 -
            ((C15581 + C15582 + C15583) * C152403 * C152169 +
             (C15066 + C15065 + C15064) * C152403 * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C4281 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C152631 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152324 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C4281) *
              C152627 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C4281 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152324) *
              C152613 +
          (((C14683 * C2197 + C17430 + C17430 + C14680 * C2205 +
             C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
             C14687 * C10112 + C17432 + C17432 + C14682 * C10116) *
                C152403 * C6261 +
            (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
             C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
             C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                C152403 * C152169) *
               C152324 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C152535 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C152282) *
                  C829 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C152282 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C152535) *
                  C830 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152237 * C152535 -
               (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                   C152237 * C152282) *
                  C831 +
              ((C445 * C123 + C451 * C124 + C843 * C125 +
                (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
                   C152237 * C152282 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C152237 * C152535) *
                  C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C1823 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C1824 +
               ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152237 * C1825 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 *
                    C123) *
                   C152237 * C152587) *
                  C152521 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C1824 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C1823 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152237 * C1825 +
               (C1851 * C123 + C1850 * C124 + C1849 * C125 +
                (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 *
                    C126) *
                   C152237 * C152587) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C2359 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C2360 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152580) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C2360 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C2359 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C152580) *
               C152282) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C2359 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C2360 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152535 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C829 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152535) *
              C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152535 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C831 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1823 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1824 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C1825 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C152521 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1824 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1823 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C1825 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C2359 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C152580) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C2360 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C2359 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C152580) *
               C152282) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C2360 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C2359 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C152580) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C2359 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C2360 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152535 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152282) *
              C829 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152282 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152535) *
              C830 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152535 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152282) *
              C831 +
          (((C15583 + C15582 + C15581) * C152403 * C6261 +
            (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
             C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
             C15574 + C14682 * C2823) *
                C152403 * C152169) *
               C152237 * C152282 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C1823 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C1824 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C1825 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C152237 * C152587) *
              C152521 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C1824 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C1823 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C1825 +
           ((C16927 + C16926 + C16925) * C152403 * C6261 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152403 * C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C2359 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C2360 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C152403 * C6261 +
             (C15363 + C15364 + C15365) * C152403 * C152169) *
                C152580) *
               C152535 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C2360 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C2359 -
            ((C18326 + C18327 + C18328) * C152403 * C152169 +
             (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
              C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
              C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                 C152403 * C6261) *
                C152580) *
               C152282) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C2360 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C2359 -
            ((C15369 + C15370 + C15371) * C152403 * C152169 +
             (C15365 + C15364 + C15363) * C152403 * C6261) *
                C152580) *
               C152535 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C2359 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C2360 +
            ((C18328 + C18327 + C18326) * C152403 * C6261 +
             (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
              C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
              C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                 C152403 * C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C152536 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 *
                     C123) *
                    C152324) *
                   C152535 +
               (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152324 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 *
                     C123) *
                    C152536) *
                   C152282) *
                  C353 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152324 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C152536) *
                   C152535 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C152536 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152324) *
                   C152282) *
                  C354 +
              (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                    C152536 -
                (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                    C152324) *
                   C152535 +
               ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
                 (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                     C126) *
                    C152324 -
                (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                    C152536) *
                   C152282) *
                  C152571) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152536 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C152324) *
                  C1823 +
              (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C152324 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152536) *
                  C1824 +
              (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152536 -
               (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                    C123) *
                   C152324) *
                  C1825 +
              (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 *
                    C123 +
                (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 *
                    C124 +
                (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 *
                    C125 +
                (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 *
                    C126) *
                   C152324 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 *
                    C123) *
                   C152536) *
                  C152587) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C152535 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2974 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C2973 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C2975 +
           ((C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C152403 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152418 * C3138) * C152403 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C152403 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152403 * C126) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 +
              (C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C6260) *
                 C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152282) *
              C353 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C152536 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C152535 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C1823 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152536) *
              C1824 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152536 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C1825 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2973 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C2975 -
           ((C9917 + C9918 + C9909) * C152169 +
            (C10129 * C6260 + C10130 * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C152535 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C2974 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C2973 -
           ((C9704 + C9705 + C9706) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C2975 +
           ((C10130 * C6258 + C10129 * C6259 +
             (C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C6260) *
                C6261 +
            (C9916 * C6258 + C9915 * C6259 +
             (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C6260) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152536 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152535 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152536) *
               C152282) *
              C353 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152536) *
               C152535 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152536 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C14761 + C14760 + C14759) * C152403 * C6261 +
             (C14762 + C14763 + C14764) * C152403 * C152169) *
                C152536 -
            ((C15793 + C15794 + C15795) * C152403 * C152169 +
             (C15368 + C15367 + C15366) * C152403 * C6261) *
                C152324) *
               C152535 +
           (((C16127 + C16126 + C16125) * C152403 * C6261 +
             (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
              C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
              C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                 C152403 * C152169) *
                C152324 -
            ((C15581 + C15582 + C15583) * C152403 * C152169 +
             (C15066 + C15065 + C15064) * C152403 * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152536 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C1823 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152324 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152536) *
              C1824 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152536 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152324) *
              C1825 +
          (((C14683 * C2197 + C17430 + C17430 + C14680 * C2205 +
             C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
             C14687 * C10112 + C17432 + C17432 + C14682 * C10116) *
                C152403 * C6261 +
            (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
             C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
             C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                C152403 * C152169) *
               C152324 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C2973 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C2974 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C2975 -
           ((C18541 + C18542 + C18543) * C152403 * C152169 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C152403 * C6261) *
               C152593) *
              C152535 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C2974 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C2973 -
           ((C18326 + C18327 + C18328) * C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C2975 +
           ((C14683 * C3129 + C18744 + C18744 + C14680 * C3137 +
             C14685 * C9388 + C18745 + C18745 + C14681 * C9400 +
             C14687 * C18737 + C18746 + C18746 + C14682 * C18741) *
                C152403 * C6261 +
            (C14683 * C3130 + C18747 + C18747 + C14680 * C3138 +
             C14685 * C9390 + C18748 + C18748 + C14681 * C9402 +
             C14687 * C18738 + C18749 + C18749 + C14682 * C18742) *
                C152403 * C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152237 * C152219 * C129 -
              (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                  C152237 * C152219 * C130 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                  C152237 * C152219 * C131 -
              (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C152237 * C152219 * C132 +
              (C202 * C123 + C203 * C124 + C204 * C125 +
               (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
                  C152237 * C152219 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C152624 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C152608 +
               ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152237 * C152577) *
                  C353 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C152608 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C152624 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152237 * C152577) *
                  C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152237 * C152624 -
               ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
                C451 * C125 + C445 * C124 + C446 * C123) *
                   C152237 * C152608 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
                   C152237 * C152577) *
                  C152571) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152625 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C152610 +
               ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152580) *
                  C152219 * C353 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                   C152610 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152625 -
               (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) *
                   C152580) *
                  C152219 * C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152625 -
               ((C134 * C611 + C664 + C664 + C152418 * C635) * C152403 * C126 +
                C696 * C125 + C690 * C124 + C691 * C123) *
                   C152610 +
               (C694 * C123 + C695 * C124 + C697 * C125 +
                (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
                   C152580) *
                  C152219 * C152571) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C1373 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C1374 +
               ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152237 * C152577) *
                  C152621 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C1374 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C1373 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152237 * C152577) *
                  C152604 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152237 * C1373 -
               (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                   C152237 * C1374 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
                   C152237 * C152577) *
                  C152571) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152237 * C1461 -
              (C445 * C126 + C446 * C125 + C447 * C124 +
               (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                  C152237 * C1462 +
              ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
               C448 * C124 + C449 * C125 + C450 * C126) *
                  C152237 * C1463 -
              ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 *
                   C126 +
               (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 *
                   C125 +
               (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 *
                   C124 +
               (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 *
                   C123) *
                  C152237 * C1464 +
              ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 *
                   C123 +
               (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 *
                   C124 +
               (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 *
                   C125 +
               (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 *
                   C126) *
                  C152237 * C1465) *
             C152191 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152625 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C152610 +
               ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152580) *
                  C1373 +
              (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C152610 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152625 -
               ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 *
                    C126 +
                (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 *
                    C125 +
                (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 *
                    C124 +
                (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                    C123) *
                   C152580) *
                  C1374 +
              (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152625 -
               ((C134 * C1649 + C1686 + C1686 + C152418 * C1673) * C152403 *
                    C126 +
                (C134 * C1650 + C1687 + C1687 + C152418 * C1674) * C152403 *
                    C125 +
                (C134 * C1651 + C1688 + C1688 + C152418 * C1675) * C152403 *
                    C124 +
                (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                    C123) *
                   C152610 +
               ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 *
                    C123 +
                (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 *
                    C124 +
                (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 *
                    C125 +
                (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 *
                    C126) *
                   C152580) *
                  C152577) *
             C152191 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C2359 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C2360 +
               ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152580) *
                  C152219 * C152621 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
               (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) *
                   C152580) *
                  C152219 * C152604 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
               (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
               (C694 * C123 + C695 * C124 + C697 * C125 +
                (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
                   C152580) *
                  C152219 * C152571) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C2359 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C2360 +
               ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152580) *
                  C152624 +
              (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C2360 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C2359 -
               ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 *
                    C126 +
                (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 *
                    C125 +
                (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 *
                    C124 +
                (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                    C123) *
                   C152580) *
                  C152608 +
              (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C2359 -
               (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                    C123) *
                   C2360 +
               ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 *
                    C123 +
                (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 *
                    C124 +
                (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 *
                    C125 +
                (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 *
                    C126) *
                   C152580) *
                  C152577) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C2590 -
          (C690 * C126 + C691 * C125 + C692 * C124 +
           (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
              C2591 +
          ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
           C693 * C124 + C694 * C125 + C695 * C126) *
              C2592 -
          ((C134 * C2595 + C2620 + C2620 + C152418 * C2611) * C152403 * C126 +
           (C134 * C2596 + C2621 + C2621 + C152418 * C2612) * C152403 * C125 +
           (C134 * C2597 + C2622 + C2622 + C152418 * C2613) * C152403 * C124 +
           (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
              C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C152403 * C123 +
           (C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C152403 * C124 +
           (C134 * C2601 + C2626 + C2626 + C152418 * C2617) * C152403 * C125 +
           (C134 * C2602 + C2627 + C2627 + C152418 * C2618) * C152403 * C126) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C6259 +
             (C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C353 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152610 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152625 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152625 -
           ((C2062 * C6260 + C1222 * C6259 + C682 * C6258) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152610 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C1373 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152610 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152625 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C1374 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152625 -
           (((C134 * C8071 + C8100 + C8100 + C152418 * C8083) * C6260 +
             C7477 * C6259 + C2064 * C6258) *
                C152169 +
            ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
             C8116 * C6259 + C7475 * C6258) *
                C6261) *
               C152610 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C2360 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C2359 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C2359 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C2360 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152624 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C2360 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C2359 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C152608 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C2359 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C2360 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C2590 -
          ((C6749 + C6750 + C6751) * C152169 +
           (C7475 * C6260 + C7476 * C6259 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
               C6261) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
            C8114 * C6259 + C8115 * C6260) *
               C6261 +
           (C6752 + C6753 + C6769) * C152169) *
              C2592 -
          (((C134 * C9386 + C9405 + C9405 + C152418 * C9398) * C6260 +
            (C134 * C3130 + C3143 + C3143 + C152418 * C3138) * C6259 +
            C2996 * C6258) *
               C152169 +
           ((C134 * C9387 + C9406 + C9406 + C152418 * C9399) * C6260 +
            (C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C6259 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
               C6261) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C6258 +
            (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C6259 +
            (C134 * C9389 + C9408 + C9408 + C152418 * C9401) * C6260) *
               C6261 +
           ((C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C6258 +
            (C134 * C9390 + C9409 + C9409 + C152418 * C9402) * C6259 +
            (C134 * C9391 + C9410 + C9410 + C152418 * C9403) * C6260) *
               C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C152219 * C129 -
          ((C14759 + C14760 + C14761) * C152403 * C152169 +
           (C14758 + C14757 + C14756) * C152403 * C6261) *
              C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C152403 * C6261 +
           (C14762 + C14763 + C14764) * C152403 * C152169) *
              C152237 * C152219 * C131 -
          ((C14765 + C14766 + C14767) * C152403 * C152169 +
           (C14764 + C14763 + C14762) * C152403 * C6261) *
              C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C152403 * C6261 +
           (C14683 * C141 + C14729 + C14729 + C14680 * C157 + C14685 * C611 +
            C14730 + C14730 + C14681 * C635 + C14687 * C612 + C14731 + C14731 +
            C14682 * C636) *
               C152403 * C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152624 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152608 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152608 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152624 -
           ((C14687 * C1645 + C15028 + C15028 + C14682 * C1669 +
             C14685 * C1182 + C15029 + C15029 + C14681 * C1194 + C14683 * C356 +
             C15030 + C15030 + C14680 * C380) *
                C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152625 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C152219 * C353 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152610 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152625 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C152580) *
              C152219 * C354 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152625 -
           ((C14687 * C2595 + C15330 + C15330 + C14682 * C2611 + C14685 * C608 +
             C15331 + C15331 + C14681 * C632 + C14683 * C601 + C15332 + C15332 +
             C14680 * C625) *
                C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152610 +
           ((C15371 + C15370 + C15369) * C152403 * C6261 +
            (C14683 * C608 + C15333 + C15333 + C14680 * C632 + C14685 * C2595 +
             C15334 + C15334 + C14681 * C2611 + C14687 * C2602 + C15335 +
             C15335 + C14682 * C2618) *
                C152403 * C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C1374 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C1374 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C1461 -
          ((C15058 + C15059 + C15060) * C152403 * C152169 +
           (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14683 * C359 + C14997 + C14997 +
            C14680 * C383) *
               C152403 * C6261) *
              C152237 * C1462 +
          ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
            C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
            C15000 + C14682 * C1677) *
               C152403 * C6261 +
           (C15061 + C15062 + C15063) * C152403 * C152169) *
              C152237 * C1463 -
          ((C14687 * C8069 + C16468 + C16468 + C14682 * C8081 + C14685 * C2198 +
            C16469 + C16469 + C14681 * C2206 + C14683 * C1469 + C16470 +
            C16470 + C14680 * C1485) *
               C152403 * C152169 +
           (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 + C14685 * C2197 +
            C16472 + C16472 + C14681 * C2205 + C14683 * C1470 + C16473 +
            C16473 + C14680 * C1486) *
               C152403 * C6261) *
              C152237 * C1464 +
          ((C14683 * C1471 + C16474 + C16474 + C14680 * C1487 + C14685 * C8072 +
            C16475 + C16475 + C14681 * C8084 + C14687 * C8073 + C16476 +
            C16476 + C14682 * C8085) *
               C152403 * C6261 +
           (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 + C14685 * C8071 +
            C16478 + C16478 + C14681 * C8083 + C14687 * C8074 + C16479 +
            C16479 + C14682 * C8086) *
               C152403 * C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152625 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C1373 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152610 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152625 -
           ((C14687 * C9390 + C16698 + C16698 + C14682 * C9402 +
             C14685 * C3130 + C16699 + C16699 + C14681 * C3138 +
             C14683 * C1647 + C16700 + C16700 + C14680 * C1671) *
                C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C152580) *
              C1374 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152625 -
           ((C14687 * C9386 + C16704 + C16704 + C14682 * C9398 +
             C14685 * C1654 + C16705 + C16705 + C14681 * C1678 +
             C14683 * C1651 + C16706 + C16706 + C14680 * C1675) *
                C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152610 +
           ((C14683 * C1653 + C16710 + C16710 + C14680 * C1677 +
             C14685 * C9387 + C16711 + C16711 + C14681 * C9399 +
             C14687 * C9389 + C16712 + C16712 + C14682 * C9401) *
                C152403 * C6261 +
            (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
             C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
             C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                C152403 * C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C2359 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C2360 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C2359 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C152580) *
              C152219 * C152604 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C2359 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C2360 +
           ((C15371 + C15370 + C15369) * C152403 * C6261 +
            (C14683 * C608 + C15333 + C15333 + C14680 * C632 + C14685 * C2595 +
             C15334 + C15334 + C14681 * C2611 + C14687 * C2602 + C15335 +
             C15335 + C14682 * C2618) *
                C152403 * C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C2359 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C152624 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C2360 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C2359 -
           ((C14687 * C9390 + C16698 + C16698 + C14682 * C9402 +
             C14685 * C3130 + C16699 + C16699 + C14681 * C3138 +
             C14683 * C1647 + C16700 + C16700 + C14680 * C1671) *
                C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C152580) *
              C152608 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C2359 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C2360 +
           ((C14683 * C1653 + C16710 + C16710 + C14680 * C1677 +
             C14685 * C9387 + C16711 + C16711 + C14681 * C9399 +
             C14687 * C9389 + C16712 + C16712 + C14682 * C9401) *
                C152403 * C6261 +
            (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
             C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
             C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                C152403 * C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C2590 -
          ((C15360 + C15361 + C15362) * C152403 * C152169 +
           (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
            C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
            C14680 * C628) *
               C152403 * C6261) *
              C2591 +
          ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
            C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
            C15302 + C14682 * C2615) *
               C152403 * C6261 +
           (C15363 + C15364 + C15365) * C152403 * C152169) *
              C2592 -
          ((C14687 * C17993 + C18006 + C18006 + C14682 * C18001 +
            C14685 * C2600 + C18007 + C18007 + C14681 * C2616 + C14683 * C2597 +
            C18008 + C18008 + C14680 * C2613) *
               C152403 * C152169 +
           (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
            C14685 * C2599 + C18010 + C18010 + C14681 * C2615 + C14683 * C2598 +
            C18011 + C18011 + C14680 * C2614) *
               C152403 * C6261) *
              C2593 +
          ((C14683 * C2599 + C18012 + C18012 + C14680 * C2615 +
            C14685 * C17994 + C18013 + C18013 + C14681 * C18002 +
            C14687 * C17995 + C18014 + C18014 + C14682 * C18003) *
               C152403 * C6261 +
           (C14683 * C2600 + C18015 + C18015 + C14680 * C2616 +
            C14685 * C17993 + C18016 + C18016 + C14681 * C18001 +
            C14687 * C17996 + C18017 + C18017 + C14682 * C18004) *
               C152403 * C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152536 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C152324) *
                  C152219 * C829 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                   C152324 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152536) *
                  C152219 * C830 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152536 -
               (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                   C152324) *
                  C152219 * C831 +
              ((C690 * C123 + C696 * C124 + C985 * C125 +
                (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
                   C152324 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C152536) *
                  C152219 * C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C152536 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 *
                     C123) *
                    C152324) *
                   C1373 +
               (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152324 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 *
                     C123) *
                    C152536) *
                   C1374 +
               (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                 C448 * C124 + C449 * C125 + C450 * C126) *
                    C152536 -
                (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                 (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                     C123) *
                    C152324) *
                   C152577) *
                  C152521 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152324 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C152536) *
                   C1373 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C152536 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152324) *
                   C1374 +
               ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
                 (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                     C126) *
                    C152324 -
                (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                    C152536) *
                   C152577) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C152219 * C152521 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2974 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2973 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C2975 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152418 * C2979) * C152403 * C126) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C829 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152536) *
              C152219 * C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152536 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C831 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C1373 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C1374 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C152536 -
            ((C8621 + C8615 + C8616) * C152169 +
             ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
              C8116 * C6259 + C7475 * C6258) *
                 C6261) *
                C152324) *
               C152577) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C1373 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C1374 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2973 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C2975 -
           ((C9917 + C9918 + C9909) * C152169 +
            ((C134 * C9387 + C9406 + C9406 + C152418 * C9399) * C6260 +
             (C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C152219 * C152521 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C2974 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C2973 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C2975 +
           ((C9909 + C9918 + C9917) * C6261 +
            (C2995 * C6258 +
             (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C6259 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C6260) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152536 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C152219 * C829 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152324 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152536) *
              C152219 * C830 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152536 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152324) *
              C152219 * C831 +
          (((C15795 + C15794 + C15793) * C152403 * C6261 +
            (C14683 * C609 + C15784 + C15784 + C14680 * C633 + C14685 * C610 +
             C15785 + C15785 + C14681 * C634 + C14687 * C2977 + C15786 +
             C15786 + C14682 * C2979) *
                C152403 * C152169) *
               C152324 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152536 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C1373 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152536) *
               C1374 +
           (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
              C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
              C15000 + C14682 * C1677) *
                 C152403 * C6261 +
             (C15061 + C15062 + C15063) * C152403 * C152169) *
                C152536 -
            ((C17233 + C17234 + C17235) * C152403 * C152169 +
             (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                 C152403 * C6261) *
                C152324) *
               C152577) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152536) *
               C1373 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152536 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C1374 +
           (((C17235 + C17234 + C17233) * C152403 * C6261 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152403 * C152169) *
                C152324 -
            ((C15067 + C15068 + C15069) * C152403 * C152169 +
             (C15063 + C15062 + C15061) * C152403 * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C2973 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C2974 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C2975 -
           ((C18541 + C18542 + C18543) * C152403 * C152169 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C152403 * C6261) *
               C152593) *
              C152219 * C152521 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C2974 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C2973 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C2975 +
           ((C18543 + C18542 + C18541) * C152403 * C6261 +
            (C14683 * C2596 + C18532 + C18532 + C14680 * C2612 +
             C14685 * C2601 + C18533 + C18533 + C14681 * C2617 +
             C14687 * C18522 + C18534 + C18534 + C14682 * C18524) *
                C152403 * C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C152219 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
              C152219 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
              C152219 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
              C152219 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152624 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152608 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152608 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152624 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152624 -
           ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152237 * C152608 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152219 * C152621 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
              C152219 * C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152624 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2360 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C2359 -
           ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152580) *
              C152608 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C2359 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C2360 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C2360 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C2359 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C2359 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C2360 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152624 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C2360 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C2359 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C152608 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C2359 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C2360 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C152219 * C129 -
          ((C14759 + C14760 + C14761) * C152403 * C152169 +
           (C14758 + C14757 + C14756) * C152403 * C6261) *
              C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C152403 * C6261 +
           (C14762 + C14763 + C14764) * C152403 * C152169) *
              C152237 * C152219 * C131 -
          ((C14765 + C14766 + C14767) * C152403 * C152169 +
           (C14764 + C14763 + C14762) * C152403 * C6261) *
              C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C152403 * C6261 +
           (C14683 * C141 + C14729 + C14729 + C14680 * C157 + C14685 * C611 +
            C14730 + C14730 + C14681 * C635 + C14687 * C612 + C14731 + C14731 +
            C14682 * C636) *
               C152403 * C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152624 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152608 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152608 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152624 -
           ((C14687 * C1645 + C15028 + C15028 + C14682 * C1669 +
             C14685 * C1182 + C15029 + C15029 + C14681 * C1194 + C14683 * C356 +
             C15030 + C15030 + C14680 * C380) *
                C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C1374 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C1374 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C1461 -
          ((C15058 + C15059 + C15060) * C152403 * C152169 +
           (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14683 * C359 + C14997 + C14997 +
            C14680 * C383) *
               C152403 * C6261) *
              C152237 * C1462 +
          ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
            C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
            C15000 + C14682 * C1677) *
               C152403 * C6261 +
           (C15061 + C15062 + C15063) * C152403 * C152169) *
              C152237 * C1463 -
          ((C14687 * C8069 + C16468 + C16468 + C14682 * C8081 + C14685 * C2198 +
            C16469 + C16469 + C14681 * C2206 + C14683 * C1469 + C16470 +
            C16470 + C14680 * C1485) *
               C152403 * C152169 +
           (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 + C14685 * C2197 +
            C16472 + C16472 + C14681 * C2205 + C14683 * C1470 + C16473 +
            C16473 + C14680 * C1486) *
               C152403 * C6261) *
              C152237 * C1464 +
          ((C14683 * C1471 + C16474 + C16474 + C14680 * C1487 + C14685 * C8072 +
            C16475 + C16475 + C14681 * C8084 + C14687 * C8073 + C16476 +
            C16476 + C14682 * C8085) *
               C152403 * C6261 +
           (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 + C14685 * C8071 +
            C16478 + C16478 + C14681 * C8083 + C14687 * C8074 + C16479 +
            C16479 + C14682 * C8086) *
               C152403 * C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C2359 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C2360 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C2359 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C152580) *
              C152219 * C152604 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C2359 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C2360 +
           ((C15371 + C15370 + C15369) * C152403 * C6261 +
            (C14683 * C608 + C15333 + C15333 + C14680 * C632 + C14685 * C2595 +
             C15334 + C15334 + C14681 * C2611 + C14687 * C2602 + C15335 +
             C15335 + C14682 * C2618) *
                C152403 * C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C2359 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C152624 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C2360 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C2359 -
           ((C14687 * C9390 + C16698 + C16698 + C14682 * C9402 +
             C14685 * C3130 + C16699 + C16699 + C14681 * C3138 +
             C14683 * C1647 + C16700 + C16700 + C14680 * C1671) *
                C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C152580) *
              C152608 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C2359 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C2360 +
           ((C14683 * C1653 + C16710 + C16710 + C14680 * C1677 +
             C14685 * C9387 + C16711 + C16711 + C14681 * C9399 +
             C14687 * C9389 + C16712 + C16712 + C14682 * C9401) *
                C152403 * C6261 +
            (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
             C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
             C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                C152403 * C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152282) *
              C152196 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C4281 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C152535 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152282) *
              C152196 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152205 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C152535 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C4281 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152535 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C4281) *
               C152282) *
              C152196 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C4281) *
               C152535 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C4281 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C14761 + C14760 + C14759) * C152403 * C6261 +
             (C14762 + C14763 + C14764) * C152403 * C152169) *
                C4281 -
            ((C15793 + C15794 + C15795) * C152403 * C152169 +
             (C15368 + C15367 + C15366) * C152403 * C6261) *
                C152324) *
               C152535 +
           (((C16127 + C16126 + C16125) * C152403 * C6261 +
             (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
              C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
              C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                 C152403 * C152169) *
                C152324 -
            ((C15581 + C15582 + C15583) * C152403 * C152169 +
             (C15066 + C15065 + C15064) * C152403 * C6261) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152320 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C4953) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152327 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152320 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C4953) *
               C152282) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152327 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152320 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C4953) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152320 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152327 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152320 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152327 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152320 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C4953) *
               C152282) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152327 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152320 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152320 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152327 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152320 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152327 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C152403 * C6261 +
             (C15363 + C15364 + C15365) * C152403 * C152169) *
                C4953) *
               C152535 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152327 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152320 -
            ((C18326 + C18327 + C18328) * C152403 * C152169 +
             (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
              C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
              C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                 C152403 * C6261) *
                C4953) *
               C152282) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152327 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152320 -
            ((C15369 + C15370 + C15371) * C152403 * C152169 +
             (C15365 + C15364 + C15363) * C152403 * C6261) *
                C4953) *
               C152535 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152320 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152327 +
            ((C18328 + C18327 + C18326) * C152403 * C6261 +
             (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
              C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
              C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                 C152403 * C152169) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C4281 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                   C152324) *
                  C152219 * C152630 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                   C152324 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C4281) *
                  C152219 * C152623 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
               (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                   C152324) *
                  C152219 * C152606 +
              ((C690 * C123 + C696 * C124 + C985 * C125 +
                (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
                   C152324 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C4281) *
                  C152219 * C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C4281 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 *
                     C123) *
                    C152324) *
                   C152624 +
               (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152324 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 *
                     C123) *
                    C4281) *
                   C152608 +
               (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                 C448 * C124 + C449 * C125 + C450 * C126) *
                    C4281 -
                (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                 (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                     C123) *
                    C152324) *
                   C152577) *
                  C3415 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152324 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C4281) *
                   C152624 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C4281 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152324) *
                   C152608 +
               ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
                 (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                     C126) *
                    C152324 -
                (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                    C4281) *
                   C152577) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152632 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152616 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C152219 * C3415 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152629 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152632 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152616 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152418 * C2979) * C152403 * C126) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C152630 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C4281 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152624 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152608 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C4281 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C152577) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152624 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152608 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152632 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152616 -
           ((C9917 + C9918 + C9909) * C152169 +
            (C10129 * C6260 + C10130 * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C152219 * C3415 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152629 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152632 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152616 +
           ((C9909 + C9918 + C9917) * C6261 +
            (C2995 * C6258 +
             (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C6259 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C6260) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C4281 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C152219 * C152630 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152324 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C4281 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C15795 + C15794 + C15793) * C152403 * C6261 +
            (C14683 * C609 + C15784 + C15784 + C14680 * C633 + C14685 * C610 +
             C15785 + C15785 + C14681 * C634 + C14687 * C2977 + C15786 +
             C15786 + C14682 * C2979) *
                C152403 * C152169) *
               C152324 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C4281 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152624 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C4281) *
               C152608 +
           (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
              C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
              C15000 + C14682 * C1677) *
                 C152403 * C6261 +
             (C15061 + C15062 + C15063) * C152403 * C152169) *
                C4281 -
            ((C17233 + C17234 + C17235) * C152403 * C152169 +
             (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                 C152403 * C6261) *
                C152324) *
               C152577) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C4281) *
               C152624 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C4281 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152608 +
           (((C17235 + C17234 + C17233) * C152403 * C6261 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152403 * C152169) *
                C152324 -
            ((C15067 + C15068 + C15069) * C152403 * C152169 +
             (C15063 + C15062 + C15061) * C152403 * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152632 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152629 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152616 -
           ((C18541 + C18542 + C18543) * C152403 * C152169 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C152403 * C6261) *
               C152593) *
              C152219 * C3415 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152629 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152632 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C152616 +
           ((C18543 + C18542 + C18541) * C152403 * C6261 +
            (C14683 * C2596 + C18532 + C18532 + C14680 * C2612 +
             C14685 * C2601 + C18533 + C18533 + C14681 * C2617 +
             C14687 * C18522 + C18534 + C18534 + C14682 * C18524) *
                C152403 * C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152320 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C4953) *
              C152219 * C152196 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152327 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152320 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C4953) *
              C152219 * C152205 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152320 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152327 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152320 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152219 * C152196 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152327 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152320 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
              C152219 * C152205 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152320 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152327 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152320 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152327 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C4953) *
              C152219 * C152196 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152327 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152320 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C4953) *
              C152219 * C152205 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152320 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152327 +
           ((C15371 + C15370 + C15369) * C152403 * C6261 +
            (C14683 * C608 + C15333 + C15333 + C14680 * C632 + C14685 * C2595 +
             C15334 + C15334 + C14681 * C2611 + C14687 * C2602 + C15335 +
             C15335 + C14682 * C2618) *
                C152403 * C152169) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152624 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152608 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C152577) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152624 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152608 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152219 * C152630 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
              C152219 * C152623 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
              C152219 * C152606 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
               C152324 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C152630 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C4281 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152624 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152608 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C4281 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C152577) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152624 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152608 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C4281 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C152219 * C152630 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152324 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C4281 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C15795 + C15794 + C15793) * C152403 * C6261 +
            (C14683 * C609 + C15784 + C15784 + C14680 * C633 + C14685 * C610 +
             C15785 + C15785 + C14681 * C634 + C14687 * C2977 + C15786 +
             C15786 + C14682 * C2979) *
                C152403 * C152169) *
               C152324 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C4281 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152624 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C4281) *
               C152608 +
           (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
              C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
              C15000 + C14682 * C1677) *
                 C152403 * C6261 +
             (C15061 + C15062 + C15063) * C152403 * C152169) *
                C4281 -
            ((C17233 + C17234 + C17235) * C152403 * C152169 +
             (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                 C152403 * C6261) *
                C152324) *
               C152577) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C4281) *
               C152624 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C4281 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152608 +
           (((C17235 + C17234 + C17233) * C152403 * C6261 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152403 * C152169) *
                C152324 -
            ((C15067 + C15068 + C15069) * C152403 * C152169 +
             (C15063 + C15062 + C15061) * C152403 * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1823 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1824 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C1825 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152237 * C152587) *
              C152521 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1824 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1823 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C1825 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 * C126) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152535 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152282) *
              C829 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152282 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152535) *
              C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152535 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152282) *
              C831 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
               C152237 * C152282 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
               C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152535 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C829 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152535) *
              C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152535 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C831 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1823 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1824 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C1825 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C152521 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1824 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1823 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C1825 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152535 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152282) *
              C829 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152282 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152535) *
              C830 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152535 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152282) *
              C831 +
          (((C15583 + C15582 + C15581) * C152403 * C6261 +
            (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
             C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
             C15574 + C14682 * C2823) *
                C152403 * C152169) *
               C152237 * C152282 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C1823 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C1824 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C1825 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C152237 * C152587) *
              C152521 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C1824 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C1823 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C1825 +
           ((C16927 + C16926 + C16925) * C152403 * C6261 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152403 * C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152536 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C1823 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152324 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152536) *
              C1824 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152536 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152324) *
              C1825 +
          (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 * C126) *
               C152324 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152282) *
              C353 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C354 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C152535 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 +
              (C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C6260) *
                 C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152282) *
              C353 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C152536 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C152535 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C1823 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152536) *
              C1824 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152536 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C1825 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152536 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C152535 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152536) *
               C152282) *
              C353 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152536) *
               C152535 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152536 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C14761 + C14760 + C14759) * C152403 * C6261 +
             (C14762 + C14763 + C14764) * C152403 * C152169) *
                C152536 -
            ((C15793 + C15794 + C15795) * C152403 * C152169 +
             (C15368 + C15367 + C15366) * C152403 * C6261) *
                C152324) *
               C152535 +
           (((C16127 + C16126 + C16125) * C152403 * C6261 +
             (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
              C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
              C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                 C152403 * C152169) *
                C152324 -
            ((C15581 + C15582 + C15583) * C152403 * C152169 +
             (C15066 + C15065 + C15064) * C152403 * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152536 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C1823 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152324 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152536) *
              C1824 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152536 -
           ((C17233 + C17234 + C17235) * C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152324) *
              C1825 +
          (((C14683 * C2197 + C17430 + C17430 + C14680 * C2205 +
             C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
             C14687 * C10112 + C17432 + C17432 + C14682 * C10116) *
                C152403 * C6261 +
            (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
             C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
             C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                C152403 * C152169) *
               C152324 -
           ((C16925 + C16926 + C16927) * C152403 * C152169 +
            (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14683 * C1470 + C16473 + C16473 + C14680 * C1486) *
                C152403 * C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152237 * C152219 * C129 -
              (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                  C152237 * C152219 * C130 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                  C152237 * C152219 * C131 -
              (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C152237 * C152219 * C132 +
              (C202 * C123 + C203 * C124 + C204 * C125 +
               (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C152624 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C152608 +
               ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152237 * C152577) *
                  C353 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C152608 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C152624 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152237 * C152577) *
                  C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152237 * C152624 -
               ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
                C451 * C125 + C445 * C124 + C446 * C123) *
                   C152237 * C152608 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152625 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152219 * C353 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152610 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152625 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
              C152219 * C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152625 -
           ((C134 * C611 + C664 + C664 + C152418 * C635) * C152403 * C126 +
            C696 * C125 + C690 * C124 + C691 * C123) *
               C152610 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152625 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C1373 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152610 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152625 -
           ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152580) *
              C1374 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152625 -
           ((C134 * C1649 + C1686 + C1686 + C152418 * C1673) * C152403 * C126 +
            (C134 * C1650 + C1687 + C1687 + C152418 * C1674) * C152403 * C125 +
            (C134 * C1651 + C1688 + C1688 + C152418 * C1675) * C152403 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152610 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C6259 +
             (C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C353 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152610 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152625 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152625 -
           ((C2062 * C6260 + C1222 * C6259 + C682 * C6258) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152610 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C1373 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152610 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152625 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C1374 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152625 -
           (((C134 * C8071 + C8100 + C8100 + C152418 * C8083) * C6260 +
             C7477 * C6259 + C2064 * C6258) *
                C152169 +
            ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
             C8116 * C6259 + C7475 * C6258) *
                C6261) *
               C152610 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C152219 * C129 -
          ((C14759 + C14760 + C14761) * C152403 * C152169 +
           (C14758 + C14757 + C14756) * C152403 * C6261) *
              C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C152403 * C6261 +
           (C14762 + C14763 + C14764) * C152403 * C152169) *
              C152237 * C152219 * C131 -
          ((C14765 + C14766 + C14767) * C152403 * C152169 +
           (C14764 + C14763 + C14762) * C152403 * C6261) *
              C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C152403 * C6261 +
           (C14683 * C141 + C14729 + C14729 + C14680 * C157 + C14685 * C611 +
            C14730 + C14730 + C14681 * C635 + C14687 * C612 + C14731 + C14731 +
            C14682 * C636) *
               C152403 * C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152624 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152608 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152608 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152624 -
           ((C14687 * C1645 + C15028 + C15028 + C14682 * C1669 +
             C14685 * C1182 + C15029 + C15029 + C14681 * C1194 + C14683 * C356 +
             C15030 + C15030 + C14680 * C380) *
                C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152625 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C152219 * C353 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152610 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152625 -
           ((C15369 + C15370 + C15371) * C152403 * C152169 +
            (C15365 + C15364 + C15363) * C152403 * C6261) *
               C152580) *
              C152219 * C354 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152625 -
           ((C14687 * C2595 + C15330 + C15330 + C14682 * C2611 + C14685 * C608 +
             C15331 + C15331 + C14681 * C632 + C14683 * C601 + C15332 + C15332 +
             C14680 * C625) *
                C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152610 +
           ((C15371 + C15370 + C15369) * C152403 * C6261 +
            (C14683 * C608 + C15333 + C15333 + C14680 * C632 + C14685 * C2595 +
             C15334 + C15334 + C14681 * C2611 + C14687 * C2602 + C15335 +
             C15335 + C14682 * C2618) *
                C152403 * C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C1374 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C1374 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C1461 -
          ((C15058 + C15059 + C15060) * C152403 * C152169 +
           (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14683 * C359 + C14997 + C14997 +
            C14680 * C383) *
               C152403 * C6261) *
              C152237 * C1462 +
          ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
            C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
            C15000 + C14682 * C1677) *
               C152403 * C6261 +
           (C15061 + C15062 + C15063) * C152403 * C152169) *
              C152237 * C1463 -
          ((C14687 * C8069 + C16468 + C16468 + C14682 * C8081 + C14685 * C2198 +
            C16469 + C16469 + C14681 * C2206 + C14683 * C1469 + C16470 +
            C16470 + C14680 * C1485) *
               C152403 * C152169 +
           (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 + C14685 * C2197 +
            C16472 + C16472 + C14681 * C2205 + C14683 * C1470 + C16473 +
            C16473 + C14680 * C1486) *
               C152403 * C6261) *
              C152237 * C1464 +
          ((C14683 * C1471 + C16474 + C16474 + C14680 * C1487 + C14685 * C8072 +
            C16475 + C16475 + C14681 * C8084 + C14687 * C8073 + C16476 +
            C16476 + C14682 * C8085) *
               C152403 * C6261 +
           (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 + C14685 * C8071 +
            C16478 + C16478 + C14681 * C8083 + C14687 * C8074 + C16479 +
            C16479 + C14682 * C8086) *
               C152403 * C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152625 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C152403 * C6261 +
            (C15363 + C15364 + C15365) * C152403 * C152169) *
               C152580) *
              C1373 +
          (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                C152403 * C6261 +
            (C16122 + C16123 + C16124) * C152403 * C152169) *
               C152610 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152625 -
           ((C14687 * C9390 + C16698 + C16698 + C14682 * C9402 +
             C14685 * C3130 + C16699 + C16699 + C14681 * C3138 +
             C14683 * C1647 + C16700 + C16700 + C14680 * C1671) *
                C152403 * C152169 +
            (C14687 * C9388 + C16701 + C16701 + C14682 * C9400 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14683 * C1648 + C16703 + C16703 + C14680 * C1672) *
                C152403 * C6261) *
               C152580) *
              C1374 +
          (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152625 -
           ((C14687 * C9386 + C16704 + C16704 + C14682 * C9398 +
             C14685 * C1654 + C16705 + C16705 + C14681 * C1678 +
             C14683 * C1651 + C16706 + C16706 + C14680 * C1675) *
                C152403 * C152169 +
            (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
             C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
             C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                C152403 * C6261) *
               C152610 +
           ((C14683 * C1653 + C16710 + C16710 + C14680 * C1677 +
             C14685 * C9387 + C16711 + C16711 + C14681 * C9399 +
             C14687 * C9389 + C16712 + C16712 + C14682 * C9401) *
                C152403 * C6261 +
            (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
             C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
             C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                C152403 * C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C1373 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C1374 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152536 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C152577) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C1373 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C1374 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152536 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152219 * C829 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
              C152219 * C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
              C152219 * C831 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
               C152324 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C829 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152536) *
              C152219 * C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152536 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C831 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C1373 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C1374 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C152536 -
            ((C8621 + C8615 + C8616) * C152169 +
             ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
              C8116 * C6259 + C7475 * C6258) *
                 C6261) *
                C152324) *
               C152577) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C1373 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C1374 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152536 -
           ((C15360 + C15361 + C15362) * C152403 * C152169 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C152403 * C6261) *
               C152324) *
              C152219 * C829 +
          (((C15362 + C15361 + C15360) * C152403 * C6261 +
            (C15366 + C15367 + C15368) * C152403 * C152169) *
               C152324 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152536) *
              C152219 * C830 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152536 -
           ((C15793 + C15794 + C15795) * C152403 * C152169 +
            (C15368 + C15367 + C15366) * C152403 * C6261) *
               C152324) *
              C152219 * C831 +
          (((C15795 + C15794 + C15793) * C152403 * C6261 +
            (C14683 * C609 + C15784 + C15784 + C14680 * C633 + C14685 * C610 +
             C15785 + C15785 + C14681 * C634 + C14687 * C2977 + C15786 +
             C15786 + C14682 * C2979) *
                C152403 * C152169) *
               C152324 -
           ((C14765 + C14766 + C14767) * C152403 * C152169 +
            (C14764 + C14763 + C14762) * C152403 * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C152403 * C6261 +
             (C14756 + C14757 + C14758) * C152403 * C152169) *
                C152536 -
            ((C15360 + C15361 + C15362) * C152403 * C152169 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C152403 * C6261) *
                C152324) *
               C1373 +
           (((C14683 * C1179 + C16086 + C16086 + C14680 * C1191 +
              C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
              C14687 * C3129 + C16088 + C16088 + C14682 * C3137) *
                 C152403 * C6261 +
             (C16122 + C16123 + C16124) * C152403 * C152169) *
                C152324 -
            ((C15058 + C15059 + C15060) * C152403 * C152169 +
             (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
              C14685 * C1179 + C14996 + C14996 + C14681 * C1191 +
              C14683 * C359 + C14997 + C14997 + C14680 * C383) *
                 C152403 * C6261) *
                C152536) *
               C1374 +
           (((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
              C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
              C15000 + C14682 * C1677) *
                 C152403 * C6261 +
             (C15061 + C15062 + C15063) * C152403 * C152169) *
                C152536 -
            ((C17233 + C17234 + C17235) * C152403 * C152169 +
             (C14687 * C9387 + C16707 + C16707 + C14682 * C9399 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14683 * C1652 + C16709 + C16709 + C14680 * C1676) *
                 C152403 * C6261) *
                C152324) *
               C152577) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C152403 * C6261 +
             (C15366 + C15367 + C15368) * C152403 * C152169) *
                C152324 -
            ((C14759 + C14760 + C14761) * C152403 * C152169 +
             (C14758 + C14757 + C14756) * C152403 * C6261) *
                C152536) *
               C1373 +
           (((C15060 + C15059 + C15058) * C152403 * C6261 +
             (C15064 + C15065 + C15066) * C152403 * C152169) *
                C152536 -
            ((C16125 + C16126 + C16127) * C152403 * C152169 +
             (C16124 + C16123 + C16122) * C152403 * C6261) *
                C152324) *
               C1374 +
           (((C17235 + C17234 + C17233) * C152403 * C6261 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152403 * C152169) *
                C152324 -
            ((C15067 + C15068 + C15069) * C152403 * C152169 +
             (C15063 + C15062 + C15061) * C152403 * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152624 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152608 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152608 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152624 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152624 -
           ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152237 * C152608 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C152219 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
              C152219 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
              C152219 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
              C152219 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C152219 * C129 -
          ((C14759 + C14760 + C14761) * C152403 * C152169 +
           (C14758 + C14757 + C14756) * C152403 * C6261) *
              C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C152403 * C6261 +
           (C14762 + C14763 + C14764) * C152403 * C152169) *
              C152237 * C152219 * C131 -
          ((C14765 + C14766 + C14767) * C152403 * C152169 +
           (C14764 + C14763 + C14762) * C152403 * C6261) *
              C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C152403 * C6261 +
           (C14683 * C141 + C14729 + C14729 + C14680 * C157 + C14685 * C611 +
            C14730 + C14730 + C14681 * C635 + C14687 * C612 + C14731 + C14731 +
            C14682 * C636) *
               C152403 * C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C152624 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C152608 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C152608 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C152624 -
           ((C14687 * C1645 + C15028 + C15028 + C14682 * C1669 +
             C14685 * C1182 + C15029 + C15029 + C14681 * C1194 + C14683 * C356 +
             C15030 + C15030 + C14680 * C380) *
                C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C152403 * C6261 +
            (C14756 + C14757 + C14758) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15058 + C15059 + C15060) * C152403 * C152169 +
            (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 +
             C14685 * C1179 + C14996 + C14996 + C14681 * C1191 + C14683 * C359 +
             C14997 + C14997 + C14680 * C383) *
                C152403 * C6261) *
               C152237 * C1374 +
           ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
             C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
             C15000 + C14682 * C1677) *
                C152403 * C6261 +
            (C15061 + C15062 + C15063) * C152403 * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C152403 * C6261 +
            (C15064 + C15065 + C15066) * C152403 * C152169) *
               C152237 * C1374 -
           ((C14759 + C14760 + C14761) * C152403 * C152169 +
            (C14758 + C14757 + C14756) * C152403 * C6261) *
               C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152403 * C152169 +
            (C15063 + C15062 + C15061) * C152403 * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C152403 * C6261 +
            (C14762 + C14763 + C14764) * C152403 * C152169) *
               C152237 * C1373 -
           ((C15581 + C15582 + C15583) * C152403 * C152169 +
            (C15066 + C15065 + C15064) * C152403 * C6261) *
               C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C152403 * C6261 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C152403 * C6261 +
           (C14756 + C14757 + C14758) * C152403 * C152169) *
              C152237 * C1461 -
          ((C15058 + C15059 + C15060) * C152403 * C152169 +
           (C14687 * C1648 + C14995 + C14995 + C14682 * C1672 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14683 * C359 + C14997 + C14997 +
            C14680 * C383) *
               C152403 * C6261) *
              C152237 * C1462 +
          ((C14683 * C360 + C14998 + C14998 + C14680 * C384 + C14685 * C1652 +
            C14999 + C14999 + C14681 * C1676 + C14687 * C1653 + C15000 +
            C15000 + C14682 * C1677) *
               C152403 * C6261 +
           (C15061 + C15062 + C15063) * C152403 * C152169) *
              C152237 * C1463 -
          ((C14687 * C8069 + C16468 + C16468 + C14682 * C8081 + C14685 * C2198 +
            C16469 + C16469 + C14681 * C2206 + C14683 * C1469 + C16470 +
            C16470 + C14680 * C1485) *
               C152403 * C152169 +
           (C14687 * C8070 + C16471 + C16471 + C14682 * C8082 + C14685 * C2197 +
            C16472 + C16472 + C14681 * C2205 + C14683 * C1470 + C16473 +
            C16473 + C14680 * C1486) *
               C152403 * C6261) *
              C152237 * C1464 +
          ((C14683 * C1471 + C16474 + C16474 + C14680 * C1487 + C14685 * C8072 +
            C16475 + C16475 + C14681 * C8084 + C14687 * C8073 + C16476 +
            C16476 + C14682 * C8085) *
               C152403 * C6261 +
           (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 + C14685 * C8071 +
            C16478 + C16478 + C14681 * C8083 + C14687 * C8074 + C16479 +
            C16479 + C14682 * C8086) *
               C152403 * C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152278 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152285 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C3759) *
                      C152196 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152285 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152278 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C3759) *
                      C152205 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C152278 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152285 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C3759) *
                      C3762)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152536 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152278 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152536) *
                       C152285 +
                   (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                      C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                         C152403 * C152600 +
                     (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                        C152536 -
                    ((C34057 + C34058) * C152403 * C23303 +
                     (C34059 + C34060) * C152403 * C152601 +
                     (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                      C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                         C152403 * C152600) *
                        C152324) *
                       C3759) *
                      C3415 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152536) *
                       C152278 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152536 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152285 +
                   (((C34060 + C34059) * C152403 * C152600 +
                     (C34058 + C34057) * C152403 * C152601 +
                     (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
                      C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                         C152403 * C23303) *
                        C152324 -
                    ((C31889 + C31890) * C152403 * C23303 +
                     (C31886 + C31885) * C152403 * C152601 +
                     (C31884 + C31883) * C152403 * C152600) *
                        C152536) *
                       C3759) *
                      C152202)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152631 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152627 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152613 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C152237 * C152587) *
                      C3415 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152627 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152631 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152613 +
                   ((C33748 + C33747) * C152403 * C152600 +
                    (C33746 + C33745) * C152403 * C152601 +
                    (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
                     C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                        C152403 * C23303) *
                       C152237 * C152587) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C3275 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152282) *
                      C152630 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152282 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C3275) *
                      C152623 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C3275 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152282) *
                      C152606 +
                  ((C32398 * C152600 + (C32404 + C32403) * C152403 * C152601 +
                    (C31518 * C366 + C32396 + C32396 + C152553 * C390 +
                     C31520 * C1184 + C32397 + C32397 + C152482 * C1196) *
                        C152403 * C23303) *
                       C152237 * C152282 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C152237 * C3275) *
                      C152581)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152625 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152610 +
                    ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                      C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                         C152403 * C152600 +
                     (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                        C152580) *
                       C3275 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152610 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152625 -
                    ((C35139 + C35140) * C152403 * C23303 +
                     (C35141 + C35142) * C152403 * C152601 +
                     (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                      C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                         C152403 * C152600) *
                        C152580) *
                       C152282) *
                      C3415 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152610 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152625 -
                    ((C32191 + C32192) * C152403 * C23303 +
                     (C32188 + C32187) * C152403 * C152601 +
                     (C32186 + C32185) * C152403 * C152600) *
                        C152580) *
                       C3275 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152625 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152610 +
                    ((C35142 + C35141) * C152403 * C152600 +
                     (C35140 + C35139) * C152403 * C152601 +
                     (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
                      C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                         C152403 * C23303) *
                        C152580) *
                       C152282) *
                      C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152536 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C3275 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152536) *
                       C152282) *
                      C152196 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152536) *
                       C3275 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152536 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152282) *
                      C152205 +
                  (((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                     C31592 * C23303) *
                        C152536 -
                    ((C32611 + C32612) * C152403 * C23303 +
                     (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                        C152324) *
                       C3275 +
                   ((C32944 * C152600 + (C32942 + C32941) * C152403 * C152601 +
                     (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
                      C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                         C152403 * C23303) *
                        C152324 -
                    ((C32403 + C32404) * C152403 * C23303 +
                     (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                        C152536) *
                       C152282) *
                      C3762)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C3275 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152282) *
                      C152630 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152282 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C3275) *
                      C152623 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C3275 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152282) *
                      C152606 +
                  ((C32398 * C152600 + (C32404 + C32403) * C152403 * C152601 +
                    (C31518 * C366 + C32396 + C32396 + C152553 * C390 +
                     C31520 * C1184 + C32397 + C32397 + C152482 * C1196) *
                        C152403 * C23303) *
                       C152237 * C152282 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C152237 * C3275) *
                      C152581)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152631 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152627 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152613 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C152237 * C152587) *
                      C3415 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152627 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152631 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152613 +
                   ((C33748 + C33747) * C152403 * C152600 +
                    (C33746 + C33745) * C152403 * C152601 +
                    (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
                     C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                        C152403 * C23303) *
                       C152237 * C152587) *
                      C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C4281 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152278 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C4281) *
                       C152285 +
                   (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                      C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                         C152403 * C152600 +
                     (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                        C4281 -
                    ((C34057 + C34058) * C152403 * C23303 +
                     (C34059 + C34060) * C152403 * C152601 +
                     (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                      C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                         C152403 * C152600) *
                        C152324) *
                       C3759) *
                      C152521 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C4281) *
                       C152278 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C4281 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152285 +
                   (((C34060 + C34059) * C152403 * C152600 +
                     (C34058 + C34057) * C152403 * C152601 +
                     (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
                      C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                         C152403 * C23303) *
                        C152324 -
                    ((C31889 + C31890) * C152403 * C23303 +
                     (C31886 + C31885) * C152403 * C152601 +
                     (C31884 + C31883) * C152403 * C152600) *
                        C4281) *
                       C3759) *
                      C152202)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152320 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152327 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C4953) *
                      C152278 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152327 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152320 -
                   ((C35139 + C35140) * C152403 * C23303 +
                    (C35141 + C35142) * C152403 * C152601 +
                    (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                     C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                        C152403 * C152600) *
                       C4953) *
                      C152285 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152320 -
                   ((C34057 + C34058) * C152403 * C23303 +
                    (C34059 + C34060) * C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C152327 +
                   ((C31518 * C1653 + C33527 + C33527 + C152553 * C1677 +
                     C31520 * C9387 + C33528 + C33528 + C152482 * C9399) *
                        C152403 * C152600 +
                    (C31518 * C1654 + C33529 + C33529 + C152553 * C1678 +
                     C31520 * C9386 + C33530 + C33530 + C152482 * C9398) *
                        C152403 * C152601 +
                    (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
                     C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                        C152403 * C23303) *
                       C4953) *
                      C3759) *
                 C152191) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C4281 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C152631 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152324 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C4281) *
                      C152627 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C4281 -
                   ((C34057 + C34058) * C152403 * C23303 +
                    (C34059 + C34060) * C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C152324) *
                      C152613 +
                  (((C31518 * C2197 + C34255 + C34255 + C152553 * C2205 +
                     C31520 * C8070 + C34256 + C34256 + C152482 * C8082) *
                        C152403 * C152600 +
                    (C31518 * C2198 + C34257 + C34257 + C152553 * C2206 +
                     C31520 * C8069 + C34258 + C34258 + C152482 * C8081) *
                        C152403 * C152601 +
                    (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
                     C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                        C152403 * C23303) *
                       C152324 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C4281) *
                      C152587) *
                 C152191) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C4281 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C3275 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C4281) *
                       C152282) *
                      C152621 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C4281) *
                       C3275 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C4281 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152282) *
                      C152604 +
                  (((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                     C31592 * C23303) *
                        C4281 -
                    ((C32611 + C32612) * C152403 * C23303 +
                     (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                        C152324) *
                       C3275 +
                   ((C32944 * C152600 + (C32942 + C32941) * C152403 * C152601 +
                     (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
                      C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                         C152403 * C23303) *
                        C152324 -
                    ((C32403 + C32404) * C152403 * C23303 +
                     (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                        C4281) *
                       C152282) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152632 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152629 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C152616 -
                   ((C35355 + C35356) * C152403 * C23303 +
                    (C35357 + C35358) * C152403 * C152601 +
                    (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
                     C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                        C152403 * C152600) *
                       C152593) *
                      C3275 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152629 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152632 -
                   ((C35139 + C35140) * C152403 * C23303 +
                    (C35141 + C35142) * C152403 * C152601 +
                    (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                     C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                        C152403 * C152600) *
                       C152616 +
                   ((C31518 * C3129 + C35553 + C35553 + C152553 * C3137 +
                     C31520 * C9388 + C35554 + C35554 + C152482 * C9400) *
                        C152403 * C152600 +
                    (C31518 * C3130 + C35555 + C35555 + C152553 * C3138 +
                     C31520 * C9390 + C35556 + C35556 + C152482 * C9402) *
                        C152403 * C152601 +
                    (C31518 * C3131 + C35557 + C35557 + C152553 * C3139 +
                     C31520 * C18307 + C35558 + C35558 + C152482 * C18309) *
                        C152403 * C23303) *
                       C152593) *
                      C152282) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152320 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152327 +
                    ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                      C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                         C152403 * C152600 +
                     (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                        C4953) *
                       C3275 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152327 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152320 -
                    ((C35139 + C35140) * C152403 * C23303 +
                     (C35141 + C35142) * C152403 * C152601 +
                     (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                      C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                         C152403 * C152600) *
                        C4953) *
                       C152282) *
                      C152521 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152327 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152320 -
                    ((C32191 + C32192) * C152403 * C23303 +
                     (C32188 + C32187) * C152403 * C152601 +
                     (C32186 + C32185) * C152403 * C152600) *
                        C4953) *
                       C3275 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152320 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152327 +
                    ((C35142 + C35141) * C152403 * C152600 +
                     (C35140 + C35139) * C152403 * C152601 +
                     (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
                      C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                         C152403 * C23303) *
                        C4953) *
                       C152282) *
                      C152202)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C4281 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C3275 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C4281) *
                       C152282) *
                      C152621 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C4281) *
                       C3275 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C4281 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152282) *
                      C152604 +
                  (((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                     C31592 * C23303) *
                        C4281 -
                    ((C32611 + C32612) * C152403 * C23303 +
                     (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                        C152324) *
                       C3275 +
                   ((C32944 * C152600 + (C32942 + C32941) * C152403 * C152601 +
                     (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
                      C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                         C152403 * C23303) *
                        C152324 -
                    ((C32403 + C32404) * C152403 * C23303 +
                     (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                        C4281) *
                       C152282) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C4281 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C152631 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152324 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C4281) *
                      C152627 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C4281 -
                   ((C34057 + C34058) * C152403 * C23303 +
                    (C34059 + C34060) * C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C152324) *
                      C152613 +
                  (((C31518 * C2197 + C34255 + C34255 + C152553 * C2205 +
                     C31520 * C8070 + C34256 + C34256 + C152482 * C8082) *
                        C152403 * C152600 +
                    (C31518 * C2198 + C34257 + C34257 + C152553 * C2206 +
                     C31520 * C8069 + C34258 + C34258 + C152482 * C8081) *
                        C152403 * C152601 +
                    (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
                     C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                        C152403 * C23303) *
                       C152324 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C4281) *
                      C152587) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C1823 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C1824 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C1825 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C152237 * C152587) *
                      C152521 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C1824 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C1823 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C1825 +
                   ((C33748 + C33747) * C152403 * C152600 +
                    (C33746 + C33745) * C152403 * C152601 +
                    (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
                     C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                        C152403 * C23303) *
                       C152237 * C152587) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152535 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152282) *
                      C829 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152282 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152535) *
                      C830 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C152535 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152282) *
                      C831 +
                  ((C32398 * C152600 + (C32404 + C32403) * C152403 * C152601 +
                    (C31518 * C366 + C32396 + C32396 + C152553 * C390 +
                     C31520 * C1184 + C32397 + C32397 + C152482 * C1196) *
                        C152403 * C23303) *
                       C152237 * C152282 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C152237 * C152535) *
                      C152581)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C2359 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C2360 +
                    ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                      C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                         C152403 * C152600 +
                     (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                        C152580) *
                       C152535 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C2360 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C2359 -
                    ((C35139 + C35140) * C152403 * C23303 +
                     (C35141 + C35142) * C152403 * C152601 +
                     (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                      C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                         C152403 * C152600) *
                        C152580) *
                       C152282) *
                      C152521 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C2360 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C2359 -
                    ((C32191 + C32192) * C152403 * C23303 +
                     (C32188 + C32187) * C152403 * C152601 +
                     (C32186 + C32185) * C152403 * C152600) *
                        C152580) *
                       C152535 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C2359 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C2360 +
                    ((C35142 + C35141) * C152403 * C152600 +
                     (C35140 + C35139) * C152403 * C152601 +
                     (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
                      C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                         C152403 * C23303) *
                        C152580) *
                       C152282) *
                      C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[86] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152536 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C1823 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152324 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152536) *
                      C1824 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152536 -
                   ((C34057 + C34058) * C152403 * C23303 +
                    (C34059 + C34060) * C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C152324) *
                      C1825 +
                  (((C31518 * C2197 + C34255 + C34255 + C152553 * C2205 +
                     C31520 * C8070 + C34256 + C34256 + C152482 * C8082) *
                        C152403 * C152600 +
                    (C31518 * C2198 + C34257 + C34257 + C152553 * C2206 +
                     C31520 * C8069 + C34258 + C34258 + C152482 * C8081) *
                        C152403 * C152601 +
                    (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
                     C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                        C152403 * C23303) *
                       C152324 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C152536) *
                      C152587) *
                 C152191) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152536 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152535 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152536) *
                       C152282) *
                      C353 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152536) *
                       C152535 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152536 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152282) *
                      C354 +
                  (((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                     C31592 * C23303) *
                        C152536 -
                    ((C32611 + C32612) * C152403 * C23303 +
                     (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                        C152324) *
                       C152535 +
                   ((C32944 * C152600 + (C32942 + C32941) * C152403 * C152601 +
                     (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
                      C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                         C152403 * C23303) *
                        C152324 -
                    ((C32403 + C32404) * C152403 * C23303 +
                     (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                        C152536) *
                       C152282) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C2973 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C2974 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C2975 -
                   ((C35355 + C35356) * C152403 * C23303 +
                    (C35357 + C35358) * C152403 * C152601 +
                    (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
                     C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                        C152403 * C152600) *
                       C152593) *
                      C152535 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C2974 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C2973 -
                   ((C35139 + C35140) * C152403 * C23303 +
                    (C35141 + C35142) * C152403 * C152601 +
                    (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                     C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                        C152403 * C152600) *
                       C2975 +
                   ((C31518 * C3129 + C35553 + C35553 + C152553 * C3137 +
                     C31520 * C9388 + C35554 + C35554 + C152482 * C9400) *
                        C152403 * C152600 +
                    (C31518 * C3130 + C35555 + C35555 + C152553 * C3138 +
                     C31520 * C9390 + C35556 + C35556 + C152482 * C9402) *
                        C152403 * C152601 +
                    (C31518 * C3131 + C35557 + C35557 + C152553 * C3139 +
                     C31520 * C18307 + C35558 + C35558 + C152482 * C18309) *
                        C152403 * C23303) *
                       C152593) *
                      C152282) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                   C152403 * C152600 +
               (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                  C152237 * C152219 * C129 -
              (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
               (C31578 + C31577) * C152403 * C152600) *
                  C152237 * C152219 * C130 +
              (C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
               C31592 * C23303) *
                  C152237 * C152219 * C131 -
              ((C31585 + C31586) * C152403 * C23303 +
               (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                  C152237 * C152219 * C132 +
              (C31592 * C152600 + (C31586 + C31585) * C152403 * C152601 +
               (C31518 * C142 + C31555 + C31555 + C152553 * C158 +
                C31520 * C975 + C31556 + C31556 + C152482 * C977) *
                   C152403 * C23303) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                 C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                    C152403 * C152600 +
                (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                   C152237 * C152624 -
               (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                 C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                    C152403 * C152600) *
                   C152237 * C152608 +
               ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                 C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                    C152403 * C152600 +
                (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                   C152237 * C152577) *
                  C353 +
              (((C31882 + C31881) * C152403 * C152600 +
                (C31880 + C31879) * C152403 * C152601 +
                (C31887 + C31888) * C152403 * C23303) *
                   C152237 * C152608 -
               (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                (C31578 + C31577) * C152403 * C152600) *
                   C152237 * C152624 -
               ((C31889 + C31890) * C152403 * C23303 +
                (C31886 + C31885) * C152403 * C152601 +
                (C31884 + C31883) * C152403 * C152600) *
                   C152237 * C152577) *
                  C354 +
              ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                C31592 * C23303) *
                   C152237 * C152624 -
               ((C31520 * C1183 + C31851 + C31851 + C152482 * C1195 +
                 C31518 * C364 + C31852 + C31852 + C152553 * C388) *
                    C152403 * C23303 +
                (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                   C152237 * C152608 +
               (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                 C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                    C152403 * C23303) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152403 * C152600 +
            (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
               C152625 -
           (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152403 * C152600) *
               C152610 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152403 * C152600 +
            (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
               C152580) *
              C152219 * C353 +
          (((C32184 + C32183) * C152403 * C152600 +
            (C32182 + C32181) * C152403 * C152601 +
            (C32189 + C32190) * C152403 * C23303) *
               C152610 -
           (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
            (C31578 + C31577) * C152403 * C152600) *
               C152625 -
           ((C32191 + C32192) * C152403 * C23303 +
            (C32188 + C32187) * C152403 * C152601 +
            (C32186 + C32185) * C152403 * C152600) *
               C152580) *
              C152219 * C354 +
          ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
            C31592 * C23303) *
               C152625 -
           ((C31520 * C610 + C32153 + C32153 + C152482 * C634 + C31518 * C609 +
             C32154 + C32154 + C152553 * C633) *
                C152403 * C23303 +
            (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
               C152610 +
           (C32196 * C152600 + (C32192 + C32191) * C152403 * C152601 +
            (C31518 * C610 + C32155 + C32155 + C152553 * C634 + C31520 * C2977 +
             C32156 + C32156 + C152482 * C2979) *
                C152403 * C23303) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152403 * C152600 +
            (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
               C152237 * C1373 -
           (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
            (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
             C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                C152403 * C152600) *
               C152237 * C1374 +
           ((C31518 * C360 + C31825 + C31825 + C152553 * C384 + C31520 * C1652 +
             C31826 + C31826 + C152482 * C1676) *
                C152403 * C152600 +
            (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
               C152237 * C152577) *
              C152621 +
          (((C31882 + C31881) * C152403 * C152600 +
            (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
               C152237 * C1374 -
           (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
            (C31578 + C31577) * C152403 * C152600) *
               C152237 * C1373 -
           ((C31889 + C31890) * C152403 * C23303 +
            (C31886 + C31885) * C152403 * C152601 +
            (C31884 + C31883) * C152403 * C152600) *
               C152237 * C152577) *
              C152604 +
          ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
            C31592 * C23303) *
               C152237 * C1373 -
           ((C32403 + C32404) * C152403 * C23303 +
            (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
               C152237 * C1374 +
           (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
            (C31518 * C365 + C31853 + C31853 + C152553 * C389 + C31520 * C2045 +
             C31854 + C31854 + C152482 * C2047) *
                C152403 * C23303) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152403 * C152600 +
           (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
              C152237 * C1461 -
          (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
           (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 + C31518 * C359 +
            C31824 + C31824 + C152553 * C383) *
               C152403 * C152600) *
              C152237 * C1462 +
          ((C31518 * C360 + C31825 + C31825 + C152553 * C384 + C31520 * C1652 +
            C31826 + C31826 + C152482 * C1676) *
               C152403 * C152600 +
           (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
              C152237 * C1463 -
          ((C31520 * C2199 + C33285 + C33285 + C152482 * C2207 +
            C31518 * C1468 + C33286 + C33286 + C152553 * C1484) *
               C152403 * C23303 +
           (C31520 * C2198 + C33287 + C33287 + C152482 * C2206 +
            C31518 * C1469 + C33288 + C33288 + C152553 * C1485) *
               C152403 * C152601 +
           (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
            C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
               C152403 * C152600) *
              C152237 * C1464 +
          ((C31518 * C1471 + C33291 + C33291 + C152553 * C1487 +
            C31520 * C8072 + C33292 + C33292 + C152482 * C8084) *
               C152403 * C152600 +
           (C31518 * C1472 + C33293 + C33293 + C152553 * C1488 +
            C31520 * C8071 + C33294 + C33294 + C152482 * C8083) *
               C152403 * C152601 +
           (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
            C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
               C152403 * C23303) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152403 * C152600 +
            (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
               C152625 -
           (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152403 * C152600) *
               C152610 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152403 * C152600 +
            (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
               C152580) *
              C1373 +
          (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
             C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                C152403 * C152600 +
            (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
               C152610 -
           (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
            (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
             C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                C152403 * C152600) *
               C152625 -
           ((C31520 * C3131 + C33515 + C33515 + C152482 * C3139 +
             C31518 * C1646 + C33516 + C33516 + C152553 * C1670) *
                C152403 * C23303 +
            (C31520 * C3130 + C33517 + C33517 + C152482 * C3138 +
             C31518 * C1647 + C33518 + C33518 + C152553 * C1671) *
                C152403 * C152601 +
            (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
             C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                C152403 * C152600) *
               C152580) *
              C1374 +
          (((C31518 * C360 + C31825 + C31825 + C152553 * C384 + C31520 * C1652 +
             C31826 + C31826 + C152482 * C1676) *
                C152403 * C152600 +
            (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
               C152625 -
           ((C31520 * C1655 + C33521 + C33521 + C152482 * C1679 +
             C31518 * C1650 + C33522 + C33522 + C152553 * C1674) *
                C152403 * C23303 +
            (C31520 * C1654 + C33523 + C33523 + C152482 * C1678 +
             C31518 * C1651 + C33524 + C33524 + C152553 * C1675) *
                C152403 * C152601 +
            (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
             C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                C152403 * C152600) *
               C152610 +
           ((C31518 * C1653 + C33527 + C33527 + C152553 * C1677 +
             C31520 * C9387 + C33528 + C33528 + C152482 * C9399) *
                C152403 * C152600 +
            (C31518 * C1654 + C33529 + C33529 + C152553 * C1678 +
             C31520 * C9386 + C33530 + C33530 + C152482 * C9398) *
                C152403 * C152601 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C152403 * C23303) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152403 * C152600 +
            (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
               C2359 -
           (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152403 * C152600) *
               C2360 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152403 * C152600 +
            (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
               C152580) *
              C152219 * C152621 +
          (((C32184 + C32183) * C152403 * C152600 +
            (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
               C2360 -
           (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
            (C31578 + C31577) * C152403 * C152600) *
               C2359 -
           ((C32191 + C32192) * C152403 * C23303 +
            (C32188 + C32187) * C152403 * C152601 +
            (C32186 + C32185) * C152403 * C152600) *
               C152580) *
              C152219 * C152604 +
          ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
            C31592 * C23303) *
               C2359 -
           ((C32611 + C32612) * C152403 * C23303 +
            (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
               C2360 +
           (C32196 * C152600 + (C32192 + C32191) * C152403 * C152601 +
            (C31518 * C610 + C32155 + C32155 + C152553 * C634 + C31520 * C2977 +
             C32156 + C32156 + C152482 * C2979) *
                C152403 * C23303) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152403 * C152600 +
            (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
               C2359 -
           (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152403 * C152600) *
               C2360 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152403 * C152600 +
            (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
               C152580) *
              C152624 +
          (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
             C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                C152403 * C152600 +
            (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
               C2360 -
           (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
            (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
             C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                C152403 * C152600) *
               C2359 -
           ((C31520 * C3131 + C33515 + C33515 + C152482 * C3139 +
             C31518 * C1646 + C33516 + C33516 + C152553 * C1670) *
                C152403 * C23303 +
            (C31520 * C3130 + C33517 + C33517 + C152482 * C3138 +
             C31518 * C1647 + C33518 + C33518 + C152553 * C1671) *
                C152403 * C152601 +
            (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
             C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                C152403 * C152600) *
               C152580) *
              C152608 +
          (((C31518 * C360 + C31825 + C31825 + C152553 * C384 + C31520 * C1652 +
             C31826 + C31826 + C152482 * C1676) *
                C152403 * C152600 +
            (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
               C2359 -
           ((C34057 + C34058) * C152403 * C23303 +
            (C34059 + C34060) * C152403 * C152601 +
            (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
             C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                C152403 * C152600) *
               C2360 +
           ((C31518 * C1653 + C33527 + C33527 + C152553 * C1677 +
             C31520 * C9387 + C33528 + C33528 + C152482 * C9399) *
                C152403 * C152600 +
            (C31518 * C1654 + C33529 + C33529 + C152553 * C1678 +
             C31520 * C9386 + C33530 + C33530 + C152482 * C9398) *
                C152403 * C152601 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C152403 * C23303) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152403 * C152600 +
           (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
              C2590 -
          (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
           (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
            C32126 + C32126 + C152553 * C628) *
               C152403 * C152600) *
              C2591 +
          ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
            C32128 + C32128 + C152482 * C2614) *
               C152403 * C152600 +
           (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
              C2592 -
          ((C31520 * C2601 + C34819 + C34819 + C152482 * C2617 +
            C31518 * C2596 + C34820 + C34820 + C152553 * C2612) *
               C152403 * C23303 +
           (C31520 * C2600 + C34821 + C34821 + C152482 * C2616 +
            C31518 * C2597 + C34822 + C34822 + C152553 * C2613) *
               C152403 * C152601 +
           (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
            C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
               C152403 * C152600) *
              C2593 +
          ((C31518 * C2599 + C34825 + C34825 + C152553 * C2615 +
            C31520 * C17994 + C34826 + C34826 + C152482 * C18002) *
               C152403 * C152600 +
           (C31518 * C2600 + C34827 + C34827 + C152553 * C2616 +
            C31520 * C17993 + C34828 + C34828 + C152482 * C18001) *
               C152403 * C152601 +
           (C31518 * C2601 + C34829 + C34829 + C152553 * C2617 +
            C31520 * C18522 + C34830 + C34830 + C152482 * C18524) *
               C152403 * C23303) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[88] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152536 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C1373 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152536) *
                       C1374 +
                   (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                      C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                         C152403 * C152600 +
                     (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                        C152536 -
                    ((C34057 + C34058) * C152403 * C23303 +
                     (C34059 + C34060) * C152403 * C152601 +
                     (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                      C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                         C152403 * C152600) *
                        C152324) *
                       C152577) *
                      C152521 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152536) *
                       C1373 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152536 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C1374 +
                   (((C34060 + C34059) * C152403 * C152600 +
                     (C34058 + C34057) * C152403 * C152601 +
                     (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
                      C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                         C152403 * C23303) *
                        C152324 -
                    ((C31889 + C31890) * C152403 * C23303 +
                     (C31886 + C31885) * C152403 * C152601 +
                     (C31884 + C31883) * C152403 * C152600) *
                        C152536) *
                       C152577) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152536 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C152219 * C829 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C152324 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152536) *
                      C152219 * C830 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152536 -
                   ((C32611 + C32612) * C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C152324) *
                      C152219 * C831 +
                  ((C32606 * C152600 + (C32612 + C32611) * C152403 * C152601 +
                    (C31518 * C611 + C32604 + C32604 + C152553 * C635 +
                     C31520 * C612 + C32605 + C32605 + C152482 * C636) *
                        C152403 * C23303) *
                       C152324 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C152536) *
                      C152219 * C152581)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C2973 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C2974 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C2975 -
                   ((C35355 + C35356) * C152403 * C23303 +
                    (C35357 + C35358) * C152403 * C152601 +
                    (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
                     C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                        C152403 * C152600) *
                       C152593) *
                      C152219 * C152521 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C2974 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C2973 -
                   ((C32191 + C32192) * C152403 * C23303 +
                    (C32188 + C32187) * C152403 * C152601 +
                    (C32186 + C32185) * C152403 * C152600) *
                       C2975 +
                   ((C35358 + C35357) * C152403 * C152600 +
                    (C35356 + C35355) * C152403 * C152601 +
                    (C31518 * C2595 + C35345 + C35345 + C152553 * C2611 +
                     C31520 * C2602 + C35346 + C35346 + C152482 * C2618) *
                        C152403 * C23303) *
                       C152593) *
                      C152219 * C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152624 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152608 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152577) *
                      C353 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 +
                    (C31887 + C31888) * C152403 * C23303) *
                       C152237 * C152608 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152624 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152577) *
                      C354 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C152624 -
                   ((C31520 * C1183 + C31851 + C31851 + C152482 * C1195 +
                     C31518 * C364 + C31852 + C31852 + C152553 * C388) *
                        C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152608 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C152577) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                    C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                       C152403 * C152600 +
                   (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                      C152237 * C152219 * C129 -
                  (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                   (C31578 + C31577) * C152403 * C152600) *
                      C152237 * C152219 * C130 +
                  (C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                   C31592 * C23303) *
                      C152237 * C152219 * C131 -
                  ((C31585 + C31586) * C152403 * C23303 +
                   (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                      C152237 * C152219 * C132 +
                  (C31592 * C152600 + (C31586 + C31585) * C152403 * C152601 +
                   (C31518 * C142 + C31555 + C31555 + C152553 * C158 +
                    C31520 * C975 + C31556 + C31556 + C152482 * C977) *
                       C152403 * C23303) *
                      C152237 * C152219 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C1373 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C1374 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152577) *
                      C152621 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C1374 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C1373 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152577) *
                      C152604 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C1373 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C1374 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C152577) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                    C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                       C152403 * C152600 +
                   (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                      C152237 * C1461 -
                  (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                   (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                    C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                       C152403 * C152600) *
                      C152237 * C1462 +
                  ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                    C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                       C152403 * C152600 +
                   (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                      C152237 * C1463 -
                  ((C31520 * C2199 + C33285 + C33285 + C152482 * C2207 +
                    C31518 * C1468 + C33286 + C33286 + C152553 * C1484) *
                       C152403 * C23303 +
                   (C31520 * C2198 + C33287 + C33287 + C152482 * C2206 +
                    C31518 * C1469 + C33288 + C33288 + C152553 * C1485) *
                       C152403 * C152601 +
                   (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                    C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                       C152403 * C152600) *
                      C152237 * C1464 +
                  ((C31518 * C1471 + C33291 + C33291 + C152553 * C1487 +
                    C31520 * C8072 + C33292 + C33292 + C152482 * C8084) *
                       C152403 * C152600 +
                   (C31518 * C1472 + C33293 + C33293 + C152553 * C1488 +
                    C31520 * C8071 + C33294 + C33294 + C152482 * C8083) *
                       C152403 * C152601 +
                   (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
                    C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                       C152403 * C23303) *
                      C152237 * C1465) *
                 C152191) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C2359 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C2360 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C152580) *
                      C152219 * C152621 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C2360 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C2359 -
                   ((C32191 + C32192) * C152403 * C23303 +
                    (C32188 + C32187) * C152403 * C152601 +
                    (C32186 + C32185) * C152403 * C152600) *
                       C152580) *
                      C152219 * C152604 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C2359 -
                   ((C32611 + C32612) * C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C2360 +
                   (C32196 * C152600 + (C32192 + C32191) * C152403 * C152601 +
                    (C31518 * C610 + C32155 + C32155 + C152553 * C634 +
                     C31520 * C2977 + C32156 + C32156 + C152482 * C2979) *
                        C152403 * C23303) *
                       C152580) *
                      C152219 * C152571)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C2359 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C2360 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C152580) *
                      C152624 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C2360 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C2359 -
                   ((C31520 * C3131 + C33515 + C33515 + C152482 * C3139 +
                     C31518 * C1646 + C33516 + C33516 + C152553 * C1670) *
                        C152403 * C23303 +
                    (C31520 * C3130 + C33517 + C33517 + C152482 * C3138 +
                     C31518 * C1647 + C33518 + C33518 + C152553 * C1671) *
                        C152403 * C152601 +
                    (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                     C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                        C152403 * C152600) *
                       C152580) *
                      C152608 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C2359 -
                   ((C34057 + C34058) * C152403 * C23303 +
                    (C34059 + C34060) * C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C2360 +
                   ((C31518 * C1653 + C33527 + C33527 + C152553 * C1677 +
                     C31520 * C9387 + C33528 + C33528 + C152482 * C9399) *
                        C152403 * C152600 +
                    (C31518 * C1654 + C33529 + C33529 + C152553 * C1678 +
                     C31520 * C9386 + C33530 + C33530 + C152482 * C9398) *
                        C152403 * C152601 +
                    (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
                     C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                        C152403 * C23303) *
                       C152580) *
                      C152577) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C4281 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152535 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C4281) *
                       C152282) *
                      C152196 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C4281) *
                       C152535 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C4281 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152282) *
                      C152205 +
                  (((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                     C31592 * C23303) *
                        C4281 -
                    ((C32611 + C32612) * C152403 * C23303 +
                     (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                        C152324) *
                       C152535 +
                   ((C32944 * C152600 + (C32942 + C32941) * C152403 * C152601 +
                     (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
                      C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                         C152403 * C23303) *
                        C152324 -
                    ((C32403 + C32404) * C152403 * C23303 +
                     (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                        C4281) *
                       C152282) *
                      C3762)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152320 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152327 +
                    ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                      C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                         C152403 * C152600 +
                     (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                        C4953) *
                       C152535 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152327 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152320 -
                    ((C35139 + C35140) * C152403 * C23303 +
                     (C35141 + C35142) * C152403 * C152601 +
                     (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                      C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                         C152403 * C152600) *
                        C4953) *
                       C152282) *
                      C3415 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152327 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152320 -
                    ((C32191 + C32192) * C152403 * C23303 +
                     (C32188 + C32187) * C152403 * C152601 +
                     (C32186 + C32185) * C152403 * C152600) *
                        C4953) *
                       C152535 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152320 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152327 +
                    ((C35142 + C35141) * C152403 * C152600 +
                     (C35140 + C35139) * C152403 * C152601 +
                     (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
                      C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                         C152403 * C23303) *
                        C4953) *
                       C152282) *
                      C152202)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C4281 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152624 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C4281) *
                       C152608 +
                   (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                      C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                         C152403 * C152600 +
                     (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                        C4281 -
                    ((C34057 + C34058) * C152403 * C23303 +
                     (C34059 + C34060) * C152403 * C152601 +
                     (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                      C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                         C152403 * C152600) *
                        C152324) *
                       C152577) *
                      C3415 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C4281) *
                       C152624 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C4281 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152608 +
                   (((C34060 + C34059) * C152403 * C152600 +
                     (C34058 + C34057) * C152403 * C152601 +
                     (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
                      C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                         C152403 * C23303) *
                        C152324 -
                    ((C31889 + C31890) * C152403 * C23303 +
                     (C31886 + C31885) * C152403 * C152601 +
                     (C31884 + C31883) * C152403 * C152600) *
                        C4281) *
                       C152577) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C4281 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C152219 * C152630 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C152324 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C4281) *
                      C152219 * C152623 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C4281 -
                   ((C32611 + C32612) * C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C152324) *
                      C152219 * C152606 +
                  ((C32606 * C152600 + (C32612 + C32611) * C152403 * C152601 +
                    (C31518 * C611 + C32604 + C32604 + C152553 * C635 +
                     C31520 * C612 + C32605 + C32605 + C152482 * C636) *
                        C152403 * C23303) *
                       C152324 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C4281) *
                      C152219 * C152581)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152632 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152629 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C152616 -
                   ((C35355 + C35356) * C152403 * C23303 +
                    (C35357 + C35358) * C152403 * C152601 +
                    (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
                     C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                        C152403 * C152600) *
                       C152593) *
                      C152219 * C3415 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C152629 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152632 -
                   ((C32191 + C32192) * C152403 * C23303 +
                    (C32188 + C32187) * C152403 * C152601 +
                    (C32186 + C32185) * C152403 * C152600) *
                       C152616 +
                   ((C35358 + C35357) * C152403 * C152600 +
                    (C35356 + C35355) * C152403 * C152601 +
                    (C31518 * C2595 + C35345 + C35345 + C152553 * C2611 +
                     C31520 * C2602 + C35346 + C35346 + C152482 * C2618) *
                        C152403 * C23303) *
                       C152593) *
                      C152219 * C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152320 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152327 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C4953) *
                      C152219 * C152196 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C152327 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152320 -
                   ((C32191 + C32192) * C152403 * C23303 +
                    (C32188 + C32187) * C152403 * C152601 +
                    (C32186 + C32185) * C152403 * C152600) *
                       C4953) *
                      C152219 * C152205 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152320 -
                   ((C32611 + C32612) * C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C152327 +
                   (C32196 * C152600 + (C32192 + C32191) * C152403 * C152601 +
                    (C31518 * C610 + C32155 + C32155 + C152553 * C634 +
                     C31520 * C2977 + C32156 + C32156 + C152482 * C2979) *
                        C152403 * C23303) *
                       C4953) *
                      C152219 * C3762)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C4281 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C152219 * C152630 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C152324 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C4281) *
                      C152219 * C152623 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C4281 -
                   ((C32611 + C32612) * C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C152324) *
                      C152219 * C152606 +
                  ((C32606 * C152600 + (C32612 + C32611) * C152403 * C152601 +
                    (C31518 * C611 + C32604 + C32604 + C152553 * C635 +
                     C31520 * C612 + C32605 + C32605 + C152482 * C636) *
                        C152403 * C23303) *
                       C152324 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C4281) *
                      C152219 * C152581)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C4281 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152624 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C4281) *
                       C152608 +
                   (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                      C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                         C152403 * C152600 +
                     (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                        C4281 -
                    ((C34057 + C34058) * C152403 * C23303 +
                     (C34059 + C34060) * C152403 * C152601 +
                     (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                      C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                         C152403 * C152600) *
                        C152324) *
                       C152577) *
                      C3415 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C4281) *
                       C152624 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C4281 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152608 +
                   (((C34060 + C34059) * C152403 * C152600 +
                     (C34058 + C34057) * C152403 * C152601 +
                     (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
                      C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                         C152403 * C23303) *
                        C152324 -
                    ((C31889 + C31890) * C152403 * C23303 +
                     (C31886 + C31885) * C152403 * C152601 +
                     (C31884 + C31883) * C152403 * C152600) *
                        C4281) *
                       C152577) *
                      C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152535 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152282) *
                      C829 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C152282 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152535) *
                      C830 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C152535 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152282) *
                      C831 +
                  ((C32398 * C152600 + (C32404 + C32403) * C152403 * C152601 +
                    (C31518 * C366 + C32396 + C32396 + C152553 * C390 +
                     C31520 * C1184 + C32397 + C32397 + C152482 * C1196) *
                        C152403 * C23303) *
                       C152237 * C152282 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C152237 * C152535) *
                      C152581)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C1823 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C1824 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C1825 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C152237 * C152587) *
                      C152521 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C1824 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C1823 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C1825 +
                   ((C33748 + C33747) * C152403 * C152600 +
                    (C33746 + C33745) * C152403 * C152601 +
                    (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
                     C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                        C152403 * C23303) *
                       C152237 * C152587) *
                      C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152536 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C152535 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152536) *
                       C152282) *
                      C353 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152536) *
                       C152535 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152536 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C152282) *
                      C354 +
                  (((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                     C31592 * C23303) *
                        C152536 -
                    ((C32611 + C32612) * C152403 * C23303 +
                     (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                        C152324) *
                       C152535 +
                   ((C32944 * C152600 + (C32942 + C32941) * C152403 * C152601 +
                     (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
                      C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                         C152403 * C23303) *
                        C152324 -
                    ((C32403 + C32404) * C152403 * C23303 +
                     (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                        C152536) *
                       C152282) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152536 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C1823 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152324 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152536) *
                      C1824 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152536 -
                   ((C34057 + C34058) * C152403 * C23303 +
                    (C34059 + C34060) * C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C152324) *
                      C1825 +
                  (((C31518 * C2197 + C34255 + C34255 + C152553 * C2205 +
                     C31520 * C8070 + C34256 + C34256 + C152482 * C8082) *
                        C152403 * C152600 +
                    (C31518 * C2198 + C34257 + C34257 + C152553 * C2206 +
                     C31520 * C8069 + C34258 + C34258 + C152482 * C8081) *
                        C152403 * C152601 +
                    (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
                     C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                        C152403 * C23303) *
                       C152324 -
                   ((C33745 + C33746) * C152403 * C23303 +
                    (C33747 + C33748) * C152403 * C152601 +
                    (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                     C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                        C152403 * C152600) *
                       C152536) *
                      C152587) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152624 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152608 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152577) *
                      C353 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 +
                    (C31887 + C31888) * C152403 * C23303) *
                       C152237 * C152608 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152624 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152577) *
                      C354 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C152624 -
                   ((C31520 * C1183 + C31851 + C31851 + C152482 * C1195 +
                     C31518 * C364 + C31852 + C31852 + C152553 * C388) *
                        C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152608 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C152577) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                    C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                       C152403 * C152600 +
                   (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                      C152237 * C152219 * C129 -
                  (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                   (C31578 + C31577) * C152403 * C152600) *
                      C152237 * C152219 * C130 +
                  (C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                   C31592 * C23303) *
                      C152237 * C152219 * C131 -
                  ((C31585 + C31586) * C152403 * C23303 +
                   (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                      C152237 * C152219 * C132 +
                  (C31592 * C152600 + (C31586 + C31585) * C152403 * C152601 +
                   (C31518 * C142 + C31555 + C31555 + C152553 * C158 +
                    C31520 * C975 + C31556 + C31556 + C152482 * C977) *
                       C152403 * C23303) *
                      C152237 * C152219 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152625 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152610 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C152580) *
                      C152219 * C353 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 +
                    (C32189 + C32190) * C152403 * C23303) *
                       C152610 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152625 -
                   ((C32191 + C32192) * C152403 * C23303 +
                    (C32188 + C32187) * C152403 * C152601 +
                    (C32186 + C32185) * C152403 * C152600) *
                       C152580) *
                      C152219 * C354 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152625 -
                   ((C31520 * C610 + C32153 + C32153 + C152482 * C634 +
                     C31518 * C609 + C32154 + C32154 + C152553 * C633) *
                        C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C152610 +
                   (C32196 * C152600 + (C32192 + C32191) * C152403 * C152601 +
                    (C31518 * C610 + C32155 + C32155 + C152553 * C634 +
                     C31520 * C2977 + C32156 + C32156 + C152482 * C2979) *
                        C152403 * C23303) *
                       C152580) *
                      C152219 * C152571)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C1373 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C1374 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152577) *
                      C152621 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C1374 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C1373 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152577) *
                      C152604 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C1373 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C1374 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C152577) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                    C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                       C152403 * C152600 +
                   (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                      C152237 * C1461 -
                  (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                   (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                    C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                       C152403 * C152600) *
                      C152237 * C1462 +
                  ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                    C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                       C152403 * C152600 +
                   (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                      C152237 * C1463 -
                  ((C31520 * C2199 + C33285 + C33285 + C152482 * C2207 +
                    C31518 * C1468 + C33286 + C33286 + C152553 * C1484) *
                       C152403 * C23303 +
                   (C31520 * C2198 + C33287 + C33287 + C152482 * C2206 +
                    C31518 * C1469 + C33288 + C33288 + C152553 * C1485) *
                       C152403 * C152601 +
                   (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                    C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                       C152403 * C152600) *
                      C152237 * C1464 +
                  ((C31518 * C1471 + C33291 + C33291 + C152553 * C1487 +
                    C31520 * C8072 + C33292 + C33292 + C152482 * C8084) *
                       C152403 * C152600 +
                   (C31518 * C1472 + C33293 + C33293 + C152553 * C1488 +
                    C31520 * C8071 + C33294 + C33294 + C152482 * C8083) *
                       C152403 * C152601 +
                   (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
                    C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                       C152403 * C23303) *
                      C152237 * C1465) *
                 C152191) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152625 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152610 +
                   ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
                     C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                        C152403 * C152600 +
                    (C32185 + C32186) * C152403 * C152601 + C32196 * C23303) *
                       C152580) *
                      C1373 +
                  (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                     C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                        C152403 * C152600 +
                    (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                       C152610 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152625 -
                   ((C31520 * C3131 + C33515 + C33515 + C152482 * C3139 +
                     C31518 * C1646 + C33516 + C33516 + C152553 * C1670) *
                        C152403 * C23303 +
                    (C31520 * C3130 + C33517 + C33517 + C152482 * C3138 +
                     C31518 * C1647 + C33518 + C33518 + C152553 * C1671) *
                        C152403 * C152601 +
                    (C31520 * C3129 + C33519 + C33519 + C152482 * C3137 +
                     C31518 * C1648 + C33520 + C33520 + C152553 * C1672) *
                        C152403 * C152600) *
                       C152580) *
                      C1374 +
                  (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152625 -
                   ((C31520 * C1655 + C33521 + C33521 + C152482 * C1679 +
                     C31518 * C1650 + C33522 + C33522 + C152553 * C1674) *
                        C152403 * C23303 +
                    (C31520 * C1654 + C33523 + C33523 + C152482 * C1678 +
                     C31518 * C1651 + C33524 + C33524 + C152553 * C1675) *
                        C152403 * C152601 +
                    (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                     C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                        C152403 * C152600) *
                       C152610 +
                   ((C31518 * C1653 + C33527 + C33527 + C152553 * C1677 +
                     C31520 * C9387 + C33528 + C33528 + C152482 * C9399) *
                        C152403 * C152600 +
                    (C31518 * C1654 + C33529 + C33529 + C152553 * C1678 +
                     C31520 * C9386 + C33530 + C33530 + C152482 * C9398) *
                        C152403 * C152601 +
                    (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
                     C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                        C152403 * C23303) *
                       C152580) *
                      C152577) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152536 -
                   (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                    (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                     C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                        C152403 * C152600) *
                       C152324) *
                      C152219 * C829 +
                  (((C32184 + C32183) * C152403 * C152600 +
                    (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                       C152324 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152536) *
                      C152219 * C830 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152536 -
                   ((C32611 + C32612) * C152403 * C23303 +
                    (C32190 + C32189) * C152403 * C152601 + C32195 * C152600) *
                       C152324) *
                      C152219 * C831 +
                  ((C32606 * C152600 + (C32612 + C32611) * C152403 * C152601 +
                    (C31518 * C611 + C32604 + C32604 + C152553 * C635 +
                     C31520 * C612 + C32605 + C32605 + C152482 * C636) *
                        C152403 * C23303) *
                       C152324 -
                   ((C31585 + C31586) * C152403 * C23303 +
                    (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                       C152536) *
                      C152219 * C152581)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                      C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                         C152403 * C152600 +
                     (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                        C152536 -
                    (C32195 * C23303 + (C32183 + C32184) * C152403 * C152601 +
                     (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
                      C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                         C152403 * C152600) *
                        C152324) *
                       C1373 +
                   (((C31518 * C1179 + C32903 + C32903 + C152553 * C1191 +
                      C31520 * C1648 + C32904 + C32904 + C152482 * C1672) *
                         C152403 * C152600 +
                     (C32937 + C32938) * C152403 * C152601 + C32944 * C23303) *
                        C152324 -
                    (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                     (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                      C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                         C152403 * C152600) *
                        C152536) *
                       C1374 +
                   (((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                      C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                         C152403 * C152600 +
                     (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                        C152536 -
                    ((C34057 + C34058) * C152403 * C23303 +
                     (C34059 + C34060) * C152403 * C152601 +
                     (C31520 * C1653 + C33525 + C33525 + C152482 * C1677 +
                      C31518 * C1652 + C33526 + C33526 + C152553 * C1676) *
                         C152403 * C152600) *
                        C152324) *
                       C152577) *
                      C152521 +
                  ((((C32184 + C32183) * C152403 * C152600 +
                     (C32182 + C32181) * C152403 * C152601 + C32606 * C23303) *
                        C152324 -
                    (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                     (C31578 + C31577) * C152403 * C152600) *
                        C152536) *
                       C1373 +
                   (((C31882 + C31881) * C152403 * C152600 +
                     (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                        C152536 -
                    ((C32941 + C32942) * C152403 * C23303 +
                     (C32940 + C32939) * C152403 * C152601 +
                     (C32938 + C32937) * C152403 * C152600) *
                        C152324) *
                       C1374 +
                   (((C34060 + C34059) * C152403 * C152600 +
                     (C34058 + C34057) * C152403 * C152601 +
                     (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
                      C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                         C152403 * C23303) *
                        C152324 -
                    ((C31889 + C31890) * C152403 * C23303 +
                     (C31886 + C31885) * C152403 * C152601 +
                     (C31884 + C31883) * C152403 * C152600) *
                        C152536) *
                       C152577) *
                      C152202)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                    C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                       C152403 * C152600 +
                   (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                      C152237 * C152219 * C129 -
                  (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                   (C31578 + C31577) * C152403 * C152600) *
                      C152237 * C152219 * C130 +
                  (C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                   C31592 * C23303) *
                      C152237 * C152219 * C131 -
                  ((C31585 + C31586) * C152403 * C23303 +
                   (C31584 + C31583) * C152403 * C152601 + C31591 * C152600) *
                      C152237 * C152219 * C132 +
                  (C31592 * C152600 + (C31586 + C31585) * C152403 * C152601 +
                   (C31518 * C142 + C31555 + C31555 + C152553 * C158 +
                    C31520 * C975 + C31556 + C31556 + C152482 * C977) *
                       C152403 * C23303) *
                      C152237 * C152219 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C152624 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C152608 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152577) *
                      C353 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 +
                    (C31887 + C31888) * C152403 * C23303) *
                       C152237 * C152608 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C152624 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152577) *
                      C354 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C152624 -
                   ((C31520 * C1183 + C31851 + C31851 + C152482 * C1195 +
                     C31518 * C364 + C31852 + C31852 + C152553 * C388) *
                        C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C152608 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C152577) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                     C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                        C152403 * C152600 +
                    (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                       C152237 * C1373 -
                   (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                    (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                     C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                        C152403 * C152600) *
                       C152237 * C1374 +
                   ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                     C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                        C152403 * C152600 +
                    (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                       C152237 * C152577) *
                      C152621 +
                  (((C31882 + C31881) * C152403 * C152600 +
                    (C31880 + C31879) * C152403 * C152601 + C32398 * C23303) *
                       C152237 * C1374 -
                   (C31591 * C23303 + (C31580 + C31579) * C152403 * C152601 +
                    (C31578 + C31577) * C152403 * C152600) *
                       C152237 * C1373 -
                   ((C31889 + C31890) * C152403 * C23303 +
                    (C31886 + C31885) * C152403 * C152601 +
                    (C31884 + C31883) * C152403 * C152600) *
                       C152237 * C152577) *
                      C152604 +
                  ((C31590 * C152600 + (C31582 + C31581) * C152403 * C152601 +
                    C31592 * C23303) *
                       C152237 * C1373 -
                   ((C32403 + C32404) * C152403 * C23303 +
                    (C31888 + C31887) * C152403 * C152601 + C31893 * C152600) *
                       C152237 * C1374 +
                   (C31894 * C152600 + (C31890 + C31889) * C152403 * C152601 +
                    (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                     C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                        C152403 * C23303) *
                       C152237 * C152577) *
                      C152571)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                    C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                       C152403 * C152600 +
                   (C31577 + C31578) * C152403 * C152601 + C31590 * C23303) *
                      C152237 * C1461 -
                  (C31893 * C23303 + (C31881 + C31882) * C152403 * C152601 +
                   (C31520 * C1179 + C31823 + C31823 + C152482 * C1191 +
                    C31518 * C359 + C31824 + C31824 + C152553 * C383) *
                       C152403 * C152600) *
                      C152237 * C1462 +
                  ((C31518 * C360 + C31825 + C31825 + C152553 * C384 +
                    C31520 * C1652 + C31826 + C31826 + C152482 * C1676) *
                       C152403 * C152600 +
                   (C31883 + C31884) * C152403 * C152601 + C31894 * C23303) *
                      C152237 * C1463 -
                  ((C31520 * C2199 + C33285 + C33285 + C152482 * C2207 +
                    C31518 * C1468 + C33286 + C33286 + C152553 * C1484) *
                       C152403 * C23303 +
                   (C31520 * C2198 + C33287 + C33287 + C152482 * C2206 +
                    C31518 * C1469 + C33288 + C33288 + C152553 * C1485) *
                       C152403 * C152601 +
                   (C31520 * C2197 + C33289 + C33289 + C152482 * C2205 +
                    C31518 * C1470 + C33290 + C33290 + C152553 * C1486) *
                       C152403 * C152600) *
                      C152237 * C1464 +
                  ((C31518 * C1471 + C33291 + C33291 + C152553 * C1487 +
                    C31520 * C8072 + C33292 + C33292 + C152482 * C8084) *
                       C152403 * C152600 +
                   (C31518 * C1472 + C33293 + C33293 + C152553 * C1488 +
                    C31520 * C8071 + C33294 + C33294 + C152482 * C8083) *
                       C152403 * C152601 +
                   (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
                    C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                       C152403 * C23303) *
                      C152237 * C1465) *
                 C152191) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152278 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152285 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C3759) *
              C152196 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152285 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152278 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C3759) *
              C152205 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152278 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152285 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152278 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152285 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152285 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152278 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C3759) *
              C152205 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152278 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152285 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152278 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152285 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152536 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C3759) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C152278 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152285 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152278 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152285 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C152536 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C3759) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C152278 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152285 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152631 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152627 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152613 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152237 * C152587) *
              C3415 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152627 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152631 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152613 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 * C126) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C3275 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152282) *
              C152630 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152282 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C3275) *
              C152623 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C3275 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152282) *
              C152606 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
               C152237 * C152282 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
               C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152625 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152610 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152580) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152610 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152625 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C152580) *
               C152282) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152610 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152625 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152625 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152610 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C3275 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C152630 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C3275 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152631 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152627 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152613 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C3415 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152627 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152631 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152613 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152625 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152610 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C152580) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152610 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152625 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C152580) *
               C152282) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152610 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152625 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C152580) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152625 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152610 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152282) *
              C152196 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152205 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152282) *
              C152196 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C152536 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C3275 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C3275 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152282) *
              C152630 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152282 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C3275) *
              C152623 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C3275 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152282) *
              C152606 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
               C152237 * C152282 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
               C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152631 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152627 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152613 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152237 * C152587) *
              C3415 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152627 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152631 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152613 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 * C126) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C3275 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C152630 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C3275) *
              C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C3275 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C152606 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152631 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152627 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152613 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C3415 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152627 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152631 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152613 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152278 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152285 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C3759) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152278 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152285 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152278 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152285 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C4281 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C3759) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152278 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152285 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152320 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152278 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152327 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152320 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C4953) *
              C152285 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152320 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152327 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152320 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C4953) *
              C152278 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152327 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152320 -
           ((C9704 + C9705 + C9706) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C4953) *
              C152285 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152320 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152327 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152631 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152324 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C4281) *
              C152627 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C4281 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152324) *
              C152613 +
          (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 * C126) *
               C152324 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152282) *
              C152621 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152604 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152632 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152616 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C3275 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152629 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152632 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152616 +
           ((C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C152403 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152418 * C3138) * C152403 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C152403 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152403 * C126) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152282) *
              C152621 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C4281 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C3275 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152631 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C4281) *
              C152627 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C4281 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C152613 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152632 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152616 -
           ((C9917 + C9918 + C9909) * C152169 +
            (C10129 * C6260 + C10130 * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C3275 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152629 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152632 -
           ((C9704 + C9705 + C9706) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152616 +
           ((C10130 * C6258 + C10129 * C6259 +
             (C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C6260) *
                C6261 +
            (C9916 * C6258 + C9915 * C6259 +
             (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C6260) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152320 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152327 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152320 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C4953) *
               C152282) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152327 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152320 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152320 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152327 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152320 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C4953) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152327 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152320 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C4953) *
               C152282) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152327 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152320 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C4953) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152320 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152327 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152282) *
              C152621 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152604 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152631 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152324 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C4281) *
              C152627 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C4281 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152324) *
              C152613 +
          (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 * C126) *
               C152324 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C3275 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152282) *
              C152621 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C3275 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152604 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C4281 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C3275 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152631 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C4281) *
              C152627 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C4281 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C152613 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1823 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1824 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C1825 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152237 * C152587) *
              C152521 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1824 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1823 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C1825 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 * C126) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152535 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152282) *
              C829 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152282 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152535) *
              C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152535 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152282) *
              C831 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
               C152237 * C152282 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
               C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C2359 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C2360 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152580) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C2360 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C2359 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C152580) *
               C152282) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C2359 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C2360 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152535 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C829 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152535) *
              C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152535 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C831 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1823 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1824 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C1825 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C152521 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1824 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1823 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C1825 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C2359 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C152580) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C2360 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C2359 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C152580) *
               C152282) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C2360 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C2359 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C152580) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C2359 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C2360 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152536 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C1823 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152324 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152536) *
              C1824 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152536 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152324) *
              C1825 +
          (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 * C126) *
               C152324 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152282) *
              C353 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C354 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C152535 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C152535 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2974 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C2973 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C2975 +
           ((C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C152403 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152418 * C3138) * C152403 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C152403 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152403 * C126) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 +
              (C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C6260) *
                 C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152282) *
              C353 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C152536 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C152535 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C1823 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152536) *
              C1824 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152536 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C1825 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2973 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C2975 -
           ((C9917 + C9918 + C9909) * C152169 +
            (C10129 * C6260 + C10130 * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C152535 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C2974 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C2973 -
           ((C9704 + C9705 + C9706) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C2975 +
           ((C10130 * C6258 + C10129 * C6259 +
             (C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C6260) *
                C6261 +
            (C9916 * C6258 + C9915 * C6259 +
             (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C6260) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152237 * C152219 * C129 -
              (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                  C152237 * C152219 * C130 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                  C152237 * C152219 * C131 -
              (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C152237 * C152219 * C132 +
              (C202 * C123 + C203 * C124 + C204 * C125 +
               (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152237 * C152624 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                   C152237 * C152608 +
               ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152237 * C152577) *
                  C353 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152237 * C152608 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152237 * C152624 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152237 * C152577) *
                  C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152237 * C152624 -
               ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
                C451 * C125 + C445 * C124 + C446 * C123) *
                   C152237 * C152608 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152625 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152219 * C353 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152610 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152625 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
              C152219 * C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152625 -
           ((C134 * C611 + C664 + C664 + C152418 * C635) * C152403 * C126 +
            C696 * C125 + C690 * C124 + C691 * C123) *
               C152610 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152625 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C1373 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152610 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152625 -
           ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152580) *
              C1374 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152625 -
           ((C134 * C1649 + C1686 + C1686 + C152418 * C1673) * C152403 * C126 +
            (C134 * C1650 + C1687 + C1687 + C152418 * C1674) * C152403 * C125 +
            (C134 * C1651 + C1688 + C1688 + C152418 * C1675) * C152403 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152610 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152219 * C152621 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
              C152219 * C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152624 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2360 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C2359 -
           ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152580) *
              C152608 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C2359 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C2360 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C2590 -
          (C690 * C126 + C691 * C125 + C692 * C124 +
           (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
              C2591 +
          ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
           C693 * C124 + C694 * C125 + C695 * C126) *
              C2592 -
          ((C134 * C2595 + C2620 + C2620 + C152418 * C2611) * C152403 * C126 +
           (C134 * C2596 + C2621 + C2621 + C152418 * C2612) * C152403 * C125 +
           (C134 * C2597 + C2622 + C2622 + C152418 * C2613) * C152403 * C124 +
           (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
              C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C152403 * C123 +
           (C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C152403 * C124 +
           (C134 * C2601 + C2626 + C2626 + C152418 * C2617) * C152403 * C125 +
           (C134 * C2602 + C2627 + C2627 + C152418 * C2618) * C152403 * C126) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C6259 +
             (C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C353 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152610 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152625 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152625 -
           ((C2062 * C6260 + C1222 * C6259 + C682 * C6258) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152610 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C1373 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152610 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152625 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C1374 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152625 -
           (((C134 * C8071 + C8100 + C8100 + C152418 * C8083) * C6260 +
             C7477 * C6259 + C2064 * C6258) *
                C152169 +
            ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
             C8116 * C6259 + C7475 * C6258) *
                C6261) *
               C152610 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C2360 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C2359 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C2359 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C2360 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152624 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C2360 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C2359 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C152608 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C2359 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C2360 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C2590 -
          ((C6749 + C6750 + C6751) * C152169 +
           (C7475 * C6260 + C7476 * C6259 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
               C6261) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
            C8114 * C6259 + C8115 * C6260) *
               C6261 +
           (C6752 + C6753 + C6769) * C152169) *
              C2592 -
          (((C134 * C9386 + C9405 + C9405 + C152418 * C9398) * C6260 +
            (C134 * C3130 + C3143 + C3143 + C152418 * C3138) * C6259 +
            C2996 * C6258) *
               C152169 +
           ((C134 * C9387 + C9406 + C9406 + C152418 * C9399) * C6260 +
            (C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C6259 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
               C6261) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C6258 +
            (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C6259 +
            (C134 * C9389 + C9408 + C9408 + C152418 * C9401) * C6260) *
               C6261 +
           ((C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C6258 +
            (C134 * C9390 + C9409 + C9409 + C152418 * C9402) * C6259 +
            (C134 * C9391 + C9410 + C9410 + C152418 * C9403) * C6260) *
               C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C1373 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C1374 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152536 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C152577) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C1373 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C1374 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152536 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152219 * C829 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
              C152219 * C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
              C152219 * C831 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
               C152324 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C152219 * C152521 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2974 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2973 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C2975 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152418 * C2979) * C152403 * C126) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C829 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152536) *
              C152219 * C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152536 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C831 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C1373 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C1374 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C152536 -
            ((C8621 + C8615 + C8616) * C152169 +
             ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
              C8116 * C6259 + C7475 * C6258) *
                 C6261) *
                C152324) *
               C152577) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C1373 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C1374 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2973 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C2975 -
           ((C9917 + C9918 + C9909) * C152169 +
            ((C134 * C9387 + C9406 + C9406 + C152418 * C9399) * C6260 +
             (C134 * C3129 + C3142 + C3142 + C152418 * C3137) * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C152219 * C152521 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C2974 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C2973 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C2975 +
           ((C9909 + C9918 + C9917) * C6261 +
            (C2995 * C6258 +
             (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C6259 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C6260) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152624 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152608 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152608 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152624 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152624 -
           ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152237 * C152608 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C152219 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
              C152219 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
              C152219 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
              C152219 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152219 * C152621 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
              C152219 * C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152624 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2360 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C2359 -
           ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152580) *
              C152608 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C2359 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C2360 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C2360 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C2359 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C2359 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C2360 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C2359 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152624 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C2360 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C2359 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C152608 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C2359 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C2360 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152282) *
              C152196 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C152205 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C152535 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152282) *
              C152196 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C152205 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C4281 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C152535 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152320 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152327 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152320 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 *
                 C123) *
                C4953) *
               C152282) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152327 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152320 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152320 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152327 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152403 *
                 C126) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152320 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
              C8114 * C6259 + C8115 * C6260) *
                 C6261 +
             (C6752 + C6753 + C6769) * C152169) *
                C4953) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152327 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152320 -
            ((C9704 + C9705 + C9706) * C152169 +
             (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
                C4953) *
               C152282) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152327 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152320 -
            ((C6770 + C6761 + C6762) * C152169 +
             (C6769 + C6753 + C6752) * C6261) *
                C4953) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152320 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152327 +
            ((C9706 + C9705 + C9704) * C6261 +
             (C2839 * C6258 + C6768 * C6259 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C6260) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152624 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152608 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C152577) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152624 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152608 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152219 * C152630 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
              C152219 * C152623 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
              C152219 * C152606 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
               C152324 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152632 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152616 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152403 * C123) *
               C152593) *
              C152219 * C3415 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152629 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152632 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152616 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152418 * C2979) * C152403 * C126) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C152630 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C4281 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152624 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152608 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C4281 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C152577) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152624 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152608 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152632 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152616 -
           ((C9917 + C9918 + C9909) * C152169 +
            (C10129 * C6260 + C10130 * C6259 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C6258) *
                C6261) *
               C152593) *
              C152219 * C3415 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152629 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152632 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152616 +
           ((C9909 + C9918 + C9917) * C6261 +
            (C2995 * C6258 +
             (C134 * C3131 + C3144 + C3144 + C152418 * C3139) * C6259 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C6260) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152320 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152219 * C152196 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152327 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152320 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
              C152219 * C152205 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152320 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152327 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152320 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C4953) *
              C152219 * C152196 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152327 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152320 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C4953) *
              C152219 * C152205 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152320 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152327 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152219 * C152630 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
              C152219 * C152623 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
              C152219 * C152606 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
               C152324 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152624 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C4281) *
               C152608 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C152577) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152624 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152608 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C4281 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C152630 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C4281) *
              C152219 * C152623 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C4281 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C152606 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C4281 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152624 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C4281) *
               C152608 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C4281 -
            ((C8621 + C8615 + C8616) * C152169 +
             (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
                C152324) *
               C152577) *
              C3415 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C4281) *
               C152624 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C4281 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152608 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152535 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152282) *
              C829 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152282 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152535) *
              C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152535 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C152282) *
              C831 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152403 * C126) *
               C152237 * C152282 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
               C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1823 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1824 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C1825 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152237 * C152587) *
              C152521 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1824 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1823 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C1825 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152403 * C126) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152535 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152282) *
              C829 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152282 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152535) *
              C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152535 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152282) *
              C831 +
          (((C6967 + C6966 + C6965) * C6261 +
            (C443 * C6258 + C444 * C6259 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C6260) *
                C152169) *
               C152237 * C152282 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1823 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1824 +
           ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C1825 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152237 * C152587) *
              C152521 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1824 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1823 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C1825 +
           ((C8318 + C8317 + C8316) * C6261 +
            (C1847 * C6258 + C6528 * C6259 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C6260) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C152535 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C152282) *
              C353 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C152535 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C152282) *
              C354 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
               C152535 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152403 *
                 C126) *
                C152324 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152536 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C1823 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152324 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152536) *
              C1824 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152536 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152324) *
              C1825 +
          (((C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C152403 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152418 * C2206) * C152403 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152418 * C2207) * C152403 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152403 * C126) *
               C152324 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C152535 +
           (((C7476 * C6258 + C7475 * C6259 +
              (C134 * C2197 + C2210 + C2210 + C152418 * C2205) * C6260) *
                 C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C152282) *
              C353 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C152535 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C152282) *
              C354 +
          ((((C6269 + C6268 + C6267) * C6261 +
             (C6270 + C6271 + C6272) * C152169) *
                C152536 -
            ((C7162 + C7163 + C7164) * C152169 +
             (C6758 + C6757 + C6756) * C6261) *
                C152324) *
               C152535 +
           (((C7466 + C7465 + C7480) * C6261 +
             (C1222 * C6258 + C2062 * C6259 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C6260) *
                 C152169) *
                C152324 -
            ((C6965 + C6966 + C6967) * C152169 +
             (C6509 + C6508 + C6507) * C6261) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C1823 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152324 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152536) *
              C1824 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152536 -
           ((C8621 + C8615 + C8616) * C152169 +
            (C8828 * C6260 + C8116 * C6259 + C7475 * C6258) * C6261) *
               C152324) *
              C1825 +
          (((C8116 * C6258 + C8828 * C6259 +
             (C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C6260) *
                C6261 +
            (C7477 * C6258 + C8620 * C6259 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C6260) *
                C152169) *
               C152324 -
           ((C8316 + C8317 + C8318) * C152169 +
            (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152624 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152608 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152608 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152624 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152624 -
           ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152237 * C152608 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C152219 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
              C152219 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
              C152219 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
              C152219 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152625 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C152219 * C353 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152610 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152625 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152580) *
              C152219 * C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152625 -
           ((C134 * C611 + C664 + C664 + C152418 * C635) * C152403 * C126 +
            C696 * C125 + C690 * C124 + C691 * C123) *
               C152610 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152418 * C636) * C152403 * C126) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152625 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C152403 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152580) *
              C1373 +
          (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152610 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152625 -
           ((C134 * C1645 + C1682 + C1682 + C152418 * C1669) * C152403 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152418 * C1670) * C152403 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152418 * C1671) * C152403 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C152403 * C123) *
               C152580) *
              C1374 +
          (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152625 -
           ((C134 * C1649 + C1686 + C1686 + C152418 * C1673) * C152403 * C126 +
            (C134 * C1650 + C1687 + C1687 + C152418 * C1674) * C152403 * C125 +
            (C134 * C1651 + C1688 + C1688 + C152418 * C1675) * C152403 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 * C123) *
               C152610 +
           ((C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C152403 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152418 * C1678) * C152403 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152418 * C1679) * C152403 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152403 * C126) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             (C134 * C1648 + C1685 + C1685 + C152418 * C1672) * C6259 +
             (C134 * C1653 + C1690 + C1690 + C152418 * C1677) * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C152219 * C353 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152610 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152625 -
           ((C6770 + C6761 + C6762) * C152169 +
            (C6769 + C6753 + C6752) * C6261) *
               C152580) *
              C152219 * C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152625 -
           ((C2062 * C6260 + C1222 * C6259 + C682 * C6258) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152610 +
           ((C6762 + C6761 + C6770) * C6261 +
            (C687 * C6258 + C2838 * C6259 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C6260) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152625 -
           ((C6749 + C6750 + C6751) * C152169 +
            (C7475 * C6260 + C7476 * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C6258 +
             C8114 * C6259 + C8115 * C6260) *
                C6261 +
            (C6752 + C6753 + C6769) * C152169) *
               C152580) *
              C1373 +
          (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
            (C7459 + C7460 + C7479) * C152169) *
               C152610 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152625 -
           ((C8117 * C6260 + C6767 * C6259 + C2840 * C6258) * C152169 +
            (C8118 * C6260 + C8115 * C6259 + C8114 * C6258) * C6261) *
               C152580) *
              C1374 +
          (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152625 -
           (((C134 * C8071 + C8100 + C8100 + C152418 * C8083) * C6260 +
             C7477 * C6259 + C2064 * C6258) *
                C152169 +
            ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
             C8116 * C6259 + C7475 * C6258) *
                C6261) *
               C152610 +
           ((C8115 * C6258 + C8118 * C6259 +
             (C134 * C8073 + C8102 + C8102 + C152418 * C8085) * C6260) *
                C6261 +
            (C6767 * C6258 + C8117 * C6259 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C6260) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152536 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
               C152324) *
              C152219 * C829 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
              C152219 * C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152536 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152324) *
              C152219 * C831 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152418 * C977) * C152403 * C126) *
               C152324 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152536 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152403 * C123) *
                C152324) *
               C1373 +
           (((C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C152403 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152324 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
                C152536) *
               C1374 +
           (((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152536 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C152403 *
                 C123) *
                C152324) *
               C152577) *
              C152521 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152324 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152536) *
               C1373 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152536 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152324) *
               C1374 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152403 *
                 C126) *
                C152324 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152536 -
           ((C6749 + C6750 + C6751) * C152169 +
            ((C134 * C1652 + C1689 + C1689 + C152418 * C1676) * C6260 +
             (C134 * C1179 + C1198 + C1198 + C152418 * C1191) * C6259 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                C6261) *
               C152324) *
              C152219 * C829 +
          (((C6751 + C6750 + C6749) * C6261 +
            (C6756 + C6757 + C6758) * C152169) *
               C152324 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152536) *
              C152219 * C830 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152536 -
           ((C7162 + C7163 + C7164) * C152169 +
            (C6758 + C6757 + C6756) * C6261) *
               C152324) *
              C152219 * C831 +
          (((C7164 + C7163 + C7162) * C6261 +
            (C688 * C6258 + C1223 * C6259 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C6260) *
                C152169) *
               C152324 -
           ((C6273 + C6274 + C6275) * C152169 +
            (C6272 + C6271 + C6270) * C6261) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
              C6524 * C6259 + C6525 * C6260) *
                 C6261 +
             (C6264 + C6265 + C6266) * C152169) *
                C152536 -
            ((C6749 + C6750 + C6751) * C152169 +
             (C7475 * C6260 + C7476 * C6259 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C6258) *
                 C6261) *
                C152324) *
               C1373 +
           (((C7476 * C6258 + C7475 * C6259 + C8116 * C6260) * C6261 +
             (C7459 + C7460 + C7479) * C152169) *
                C152324 -
            ((C6498 + C6499 + C6500) * C152169 +
             (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
                C152536) *
               C1374 +
           (((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
             (C6503 + C6504 + C6529) * C152169) *
                C152536 -
            ((C8621 + C8615 + C8616) * C152169 +
             ((C134 * C8072 + C8101 + C8101 + C152418 * C8084) * C6260 +
              C8116 * C6259 + C7475 * C6258) *
                 C6261) *
                C152324) *
               C152577) *
              C152521 +
          ((((C6751 + C6750 + C6749) * C6261 +
             (C6756 + C6757 + C6758) * C152169) *
                C152324 -
            ((C6267 + C6268 + C6269) * C152169 +
             (C6266 + C6265 + C6264) * C6261) *
                C152536) *
               C1373 +
           (((C6500 + C6499 + C6498) * C6261 +
             (C6507 + C6508 + C6509) * C152169) *
                C152536 -
            ((C7480 + C7465 + C7466) * C152169 +
             (C7479 + C7460 + C7459) * C6261) *
                C152324) *
               C1374 +
           (((C8616 + C8615 + C8621) * C6261 +
             (C2063 * C6258 + C7478 * C6259 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C6260) *
                 C152169) *
                C152324 -
            ((C6530 + C6512 + C6513) * C152169 +
             (C6529 + C6504 + C6503) * C6261) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C152219 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
              C152219 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
              C152219 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152237 *
              C152219 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152418 * C159) * C152403 * C126) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C152624 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C152608 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C152608 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C152624 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C152624 -
           ((C134 * C366 + C419 + C419 + C152418 * C390) * C152403 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152237 * C152608 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152237 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
               C152237 * C1374 +
           ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152237 * C152577) *
              C152621 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152237 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152237 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152237 *
               C152577) *
              C152604 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152237 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152237 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C152403 * C126) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C152403 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152237 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152418 * C383) * C152403 * C123) *
              C152237 * C1462 +
          ((C134 * C360 + C403 + C403 + C152418 * C384) * C152403 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152237 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152418 * C1483) * C152403 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152418 * C1484) * C152403 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152418 * C1485) * C152403 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152418 * C1486) * C152403 * C123) *
              C152237 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C152403 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152418 * C1488) * C152403 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152418 * C1489) * C152403 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152403 * C126) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            (C134 * C359 + C402 + C402 + C152418 * C383) * C6259 +
            (C134 * C360 + C403 + C403 + C152418 * C384) * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C152219 * C129 -
          ((C6267 + C6268 + C6269) * C152169 +
           (C6266 + C6265 + C6264) * C6261) *
              C152237 * C152219 * C130 +
          ((C6269 + C6268 + C6267) * C6261 +
           (C6270 + C6271 + C6272) * C152169) *
              C152237 * C152219 * C131 -
          ((C6273 + C6274 + C6275) * C152169 +
           (C6272 + C6271 + C6270) * C6261) *
              C152237 * C152219 * C132 +
          ((C6275 + C6274 + C6273) * C6261 +
           (C197 * C6258 + C842 * C6259 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C6260) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C152624 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C152608 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C152608 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C152624 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C354 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C152624 -
           ((C1846 * C6260 + C442 * C6259 + C437 * C6258) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C152608 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
             C6524 * C6259 + C6525 * C6260) *
                C6261 +
            (C6264 + C6265 + C6266) * C152169) *
               C152237 * C1373 -
           ((C6498 + C6499 + C6500) * C152169 +
            (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
               C152237 * C1374 +
           ((C6525 * C6258 + C6526 * C6259 +
             (C134 * C1471 + C1496 + C1496 + C152418 * C1487) * C6260) *
                C6261 +
            (C6503 + C6504 + C6529) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C6500 + C6499 + C6498) * C6261 +
            (C6507 + C6508 + C6509) * C152169) *
               C152237 * C1374 -
           ((C6267 + C6268 + C6269) * C152169 +
            (C6266 + C6265 + C6264) * C6261) *
               C152237 * C1373 -
           ((C6530 + C6512 + C6513) * C152169 +
            (C6529 + C6504 + C6503) * C6261) *
               C152237 * C152577) *
              C152604 +
          (((C6269 + C6268 + C6267) * C6261 +
            (C6270 + C6271 + C6272) * C152169) *
               C152237 * C1373 -
           ((C6965 + C6966 + C6967) * C152169 +
            (C6509 + C6508 + C6507) * C6261) *
               C152237 * C1374 +
           ((C6513 + C6512 + C6530) * C6261 +
            (C442 * C6258 + C1846 * C6259 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C6260) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C6258 +
            C6524 * C6259 + C6525 * C6260) *
               C6261 +
           (C6264 + C6265 + C6266) * C152169) *
              C152237 * C1461 -
          ((C6498 + C6499 + C6500) * C152169 +
           (C6526 * C6260 + C6525 * C6259 + C6524 * C6258) * C6261) *
              C152237 * C1462 +
          ((C6525 * C6258 + C6526 * C6259 + C7849 * C6260) * C6261 +
           (C6503 + C6504 + C6529) * C152169) *
              C152237 * C1463 -
          ((C7850 * C6260 + C6527 * C6259 + C1848 * C6258) * C152169 +
           (C7851 * C6260 + C7849 * C6259 + C6526 * C6258) * C6261) *
              C152237 * C1464 +
          ((C7849 * C6258 + C7851 * C6259 +
            (C134 * C7822 + C7841 + C7841 + C152418 * C7830) * C6260) *
               C6261 +
           (C6527 * C6258 + C7850 * C6259 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C6260) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152278 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152285 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152285 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152278 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C3759) *
              C152205 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C152278 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152285 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152536 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152278 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152536) *
               C152285 +
           (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
             (C73358 + C73359 + C73360) * C152169) *
                C152536 -
            ((C75332 + C75333 + C75334) * C152169 +
             (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
                C152324) *
               C3759) *
              C3415 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152536) *
               C152278 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152536 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152285 +
           (((C75334 + C75333 + C75332) * C152514 +
             (C2063 * C152617 + C7478 * C152618 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C73121) *
                 C152169) *
                C152324 -
            ((C73364 + C73365 + C73366) * C152169 +
             (C73360 + C73359 + C73358) * C152514) *
                C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152631 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152627 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152613 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C152237 * C152587) *
              C3415 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152627 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152631 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152613 +
           ((C75041 + C75040 + C75039) * C152514 +
            (C1847 * C152617 + C6528 * C152618 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C73121) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C3275 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152282) *
              C152630 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152282 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C3275 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C73793 + C73792 + C73791) * C152514 +
            (C443 * C152617 + C444 * C152618 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C73121) *
                C152169) *
               C152237 * C152282 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152625 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152610 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
              C8114 * C152618 + C8115 * C73121) *
                 C152514 +
             (C73588 + C73589 + C73590) * C152169) *
                C152580) *
               C3275 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152610 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152625 -
            ((C76377 + C76378 + C76379) * C152169 +
             (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
                C152580) *
               C152282) *
              C3415 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152610 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152625 -
            ((C73594 + C73595 + C73596) * C152169 +
             (C73590 + C73589 + C73588) * C152514) *
                C152580) *
               C3275 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152625 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152610 +
            ((C76379 + C76378 + C76377) * C152514 +
             (C2839 * C152617 + C6768 * C152618 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C73121) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152536 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C3275 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152536) *
               C152282) *
              C152196 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152536) *
               C3275 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152536 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152282) *
              C152205 +
          ((((C73130 + C73129 + C73128) * C152514 +
             (C73131 + C73132 + C73133) * C152169) *
                C152536 -
            ((C73988 + C73989 + C73990) * C152169 +
             (C73593 + C73592 + C73591) * C152514) *
                C152324) *
               C3275 +
           (((C74286 + C74285 + C74284) * C152514 +
             (C1222 * C152617 + C2062 * C152618 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C73121) *
                 C152169) *
                C152324 -
            ((C73791 + C73792 + C73793) * C152169 +
             (C73363 + C73362 + C73361) * C152514) *
                C152536) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C3275 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152282) *
              C152630 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152282 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C3275 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C73793 + C73792 + C73791) * C152514 +
            (C443 * C152617 + C444 * C152618 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C73121) *
                C152169) *
               C152237 * C152282 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152631 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152627 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152613 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C152237 * C152587) *
              C3415 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152627 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152631 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152613 +
           ((C75041 + C75040 + C75039) * C152514 +
            (C1847 * C152617 + C6528 * C152618 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C73121) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C4281 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152278 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C4281) *
               C152285 +
           (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
             (C73358 + C73359 + C73360) * C152169) *
                C4281 -
            ((C75332 + C75333 + C75334) * C152169 +
             (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
                C152324) *
               C3759) *
              C152521 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C4281) *
               C152278 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C4281 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152285 +
           (((C75334 + C75333 + C75332) * C152514 +
             (C2063 * C152617 + C7478 * C152618 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C73121) *
                 C152169) *
                C152324 -
            ((C73364 + C73365 + C73366) * C152169 +
             (C73360 + C73359 + C73358) * C152514) *
                C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152320 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C4953) *
              C152278 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152327 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152320 -
           ((C76377 + C76378 + C76379) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C4953) *
              C152285 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152320 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152327 +
           ((C8115 * C152617 + C8118 * C152618 + C60422 * C73121) * C152514 +
            (C6767 * C152617 + C8117 * C152618 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C73121) *
                C152169) *
               C4953) *
              C3759) *
         C152191) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C4281 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C152631 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152324 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C4281) *
              C152627 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C4281 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152324) *
              C152613 +
          (((C8116 * C152617 + C8828 * C152618 + C60885 * C73121) * C152514 +
            (C7477 * C152617 + C8620 * C152618 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C73121) *
                C152169) *
               C152324 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C4281 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C3275 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C4281) *
               C152282) *
              C152621 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C4281) *
               C3275 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C4281 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152282) *
              C152604 +
          ((((C73130 + C73129 + C73128) * C152514 +
             (C73131 + C73132 + C73133) * C152169) *
                C4281 -
            ((C73988 + C73989 + C73990) * C152169 +
             (C73593 + C73592 + C73591) * C152514) *
                C152324) *
               C3275 +
           (((C74286 + C74285 + C74284) * C152514 +
             (C1222 * C152617 + C2062 * C152618 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C73121) *
                 C152169) *
                C152324 -
            ((C73791 + C73792 + C73793) * C152169 +
             (C73363 + C73362 + C73361) * C152514) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152632 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152616 -
           ((C76574 + C76575 + C76576) * C152169 +
            (C10129 * C73121 + C10130 * C152618 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152617) *
                C152514) *
               C152593) *
              C3275 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152629 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152632 -
           ((C76377 + C76378 + C76379) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C152616 +
           ((C10130 * C152617 + C10129 * C152618 + C61726 * C73121) * C152514 +
            (C9916 * C152617 + C9915 * C152618 +
             (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C73121) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152320 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
              C8114 * C152618 + C8115 * C73121) *
                 C152514 +
             (C73588 + C73589 + C73590) * C152169) *
                C4953) *
               C3275 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152327 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152320 -
            ((C76377 + C76378 + C76379) * C152169 +
             (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
                C4953) *
               C152282) *
              C152521 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152327 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152320 -
            ((C73594 + C73595 + C73596) * C152169 +
             (C73590 + C73589 + C73588) * C152514) *
                C4953) *
               C3275 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152320 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152327 +
            ((C76379 + C76378 + C76377) * C152514 +
             (C2839 * C152617 + C6768 * C152618 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C73121) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C4281 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C3275 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C4281) *
               C152282) *
              C152621 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C4281) *
               C3275 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C4281 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152282) *
              C152604 +
          ((((C73130 + C73129 + C73128) * C152514 +
             (C73131 + C73132 + C73133) * C152169) *
                C4281 -
            ((C73988 + C73989 + C73990) * C152169 +
             (C73593 + C73592 + C73591) * C152514) *
                C152324) *
               C3275 +
           (((C74286 + C74285 + C74284) * C152514 +
             (C1222 * C152617 + C2062 * C152618 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C73121) *
                 C152169) *
                C152324 -
            ((C73791 + C73792 + C73793) * C152169 +
             (C73363 + C73362 + C73361) * C152514) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C4281 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C152631 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152324 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C4281) *
              C152627 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C4281 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152324) *
              C152613 +
          (((C8116 * C152617 + C8828 * C152618 + C60885 * C73121) * C152514 +
            (C7477 * C152617 + C8620 * C152618 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C73121) *
                C152169) *
               C152324 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C1823 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C1824 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C1825 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C152237 * C152587) *
              C152521 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C1824 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C1823 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C1825 +
           ((C75041 + C75040 + C75039) * C152514 +
            (C1847 * C152617 + C6528 * C152618 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C73121) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152535 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152282) *
              C829 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152282 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152535) *
              C830 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C152535 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152282) *
              C831 +
          (((C73793 + C73792 + C73791) * C152514 +
            (C443 * C152617 + C444 * C152618 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C73121) *
                C152169) *
               C152237 * C152282 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C2359 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
              C8114 * C152618 + C8115 * C73121) *
                 C152514 +
             (C73588 + C73589 + C73590) * C152169) *
                C152580) *
               C152535 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C2360 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C2359 -
            ((C76377 + C76378 + C76379) * C152169 +
             (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
                C152580) *
               C152282) *
              C152521 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C2360 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C2359 -
            ((C73594 + C73595 + C73596) * C152169 +
             (C73590 + C73589 + C73588) * C152514) *
                C152580) *
               C152535 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C2359 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C2360 +
            ((C76379 + C76378 + C76377) * C152514 +
             (C2839 * C152617 + C6768 * C152618 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C73121) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152536 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C1823 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152324 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152536) *
              C1824 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152536 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152324) *
              C1825 +
          (((C8116 * C152617 + C8828 * C152618 + C60885 * C73121) * C152514 +
            (C7477 * C152617 + C8620 * C152618 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C73121) *
                C152169) *
               C152324 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152536 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152535 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152536) *
               C152282) *
              C353 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152536) *
               C152535 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152536 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152282) *
              C354 +
          ((((C73130 + C73129 + C73128) * C152514 +
             (C73131 + C73132 + C73133) * C152169) *
                C152536 -
            ((C73988 + C73989 + C73990) * C152169 +
             (C73593 + C73592 + C73591) * C152514) *
                C152324) *
               C152535 +
           (((C74286 + C74285 + C74284) * C152514 +
             (C1222 * C152617 + C2062 * C152618 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C73121) *
                 C152169) *
                C152324 -
            ((C73791 + C73792 + C73793) * C152169 +
             (C73363 + C73362 + C73361) * C152514) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C2973 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C2975 -
           ((C76574 + C76575 + C76576) * C152169 +
            (C10129 * C73121 + C10130 * C152618 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152617) *
                C152514) *
               C152593) *
              C152535 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C2974 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C2973 -
           ((C76377 + C76378 + C76379) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C2975 +
           ((C10130 * C152617 + C10129 * C152618 + C61726 * C73121) * C152514 +
            (C9916 * C152617 + C9915 * C152618 +
             (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C73121) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
                C6524 * C152618 + C6525 * C73121) *
                   C152514 +
               (C73125 + C73126 + C73127) * C152169) *
                  C152237 * C152219 * C129 -
              ((C73128 + C73129 + C73130) * C152169 +
               (C73127 + C73126 + C73125) * C152514) *
                  C152237 * C152219 * C130 +
              ((C73130 + C73129 + C73128) * C152514 +
               (C73131 + C73132 + C73133) * C152169) *
                  C152237 * C152219 * C131 -
              ((C73134 + C73135 + C73136) * C152169 +
               (C73133 + C73132 + C73131) * C152514) *
                  C152237 * C152219 * C132 +
              ((C73136 + C73135 + C73134) * C152514 +
               (C197 * C152617 + C842 * C152618 +
                (C134 * C367 + C420 + C420 + C152418 * C391) * C73121) *
                   C152169) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
                 C6524 * C152618 + C6525 * C73121) *
                    C152514 +
                (C73125 + C73126 + C73127) * C152169) *
                   C152237 * C152624 -
               ((C73355 + C73356 + C73357) * C152169 +
                (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) *
                    C152514) *
                   C152237 * C152608 +
               ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
                (C73358 + C73359 + C73360) * C152169) *
                   C152237 * C152577) *
                  C353 +
              (((C73357 + C73356 + C73355) * C152514 +
                (C73361 + C73362 + C73363) * C152169) *
                   C152237 * C152608 -
               ((C73128 + C73129 + C73130) * C152169 +
                (C73127 + C73126 + C73125) * C152514) *
                   C152237 * C152624 -
               ((C73364 + C73365 + C73366) * C152169 +
                (C73360 + C73359 + C73358) * C152514) *
                   C152237 * C152577) *
                  C354 +
              (((C73130 + C73129 + C73128) * C152514 +
                (C73131 + C73132 + C73133) * C152169) *
                   C152237 * C152624 -
               ((C1846 * C73121 + C442 * C152618 + C437 * C152617) * C152169 +
                (C73363 + C73362 + C73361) * C152514) *
                   C152237 * C152608 +
               ((C73366 + C73365 + C73364) * C152514 +
                (C442 * C152617 + C1846 * C152618 +
                 (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                    C152169) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152625 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C152219 * C353 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152610 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152625 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C152580) *
              C152219 * C354 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152625 -
           ((C2062 * C73121 + C1222 * C152618 + C682 * C152617) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152610 +
           ((C73596 + C73595 + C73594) * C152514 +
            (C687 * C152617 + C2838 * C152618 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C73121) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C1373 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C1374 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C1374 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C1373 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C1373 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C1374 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C1461 -
          ((C73355 + C73356 + C73357) * C152169 +
           (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
              C152237 * C1462 +
          ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
           (C73358 + C73359 + C73360) * C152169) *
              C152237 * C1463 -
          ((C7850 * C73121 + C6527 * C152618 + C1848 * C152617) * C152169 +
           (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
              C152237 * C1464 +
          ((C7849 * C152617 + C7851 * C152618 + C60267 * C73121) * C152514 +
           (C6527 * C152617 + C7850 * C152618 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C73121) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152625 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C1373 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152610 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152625 -
           ((C8117 * C73121 + C6767 * C152618 + C2840 * C152617) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C152580) *
              C1374 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152625 -
           ((C8620 * C73121 + C7477 * C152618 + C2064 * C152617) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152610 +
           ((C8115 * C152617 + C8118 * C152618 + C60422 * C73121) * C152514 +
            (C6767 * C152617 + C8117 * C152618 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C73121) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C2359 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C2360 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C2359 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C152580) *
              C152219 * C152604 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C2359 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C2360 +
           ((C73596 + C73595 + C73594) * C152514 +
            (C687 * C152617 + C2838 * C152618 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C73121) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C2359 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C152624 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C2360 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C2359 -
           ((C8117 * C73121 + C6767 * C152618 + C2840 * C152617) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C152580) *
              C152608 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C2359 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C2360 +
           ((C8115 * C152617 + C8118 * C152618 + C60422 * C73121) * C152514 +
            (C6767 * C152617 + C8117 * C152618 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C73121) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C2590 -
          ((C73585 + C73586 + C73587) * C152169 +
           (C7475 * C73121 + C7476 * C152618 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
               C152514) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
            C8114 * C152618 + C8115 * C73121) *
               C152514 +
           (C73588 + C73589 + C73590) * C152169) *
              C2592 -
          ((C9915 * C73121 + C9916 * C152618 + C2996 * C152617) * C152169 +
           (C10129 * C73121 + C10130 * C152618 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152617) *
               C152514) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C152617 +
            (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C152618 +
            (C134 * C9389 + C9408 + C9408 + C152418 * C9401) * C73121) *
               C152514 +
           ((C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C152617 +
            (C134 * C9390 + C9409 + C9409 + C152418 * C9402) * C152618 +
            (C134 * C9391 + C9410 + C9410 + C152418 * C9403) * C73121) *
               C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152536 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C1373 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152536) *
               C1374 +
           (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
             (C73358 + C73359 + C73360) * C152169) *
                C152536 -
            ((C75332 + C75333 + C75334) * C152169 +
             (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
                C152324) *
               C152577) *
              C152521 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152536) *
               C1373 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152536 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C1374 +
           (((C75334 + C75333 + C75332) * C152514 +
             (C2063 * C152617 + C7478 * C152618 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C73121) *
                 C152169) *
                C152324 -
            ((C73364 + C73365 + C73366) * C152169 +
             (C73360 + C73359 + C73358) * C152514) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152536 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C152219 * C829 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152324 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152536) *
              C152219 * C830 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152536 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152324) *
              C152219 * C831 +
          (((C73990 + C73989 + C73988) * C152514 +
            (C688 * C152617 + C1223 * C152618 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C73121) *
                C152169) *
               C152324 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C2973 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C2975 -
           ((C76574 + C76575 + C76576) * C152169 +
            (C10129 * C73121 + C10130 * C152618 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152617) *
                C152514) *
               C152593) *
              C152219 * C152521 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C2974 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C2973 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C2975 +
           ((C76576 + C76575 + C76574) * C152514 +
            (C2995 * C152617 + C26771 * C152618 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C73121) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152624 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152608 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152608 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152624 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C152624 -
           ((C1846 * C73121 + C442 * C152618 + C437 * C152617) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152608 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C152219 * C129 -
          ((C73128 + C73129 + C73130) * C152169 +
           (C73127 + C73126 + C73125) * C152514) *
              C152237 * C152219 * C130 +
          ((C73130 + C73129 + C73128) * C152514 +
           (C73131 + C73132 + C73133) * C152169) *
              C152237 * C152219 * C131 -
          ((C73134 + C73135 + C73136) * C152169 +
           (C73133 + C73132 + C73131) * C152514) *
              C152237 * C152219 * C132 +
          ((C73136 + C73135 + C73134) * C152514 +
           (C197 * C152617 + C842 * C152618 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C73121) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C1373 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C1374 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C1374 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C1373 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C1373 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C1374 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C1461 -
          ((C73355 + C73356 + C73357) * C152169 +
           (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
              C152237 * C1462 +
          ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
           (C73358 + C73359 + C73360) * C152169) *
              C152237 * C1463 -
          ((C7850 * C73121 + C6527 * C152618 + C1848 * C152617) * C152169 +
           (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
              C152237 * C1464 +
          ((C7849 * C152617 + C7851 * C152618 + C60267 * C73121) * C152514 +
           (C6527 * C152617 + C7850 * C152618 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C73121) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C2359 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C2360 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C2359 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C152580) *
              C152219 * C152604 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C2359 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C2360 +
           ((C73596 + C73595 + C73594) * C152514 +
            (C687 * C152617 + C2838 * C152618 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C73121) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C2359 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C152624 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C2360 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C2359 -
           ((C8117 * C73121 + C6767 * C152618 + C2840 * C152617) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C152580) *
              C152608 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C2359 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C2360 +
           ((C8115 * C152617 + C8118 * C152618 + C60422 * C73121) * C152514 +
            (C6767 * C152617 + C8117 * C152618 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C73121) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C4281 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152535 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C4281) *
               C152282) *
              C152196 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C4281) *
               C152535 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C4281 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152282) *
              C152205 +
          ((((C73130 + C73129 + C73128) * C152514 +
             (C73131 + C73132 + C73133) * C152169) *
                C4281 -
            ((C73988 + C73989 + C73990) * C152169 +
             (C73593 + C73592 + C73591) * C152514) *
                C152324) *
               C152535 +
           (((C74286 + C74285 + C74284) * C152514 +
             (C1222 * C152617 + C2062 * C152618 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C73121) *
                 C152169) *
                C152324 -
            ((C73791 + C73792 + C73793) * C152169 +
             (C73363 + C73362 + C73361) * C152514) *
                C4281) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152320 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
              C8114 * C152618 + C8115 * C73121) *
                 C152514 +
             (C73588 + C73589 + C73590) * C152169) *
                C4953) *
               C152535 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152327 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152320 -
            ((C76377 + C76378 + C76379) * C152169 +
             (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
                C4953) *
               C152282) *
              C3415 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152327 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152320 -
            ((C73594 + C73595 + C73596) * C152169 +
             (C73590 + C73589 + C73588) * C152514) *
                C4953) *
               C152535 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152320 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152327 +
            ((C76379 + C76378 + C76377) * C152514 +
             (C2839 * C152617 + C6768 * C152618 +
              (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C73121) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C4281 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152624 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C4281) *
               C152608 +
           (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
             (C73358 + C73359 + C73360) * C152169) *
                C4281 -
            ((C75332 + C75333 + C75334) * C152169 +
             (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
                C152324) *
               C152577) *
              C3415 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C4281) *
               C152624 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C4281 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152608 +
           (((C75334 + C75333 + C75332) * C152514 +
             (C2063 * C152617 + C7478 * C152618 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C73121) *
                 C152169) *
                C152324 -
            ((C73364 + C73365 + C73366) * C152169 +
             (C73360 + C73359 + C73358) * C152514) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C4281 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C152219 * C152630 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152324 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C4281) *
              C152219 * C152623 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C4281 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152324) *
              C152219 * C152606 +
          (((C73990 + C73989 + C73988) * C152514 +
            (C688 * C152617 + C1223 * C152618 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C73121) *
                C152169) *
               C152324 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152632 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152616 -
           ((C76574 + C76575 + C76576) * C152169 +
            (C10129 * C73121 + C10130 * C152618 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C152617) *
                C152514) *
               C152593) *
              C152219 * C3415 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152629 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152632 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C152616 +
           ((C76576 + C76575 + C76574) * C152514 +
            (C2995 * C152617 + C26771 * C152618 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C73121) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152320 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C4953) *
              C152219 * C152196 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152327 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152320 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C4953) *
              C152219 * C152205 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152320 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152327 +
           ((C73596 + C73595 + C73594) * C152514 +
            (C687 * C152617 + C2838 * C152618 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C73121) *
                C152169) *
               C4953) *
              C152219 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C4281 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C152219 * C152630 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152324 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C4281) *
              C152219 * C152623 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C4281 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152324) *
              C152219 * C152606 +
          (((C73990 + C73989 + C73988) * C152514 +
            (C688 * C152617 + C1223 * C152618 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C73121) *
                C152169) *
               C152324 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C4281 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152624 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C4281) *
               C152608 +
           (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
             (C73358 + C73359 + C73360) * C152169) *
                C4281 -
            ((C75332 + C75333 + C75334) * C152169 +
             (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
                C152324) *
               C152577) *
              C3415 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C4281) *
               C152624 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C4281 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152608 +
           (((C75334 + C75333 + C75332) * C152514 +
             (C2063 * C152617 + C7478 * C152618 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C73121) *
                 C152169) *
                C152324 -
            ((C73364 + C73365 + C73366) * C152169 +
             (C73360 + C73359 + C73358) * C152514) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152535 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152282) *
              C829 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152282 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152535) *
              C830 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C152535 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152282) *
              C831 +
          (((C73793 + C73792 + C73791) * C152514 +
            (C443 * C152617 + C444 * C152618 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C73121) *
                C152169) *
               C152237 * C152282 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C1823 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C1824 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C1825 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C152237 * C152587) *
              C152521 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C1824 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C1823 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C1825 +
           ((C75041 + C75040 + C75039) * C152514 +
            (C1847 * C152617 + C6528 * C152618 +
             (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C73121) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152536 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C152535 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152536) *
               C152282) *
              C353 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152536) *
               C152535 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152536 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C152282) *
              C354 +
          ((((C73130 + C73129 + C73128) * C152514 +
             (C73131 + C73132 + C73133) * C152169) *
                C152536 -
            ((C73988 + C73989 + C73990) * C152169 +
             (C73593 + C73592 + C73591) * C152514) *
                C152324) *
               C152535 +
           (((C74286 + C74285 + C74284) * C152514 +
             (C1222 * C152617 + C2062 * C152618 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C73121) *
                 C152169) *
                C152324 -
            ((C73791 + C73792 + C73793) * C152169 +
             (C73363 + C73362 + C73361) * C152514) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152536 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C1823 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152324 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152536) *
              C1824 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152536 -
           ((C75332 + C75333 + C75334) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152324) *
              C1825 +
          (((C8116 * C152617 + C8828 * C152618 + C60885 * C73121) * C152514 +
            (C7477 * C152617 + C8620 * C152618 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C73121) *
                C152169) *
               C152324 -
           ((C75039 + C75040 + C75041) * C152169 +
            (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152624 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152608 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152608 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152624 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C152624 -
           ((C1846 * C73121 + C442 * C152618 + C437 * C152617) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152608 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C152219 * C129 -
          ((C73128 + C73129 + C73130) * C152169 +
           (C73127 + C73126 + C73125) * C152514) *
              C152237 * C152219 * C130 +
          ((C73130 + C73129 + C73128) * C152514 +
           (C73131 + C73132 + C73133) * C152169) *
              C152237 * C152219 * C131 -
          ((C73134 + C73135 + C73136) * C152169 +
           (C73133 + C73132 + C73131) * C152514) *
              C152237 * C152219 * C132 +
          ((C73136 + C73135 + C73134) * C152514 +
           (C197 * C152617 + C842 * C152618 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C73121) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152625 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C152219 * C353 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152610 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152625 -
           ((C73594 + C73595 + C73596) * C152169 +
            (C73590 + C73589 + C73588) * C152514) *
               C152580) *
              C152219 * C354 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152625 -
           ((C2062 * C73121 + C1222 * C152618 + C682 * C152617) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152610 +
           ((C73596 + C73595 + C73594) * C152514 +
            (C687 * C152617 + C2838 * C152618 +
             (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C73121) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C1373 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C1374 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C1374 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C1373 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C1373 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C1374 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C1461 -
          ((C73355 + C73356 + C73357) * C152169 +
           (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
              C152237 * C1462 +
          ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
           (C73358 + C73359 + C73360) * C152169) *
              C152237 * C1463 -
          ((C7850 * C73121 + C6527 * C152618 + C1848 * C152617) * C152169 +
           (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
              C152237 * C1464 +
          ((C7849 * C152617 + C7851 * C152618 + C60267 * C73121) * C152514 +
           (C6527 * C152617 + C7850 * C152618 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C73121) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152625 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C152617 +
             C8114 * C152618 + C8115 * C73121) *
                C152514 +
            (C73588 + C73589 + C73590) * C152169) *
               C152580) *
              C1373 +
          (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
            (C74281 + C74282 + C74283) * C152169) *
               C152610 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152625 -
           ((C8117 * C73121 + C6767 * C152618 + C2840 * C152617) * C152169 +
            (C8118 * C73121 + C8115 * C152618 + C8114 * C152617) * C152514) *
               C152580) *
              C1374 +
          (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152625 -
           ((C8620 * C73121 + C7477 * C152618 + C2064 * C152617) * C152169 +
            (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
               C152610 +
           ((C8115 * C152617 + C8118 * C152618 + C60422 * C73121) * C152514 +
            (C6767 * C152617 + C8117 * C152618 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C73121) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152536 -
           ((C73585 + C73586 + C73587) * C152169 +
            (C7475 * C73121 + C7476 * C152618 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                C152514) *
               C152324) *
              C152219 * C829 +
          (((C73587 + C73586 + C73585) * C152514 +
            (C73591 + C73592 + C73593) * C152169) *
               C152324 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152536) *
              C152219 * C830 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152536 -
           ((C73988 + C73989 + C73990) * C152169 +
            (C73593 + C73592 + C73591) * C152514) *
               C152324) *
              C152219 * C831 +
          (((C73990 + C73989 + C73988) * C152514 +
            (C688 * C152617 + C1223 * C152618 +
             (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C73121) *
                C152169) *
               C152324 -
           ((C73134 + C73135 + C73136) * C152169 +
            (C73133 + C73132 + C73131) * C152514) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
              C6524 * C152618 + C6525 * C73121) *
                 C152514 +
             (C73125 + C73126 + C73127) * C152169) *
                C152536 -
            ((C73585 + C73586 + C73587) * C152169 +
             (C7475 * C73121 + C7476 * C152618 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C152617) *
                 C152514) *
                C152324) *
               C1373 +
           (((C7476 * C152617 + C7475 * C152618 + C8116 * C73121) * C152514 +
             (C74281 + C74282 + C74283) * C152169) *
                C152324 -
            ((C73355 + C73356 + C73357) * C152169 +
             (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
                C152536) *
               C1374 +
           (((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
             (C73358 + C73359 + C73360) * C152169) *
                C152536 -
            ((C75332 + C75333 + C75334) * C152169 +
             (C8828 * C73121 + C8116 * C152618 + C7475 * C152617) * C152514) *
                C152324) *
               C152577) *
              C152521 +
          ((((C73587 + C73586 + C73585) * C152514 +
             (C73591 + C73592 + C73593) * C152169) *
                C152324 -
            ((C73128 + C73129 + C73130) * C152169 +
             (C73127 + C73126 + C73125) * C152514) *
                C152536) *
               C1373 +
           (((C73357 + C73356 + C73355) * C152514 +
             (C73361 + C73362 + C73363) * C152169) *
                C152536 -
            ((C74284 + C74285 + C74286) * C152169 +
             (C74283 + C74282 + C74281) * C152514) *
                C152324) *
               C1374 +
           (((C75334 + C75333 + C75332) * C152514 +
             (C2063 * C152617 + C7478 * C152618 +
              (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C73121) *
                 C152169) *
                C152324 -
            ((C73364 + C73365 + C73366) * C152169 +
             (C73360 + C73359 + C73358) * C152514) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C152219 * C129 -
          ((C73128 + C73129 + C73130) * C152169 +
           (C73127 + C73126 + C73125) * C152514) *
              C152237 * C152219 * C130 +
          ((C73130 + C73129 + C73128) * C152514 +
           (C73131 + C73132 + C73133) * C152169) *
              C152237 * C152219 * C131 -
          ((C73134 + C73135 + C73136) * C152169 +
           (C73133 + C73132 + C73131) * C152514) *
              C152237 * C152219 * C132 +
          ((C73136 + C73135 + C73134) * C152514 +
           (C197 * C152617 + C842 * C152618 +
            (C134 * C367 + C420 + C420 + C152418 * C391) * C73121) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C152624 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C152608 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C152608 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C152624 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C152624 -
           ((C1846 * C73121 + C442 * C152618 + C437 * C152617) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C152608 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
             C6524 * C152618 + C6525 * C73121) *
                C152514 +
            (C73125 + C73126 + C73127) * C152169) *
               C152237 * C1373 -
           ((C73355 + C73356 + C73357) * C152169 +
            (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
               C152237 * C1374 +
           ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
            (C73358 + C73359 + C73360) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C73357 + C73356 + C73355) * C152514 +
            (C73361 + C73362 + C73363) * C152169) *
               C152237 * C1374 -
           ((C73128 + C73129 + C73130) * C152169 +
            (C73127 + C73126 + C73125) * C152514) *
               C152237 * C1373 -
           ((C73364 + C73365 + C73366) * C152169 +
            (C73360 + C73359 + C73358) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C73130 + C73129 + C73128) * C152514 +
            (C73131 + C73132 + C73133) * C152169) *
               C152237 * C1373 -
           ((C73791 + C73792 + C73793) * C152169 +
            (C73363 + C73362 + C73361) * C152514) *
               C152237 * C1374 +
           ((C73366 + C73365 + C73364) * C152514 +
            (C442 * C152617 + C1846 * C152618 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C73121) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C152617 +
            C6524 * C152618 + C6525 * C73121) *
               C152514 +
           (C73125 + C73126 + C73127) * C152169) *
              C152237 * C1461 -
          ((C73355 + C73356 + C73357) * C152169 +
           (C6526 * C73121 + C6525 * C152618 + C6524 * C152617) * C152514) *
              C152237 * C1462 +
          ((C6525 * C152617 + C6526 * C152618 + C7849 * C73121) * C152514 +
           (C73358 + C73359 + C73360) * C152169) *
              C152237 * C1463 -
          ((C7850 * C73121 + C6527 * C152618 + C1848 * C152617) * C152169 +
           (C7851 * C73121 + C7849 * C152618 + C6526 * C152617) * C152514) *
              C152237 * C1464 +
          ((C7849 * C152617 + C7851 * C152618 + C60267 * C73121) * C152514 +
           (C6527 * C152617 + C7850 * C152618 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C73121) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152278 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152285 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152237 * C3759) *
              C152196 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152285 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152278 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C3759) *
              C152205 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C152278 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152285 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152536 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152278 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152536) *
               C152285 +
           ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
                C152164 * C152536 -
            ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
             C93832 * C152617) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152536) *
               C152278 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152536 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152285 +
           ((C43137 * C152617 + (C43148 + C43147) * C152618 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C73121) *
                C152164 * C152324 -
            ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152631 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152627 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152237 * C152613 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C152237 * C152587) *
              C3415 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152627 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152631 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152613 +
           (C42749 * C152617 + (C42154 + C42153) * C152618 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C73121) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C3275 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152282) *
              C152630 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152282 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C3275 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C32391 * C152617 + (C31890 + C31889) * C152618 +
            (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
             C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                C73121) *
               C152164 * C152237 * C152282 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152625 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152610 +
            ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152617 +
             (C42483 + C42484) * C152618 + C93833 * C73121) *
                C152164 * C152580) *
               C3275 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152610 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152625 -
            ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
             (C42484 + C42483) * C152617) *
                C152164 * C152580) *
               C152282) *
              C3415 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152610 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152625 -
            ((C42487 + C42488) * C73121 + C44554 * C152618 +
             (C32186 + C32185) * C152617) *
                C152164 * C152580) *
               C3275 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152625 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152610 +
            (C44553 * C152617 + (C42488 + C42487) * C152618 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C73121) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152536 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C3275 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152536) *
               C152282) *
              C152196 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152536) *
               C3275 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152536 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
                C152536 -
            ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
                C152164 * C152324) *
               C3275 +
           ((C32943 * C152617 + (C34058 + C34057) * C152618 +
             (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
              C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                 C73121) *
                C152164 * C152324 -
            ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
                C152164 * C152536) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C3275 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152282) *
              C152630 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152282 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C3275 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C32391 * C152617 + (C31890 + C31889) * C152618 +
            (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
             C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                C73121) *
               C152164 * C152237 * C152282 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152631 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152627 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152237 * C152613 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C152237 * C152587) *
              C3415 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152627 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152631 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152613 +
           (C42749 * C152617 + (C42154 + C42153) * C152618 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C73121) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C4281 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152278 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C4281) *
               C152285 +
           ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
                C152164 * C4281 -
            ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
             C93832 * C152617) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C4281) *
               C152278 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C4281 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152285 +
           ((C43137 * C152617 + (C43148 + C43147) * C152618 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C73121) *
                C152164 * C152324 -
            ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152320 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152327 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C4953) *
              C152278 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C152327 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152320 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C4953) *
              C152285 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152320 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C152327 +
           (C93833 * C152617 + (C93845 + C93844) * C152618 +
            (C31518 * C8073 + C93838 + C93838 + C152553 * C8085 +
             C31520 * C61717 + C93839 + C93839 + C152482 * C61719) *
                C73121) *
               C152164 * C4953) *
              C3759) *
         C152191) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C4281 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C152631 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C152324 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C4281) *
              C152627 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C4281 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C152324) *
              C152613 +
          ((C94524 * C152617 + (C94536 + C94535) * C152618 +
            (C31518 * C8815 + C94529 + C94529 + C152553 * C8819 +
             C31520 * C60413 + C94530 + C94530 + C152482 * C60415) *
                C73121) *
               C152164 * C152324 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C4281 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C3275 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C4281) *
               C3275 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C4281 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
                C4281 -
            ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
                C152164 * C152324) *
               C3275 +
           ((C32943 * C152617 + (C34058 + C34057) * C152618 +
             (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
              C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                 C73121) *
                C152164 * C152324 -
            ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152632 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152629 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152616 -
           ((C95785 + C95786) * C73121 + (C45093 + C45094) * C152618 +
            (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
             C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                C152617) *
               C152164 * C152593) *
              C3275 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C152629 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152632 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C152616 +
           ((C45094 + C45093) * C152617 + (C95786 + C95785) * C152618 +
            (C31518 * C10112 + C95779 + C95779 + C152553 * C10116 +
             C31520 * C61259 + C95780 + C95780 + C152482 * C61261) *
                C73121) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152320 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152327 +
            ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152617 +
             (C42483 + C42484) * C152618 + C93833 * C73121) *
                C152164 * C4953) *
               C3275 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152327 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152320 -
            ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
             (C42484 + C42483) * C152617) *
                C152164 * C4953) *
               C152282) *
              C152521 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152327 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152320 -
            ((C42487 + C42488) * C73121 + C44554 * C152618 +
             (C32186 + C32185) * C152617) *
                C152164 * C4953) *
               C3275 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152320 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152327 +
            (C44553 * C152617 + (C42488 + C42487) * C152618 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C73121) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C4281 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C3275 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C4281) *
               C3275 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C4281 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
                C4281 -
            ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
                C152164 * C152324) *
               C3275 +
           ((C32943 * C152617 + (C34058 + C34057) * C152618 +
             (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
              C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                 C73121) *
                C152164 * C152324 -
            ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C4281 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C152631 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C152324 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C4281) *
              C152627 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C4281 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C152324) *
              C152613 +
          ((C94524 * C152617 + (C94536 + C94535) * C152618 +
            (C31518 * C8815 + C94529 + C94529 + C152553 * C8819 +
             C31520 * C60413 + C94530 + C94530 + C152482 * C60415) *
                C73121) *
               C152164 * C152324 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C1823 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C1824 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152237 * C1825 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C152237 * C152587) *
              C152521 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C1824 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C1823 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C1825 +
           (C42749 * C152617 + (C42154 + C42153) * C152618 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C73121) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152535 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152282) *
              C829 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152282 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C152535 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C32391 * C152617 + (C31890 + C31889) * C152618 +
            (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
             C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                C73121) *
               C152164 * C152237 * C152282 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C2359 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C2360 +
            ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152617 +
             (C42483 + C42484) * C152618 + C93833 * C73121) *
                C152164 * C152580) *
               C152535 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C2360 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C2359 -
            ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
             (C42484 + C42483) * C152617) *
                C152164 * C152580) *
               C152282) *
              C152521 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C2360 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C2359 -
            ((C42487 + C42488) * C73121 + C44554 * C152618 +
             (C32186 + C32185) * C152617) *
                C152164 * C152580) *
               C152535 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C2359 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C2360 +
            (C44553 * C152617 + (C42488 + C42487) * C152618 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C73121) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152536 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C1823 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C152324 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152536) *
              C1824 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152536 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C152324) *
              C1825 +
          ((C94524 * C152617 + (C94536 + C94535) * C152618 +
            (C31518 * C8815 + C94529 + C94529 + C152553 * C8819 +
             C31520 * C60413 + C94530 + C94530 + C152482 * C60415) *
                C73121) *
               C152164 * C152324 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152536 -
            ((C42486 + C42485) * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152535 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             (C43420 + C43419) * C73121) *
                C152164 * C152324 -
            ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152536) *
               C152535 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152536 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
                C152536 -
            ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
                C152164 * C152324) *
               C152535 +
           ((C32943 * C152617 + (C34058 + C34057) * C152618 +
             (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
              C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                 C73121) *
                C152164 * C152324 -
            ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C2973 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C2974 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C2975 -
           ((C95785 + C95786) * C73121 + (C45093 + C45094) * C152618 +
            (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
             C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                C152617) *
               C152164 * C152593) *
              C152535 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C2974 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C2973 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C2975 +
           ((C45094 + C45093) * C152617 + (C95786 + C95785) * C152618 +
            (C31518 * C10112 + C95779 + C95779 + C152553 * C10116 +
             C31520 * C61259 + C95780 + C95780 + C152482 * C61261) *
                C73121) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                   C152617 +
               (C40461 + C40462) * C152618 + (C40464 + C40463) * C73121) *
                  C152164 * C152237 * C152219 * C129 -
              (C40444 * C73121 + C40445 * C152618 +
               (C31578 + C31577) * C152617) *
                  C152164 * C152237 * C152219 * C130 +
              (C31587 * C152617 + C40451 * C152618 + C31892 * C73121) *
                  C152164 * C152237 * C152219 * C131 -
              ((C31889 + C31890) * C73121 + C41013 * C152618 +
               C31588 * C152617) *
                  C152164 * C152237 * C152219 * C132 +
              (C31589 * C152617 + (C32404 + C32403) * C152618 +
               (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
                C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                   C73121) *
                  C152164 * C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                 C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                    C152617 +
                (C40461 + C40462) * C152618 + C92363 * C73121) *
                   C152164 * C152237 * C152624 -
               ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
                (C40462 + C40461) * C152617) *
                   C152164 * C152237 * C152608 +
               (C92363 * C152617 + (C42151 + C42152) * C152618 +
                (C42156 + C42155) * C73121) *
                   C152164 * C152237 * C152577) *
                  C353 +
              ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) *
                   C152164 * C152237 * C152608 -
               (C40444 * C73121 + C40445 * C152618 +
                (C31578 + C31577) * C152617) *
                   C152164 * C152237 * C152624 -
               ((C42153 + C42154) * C73121 + C42750 * C152618 +
                C40444 * C152617) *
                   C152164 * C152237 * C152577) *
                  C354 +
              ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) *
                   C152164 * C152237 * C152624 -
               ((C33745 + C33746) * C73121 + C40452 * C152618 +
                C31891 * C152617) *
                   C152164 * C152237 * C152608 +
               (C31892 * C152617 + (C33746 + C33745) * C152618 +
                (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
                 C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                    C73121) *
                   C152164 * C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152625 -
           ((C42486 + C42485) * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152610 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + (C42490 + C42489) * C73121) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152610 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152625 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152625 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152610 +
           (C32194 * C152617 + (C35140 + C35139) * C152618 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C73121) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C1373 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C1374 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C1374 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C1373 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C1373 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C1374 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + C92363 * C73121) *
              C152164 * C152237 * C1461 -
          (C93600 * C73121 + (C40463 + C40464) * C152618 +
           (C40462 + C40461) * C152617) *
              C152164 * C152237 * C1462 +
          (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
              C152164 * C152237 * C1463 -
          ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
           C93600 * C152617) *
              C152164 * C152237 * C1464 +
          (C93601 * C152617 + (C93613 + C93612) * C152618 +
           (C31518 * C7822 + C93606 + C93606 + C152553 * C7830 +
            C31520 * C60876 + C93607 + C93607 + C152482 * C60878) *
               C73121) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152625 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152610 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152580) *
              C1373 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            (C43420 + C43419) * C73121) *
               C152164 * C152610 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152625 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C152580) *
              C1374 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152625 -
           ((C31520 * C8073 + C43412 + C43412 + C152482 * C8085 +
             C31518 * C8072 + C43411 + C43411 + C152553 * C8084) *
                C73121 +
            (C43419 + C43420) * C152618 + C93832 * C152617) *
               C152164 * C152610 +
           (C93833 * C152617 + (C93845 + C93844) * C152618 +
            (C31518 * C8073 + C93838 + C93838 + C152553 * C8085 +
             C31520 * C61717 + C93839 + C93839 + C152482 * C61719) *
                C73121) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C2359 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C2360 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C2360 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C2359 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C2359 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C2360 +
           (C32194 * C152617 + (C35140 + C35139) * C152618 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C73121) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C2359 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C2360 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152580) *
              C152624 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C2360 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C2359 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C152580) *
              C152608 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C2359 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C2360 +
           (C93833 * C152617 + (C93845 + C93844) * C152618 +
            (C31518 * C8073 + C93838 + C93838 + C152553 * C8085 +
             C31520 * C61717 + C93839 + C93839 + C152482 * C61719) *
                C73121) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + C92363 * C73121) *
              C152164 * C2590 -
          (C93832 * C73121 + (C41669 + C41670) * C152618 +
           (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
            C32126 + C32126 + C152553 * C628) *
               C152617) *
              C152164 * C2591 +
          ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
            C32128 + C32128 + C152482 * C2614) *
               C152617 +
           (C42483 + C42484) * C152618 + C93833 * C73121) *
              C152164 * C2592 -
          ((C31520 * C9389 + C45086 + C45086 + C152482 * C9401 +
            C31518 * C9387 + C45085 + C45085 + C152553 * C9399) *
               C73121 +
           (C45093 + C45094) * C152618 +
           (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
            C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
               C152617) *
              C152164 * C2593 +
          ((C31518 * C2599 + C34825 + C34825 + C152553 * C2615 +
            C31520 * C17994 + C34826 + C34826 + C152482 * C18002) *
               C152617 +
           (C31518 * C9388 + C44163 + C44163 + C152553 * C9400 +
            C31520 * C18737 + C44164 + C44164 + C152482 * C18741) *
               C152618 +
           (C31518 * C9389 + C95095 + C95095 + C152553 * C9401 +
            C31520 * C68548 + C95096 + C95096 + C152482 * C68550) *
               C73121) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152536 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C1373 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             (C43420 + C43419) * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152536) *
               C1374 +
           ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
                C152164 * C152536 -
            ((C31520 * C8073 + C43412 + C43412 + C152482 * C8085 +
              C31518 * C8072 + C43411 + C43411 + C152553 * C8084) *
                 C73121 +
             (C43419 + C43420) * C152618 + C93832 * C152617) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152536) *
               C1373 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152536 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C1374 +
           ((C43137 * C152617 + (C43148 + C43147) * C152618 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C73121) *
                C152164 * C152324 -
            ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152536 -
           ((C42486 + C42485) * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152324 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152536 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C32599 * C152617 + (C32942 + C32941) * C152618 +
            (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
             C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                C73121) *
               C152164 * C152324 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C2973 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C2974 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C2975 -
           ((C31520 * C9389 + C45086 + C45086 + C152482 * C9401 +
             C31518 * C9387 + C45085 + C45085 + C152553 * C9399) *
                C73121 +
            (C45093 + C45094) * C152618 +
            (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
             C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                C152617) *
               C152164 * C152593) *
              C152219 * C152521 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C2974 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C2973 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C2975 +
           ((C35358 + C35357) * C152617 + (C44822 + C44821) * C152618 +
            (C31518 * C9386 + C45087 + C45087 + C152553 * C9398 +
             C31520 * C9391 + C45088 + C45088 + C152482 * C9403) *
                C73121) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152624 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152608 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152608 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152624 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C152624 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152608 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + (C40464 + C40463) * C73121) *
              C152164 * C152237 * C152219 * C129 -
          (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
              C152164 * C152237 * C152219 * C130 +
          (C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
              C152237 * C152219 * C131 -
          ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
              C152164 * C152237 * C152219 * C132 +
          (C31589 * C152617 + (C32404 + C32403) * C152618 +
           (C31518 * C365 + C31853 + C31853 + C152553 * C389 + C31520 * C2045 +
            C31854 + C31854 + C152482 * C2047) *
               C73121) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C1373 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C1374 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C1374 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C1373 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C1373 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C1374 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + C92363 * C73121) *
              C152164 * C152237 * C1461 -
          (C93600 * C73121 + (C40463 + C40464) * C152618 +
           (C40462 + C40461) * C152617) *
              C152164 * C152237 * C1462 +
          (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
              C152164 * C152237 * C1463 -
          ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
           C93600 * C152617) *
              C152164 * C152237 * C1464 +
          (C93601 * C152617 + (C93613 + C93612) * C152618 +
           (C31518 * C7822 + C93606 + C93606 + C152553 * C7830 +
            C31520 * C60876 + C93607 + C93607 + C152482 * C60878) *
               C73121) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C2359 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C2360 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C2360 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C2359 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C2359 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C2360 +
           (C32194 * C152617 + (C35140 + C35139) * C152618 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C73121) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C2359 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C2360 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152580) *
              C152624 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C2360 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C2359 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C152580) *
              C152608 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C2359 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C2360 +
           (C93833 * C152617 + (C93845 + C93844) * C152618 +
            (C31518 * C8073 + C93838 + C93838 + C152553 * C8085 +
             C31520 * C61717 + C93839 + C93839 + C152482 * C61719) *
                C73121) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C4281 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152535 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C4281) *
               C152282) *
              C152196 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C4281) *
               C152535 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C4281 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
                C4281 -
            ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
                C152164 * C152324) *
               C152535 +
           ((C32943 * C152617 + (C34058 + C34057) * C152618 +
             (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
              C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                 C73121) *
                C152164 * C152324 -
            ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
                C152164 * C4281) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152320 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152327 +
            ((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C152617 +
             (C42483 + C42484) * C152618 + C93833 * C73121) *
                C152164 * C4953) *
               C152535 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152327 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152320 -
            ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
             (C42484 + C42483) * C152617) *
                C152164 * C4953) *
               C152282) *
              C3415 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152327 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152320 -
            ((C42487 + C42488) * C73121 + C44554 * C152618 +
             (C32186 + C32185) * C152617) *
                C152164 * C4953) *
               C152535 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152320 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152327 +
            (C44553 * C152617 + (C42488 + C42487) * C152618 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C73121) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C4281 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152624 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C4281) *
               C152608 +
           ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
                C152164 * C4281 -
            ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
             C93832 * C152617) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C4281) *
               C152624 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C4281 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152608 +
           ((C43137 * C152617 + (C43148 + C43147) * C152618 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C73121) *
                C152164 * C152324 -
            ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C4281 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152324 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C4281 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C32599 * C152617 + (C32942 + C32941) * C152618 +
            (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
             C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                C73121) *
               C152164 * C152324 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152632 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152629 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152616 -
           ((C95785 + C95786) * C73121 + (C45093 + C45094) * C152618 +
            (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
             C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                C152617) *
               C152164 * C152593) *
              C152219 * C3415 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152629 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152632 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C152616 +
           ((C35358 + C35357) * C152617 + (C44822 + C44821) * C152618 +
            (C31518 * C9386 + C45087 + C45087 + C152553 * C9398 +
             C31520 * C9391 + C45088 + C45088 + C152482 * C9403) *
                C73121) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152320 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152327 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C4953) *
              C152219 * C152196 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152327 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152320 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C4953) *
              C152219 * C152205 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152320 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152327 +
           (C32194 * C152617 + (C35140 + C35139) * C152618 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C73121) *
               C152164 * C4953) *
              C152219 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C4281 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152324 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C4281 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C32599 * C152617 + (C32942 + C32941) * C152618 +
            (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
             C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                C73121) *
               C152164 * C152324 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C4281 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152624 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             C94524 * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C4281) *
               C152608 +
           ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
                C152164 * C4281 -
            ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
             C93832 * C152617) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C4281) *
               C152624 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C4281 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152608 +
           ((C43137 * C152617 + (C43148 + C43147) * C152618 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C73121) *
                C152164 * C152324 -
            ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152535 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152282) *
              C829 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152282 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C152535 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C32391 * C152617 + (C31890 + C31889) * C152618 +
            (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
             C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                C73121) *
               C152164 * C152237 * C152282 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C1823 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C1824 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152237 * C1825 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C152237 * C152587) *
              C152521 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C1824 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C1823 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C1825 +
           (C42749 * C152617 + (C42154 + C42153) * C152618 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C73121) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152536 -
            ((C42486 + C42485) * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C152535 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             (C43420 + C43419) * C73121) *
                C152164 * C152324 -
            ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152536) *
               C152535 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152536 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
                C152536 -
            ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
                C152164 * C152324) *
               C152535 +
           ((C32943 * C152617 + (C34058 + C34057) * C152618 +
             (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
              C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                 C73121) *
                C152164 * C152324 -
            ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152536 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C1823 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            C94524 * C73121) *
               C152164 * C152324 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152536) *
              C1824 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152536 -
           ((C94535 + C94536) * C73121 + (C43419 + C43420) * C152618 +
            C93832 * C152617) *
               C152164 * C152324) *
              C1825 +
          ((C94524 * C152617 + (C94536 + C94535) * C152618 +
            (C31518 * C8815 + C94529 + C94529 + C152553 * C8819 +
             C31520 * C60413 + C94530 + C94530 + C152482 * C60415) *
                C73121) *
               C152164 * C152324 -
           ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
            C93600 * C152617) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152624 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152608 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152608 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152624 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C152624 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152608 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + (C40464 + C40463) * C73121) *
              C152164 * C152237 * C152219 * C129 -
          (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
              C152164 * C152237 * C152219 * C130 +
          (C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
              C152237 * C152219 * C131 -
          ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
              C152164 * C152237 * C152219 * C132 +
          (C31589 * C152617 + (C32404 + C32403) * C152618 +
           (C31518 * C365 + C31853 + C31853 + C152553 * C389 + C31520 * C2045 +
            C31854 + C31854 + C152482 * C2047) *
               C73121) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152625 -
           ((C42486 + C42485) * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152610 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + (C42490 + C42489) * C73121) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152610 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152625 -
           ((C42487 + C42488) * C73121 + C44554 * C152618 +
            (C32186 + C32185) * C152617) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152625 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152610 +
           (C32194 * C152617 + (C35140 + C35139) * C152618 +
            (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
             C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                C73121) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C1373 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C1374 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C1374 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C1373 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C1373 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C1374 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + C92363 * C73121) *
              C152164 * C152237 * C1461 -
          (C93600 * C73121 + (C40463 + C40464) * C152618 +
           (C40462 + C40461) * C152617) *
              C152164 * C152237 * C1462 +
          (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
              C152164 * C152237 * C1463 -
          ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
           C93600 * C152617) *
              C152164 * C152237 * C1464 +
          (C93601 * C152617 + (C93613 + C93612) * C152618 +
           (C31518 * C7822 + C93606 + C93606 + C152553 * C7830 +
            C31520 * C60876 + C93607 + C93607 + C152482 * C60878) *
               C73121) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152625 -
           (C93832 * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152610 +
           ((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C152617 +
            (C42483 + C42484) * C152618 + C93833 * C73121) *
               C152164 * C152580) *
              C1373 +
          (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
            (C43420 + C43419) * C73121) *
               C152164 * C152610 -
           (C93600 * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152625 -
           ((C93844 + C93845) * C73121 + (C42489 + C42490) * C152618 +
            (C42484 + C42483) * C152617) *
               C152164 * C152580) *
              C1374 +
          ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
               C152164 * C152625 -
           ((C31520 * C8073 + C43412 + C43412 + C152482 * C8085 +
             C31518 * C8072 + C43411 + C43411 + C152553 * C8084) *
                C73121 +
            (C43419 + C43420) * C152618 + C93832 * C152617) *
               C152164 * C152610 +
           (C93833 * C152617 + (C93845 + C93844) * C152618 +
            (C31518 * C8073 + C93838 + C93838 + C152553 * C8085 +
             C31520 * C61717 + C93839 + C93839 + C152482 * C61719) *
                C73121) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152536 -
           ((C42486 + C42485) * C73121 + (C41669 + C41670) * C152618 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C152617) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
               C152164 * C152324 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152536 -
           ((C34057 + C34058) * C73121 + C41664 * C152618 + C32193 * C152617) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C32599 * C152617 + (C32942 + C32941) * C152618 +
            (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
             C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                C73121) *
               C152164 * C152324 -
           ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C152617 +
             (C40461 + C40462) * C152618 + C92363 * C73121) *
                C152164 * C152536 -
            (C93832 * C73121 + (C41669 + C41670) * C152618 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C152617) *
                C152164 * C152324) *
               C1373 +
           (((C41670 + C41669) * C152617 + (C42485 + C42486) * C152618 +
             (C43420 + C43419) * C73121) *
                C152164 * C152324 -
            (C93600 * C73121 + (C40463 + C40464) * C152618 +
             (C40462 + C40461) * C152617) *
                C152164 * C152536) *
               C1374 +
           ((C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
                C152164 * C152536 -
            ((C31520 * C8073 + C43412 + C43412 + C152482 * C8085 +
              C31518 * C8072 + C43411 + C43411 + C152553 * C8084) *
                 C73121 +
             (C43419 + C43420) * C152618 + C93832 * C152617) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C32184 + C32183) * C152617 + C41663 * C152618 + C43137 * C73121) *
                C152164 * C152324 -
            (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
                C152164 * C152536) *
               C1373 +
           ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
                C152536 -
            ((C43147 + C43148) * C73121 + C43142 * C152618 + C41658 * C152617) *
                C152164 * C152324) *
               C1374 +
           ((C43137 * C152617 + (C43148 + C43147) * C152618 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C73121) *
                C152164 * C152324 -
            ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + (C40464 + C40463) * C73121) *
              C152164 * C152237 * C152219 * C129 -
          (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
              C152164 * C152237 * C152219 * C130 +
          (C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
              C152237 * C152219 * C131 -
          ((C31889 + C31890) * C73121 + C41013 * C152618 + C31588 * C152617) *
              C152164 * C152237 * C152219 * C132 +
          (C31589 * C152617 + (C32404 + C32403) * C152618 +
           (C31518 * C365 + C31853 + C31853 + C152553 * C389 + C31520 * C2045 +
            C31854 + C31854 + C152482 * C2047) *
               C73121) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C152624 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C152608 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C152608 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C152624 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C152624 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C152608 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C152617 +
            (C40461 + C40462) * C152618 + C92363 * C73121) *
               C152164 * C152237 * C1373 -
           ((C42152 + C42151) * C73121 + (C40463 + C40464) * C152618 +
            (C40462 + C40461) * C152617) *
               C152164 * C152237 * C1374 +
           (C92363 * C152617 + (C42151 + C42152) * C152618 +
            (C42156 + C42155) * C73121) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C40443 * C152617 + C40450 * C152618 + C42749 * C73121) * C152164 *
               C152237 * C1374 -
           (C40444 * C73121 + C40445 * C152618 + (C31578 + C31577) * C152617) *
               C152164 * C152237 * C1373 -
           ((C42153 + C42154) * C73121 + C42750 * C152618 + C40444 * C152617) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C31587 * C152617 + C40451 * C152618 + C31892 * C73121) * C152164 *
               C152237 * C1373 -
           ((C33745 + C33746) * C73121 + C40452 * C152618 + C31891 * C152617) *
               C152164 * C152237 * C1374 +
           (C31892 * C152617 + (C33746 + C33745) * C152618 +
            (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
             C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                C73121) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
            C31524 + C31524 + C152482 * C628) *
               C152617 +
           (C40461 + C40462) * C152618 + C92363 * C73121) *
              C152164 * C152237 * C1461 -
          (C93600 * C73121 + (C40463 + C40464) * C152618 +
           (C40462 + C40461) * C152617) *
              C152164 * C152237 * C1462 +
          (C92363 * C152617 + (C42151 + C42152) * C152618 + C93601 * C73121) *
              C152164 * C152237 * C1463 -
          ((C93612 + C93613) * C73121 + (C42155 + C42156) * C152618 +
           C93600 * C152617) *
              C152164 * C152237 * C1464 +
          (C93601 * C152617 + (C93613 + C93612) * C152618 +
           (C31518 * C7822 + C93606 + C93606 + C152553 * C7830 +
            C31520 * C60876 + C93607 + C93607 + C152482 * C60878) *
               C73121) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152278 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152285 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C3759) *
              C152196 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152285 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152278 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C3759) *
              C152205 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152278 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152285 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152278 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152285 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C3759) *
              C152196 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152285 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152278 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C3759) *
              C152205 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152278 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152285 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152278 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152285 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152237 * C3759) *
              C152196 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152285 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152278 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C3759) *
              C152205 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152278 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152285 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152278 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152285 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C152536 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C152278 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152285 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152278 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152285 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C152536 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C3759) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C152278 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152285 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152536 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152278 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152536) *
               C152285 +
           (((C65060 + C65059 + C65058) * C51108 +
             (C66339 + C66340 + C66341) * C152454) *
                C152164 * C152536 -
            ((C67304 + C67305 + C67306) * C152454 +
             (C66607 + C66606 + C66605) * C51108) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152536) *
               C152278 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152536 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152285 +
           (((C17235 + C17234 + C17233) * C51108 +
             (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
              C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
              C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C16925 + C16926 + C16927) * C152454 +
             (C15063 + C15062 + C15061) * C51108) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C3275 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C152282) *
                  C152630 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                C51785 * C51112) *
                   C152237 * C152282 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C3275) *
                  C152623 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152237 * C3275 -
               ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
                C51357 * C51110) *
                   C152237 * C152282) *
                  C152606 +
              ((C51785 * C51110 + (C51787 + C51786) * C51111 +
                (C842 * C51108 +
                 (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                    C51112) *
                   C152237 * C152282 -
               ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
                C51125 * C51110) *
                   C152237 * C3275) *
                  C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C152631 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C152627 +
               ((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152237 * C152613 -
               ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
                (C7849 * C152454 + C6526 * C51108) * C51110) *
                   C152237 * C152587) *
                  C3415 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                C51785 * C51112) *
                   C152237 * C152627 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C152631 -
               ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                (C51350 + C51349) * C51110) *
                   C152237 * C152613 +
               ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
                (C1846 * C51108 +
                 (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                    C51112) *
                   C152237 * C152587) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152625 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152610 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C152580) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152610 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152625 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C152580) *
               C152282) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152610 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152625 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C152580) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152625 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152610 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C3275 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C152630 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C3275 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152631 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152627 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152613 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C3415 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152627 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152631 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152613 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152625 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152610 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C152580) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152610 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152625 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C152580) *
               C152282) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152610 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152625 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C152580) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152625 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152610 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C3275 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152282) *
              C152630 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152282 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C3275) *
              C152623 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C3275 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152282) *
              C152606 +
          (((C15583 + C15582 + C15581) * C51108 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152454) *
               C152164 * C152237 * C152282 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152631 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152627 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152237 * C152613 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C152237 * C152587) *
              C3415 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152627 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152631 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152613 +
           ((C16927 + C16926 + C16925) * C51108 +
            (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 +
             C14685 * C8071 + C16478 + C16478 + C14681 * C8083 +
             C14687 * C8074 + C16479 + C16479 + C14682 * C8086) *
                C152454) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152625 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152610 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C51108 +
             (C66602 + C66603 + C66604) * C152454) *
                C152164 * C152580) *
               C3275 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152610 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152625 -
            ((C66608 + C66609 + C66610) * C152454 +
             (C66604 + C66603 + C66602) * C51108) *
                C152164 * C152580) *
               C152282) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152610 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152625 -
            ((C18326 + C18327 + C18328) * C152454 +
             (C15365 + C15364 + C15363) * C51108) *
                C152164 * C152580) *
               C3275 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152625 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152610 +
            ((C18328 + C18327 + C18326) * C51108 +
             (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
              C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
              C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                 C152454) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152282) *
              C152196 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C152536 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152282) *
              C152196 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C152536 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C3275 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152536 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C3275 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152536) *
               C152282) *
              C152196 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152536) *
               C3275 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152536 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          ((((C14761 + C14760 + C14759) * C51108 +
             (C15064 + C15065 + C15066) * C152454) *
                C152164 * C152536 -
            ((C16125 + C16126 + C16127) * C152454 +
             (C15368 + C15367 + C15366) * C51108) *
                C152164 * C152324) *
               C3275 +
           (((C16127 + C16126 + C16125) * C51108 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152454) *
                C152164 * C152324 -
            ((C15067 + C15068 + C15069) * C152454 +
             (C15066 + C15065 + C15064) * C51108) *
                C152164 * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152631 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152627 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152613 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152237 * C152587) *
              C3415 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152627 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152631 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152613 +
           ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
            (C1846 * C51108 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C3275 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152282) *
              C152630 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152282 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C3275) *
              C152623 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C3275 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152282) *
              C152606 +
          ((C51785 * C51110 + (C51787 + C51786) * C51111 +
            (C842 * C51108 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C51112) *
               C152237 * C152282 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C3275 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C152630 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C3275 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152631 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152627 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152613 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C3415 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152627 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152631 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152613 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C3275 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152282) *
              C152630 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152282 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C3275) *
              C152623 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C3275 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152282) *
              C152606 +
          (((C15583 + C15582 + C15581) * C51108 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152454) *
               C152164 * C152237 * C152282 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152631 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152627 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152237 * C152613 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C152237 * C152587) *
              C3415 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152627 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152631 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152613 +
           ((C16927 + C16926 + C16925) * C51108 +
            (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 +
             C14685 * C8071 + C16478 + C16478 + C14681 * C8083 +
             C14687 * C8074 + C16479 + C16479 + C14682 * C8086) *
                C152454) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152278 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152285 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C4281 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152278 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152285 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152278 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152285 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C4281 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C3759) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152278 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152285 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C4281 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152278 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C4281) *
               C152285 +
           (((C65060 + C65059 + C65058) * C51108 +
             (C66339 + C66340 + C66341) * C152454) *
                C152164 * C4281 -
            ((C67304 + C67305 + C67306) * C152454 +
             (C66607 + C66606 + C66605) * C51108) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C4281) *
               C152278 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C4281 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152285 +
           (((C17235 + C17234 + C17233) * C51108 +
             (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
              C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
              C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C16925 + C16926 + C16927) * C152454 +
             (C15063 + C15062 + C15061) * C51108) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152320 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C4953) *
              C152278 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152327 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152320 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C4953) *
              C152285 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152320 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152327 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152320 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C4953) *
              C152278 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152327 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152320 -
           ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C4953) *
              C152285 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152320 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152327 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152320 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152327 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C4953) *
              C152278 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152327 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152320 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C4953) *
              C152285 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152320 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152327 +
           ((C66610 + C66609 + C66608) * C51108 +
            (C14683 * C8070 + C66581 + C66581 + C14680 * C8082 +
             C14685 * C10112 + C66582 + C66582 + C14681 * C10116 +
             C14687 * C61259 + C66583 + C66583 + C14682 * C61261) *
                C152454) *
               C152164 * C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                  C6524 * C152454) *
                     C51110 +
                 (C51114 + C51115) * C51111 + C51124 * C51112) *
                    C4281 -
                (C51589 * C51112 + (C51579 + C51580) * C51111 +
                 (C7476 * C152454 +
                  (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                     C51110) *
                    C152324) *
                   C3275 +
               (((C7476 * C51108 + C7475 * C152454) * C51110 +
                 (C52275 + C52276) * C51111 + C52281 * C51112) *
                    C152324 -
                (C51357 * C51112 + (C51347 + C51348) * C51111 +
                 (C6525 * C152454 + C6524 * C51108) * C51110) *
                    C4281) *
                   C152282) *
                  C152621 +
              ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                 C51982 * C51112) *
                    C152324 -
                (C51125 * C51112 + (C51117 + C51116) * C51111 +
                 (C51115 + C51114) * C51110) *
                    C4281) *
                   C3275 +
               (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                 C51785 * C51112) *
                    C4281 -
                ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
                 (C52276 + C52275) * C51110) *
                    C152324) *
                   C152282) *
                  C152604 +
              (((C51124 * C51110 + (C51119 + C51118) * C51111 +
                 C51126 * C51112) *
                    C4281 -
                ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
                 C51589 * C51110) *
                    C152324) *
                   C3275 +
               ((C52281 * C51110 + (C52280 + C52279) * C51111 +
                 (C1223 * C51108 +
                  (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                     C51112) *
                    C152324 -
                ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
                 C51357 * C51110) *
                    C4281) *
                   C152282) *
                  C152571) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C4281 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C152324) *
                  C152631 +
              (((C7476 * C51108 + C7475 * C152454) * C51110 +
                (C52275 + C52276) * C51111 + C52281 * C51112) *
                   C152324 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C4281) *
                  C152627 +
              (((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C4281 -
               ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
                (C8116 * C152454 + C7475 * C51108) * C51110) *
                   C152324) *
                  C152613 +
              (((C8116 * C51108 + C8828 * C152454) * C51110 +
                (C7477 * C51108 + C8620 * C152454) * C51111 +
                (C7478 * C51108 +
                 (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                    C51112) *
                   C152324 -
               ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
                (C7849 * C152454 + C6526 * C51108) * C51110) *
                   C4281) *
                  C152587) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152632 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152616 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C3275 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152629 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152632 -
           ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152616 +
           ((C10130 * C51108 + C10129 * C152454) * C51110 +
            (C9916 * C51108 + C9915 * C152454) * C51111 +
            (C26771 * C51108 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C152454) *
                C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C4281 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152631 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C4281) *
              C152627 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C4281 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C152613 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152632 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152616 -
           (C61726 * C59282 + C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C3275 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152629 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152632 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152616 +
           (C10130 * C59279 + C10129 * C59280 + C61726 * C59281 +
            (C134 * C61717 + C61723 + C61723 + C152418 * C61719) * C59282) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C4281 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C3275 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C4281) *
               C3275 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C4281 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          ((((C14761 + C14760 + C14759) * C51108 +
             (C15064 + C15065 + C15066) * C152454) *
                C152164 * C4281 -
            ((C16125 + C16126 + C16127) * C152454 +
             (C15368 + C15367 + C15366) * C51108) *
                C152164 * C152324) *
               C3275 +
           (((C16127 + C16126 + C16125) * C51108 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152454) *
                C152164 * C152324 -
            ((C15067 + C15068 + C15069) * C152454 +
             (C15066 + C15065 + C15064) * C51108) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C4281 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C152631 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152324 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C4281) *
              C152627 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C4281 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152324) *
              C152613 +
          (((C67306 + C67305 + C67304) * C51108 +
            (C14683 * C8072 + C67295 + C67295 + C14680 * C8084 +
             C14685 * C8073 + C67296 + C67296 + C14681 * C8085 +
             C14687 * C61717 + C67297 + C67297 + C14682 * C61719) *
                C152454) *
               C152164 * C152324 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152632 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152629 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152616 -
           ((C68567 + C68568 + C68569) * C152454 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C51108) *
               C152164 * C152593) *
              C3275 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152629 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152632 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C152616 +
           ((C68569 + C68568 + C68567) * C51108 +
            (C14683 * C9387 + C68558 + C68558 + C14680 * C9399 +
             C14685 * C9389 + C68559 + C68559 + C14681 * C9401 +
             C14687 * C68548 + C68560 + C68560 + C14682 * C68550) *
                C152454) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152320 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C4953) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152327 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152320 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C4953) *
               C152282) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152327 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152320 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C4953) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152320 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152327 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152320 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C4953) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152327 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152320 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C4953) *
               C152282) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152327 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152320 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C4953) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152320 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152327 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152320 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152327 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C51108 +
             (C66602 + C66603 + C66604) * C152454) *
                C152164 * C4953) *
               C3275 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152327 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152320 -
            ((C66608 + C66609 + C66610) * C152454 +
             (C66604 + C66603 + C66602) * C51108) *
                C152164 * C4953) *
               C152282) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152327 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152320 -
            ((C18326 + C18327 + C18328) * C152454 +
             (C15365 + C15364 + C15363) * C51108) *
                C152164 * C4953) *
               C3275 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152320 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152327 +
            ((C18328 + C18327 + C18326) * C51108 +
             (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
              C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
              C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                 C152454) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C4281 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152631 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152324 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C4281) *
              C152627 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C4281 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152324) *
              C152613 +
          (((C8116 * C51108 + C8828 * C152454) * C51110 +
            (C7477 * C51108 + C8620 * C152454) * C51111 +
            (C7478 * C51108 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C51112) *
               C152324 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152282) *
              C152621 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152604 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C4281 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C3275 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C4281 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152631 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C4281) *
              C152627 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C4281 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C152613 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C4281 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C3275 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C4281) *
               C3275 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C4281 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          ((((C14761 + C14760 + C14759) * C51108 +
             (C15064 + C15065 + C15066) * C152454) *
                C152164 * C4281 -
            ((C16125 + C16126 + C16127) * C152454 +
             (C15368 + C15367 + C15366) * C51108) *
                C152164 * C152324) *
               C3275 +
           (((C16127 + C16126 + C16125) * C51108 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152454) *
                C152164 * C152324 -
            ((C15067 + C15068 + C15069) * C152454 +
             (C15066 + C15065 + C15064) * C51108) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C4281 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C152631 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152324 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C4281) *
              C152627 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C4281 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152324) *
              C152613 +
          (((C67306 + C67305 + C67304) * C51108 +
            (C14683 * C8072 + C67295 + C67295 + C14680 * C8084 +
             C14685 * C8073 + C67296 + C67296 + C14681 * C8085 +
             C14687 * C61717 + C67297 + C67297 + C14682 * C61719) *
                C152454) *
               C152164 * C152324 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C152535 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C152282) *
                  C829 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                C51785 * C51112) *
                   C152237 * C152282 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C152535) *
                  C830 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152237 * C152535 -
               ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
                C51357 * C51110) *
                   C152237 * C152282) *
                  C831 +
              ((C51785 * C51110 + (C51787 + C51786) * C51111 +
                (C842 * C51108 +
                 (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                    C51112) *
                   C152237 * C152282 -
               ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
                C51125 * C51110) *
                   C152237 * C152535) *
                  C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C1823 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C1824 +
               ((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152237 * C1825 -
               ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
                (C7849 * C152454 + C6526 * C51108) * C51110) *
                   C152237 * C152587) *
                  C152521 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                C51785 * C51112) *
                   C152237 * C1824 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C1823 -
               ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                (C51350 + C51349) * C51110) *
                   C152237 * C1825 +
               ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
                (C1846 * C51108 +
                 (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                    C51112) *
                   C152237 * C152587) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C2359 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C152580) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C2360 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C2359 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C152580) *
               C152282) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C2360 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C2359 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C152580) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C2359 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C2360 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152535 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C829 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152535 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1823 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1824 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C1825 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C152521 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1824 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1823 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C1825 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C2359 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C2360 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C152580) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C2360 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C2359 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C152580) *
               C152282) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C2360 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C2359 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C152580) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C2359 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C2360 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152535 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152282) *
              C829 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152282 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152535) *
              C830 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152535 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152282) *
              C831 +
          (((C15583 + C15582 + C15581) * C51108 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152454) *
               C152164 * C152237 * C152282 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C1823 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C1824 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152237 * C1825 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C152237 * C152587) *
              C152521 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C1824 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C1823 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C1825 +
           ((C16927 + C16926 + C16925) * C51108 +
            (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 +
             C14685 * C8071 + C16478 + C16478 + C14681 * C8083 +
             C14687 * C8074 + C16479 + C16479 + C14682 * C8086) *
                C152454) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C2359 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C2360 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C51108 +
             (C66602 + C66603 + C66604) * C152454) *
                C152164 * C152580) *
               C152535 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C2360 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C2359 -
            ((C66608 + C66609 + C66610) * C152454 +
             (C66604 + C66603 + C66602) * C51108) *
                C152164 * C152580) *
               C152282) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C2360 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C2359 -
            ((C18326 + C18327 + C18328) * C152454 +
             (C15365 + C15364 + C15363) * C51108) *
                C152164 * C152580) *
               C152535 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C2359 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C2360 +
            ((C18328 + C18327 + C18326) * C51108 +
             (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
              C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
              C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                 C152454) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                  C6524 * C152454) *
                     C51110 +
                 (C51114 + C51115) * C51111 + C51124 * C51112) *
                    C152536 -
                (C51589 * C51112 + (C51579 + C51580) * C51111 +
                 (C7476 * C152454 +
                  (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                     C51110) *
                    C152324) *
                   C152535 +
               (((C7476 * C51108 + C7475 * C152454) * C51110 +
                 (C52275 + C52276) * C51111 + C52281 * C51112) *
                    C152324 -
                (C51357 * C51112 + (C51347 + C51348) * C51111 +
                 (C6525 * C152454 + C6524 * C51108) * C51110) *
                    C152536) *
                   C152282) *
                  C353 +
              ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                 C51982 * C51112) *
                    C152324 -
                (C51125 * C51112 + (C51117 + C51116) * C51111 +
                 (C51115 + C51114) * C51110) *
                    C152536) *
                   C152535 +
               (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                 C51785 * C51112) *
                    C152536 -
                ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
                 (C52276 + C52275) * C51110) *
                    C152324) *
                   C152282) *
                  C354 +
              (((C51124 * C51110 + (C51119 + C51118) * C51111 +
                 C51126 * C51112) *
                    C152536 -
                ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
                 C51589 * C51110) *
                    C152324) *
                   C152535 +
               ((C52281 * C51110 + (C52280 + C52279) * C51111 +
                 (C1223 * C51108 +
                  (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                     C51112) *
                    C152324 -
                ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
                 C51357 * C51110) *
                    C152536) *
                   C152282) *
                  C152571) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152536 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C152324) *
                  C1823 +
              (((C7476 * C51108 + C7475 * C152454) * C51110 +
                (C52275 + C52276) * C51111 + C52281 * C51112) *
                   C152324 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152536) *
                  C1824 +
              (((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152536 -
               ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
                (C8116 * C152454 + C7475 * C51108) * C51110) *
                   C152324) *
                  C1825 +
              (((C8116 * C51108 + C8828 * C152454) * C51110 +
                (C7477 * C51108 + C8620 * C152454) * C51111 +
                (C7478 * C51108 +
                 (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                    C51112) *
                   C152324 -
               ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
                (C7849 * C152454 + C6526 * C51108) * C51110) *
                   C152536) *
                  C152587) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2973 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C2975 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C152535 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C2974 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C2973 -
           ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C2975 +
           ((C10130 * C51108 + C10129 * C152454) * C51110 +
            (C9916 * C51108 + C9915 * C152454) * C51111 +
            (C26771 * C51108 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C152454) *
                C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152282) *
              C353 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C152536 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C1823 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152536) *
              C1824 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152536 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C1825 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2973 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C2975 -
           (C61726 * C59282 + C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C152535 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C2974 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C2973 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C2975 +
           (C10130 * C59279 + C10129 * C59280 + C61726 * C59281 +
            (C134 * C61717 + C61723 + C61723 + C152418 * C61719) * C59282) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152536 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152535 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C14683 * C1652 + C16709 + C16709 + C14680 * C1676 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14687 * C9387 + C16707 + C16707 + C14682 * C9399) *
                 C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152536) *
               C152535 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152536 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152282) *
              C354 +
          ((((C14761 + C14760 + C14759) * C51108 +
             (C15064 + C15065 + C15066) * C152454) *
                C152164 * C152536 -
            ((C16125 + C16126 + C16127) * C152454 +
             (C15368 + C15367 + C15366) * C51108) *
                C152164 * C152324) *
               C152535 +
           (((C16127 + C16126 + C16125) * C51108 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152454) *
                C152164 * C152324 -
            ((C15067 + C15068 + C15069) * C152454 +
             (C15066 + C15065 + C15064) * C51108) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152536 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C1823 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152324 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152536) *
              C1824 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152536 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152324) *
              C1825 +
          (((C67306 + C67305 + C67304) * C51108 +
            (C14683 * C8072 + C67295 + C67295 + C14680 * C8084 +
             C14685 * C8073 + C67296 + C67296 + C14681 * C8085 +
             C14687 * C61717 + C67297 + C67297 + C14682 * C61719) *
                C152454) *
               C152164 * C152324 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C2973 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C2974 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C2975 -
           ((C68567 + C68568 + C68569) * C152454 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C51108) *
               C152164 * C152593) *
              C152535 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C2974 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C2973 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C2975 +
           ((C68569 + C68568 + C68567) * C51108 +
            (C14683 * C9387 + C68558 + C68558 + C14680 * C9399 +
             C14685 * C9389 + C68559 + C68559 + C14681 * C9401 +
             C14687 * C68548 + C68560 + C68560 + C14682 * C68550) *
                C152454) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                C6524 * C152454) *
                   C51110 +
               (C51114 + C51115) * C51111 + C51124 * C51112) *
                  C152237 * C152219 * C129 -
              (C51125 * C51112 + (C51117 + C51116) * C51111 +
               (C51115 + C51114) * C51110) *
                  C152237 * C152219 * C130 +
              (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                  C152237 * C152219 * C131 -
              ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
               C51125 * C51110) *
                  C152237 * C152219 * C132 +
              (C51126 * C51110 + (C51123 + C51122) * C51111 +
               (C198 * C51108 +
                (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
                   C51112) *
                  C152237 * C152219 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C152624 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C152608 +
               ((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152237 * C152577) *
                  C353 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                (C51353 + C51354) * C51112) *
                   C152237 * C152608 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C152624 -
               ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                (C51350 + C51349) * C51110) *
                   C152237 * C152577) *
                  C354 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152237 * C152624 -
               ((C444 * C152454 + C443 * C51108) * C51112 +
                (C51354 + C51353) * C51111 + C51357 * C51110) *
                   C152237 * C152608 +
               (C51358 * C51110 + (C51356 + C51355) * C51111 +
                (C444 * C51108 +
                 (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                    C51112) *
                   C152237 * C152577) *
                  C152571) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152625 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C152610 +
               (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
                 C8114 * C152454) *
                    C51110 +
                (C51581 + C51582) * C51111 + C51590 * C51112) *
                   C152580) *
                  C152219 * C353 +
              (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                (C51585 + C51586) * C51112) *
                   C152610 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152625 -
               ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
                (C51582 + C51581) * C51110) *
                   C152580) *
                  C152219 * C354 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152625 -
               ((C1223 * C152454 + C688 * C51108) * C51112 +
                (C51586 + C51585) * C51111 + C51589 * C51110) *
                   C152610 +
               (C51590 * C51110 + (C51588 + C51587) * C51111 +
                (C689 * C51108 +
                 (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                    C51112) *
                   C152580) *
                  C152219 * C152571) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C1373 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C1374 +
               ((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152237 * C152577) *
                  C152621 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                C51785 * C51112) *
                   C152237 * C1374 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C1373 -
               ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                (C51350 + C51349) * C51110) *
                   C152237 * C152577) *
                  C152604 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152237 * C1373 -
               ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
                C51357 * C51110) *
                   C152237 * C1374 +
               (C51358 * C51110 + (C51356 + C51355) * C51111 +
                (C444 * C51108 +
                 (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                    C51112) *
                   C152237 * C152577) *
                  C152571) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                C6524 * C152454) *
                   C51110 +
               (C51114 + C51115) * C51111 + C51124 * C51112) *
                  C152237 * C1461 -
              (C51357 * C51112 + (C51347 + C51348) * C51111 +
               (C6525 * C152454 + C6524 * C51108) * C51110) *
                  C152237 * C1462 +
              ((C6525 * C51108 + C6526 * C152454) * C51110 +
               (C51349 + C51350) * C51111 + C51358 * C51112) *
                  C152237 * C1463 -
              ((C6528 * C152454 + C1847 * C51108) * C51112 +
               (C6527 * C152454 + C1848 * C51108) * C51111 +
               (C7849 * C152454 + C6526 * C51108) * C51110) *
                  C152237 * C1464 +
              ((C7849 * C51108 + C7851 * C152454) * C51110 +
               (C6527 * C51108 + C7850 * C152454) * C51111 +
               (C6528 * C51108 +
                (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
                   C51112) *
                  C152237 * C1465) *
             C152191 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152625 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C152610 +
               (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
                 C8114 * C152454) *
                    C51110 +
                (C51581 + C51582) * C51111 + C51590 * C51112) *
                   C152580) *
                  C1373 +
              (((C7476 * C51108 + C7475 * C152454) * C51110 +
                (C52275 + C52276) * C51111 + C52281 * C51112) *
                   C152610 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152625 -
               ((C6768 * C152454 + C2839 * C51108) * C51112 +
                (C6767 * C152454 + C2840 * C51108) * C51111 +
                (C8115 * C152454 + C8114 * C51108) * C51110) *
                   C152580) *
                  C1374 +
              (((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152625 -
               ((C7478 * C152454 + C2063 * C51108) * C51112 +
                (C7477 * C152454 + C2064 * C51108) * C51111 +
                (C8116 * C152454 + C7475 * C51108) * C51110) *
                   C152610 +
               ((C8115 * C51108 + C8118 * C152454) * C51110 +
                (C6767 * C51108 + C8117 * C152454) * C51111 +
                (C6768 * C51108 +
                 (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                    C51112) *
                   C152580) *
                  C152577) *
             C152191 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C2359 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C2360 +
               (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
                 C8114 * C152454) *
                    C51110 +
                (C51581 + C51582) * C51111 + C51590 * C51112) *
                   C152580) *
                  C152219 * C152621 +
              (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                C51982 * C51112) *
                   C2360 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C2359 -
               ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
                (C51582 + C51581) * C51110) *
                   C152580) *
                  C152219 * C152604 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C2359 -
               ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
                C51589 * C51110) *
                   C2360 +
               (C51590 * C51110 + (C51588 + C51587) * C51111 +
                (C689 * C51108 +
                 (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                    C51112) *
                   C152580) *
                  C152219 * C152571) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C2359 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C2360 +
               (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
                 C8114 * C152454) *
                    C51110 +
                (C51581 + C51582) * C51111 + C51590 * C51112) *
                   C152580) *
                  C152624 +
              (((C7476 * C51108 + C7475 * C152454) * C51110 +
                (C52275 + C52276) * C51111 + C52281 * C51112) *
                   C2360 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C2359 -
               ((C6768 * C152454 + C2839 * C51108) * C51112 +
                (C6767 * C152454 + C2840 * C51108) * C51111 +
                (C8115 * C152454 + C8114 * C51108) * C51110) *
                   C152580) *
                  C152608 +
              (((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C2359 -
               ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
                (C8116 * C152454 + C7475 * C51108) * C51110) *
                   C2360 +
               ((C8115 * C51108 + C8118 * C152454) * C51110 +
                (C6767 * C51108 + C8117 * C152454) * C51111 +
                (C6768 * C51108 +
                 (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                    C51112) *
                   C152580) *
                  C152577) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C2590 -
          (C51589 * C51112 + (C51579 + C51580) * C51111 +
           (C7476 * C152454 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
               C51110) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
            C8114 * C152454) *
               C51110 +
           (C51581 + C51582) * C51111 + C51590 * C51112) *
              C2592 -
          ((C26771 * C152454 + C2995 * C51108) * C51112 +
           (C9916 * C152454 + C2996 * C51108) * C51111 +
           (C10130 * C152454 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
               C51110) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C51108 +
            (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C152454) *
               C51110 +
           ((C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C51108 +
            (C134 * C9390 + C9409 + C9409 + C152418 * C9402) * C152454) *
               C51111 +
           ((C134 * C2601 + C2626 + C2626 + C152418 * C2617) * C51108 +
            (C134 * C18307 + C26275 + C26275 + C152418 * C18309) * C152454) *
               C51112) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C353 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152610 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152625 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152625 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152610 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C1373 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152610 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152625 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C1374 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152625 -
           ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
            C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
               C152164 * C152610 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C152621 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C2360 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C2359 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C2359 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C2360 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152624 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C2360 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C2359 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C152608 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C2359 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C2360 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C2590 -
          (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
           (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
              C152164 * C2591 +
          ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
           C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
              C152164 * C2592 -
          ((C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C59282 +
           C10129 * C59281 + C10130 * C59280 +
           (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
              C152164 * C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C59279 +
           (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C59280 +
           (C134 * C9389 + C9408 + C9408 + C152418 * C9401) * C59281 +
           (C134 * C61259 + C61263 + C61263 + C152418 * C61261) * C59282) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C14683 * C359 + C14997 + C14997 + C14680 * C383 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14687 * C1648 + C14995 +
            C14995 + C14682 * C1672) *
               C152454) *
              C152164 * C152237 * C152219 * C129 -
          ((C15058 + C15059 + C15060) * C152454 +
           (C14758 + C14757 + C14756) * C51108) *
              C152164 * C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C51108 +
           (C15064 + C15065 + C15066) * C152454) *
              C152164 * C152237 * C152219 * C131 -
          ((C15581 + C15582 + C15583) * C152454 +
           (C14764 + C14763 + C14762) * C51108) *
              C152164 * C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C51108 +
           (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
            C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
            C15574 + C14682 * C2823) *
               C152454) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152624 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152608 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152608 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152624 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152625 -
           ((C14687 * C3129 + C16088 + C16088 + C14682 * C3137 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14683 * C1179 + C16086 + C16086 + C14680 * C1191) *
                C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C14683 * C1648 + C16703 + C16703 + C14680 * C1672 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14687 * C9388 + C16701 + C16701 + C14682 * C9400) *
                C152454) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152610 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152625 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C152580) *
              C152219 * C354 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152625 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152610 +
           ((C15371 + C15370 + C15369) * C51108 +
            (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
             C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
             C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                C152454) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C1373 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C1374 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C1374 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C1373 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C65055 + C65056 + C65057) * C152454) *
              C152164 * C152237 * C1461 -
          ((C65058 + C65059 + C65060) * C152454 +
           (C65057 + C65056 + C65055) * C51108) *
              C152164 * C152237 * C1462 +
          ((C65060 + C65059 + C65058) * C51108 +
           (C66339 + C66340 + C66341) * C152454) *
              C152164 * C152237 * C1463 -
          ((C66342 + C66343 + C66344) * C152454 +
           (C66341 + C66340 + C66339) * C51108) *
              C152164 * C152237 * C1464 +
          ((C66344 + C66343 + C66342) * C51108 +
           (C14683 * C7821 + C66324 + C66324 + C14680 * C7829 + C14685 * C8815 +
            C66325 + C66325 + C14681 * C8819 + C14687 * C60413 + C66326 +
            C66326 + C14682 * C60415) *
               C152454) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152625 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152580) *
              C1373 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152610 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152625 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C152580) *
              C1374 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152625 -
           ((C14687 * C10112 + C17432 + C17432 + C14682 * C10116 +
             C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
             C14683 * C2197 + C17430 + C17430 + C14680 * C2205) *
                C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152610 +
           ((C66610 + C66609 + C66608) * C51108 +
            (C14683 * C8070 + C66581 + C66581 + C14680 * C8082 +
             C14685 * C10112 + C66582 + C66582 + C14681 * C10116 +
             C14687 * C61259 + C66583 + C66583 + C14682 * C61261) *
                C152454) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C2359 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C2360 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C2359 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C152580) *
              C152219 * C152604 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C2359 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C2360 +
           ((C15371 + C15370 + C15369) * C51108 +
            (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
             C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
             C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                C152454) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C2359 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152580) *
              C152624 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C2360 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C2359 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C152580) *
              C152608 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C2359 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C2360 +
           ((C66610 + C66609 + C66608) * C51108 +
            (C14683 * C8070 + C66581 + C66581 + C14680 * C8082 +
             C14685 * C10112 + C66582 + C66582 + C14681 * C10116 +
             C14687 * C61259 + C66583 + C66583 + C14682 * C61261) *
                C152454) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C65055 + C65056 + C65057) * C152454) *
              C152164 * C2590 -
          ((C65969 + C65970 + C65971) * C152454 +
           (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
            C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
            C14680 * C628) *
               C51108) *
              C152164 * C2591 +
          ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
            C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
            C15302 + C14682 * C2615) *
               C51108 +
           (C66602 + C66603 + C66604) * C152454) *
              C152164 * C2592 -
          ((C14687 * C18737 + C18746 + C18746 + C14682 * C18741 +
            C14685 * C9388 + C18745 + C18745 + C14681 * C9400 + C14683 * C3129 +
            C18744 + C18744 + C14680 * C3137) *
               C152454 +
           (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
            C14685 * C2599 + C18010 + C18010 + C14681 * C2615 + C14683 * C2598 +
            C18011 + C18011 + C14680 * C2614) *
               C51108) *
              C152164 * C2593 +
          ((C14683 * C2599 + C18012 + C18012 + C14680 * C2615 +
            C14685 * C17994 + C18013 + C18013 + C14681 * C18002 +
            C14687 * C17995 + C18014 + C18014 + C14682 * C18003) *
               C51108 +
           (C14683 * C9388 + C67868 + C67868 + C14680 * C9400 +
            C14685 * C18737 + C67869 + C67869 + C14681 * C18741 +
            C14687 * C67864 + C67870 + C67870 + C14682 * C67866) *
               C152454) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152536 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C152324) *
                  C152219 * C829 +
              (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                C51982 * C51112) *
                   C152324 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152536) *
                  C152219 * C830 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152536 -
               ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
                C51589 * C51110) *
                   C152324) *
                  C152219 * C831 +
              ((C51982 * C51110 + (C51984 + C51983) * C51111 +
                (C984 * C51108 +
                 (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                    C51112) *
                   C152324 -
               ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
                C51125 * C51110) *
                   C152536) *
                  C152219 * C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                  C6524 * C152454) *
                     C51110 +
                 (C51114 + C51115) * C51111 + C51124 * C51112) *
                    C152536 -
                (C51589 * C51112 + (C51579 + C51580) * C51111 +
                 (C7476 * C152454 +
                  (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                     C51110) *
                    C152324) *
                   C1373 +
               (((C7476 * C51108 + C7475 * C152454) * C51110 +
                 (C52275 + C52276) * C51111 + C52281 * C51112) *
                    C152324 -
                (C51357 * C51112 + (C51347 + C51348) * C51111 +
                 (C6525 * C152454 + C6524 * C51108) * C51110) *
                    C152536) *
                   C1374 +
               (((C6525 * C51108 + C6526 * C152454) * C51110 +
                 (C51349 + C51350) * C51111 + C51358 * C51112) *
                    C152536 -
                ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
                 (C8116 * C152454 + C7475 * C51108) * C51110) *
                    C152324) *
                   C152577) *
                  C152521 +
              ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                 C51982 * C51112) *
                    C152324 -
                (C51125 * C51112 + (C51117 + C51116) * C51111 +
                 (C51115 + C51114) * C51110) *
                    C152536) *
                   C1373 +
               (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                 C51785 * C51112) *
                    C152536 -
                ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
                 (C52276 + C52275) * C51110) *
                    C152324) *
                   C1374 +
               (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
                 (C2062 * C51108 +
                  (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                     C51112) *
                    C152324 -
                ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                 (C51350 + C51349) * C51110) *
                    C152536) *
                   C152577) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2973 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C2975 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C152219 * C152521 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C2974 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C2973 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C2975 +
           ((C54575 + C54574) * C51110 + (C54573 + C54572) * C51111 +
            (C2994 * C51108 +
             (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152454) *
                C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C829 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152536 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C1373 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C1374 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C152536 -
            ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
             C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C1373 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C1374 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2973 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C2975 -
           ((C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C59282 +
            C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C152219 * C152521 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C2974 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C2973 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C2975 +
           (C2996 * C59279 + C9916 * C59280 + C9915 * C59281 +
            (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C59282) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152536 -
           ((C14687 * C3129 + C16088 + C16088 + C14682 * C3137 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14683 * C1179 + C16086 + C16086 + C14680 * C1191) *
                C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152324 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152536) *
              C152219 * C830 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152536 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152324) *
              C152219 * C831 +
          (((C15795 + C15794 + C15793) * C51108 +
            (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
             C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
             C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152536 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C1373 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152536) *
               C1374 +
           (((C65060 + C65059 + C65058) * C51108 +
             (C66339 + C66340 + C66341) * C152454) *
                C152164 * C152536 -
            ((C14687 * C10112 + C17432 + C17432 + C14682 * C10116 +
              C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
              C14683 * C2197 + C17430 + C17430 + C14680 * C2205) *
                 C152454 +
             (C66607 + C66606 + C66605) * C51108) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152536) *
               C1373 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152536 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C1374 +
           (((C17235 + C17234 + C17233) * C51108 +
             (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
              C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
              C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C16925 + C16926 + C16927) * C152454 +
             (C15063 + C15062 + C15061) * C51108) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C2973 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C2974 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C2975 -
           ((C14687 * C18737 + C18746 + C18746 + C14682 * C18741 +
             C14685 * C9388 + C18745 + C18745 + C14681 * C9400 +
             C14683 * C3129 + C18744 + C18744 + C14680 * C3137) *
                C152454 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C51108) *
               C152164 * C152593) *
              C152219 * C152521 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C2974 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C2973 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C2975 +
           ((C18543 + C18542 + C18541) * C51108 +
            (C14683 * C3130 + C18747 + C18747 + C14680 * C3138 +
             C14685 * C9390 + C18748 + C18748 + C14681 * C9402 +
             C14687 * C18738 + C18749 + C18749 + C14682 * C18742) *
                C152454) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C152219 * C129 -
          (C51125 * C51112 + (C51117 + C51116) * C51111 +
           (C51115 + C51114) * C51110) *
              C152237 * C152219 * C130 +
          (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
              C152237 * C152219 * C131 -
          ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
           C51125 * C51110) *
              C152237 * C152219 * C132 +
          (C51126 * C51110 + (C51123 + C51122) * C51111 +
           (C198 * C51108 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152624 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152608 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            (C51353 + C51354) * C51112) *
               C152237 * C152608 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152624 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C51108) * C51112 +
            (C51354 + C51353) * C51111 + C51357 * C51110) *
               C152237 * C152608 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2359 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152219 * C152621 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C2360 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C2359 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152580) *
              C152219 * C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C2359 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C2360 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2359 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152624 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C2360 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C2359 -
           ((C6768 * C152454 + C2839 * C51108) * C51112 +
            (C6767 * C152454 + C2840 * C51108) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152580) *
              C152608 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C2359 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C2360 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C152621 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C2360 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C2359 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C2359 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C2360 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152624 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C2360 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C2359 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C152608 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C2359 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C2360 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C14683 * C359 + C14997 + C14997 + C14680 * C383 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14687 * C1648 + C14995 +
            C14995 + C14682 * C1672) *
               C152454) *
              C152164 * C152237 * C152219 * C129 -
          ((C15058 + C15059 + C15060) * C152454 +
           (C14758 + C14757 + C14756) * C51108) *
              C152164 * C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C51108 +
           (C15064 + C15065 + C15066) * C152454) *
              C152164 * C152237 * C152219 * C131 -
          ((C15581 + C15582 + C15583) * C152454 +
           (C14764 + C14763 + C14762) * C51108) *
              C152164 * C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C51108 +
           (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
            C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
            C15574 + C14682 * C2823) *
               C152454) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152624 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152608 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152608 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152624 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C1373 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C1374 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C1374 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C1373 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C65055 + C65056 + C65057) * C152454) *
              C152164 * C152237 * C1461 -
          ((C65058 + C65059 + C65060) * C152454 +
           (C65057 + C65056 + C65055) * C51108) *
              C152164 * C152237 * C1462 +
          ((C65060 + C65059 + C65058) * C51108 +
           (C66339 + C66340 + C66341) * C152454) *
              C152164 * C152237 * C1463 -
          ((C66342 + C66343 + C66344) * C152454 +
           (C66341 + C66340 + C66339) * C51108) *
              C152164 * C152237 * C1464 +
          ((C66344 + C66343 + C66342) * C51108 +
           (C14683 * C7821 + C66324 + C66324 + C14680 * C7829 + C14685 * C8815 +
            C66325 + C66325 + C14681 * C8819 + C14687 * C60413 + C66326 +
            C66326 + C14682 * C60415) *
               C152454) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C2359 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C2360 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C2359 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C152580) *
              C152219 * C152604 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C2359 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C2360 +
           ((C15371 + C15370 + C15369) * C51108 +
            (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
             C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
             C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                C152454) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C2359 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C2360 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152580) *
              C152624 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C2360 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C2359 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C152580) *
              C152608 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C2359 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C2360 +
           ((C66610 + C66609 + C66608) * C51108 +
            (C14683 * C8070 + C66581 + C66581 + C14680 * C8082 +
             C14685 * C10112 + C66582 + C66582 + C14681 * C10116 +
             C14687 * C61259 + C66583 + C66583 + C14682 * C61261) *
                C152454) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152196 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C4281 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152282) *
              C152196 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C4281 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C152535 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C4281 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152535 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C4281) *
               C152282) *
              C152196 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C4281) *
               C152535 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C4281 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          ((((C14761 + C14760 + C14759) * C51108 +
             (C15064 + C15065 + C15066) * C152454) *
                C152164 * C4281 -
            ((C16125 + C16126 + C16127) * C152454 +
             (C15368 + C15367 + C15366) * C51108) *
                C152164 * C152324) *
               C152535 +
           (((C16127 + C16126 + C16125) * C51108 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152454) *
                C152164 * C152324 -
            ((C15067 + C15068 + C15069) * C152454 +
             (C15066 + C15065 + C15064) * C51108) *
                C152164 * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152320 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C4953) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152327 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152320 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C4953) *
               C152282) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152327 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152320 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C4953) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152320 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152327 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152320 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C4953) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152327 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152320 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C4953) *
               C152282) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152327 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152320 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C4953) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152320 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152327 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152320 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152327 +
            ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
              C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
              C15302 + C14682 * C2615) *
                 C51108 +
             (C66602 + C66603 + C66604) * C152454) *
                C152164 * C4953) *
               C152535 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152327 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152320 -
            ((C66608 + C66609 + C66610) * C152454 +
             (C66604 + C66603 + C66602) * C51108) *
                C152164 * C4953) *
               C152282) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152327 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152320 -
            ((C18326 + C18327 + C18328) * C152454 +
             (C15365 + C15364 + C15363) * C51108) *
                C152164 * C4953) *
               C152535 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152320 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152327 +
            ((C18328 + C18327 + C18326) * C51108 +
             (C14683 * C1654 + C16713 + C16713 + C14680 * C1678 +
              C14685 * C9386 + C16714 + C16714 + C14681 * C9398 +
              C14687 * C9391 + C16715 + C16715 + C14682 * C9403) *
                 C152454) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C4281 -
               (C51589 * C51112 + (C51579 + C51580) * C51111 +
                (C7476 * C152454 +
                 (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                    C51110) *
                   C152324) *
                  C152219 * C152630 +
              (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                C51982 * C51112) *
                   C152324 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C4281) *
                  C152219 * C152623 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C4281 -
               ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
                C51589 * C51110) *
                   C152324) *
                  C152219 * C152606 +
              ((C51982 * C51110 + (C51984 + C51983) * C51111 +
                (C984 * C51108 +
                 (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                    C51112) *
                   C152324 -
               ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
                C51125 * C51110) *
                   C4281) *
                  C152219 * C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                  C6524 * C152454) *
                     C51110 +
                 (C51114 + C51115) * C51111 + C51124 * C51112) *
                    C4281 -
                (C51589 * C51112 + (C51579 + C51580) * C51111 +
                 (C7476 * C152454 +
                  (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                     C51110) *
                    C152324) *
                   C152624 +
               (((C7476 * C51108 + C7475 * C152454) * C51110 +
                 (C52275 + C52276) * C51111 + C52281 * C51112) *
                    C152324 -
                (C51357 * C51112 + (C51347 + C51348) * C51111 +
                 (C6525 * C152454 + C6524 * C51108) * C51110) *
                    C4281) *
                   C152608 +
               (((C6525 * C51108 + C6526 * C152454) * C51110 +
                 (C51349 + C51350) * C51111 + C51358 * C51112) *
                    C4281 -
                ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
                 (C8116 * C152454 + C7475 * C51108) * C51110) *
                    C152324) *
                   C152577) *
                  C3415 +
              ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
                 C51982 * C51112) *
                    C152324 -
                (C51125 * C51112 + (C51117 + C51116) * C51111 +
                 (C51115 + C51114) * C51110) *
                    C4281) *
                   C152624 +
               (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                 C51785 * C51112) *
                    C4281 -
                ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
                 (C52276 + C52275) * C51110) *
                    C152324) *
                   C152608 +
               (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
                 (C2062 * C51108 +
                  (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                     C51112) *
                    C152324 -
                ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                 (C51350 + C51349) * C51110) *
                    C4281) *
                   C152577) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152632 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152616 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C152219 * C3415 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152629 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152632 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152616 +
           ((C54575 + C54574) * C51110 + (C54573 + C54572) * C51111 +
            (C2994 * C51108 +
             (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152454) *
                C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C152630 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C4281 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152624 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152608 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C4281 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152624 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152608 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152632 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152616 -
           (C61726 * C59282 + C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C152219 * C3415 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152629 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152632 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152616 +
           (C2996 * C59279 + C9916 * C59280 + C9915 * C59281 +
            (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C59282) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C4281 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152324 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C4281) *
              C152219 * C152623 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C4281 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152324) *
              C152219 * C152606 +
          (((C15795 + C15794 + C15793) * C51108 +
            (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
             C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
             C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C4281 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152624 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C4281) *
               C152608 +
           (((C65060 + C65059 + C65058) * C51108 +
             (C66339 + C66340 + C66341) * C152454) *
                C152164 * C4281 -
            ((C67304 + C67305 + C67306) * C152454 +
             (C66607 + C66606 + C66605) * C51108) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C4281) *
               C152624 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C4281 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152608 +
           (((C17235 + C17234 + C17233) * C51108 +
             (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
              C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
              C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C16925 + C16926 + C16927) * C152454 +
             (C15063 + C15062 + C15061) * C51108) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152632 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152629 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152616 -
           ((C68567 + C68568 + C68569) * C152454 +
            (C14687 * C17994 + C18009 + C18009 + C14682 * C18002 +
             C14685 * C2599 + C18010 + C18010 + C14681 * C2615 +
             C14683 * C2598 + C18011 + C18011 + C14680 * C2614) *
                C51108) *
               C152164 * C152593) *
              C152219 * C3415 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152629 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152632 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C152616 +
           ((C18543 + C18542 + C18541) * C51108 +
            (C14683 * C3130 + C18747 + C18747 + C14680 * C3138 +
             C14685 * C9390 + C18748 + C18748 + C14681 * C9402 +
             C14687 * C18738 + C18749 + C18749 + C14682 * C18742) *
                C152454) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152320 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C4953) *
              C152219 * C152196 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152327 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152320 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C4953) *
              C152219 * C152205 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152320 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152327 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152320 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C4953) *
              C152219 * C152196 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152327 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152320 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C4953) *
              C152219 * C152205 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152320 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152327 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152320 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152327 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C4953) *
              C152219 * C152196 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152327 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152320 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C4953) *
              C152219 * C152205 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152320 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152327 +
           ((C15371 + C15370 + C15369) * C51108 +
            (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
             C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
             C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                C152454) *
               C152164 * C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152624 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152608 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C4281 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C152577) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152624 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152608 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C4281 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152219 * C152630 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152324 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C4281) *
              C152219 * C152623 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C4281 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152324) *
              C152219 * C152606 +
          ((C51982 * C51110 + (C51984 + C51983) * C51111 +
            (C984 * C51108 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C51112) *
               C152324 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C152630 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C4281 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152624 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152608 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C4281 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152624 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152608 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C4281 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152324 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C4281) *
              C152219 * C152623 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C4281 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152324) *
              C152219 * C152606 +
          (((C15795 + C15794 + C15793) * C51108 +
            (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
             C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
             C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C4281 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152624 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C4281) *
               C152608 +
           (((C65060 + C65059 + C65058) * C51108 +
             (C66339 + C66340 + C66341) * C152454) *
                C152164 * C4281 -
            ((C67304 + C67305 + C67306) * C152454 +
             (C66607 + C66606 + C66605) * C51108) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C4281) *
               C152624 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C4281 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152608 +
           (((C17235 + C17234 + C17233) * C51108 +
             (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
              C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
              C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C16925 + C16926 + C16927) * C152454 +
             (C15063 + C15062 + C15061) * C51108) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1823 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1824 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C1825 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152237 * C152587) *
              C152521 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1824 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1823 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C1825 +
           ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
            (C1846 * C51108 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152535 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152282) *
              C829 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152282 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152535) *
              C830 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152535 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152282) *
              C831 +
          ((C51785 * C51110 + (C51787 + C51786) * C51111 +
            (C842 * C51108 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C51112) *
               C152237 * C152282 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152535 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C829 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152535 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1823 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1824 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C1825 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C152521 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1824 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1823 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C1825 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152535 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152282) *
              C829 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152282 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152535) *
              C830 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152535 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152282) *
              C831 +
          (((C15583 + C15582 + C15581) * C51108 +
            (C14683 * C363 + C15031 + C15031 + C14680 * C387 + C14685 * C1649 +
             C15032 + C15032 + C14681 * C1673 + C14687 * C1656 + C15033 +
             C15033 + C14682 * C1680) *
                C152454) *
               C152164 * C152237 * C152282 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C1823 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C1824 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152237 * C1825 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C152237 * C152587) *
              C152521 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C1824 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C1823 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C1825 +
           ((C16927 + C16926 + C16925) * C51108 +
            (C14683 * C1472 + C16477 + C16477 + C14680 * C1488 +
             C14685 * C8071 + C16478 + C16478 + C14681 * C8083 +
             C14687 * C8074 + C16479 + C16479 + C14682 * C8086) *
                C152454) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152536 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C1823 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152324 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152536) *
              C1824 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152536 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152324) *
              C1825 +
          (((C8116 * C51108 + C8828 * C152454) * C51110 +
            (C7477 * C51108 + C8620 * C152454) * C51111 +
            (C7478 * C51108 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C51112) *
               C152324 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152282) *
              C353 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C354 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C152536 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C152535 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152282) *
              C353 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C152536 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C1823 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152536) *
              C1824 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152536 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C1825 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152536 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C152535 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C14683 * C1652 + C16709 + C16709 + C14680 * C1676 +
              C14685 * C1653 + C16708 + C16708 + C14681 * C1677 +
              C14687 * C9387 + C16707 + C16707 + C14682 * C9399) *
                 C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152536) *
               C152535 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152536 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C152282) *
              C354 +
          ((((C14761 + C14760 + C14759) * C51108 +
             (C15064 + C15065 + C15066) * C152454) *
                C152164 * C152536 -
            ((C16125 + C16126 + C16127) * C152454 +
             (C15368 + C15367 + C15366) * C51108) *
                C152164 * C152324) *
               C152535 +
           (((C16127 + C16126 + C16125) * C51108 +
             (C14683 * C1650 + C17224 + C17224 + C14680 * C1674 +
              C14685 * C1655 + C17225 + C17225 + C14681 * C1679 +
              C14687 * C9901 + C17226 + C17226 + C14682 * C9903) *
                 C152454) *
                C152164 * C152324 -
            ((C15067 + C15068 + C15069) * C152454 +
             (C15066 + C15065 + C15064) * C51108) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152536 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C1823 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152324 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152536) *
              C1824 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152536 -
           ((C67304 + C67305 + C67306) * C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152324) *
              C1825 +
          (((C67306 + C67305 + C67304) * C51108 +
            (C14683 * C8072 + C67295 + C67295 + C14680 * C8084 +
             C14685 * C8073 + C67296 + C67296 + C14681 * C8085 +
             C14687 * C61717 + C67297 + C67297 + C14682 * C61719) *
                C152454) *
               C152164 * C152324 -
           ((C66342 + C66343 + C66344) * C152454 +
            (C66341 + C66340 + C66339) * C51108) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                C6524 * C152454) *
                   C51110 +
               (C51114 + C51115) * C51111 + C51124 * C51112) *
                  C152237 * C152219 * C129 -
              (C51125 * C51112 + (C51117 + C51116) * C51111 +
               (C51115 + C51114) * C51110) *
                  C152237 * C152219 * C130 +
              (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                  C152237 * C152219 * C131 -
              ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
               C51125 * C51110) *
                  C152237 * C152219 * C132 +
              (C51126 * C51110 + (C51123 + C51122) * C51111 +
               (C198 * C51108 +
                (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
                   C51112) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C152624 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C152608 +
               ((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152237 * C152577) *
                  C353 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                (C51353 + C51354) * C51112) *
                   C152237 * C152608 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C152624 -
               ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                (C51350 + C51349) * C51110) *
                   C152237 * C152577) *
                  C354 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152237 * C152624 -
               ((C444 * C152454 + C443 * C51108) * C51112 +
                (C51354 + C51353) * C51111 + C51357 * C51110) *
                   C152237 * C152608 +
               (C51358 * C51110 + (C51356 + C51355) * C51111 +
                (C444 * C51108 +
                 (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                    C51112) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152625 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152219 * C353 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            (C51585 + C51586) * C51112) *
               C152610 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152625 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152580) *
              C152219 * C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152625 -
           ((C1223 * C152454 + C688 * C51108) * C51112 +
            (C51586 + C51585) * C51111 + C51589 * C51110) *
               C152610 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152625 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C1373 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152610 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152625 -
           ((C6768 * C152454 + C2839 * C51108) * C51112 +
            (C6767 * C152454 + C2840 * C51108) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152580) *
              C1374 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152625 -
           ((C7478 * C152454 + C2063 * C51108) * C51112 +
            (C7477 * C152454 + C2064 * C51108) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152610 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C353 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152610 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152625 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152625 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152610 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C1373 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152610 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152625 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C1374 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152625 -
           ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
            C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
               C152164 * C152610 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C14683 * C359 + C14997 + C14997 + C14680 * C383 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14687 * C1648 + C14995 +
            C14995 + C14682 * C1672) *
               C152454) *
              C152164 * C152237 * C152219 * C129 -
          ((C15058 + C15059 + C15060) * C152454 +
           (C14758 + C14757 + C14756) * C51108) *
              C152164 * C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C51108 +
           (C15064 + C15065 + C15066) * C152454) *
              C152164 * C152237 * C152219 * C131 -
          ((C15581 + C15582 + C15583) * C152454 +
           (C14764 + C14763 + C14762) * C51108) *
              C152164 * C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C51108 +
           (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
            C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
            C15574 + C14682 * C2823) *
               C152454) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152624 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152608 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152608 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152624 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152625 -
           ((C14687 * C3129 + C16088 + C16088 + C14682 * C3137 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14683 * C1179 + C16086 + C16086 + C14680 * C1191) *
                C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C14683 * C1648 + C16703 + C16703 + C14680 * C1672 +
             C14685 * C3129 + C16702 + C16702 + C14681 * C3137 +
             C14687 * C9388 + C16701 + C16701 + C14682 * C9400) *
                C152454) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152610 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152625 -
           ((C18326 + C18327 + C18328) * C152454 +
            (C15365 + C15364 + C15363) * C51108) *
               C152164 * C152580) *
              C152219 * C354 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152625 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152610 +
           ((C15371 + C15370 + C15369) * C51108 +
            (C14683 * C1646 + C18317 + C18317 + C14680 * C1670 +
             C14685 * C3131 + C18318 + C18318 + C14681 * C3139 +
             C14687 * C18307 + C18319 + C18319 + C14682 * C18309) *
                C152454) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C1373 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C1374 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C1374 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C1373 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C65055 + C65056 + C65057) * C152454) *
              C152164 * C152237 * C1461 -
          ((C65058 + C65059 + C65060) * C152454 +
           (C65057 + C65056 + C65055) * C51108) *
              C152164 * C152237 * C1462 +
          ((C65060 + C65059 + C65058) * C51108 +
           (C66339 + C66340 + C66341) * C152454) *
              C152164 * C152237 * C1463 -
          ((C66342 + C66343 + C66344) * C152454 +
           (C66341 + C66340 + C66339) * C51108) *
              C152164 * C152237 * C1464 +
          ((C66344 + C66343 + C66342) * C51108 +
           (C14683 * C7821 + C66324 + C66324 + C14680 * C7829 + C14685 * C8815 +
            C66325 + C66325 + C14681 * C8819 + C14687 * C60413 + C66326 +
            C66326 + C14682 * C60415) *
               C152454) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152625 -
           ((C65969 + C65970 + C65971) * C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152610 +
           ((C14683 * C605 + C15300 + C15300 + C14680 * C629 + C14685 * C2598 +
             C15301 + C15301 + C14681 * C2614 + C14687 * C2599 + C15302 +
             C15302 + C14682 * C2615) *
                C51108 +
            (C66602 + C66603 + C66604) * C152454) *
               C152164 * C152580) *
              C1373 +
          (((C65971 + C65970 + C65969) * C51108 +
            (C66605 + C66606 + C66607) * C152454) *
               C152164 * C152610 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152625 -
           ((C66608 + C66609 + C66610) * C152454 +
            (C66604 + C66603 + C66602) * C51108) *
               C152164 * C152580) *
              C1374 +
          (((C65060 + C65059 + C65058) * C51108 +
            (C66339 + C66340 + C66341) * C152454) *
               C152164 * C152625 -
           ((C14687 * C10112 + C17432 + C17432 + C14682 * C10116 +
             C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
             C14683 * C2197 + C17430 + C17430 + C14680 * C2205) *
                C152454 +
            (C66607 + C66606 + C66605) * C51108) *
               C152164 * C152610 +
           ((C66610 + C66609 + C66608) * C51108 +
            (C14683 * C8070 + C66581 + C66581 + C14680 * C8082 +
             C14685 * C10112 + C66582 + C66582 + C14681 * C10116 +
             C14687 * C61259 + C66583 + C66583 + C14682 * C61261) *
                C152454) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C1373 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C1374 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C152536 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C152577) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C1373 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C1374 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152536 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152219 * C829 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152324 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152536) *
              C152219 * C830 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152536 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152324) *
              C152219 * C831 +
          ((C51982 * C51110 + (C51984 + C51983) * C51111 +
            (C984 * C51108 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C51112) *
               C152324 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C829 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152536 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C1373 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C1374 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C152536 -
            ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
             C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C1373 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C1374 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152536 -
           ((C14687 * C3129 + C16088 + C16088 + C14682 * C3137 +
             C14685 * C1648 + C16087 + C16087 + C14681 * C1672 +
             C14683 * C1179 + C16086 + C16086 + C14680 * C1191) *
                C152454 +
            (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 + C14685 * C605 +
             C15298 + C15298 + C14681 * C629 + C14683 * C604 + C15299 + C15299 +
             C14680 * C628) *
                C51108) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C15362 + C15361 + C15360) * C51108 +
            (C16122 + C16123 + C16124) * C152454) *
               C152164 * C152324 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152536) *
              C152219 * C830 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152536 -
           ((C16125 + C16126 + C16127) * C152454 +
            (C15368 + C15367 + C15366) * C51108) *
               C152164 * C152324) *
              C152219 * C831 +
          (((C15795 + C15794 + C15793) * C51108 +
            (C14683 * C1182 + C16107 + C16107 + C14680 * C1194 +
             C14685 * C1645 + C16108 + C16108 + C14681 * C1669 +
             C14687 * C3132 + C16109 + C16109 + C14682 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C15581 + C15582 + C15583) * C152454 +
            (C14764 + C14763 + C14762) * C51108) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
              C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 +
              C14692 + C14682 * C629) *
                 C51108 +
             (C65055 + C65056 + C65057) * C152454) *
                C152164 * C152536 -
            ((C65969 + C65970 + C65971) * C152454 +
             (C14687 * C2598 + C15297 + C15297 + C14682 * C2614 +
              C14685 * C605 + C15298 + C15298 + C14681 * C629 + C14683 * C604 +
              C15299 + C15299 + C14680 * C628) *
                 C51108) *
                C152164 * C152324) *
               C1373 +
           (((C65971 + C65970 + C65969) * C51108 +
             (C66605 + C66606 + C66607) * C152454) *
                C152164 * C152324 -
            ((C65058 + C65059 + C65060) * C152454 +
             (C65057 + C65056 + C65055) * C51108) *
                C152164 * C152536) *
               C1374 +
           (((C65060 + C65059 + C65058) * C51108 +
             (C66339 + C66340 + C66341) * C152454) *
                C152164 * C152536 -
            ((C14687 * C10112 + C17432 + C17432 + C14682 * C10116 +
              C14685 * C8070 + C17431 + C17431 + C14681 * C8082 +
              C14683 * C2197 + C17430 + C17430 + C14680 * C2205) *
                 C152454 +
             (C66607 + C66606 + C66605) * C51108) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C15362 + C15361 + C15360) * C51108 +
             (C16122 + C16123 + C16124) * C152454) *
                C152164 * C152324 -
            ((C15058 + C15059 + C15060) * C152454 +
             (C14758 + C14757 + C14756) * C51108) *
                C152164 * C152536) *
               C1373 +
           (((C15060 + C15059 + C15058) * C51108 +
             (C15061 + C15062 + C15063) * C152454) *
                C152164 * C152536 -
            ((C17233 + C17234 + C17235) * C152454 +
             (C16124 + C16123 + C16122) * C51108) *
                C152164 * C152324) *
               C1374 +
           (((C17235 + C17234 + C17233) * C51108 +
             (C14683 * C2198 + C17433 + C17433 + C14680 * C2206 +
              C14685 * C8069 + C17434 + C17434 + C14681 * C8081 +
              C14687 * C10113 + C17435 + C17435 + C14682 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C16925 + C16926 + C16927) * C152454 +
             (C15063 + C15062 + C15061) * C51108) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152624 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152608 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            (C51353 + C51354) * C51112) *
               C152237 * C152608 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152624 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C51108) * C51112 +
            (C51354 + C51353) * C51111 + C51357 * C51110) *
               C152237 * C152608 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C152219 * C129 -
          (C51125 * C51112 + (C51117 + C51116) * C51111 +
           (C51115 + C51114) * C51110) *
              C152237 * C152219 * C130 +
          (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
              C152237 * C152219 * C131 -
          ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
           C51125 * C51110) *
              C152237 * C152219 * C132 +
          (C51126 * C51110 + (C51123 + C51122) * C51111 +
           (C198 * C51108 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C14683 * C359 + C14997 + C14997 + C14680 * C383 + C14685 * C1179 +
            C14996 + C14996 + C14681 * C1191 + C14687 * C1648 + C14995 +
            C14995 + C14682 * C1672) *
               C152454) *
              C152164 * C152237 * C152219 * C129 -
          ((C15058 + C15059 + C15060) * C152454 +
           (C14758 + C14757 + C14756) * C51108) *
              C152164 * C152237 * C152219 * C130 +
          ((C14761 + C14760 + C14759) * C51108 +
           (C15064 + C15065 + C15066) * C152454) *
              C152164 * C152237 * C152219 * C131 -
          ((C15581 + C15582 + C15583) * C152454 +
           (C14764 + C14763 + C14762) * C51108) *
              C152164 * C152237 * C152219 * C132 +
          ((C14767 + C14766 + C14765) * C51108 +
           (C14683 * C364 + C15572 + C15572 + C14680 * C388 + C14685 * C1183 +
            C15573 + C15573 + C14681 * C1195 + C14687 * C2821 + C15574 +
            C15574 + C14682 * C2823) *
               C152454) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C152624 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C152608 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C152608 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C152624 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C354 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C152624 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C152608 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
             C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
             C14682 * C629) *
                C51108 +
            (C65055 + C65056 + C65057) * C152454) *
               C152164 * C152237 * C1373 -
           ((C65058 + C65059 + C65060) * C152454 +
            (C65057 + C65056 + C65055) * C51108) *
               C152164 * C152237 * C1374 +
           ((C65060 + C65059 + C65058) * C51108 +
            (C14683 * C1470 + C16473 + C16473 + C14680 * C1486 +
             C14685 * C2197 + C16472 + C16472 + C14681 * C2205 +
             C14687 * C8070 + C16471 + C16471 + C14682 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C15060 + C15059 + C15058) * C51108 +
            (C15061 + C15062 + C15063) * C152454) *
               C152164 * C152237 * C1374 -
           ((C15058 + C15059 + C15060) * C152454 +
            (C14758 + C14757 + C14756) * C51108) *
               C152164 * C152237 * C1373 -
           ((C16925 + C16926 + C16927) * C152454 +
            (C15063 + C15062 + C15061) * C51108) *
               C152164 * C152237 * C152577) *
              C152604 +
          (((C14761 + C14760 + C14759) * C51108 +
            (C15064 + C15065 + C15066) * C152454) *
               C152164 * C152237 * C1373 -
           ((C15067 + C15068 + C15069) * C152454 +
            (C15066 + C15065 + C15064) * C51108) *
               C152164 * C152237 * C1374 +
           ((C15069 + C15068 + C15067) * C51108 +
            (C14683 * C1468 + C16916 + C16916 + C14680 * C1484 +
             C14685 * C2199 + C16917 + C16917 + C14681 * C2207 +
             C14687 * C9700 + C16918 + C16918 + C14682 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14683 * C136 + C14690 + C14690 + C14680 * C152 + C14685 * C604 +
            C14691 + C14691 + C14681 * C628 + C14687 * C605 + C14692 + C14692 +
            C14682 * C629) *
               C51108 +
           (C65055 + C65056 + C65057) * C152454) *
              C152164 * C152237 * C1461 -
          ((C65058 + C65059 + C65060) * C152454 +
           (C65057 + C65056 + C65055) * C51108) *
              C152164 * C152237 * C1462 +
          ((C65060 + C65059 + C65058) * C51108 +
           (C66339 + C66340 + C66341) * C152454) *
              C152164 * C152237 * C1463 -
          ((C66342 + C66343 + C66344) * C152454 +
           (C66341 + C66340 + C66339) * C51108) *
              C152164 * C152237 * C1464 +
          ((C66344 + C66343 + C66342) * C51108 +
           (C14683 * C7821 + C66324 + C66324 + C14680 * C7829 + C14685 * C8815 +
            C66325 + C66325 + C14681 * C8819 + C14687 * C60413 + C66326 +
            C66326 + C14682 * C60415) *
               C152454) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152278 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152285 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152285 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152278 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C3759) *
              C152205 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C152278 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152285 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152278 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152536) *
               C152285 +
           ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                 C152514 +
             (C40450 * C51108 + C42749 * C152454) * C152169) *
                C152536 -
            (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                 C152514) *
                C152324) *
               C3759) *
              C3415 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152536) *
               C152278 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152285 +
           (((C43137 * C51108 + (C43148 + C43147) * C152454) * C152514 +
             ((C34058 + C34057) * C51108 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
             (C42750 * C152454 + C40444 * C51108) * C152514) *
                C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152631 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152627 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152613 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C152237 * C152587) *
              C3415 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152627 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152631 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152613 +
           ((C42749 * C51108 + (C42154 + C42153) * C152454) * C152514 +
            ((C33746 + C33745) * C51108 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C3275 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152282) *
              C152630 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C3275 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C32391 * C51108 + (C31890 + C31889) * C152454) * C152514 +
            ((C32404 + C32403) * C51108 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152625 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152610 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C51108 +
              (C42483 + C42484) * C152454) *
                 C152514 +
             ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
                C152580) *
               C3275 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152610 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152625 -
            (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                 C152514) *
                C152580) *
               C152282) *
              C3415 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152610 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152625 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
                C152580) *
               C3275 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152625 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152610 +
            ((C44553 * C51108 + (C42488 + C42487) * C152454) * C152514 +
             ((C35140 + C35139) * C51108 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C3275 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152536) *
               C152282) *
              C152196 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152536) *
               C3275 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152282) *
              C152205 +
          ((((C31587 * C51108 + C40451 * C152454) * C152514 +
             ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                C152536 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                 C152169 +
             (C41664 * C152454 + C32193 * C51108) * C152514) *
                C152324) *
               C3275 +
           (((C32943 * C51108 + (C34058 + C34057) * C152454) * C152514 +
             ((C32942 + C32941) * C51108 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
             (C40452 * C152454 + C31891 * C51108) * C152514) *
                C152536) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C3275 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152282) *
              C152630 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C3275 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C32391 * C51108 + (C31890 + C31889) * C152454) * C152514 +
            ((C32404 + C32403) * C51108 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152631 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152627 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152613 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C152237 * C152587) *
              C3415 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152627 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152631 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152613 +
           ((C42749 * C51108 + (C42154 + C42153) * C152454) * C152514 +
            ((C33746 + C33745) * C51108 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152278 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C4281) *
               C152285 +
           ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                 C152514 +
             (C40450 * C51108 + C42749 * C152454) * C152169) *
                C4281 -
            (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                 C152514) *
                C152324) *
               C3759) *
              C152521 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C4281) *
               C152278 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152285 +
           (((C43137 * C51108 + (C43148 + C43147) * C152454) * C152514 +
             ((C34058 + C34057) * C51108 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
             (C42750 * C152454 + C40444 * C51108) * C152514) *
                C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152320 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152327 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C4953) *
              C152278 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152327 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152320 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C4953) *
              C152285 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152320 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152327 +
           (((C42490 + C42489) * C51108 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C152514 +
            ((C42488 + C42487) * C51108 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C4953) *
              C3759) *
         C152191) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C152631 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C4281) *
              C152627 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C4281 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152324) *
              C152613 +
          ((((C43420 + C43419) * C51108 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C152514 +
            ((C43148 + C43147) * C51108 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C3275 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C4281) *
               C152282) *
              C152621 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C4281) *
               C3275 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152282) *
              C152604 +
          ((((C31587 * C51108 + C40451 * C152454) * C152514 +
             ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                C4281 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                 C152169 +
             (C41664 * C152454 + C32193 * C51108) * C152514) *
                C152324) *
               C3275 +
           (((C32943 * C51108 + (C34058 + C34057) * C152454) * C152514 +
             ((C32942 + C32941) * C51108 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
             (C40452 * C152454 + C31891 * C51108) * C152514) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152632 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152629 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152616 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C51108) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C51108) *
                C152514) *
               C152593) *
              C3275 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152629 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152632 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C152616 +
           (((C45094 + C45093) * C51108 +
             (C31518 * C9387 + C45085 + C45085 + C152553 * C9399 +
              C31520 * C9389 + C45086 + C45086 + C152482 * C9401) *
                 C152454) *
                C152514 +
            ((C44822 + C44821) * C51108 +
             (C31518 * C9386 + C45087 + C45087 + C152553 * C9398 +
              C31520 * C9391 + C45088 + C45088 + C152482 * C9403) *
                 C152454) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152320 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152327 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C51108 +
              (C42483 + C42484) * C152454) *
                 C152514 +
             ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
                C4953) *
               C3275 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152327 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152320 -
            (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                 C152514) *
                C4953) *
               C152282) *
              C152521 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152327 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152320 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
                C4953) *
               C3275 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152320 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152327 +
            ((C44553 * C51108 + (C42488 + C42487) * C152454) * C152514 +
             ((C35140 + C35139) * C51108 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C3275 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C4281) *
               C152282) *
              C152621 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C4281) *
               C3275 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152282) *
              C152604 +
          ((((C31587 * C51108 + C40451 * C152454) * C152514 +
             ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                C4281 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                 C152169 +
             (C41664 * C152454 + C32193 * C51108) * C152514) *
                C152324) *
               C3275 +
           (((C32943 * C51108 + (C34058 + C34057) * C152454) * C152514 +
             ((C32942 + C32941) * C51108 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
             (C40452 * C152454 + C31891 * C51108) * C152514) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C152631 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C4281) *
              C152627 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C4281 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152324) *
              C152613 +
          ((((C43420 + C43419) * C51108 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C152514 +
            ((C43148 + C43147) * C51108 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C1823 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C1824 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C1825 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C152237 * C152587) *
              C152521 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C1824 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C1823 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C1825 +
           ((C42749 * C51108 + (C42154 + C42153) * C152454) * C152514 +
            ((C33746 + C33745) * C51108 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152535 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152282) *
              C829 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152535) *
              C830 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C152535 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152282) *
              C831 +
          (((C32391 * C51108 + (C31890 + C31889) * C152454) * C152514 +
            ((C32404 + C32403) * C51108 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C2359 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C2360 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C51108 +
              (C42483 + C42484) * C152454) *
                 C152514 +
             ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
                C152580) *
               C152535 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C2360 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C2359 -
            (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                 C152514) *
                C152580) *
               C152282) *
              C152521 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C2360 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C2359 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
                C152580) *
               C152535 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C2359 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C2360 +
            ((C44553 * C51108 + (C42488 + C42487) * C152454) * C152514 +
             ((C35140 + C35139) * C51108 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152536 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C1823 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152536) *
              C1824 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152536 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152324) *
              C1825 +
          ((((C43420 + C43419) * C51108 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C152514 +
            ((C43148 + C43147) * C51108 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152535 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152536) *
               C152282) *
              C353 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152536) *
               C152535 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152282) *
              C354 +
          ((((C31587 * C51108 + C40451 * C152454) * C152514 +
             ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                C152536 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                 C152169 +
             (C41664 * C152454 + C32193 * C51108) * C152514) *
                C152324) *
               C152535 +
           (((C32943 * C51108 + (C34058 + C34057) * C152454) * C152514 +
             ((C32942 + C32941) * C51108 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
             (C40452 * C152454 + C31891 * C51108) * C152514) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C2973 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C2974 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C2975 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C51108) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C51108) *
                C152514) *
               C152593) *
              C152535 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C2974 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C2973 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C2975 +
           (((C45094 + C45093) * C51108 +
             (C31518 * C9387 + C45085 + C45085 + C152553 * C9399 +
              C31520 * C9389 + C45086 + C45086 + C152482 * C9401) *
                 C152454) *
                C152514 +
            ((C44822 + C44821) * C51108 +
             (C31518 * C9386 + C45087 + C45087 + C152553 * C9398 +
              C31520 * C9391 + C45088 + C45088 + C152482 * C9403) *
                 C152454) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                 C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                    C51108 +
                (C40461 + C40462) * C152454) *
                   C152514 +
               ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                  C152237 * C152219 * C129 -
              ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
               (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                  C152237 * C152219 * C130 +
              ((C31587 * C51108 + C40451 * C152454) * C152514 +
               ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                  C152237 * C152219 * C131 -
              (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                   C152169 +
               (C41013 * C152454 + C31588 * C51108) * C152514) *
                  C152237 * C152219 * C132 +
              ((C31589 * C51108 + (C32404 + C32403) * C152454) * C152514 +
               ((C31586 + C31585) * C51108 +
                (C31518 * C366 + C32396 + C32396 + C152553 * C390 +
                 C31520 * C1184 + C32397 + C32397 + C152482 * C1196) *
                    C152454) *
                   C152169) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
                  C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                     C51108 +
                 (C40461 + C40462) * C152454) *
                    C152514 +
                ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                   C152237 * C152624 -
               ((C40444 * C152454 + C40445 * C51108) * C152169 +
                ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                    C152514) *
                   C152237 * C152608 +
               (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                    C152514 +
                (C40450 * C51108 + C42749 * C152454) * C152169) *
                   C152237 * C152577) *
                  C353 +
              (((C40443 * C51108 + C40450 * C152454) * C152514 +
                (C40451 * C51108 + C31892 * C152454) * C152169) *
                   C152237 * C152608 -
               ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
                (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                   C152237 * C152624 -
               (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
                (C42750 * C152454 + C40444 * C51108) * C152514) *
                   C152237 * C152577) *
                  C354 +
              (((C31587 * C51108 + C40451 * C152454) * C152514 +
                ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                   C152237 * C152624 -
               (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
                (C40452 * C152454 + C31891 * C51108) * C152514) *
                   C152237 * C152608 +
               ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
                ((C31890 + C31889) * C51108 +
                 (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
                  C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                     C152454) *
                    C152169) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152625 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C152219 * C353 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152610 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152625 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C152580) *
              C152219 * C354 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152625 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152610 +
           ((C32194 * C51108 + (C35140 + C35139) * C152454) * C152514 +
            ((C32192 + C32191) * C51108 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C1374 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C1374 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C51108) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
               C152514) *
              C152237 * C1462 +
          (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
               C152514 +
           (C40450 * C51108 + C42749 * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
               C152514) *
              C152237 * C1464 +
          (((C42156 + C42155) * C51108 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C152514 +
           ((C42154 + C42153) * C51108 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152625 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C1373 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152610 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152625 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C152580) *
              C1374 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152625 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152610 +
           (((C42490 + C42489) * C51108 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C152514 +
            ((C42488 + C42487) * C51108 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C152219 * C152621 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C2360 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C2359 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C152580) *
              C152219 * C152604 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C2359 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C2360 +
           ((C32194 * C51108 + (C35140 + C35139) * C152454) * C152514 +
            ((C32192 + C32191) * C51108 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C152624 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C2360 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C2359 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C152580) *
              C152608 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C2359 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C2360 +
           (((C42490 + C42489) * C51108 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C152514 +
            ((C42488 + C42487) * C51108 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C2590 -
          ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
           ((C41669 + C41670) * C152454 +
            (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
             C32126 + C32126 + C152553 * C628) *
                C51108) *
               C152514) *
              C2591 +
          (((C31518 * C605 + C32127 + C32127 + C152553 * C629 + C31520 * C2598 +
             C32128 + C32128 + C152482 * C2614) *
                C51108 +
            (C42483 + C42484) * C152454) *
               C152514 +
           ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
              C2592 -
          (((C44821 + C44822) * C152454 + (C35357 + C35358) * C51108) *
               C152169 +
           ((C45093 + C45094) * C152454 +
            (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
             C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                C51108) *
               C152514) *
              C2593 +
          (((C31518 * C2599 + C34825 + C34825 + C152553 * C2615 +
             C31520 * C17994 + C34826 + C34826 + C152482 * C18002) *
                C51108 +
            (C31518 * C9388 + C44163 + C44163 + C152553 * C9400 +
             C31520 * C18737 + C44164 + C44164 + C152482 * C18741) *
                C152454) *
               C152514 +
           ((C31518 * C2600 + C34827 + C34827 + C152553 * C2616 +
             C31520 * C17993 + C34828 + C34828 + C152482 * C18001) *
                C51108 +
            (C31518 * C9390 + C44165 + C44165 + C152553 * C9402 +
             C31520 * C18738 + C44166 + C44166 + C152482 * C18742) *
                C152454) *
               C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C1373 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152536) *
               C1374 +
           ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                 C152514 +
             (C40450 * C51108 + C42749 * C152454) * C152169) *
                C152536 -
            (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                 C152514) *
                C152324) *
               C152577) *
              C152521 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152536) *
               C1373 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C1374 +
           (((C43137 * C51108 + (C43148 + C43147) * C152454) * C152514 +
             ((C34058 + C34057) * C51108 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
             (C42750 * C152454 + C40444 * C51108) * C152514) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152536 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C152219 * C829 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152536) *
              C152219 * C830 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152536 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152324) *
              C152219 * C831 +
          (((C32599 * C51108 + (C32942 + C32941) * C152454) * C152514 +
            ((C32612 + C32611) * C51108 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C2973 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C2974 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C2975 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C51108) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C51108) *
                C152514) *
               C152593) *
              C152219 * C152521 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C2974 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C2973 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C2975 +
           (((C35358 + C35357) * C51108 + (C44822 + C44821) * C152454) *
                C152514 +
            ((C35356 + C35355) * C51108 +
             (C31518 * C3131 + C35557 + C35557 + C152553 * C3139 +
              C31520 * C18307 + C35558 + C35558 + C152482 * C18309) *
                 C152454) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152624 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152608 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152608 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152624 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C152624 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152608 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C152219 * C129 -
          ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
           (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
              C152237 * C152219 * C130 +
          ((C31587 * C51108 + C40451 * C152454) * C152514 +
           ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
               C152169 +
           (C41013 * C152454 + C31588 * C51108) * C152514) *
              C152237 * C152219 * C132 +
          ((C31589 * C51108 + (C32404 + C32403) * C152454) * C152514 +
           ((C31586 + C31585) * C51108 +
            (C31518 * C366 + C32396 + C32396 + C152553 * C390 + C31520 * C1184 +
             C32397 + C32397 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C1374 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C1374 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C51108) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
               C152514) *
              C152237 * C1462 +
          (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
               C152514 +
           (C40450 * C51108 + C42749 * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
               C152514) *
              C152237 * C1464 +
          (((C42156 + C42155) * C51108 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C152514 +
           ((C42154 + C42153) * C51108 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C152219 * C152621 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C2360 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C2359 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C152580) *
              C152219 * C152604 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C2359 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C2360 +
           ((C32194 * C51108 + (C35140 + C35139) * C152454) * C152514 +
            ((C32192 + C32191) * C51108 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C2359 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C2360 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C152624 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C2360 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C2359 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C152580) *
              C152608 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C2359 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C2360 +
           (((C42490 + C42489) * C51108 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C152514 +
            ((C42488 + C42487) * C51108 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152535 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C4281) *
               C152282) *
              C152196 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C4281) *
               C152535 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152282) *
              C152205 +
          ((((C31587 * C51108 + C40451 * C152454) * C152514 +
             ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                C4281 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                 C152169 +
             (C41664 * C152454 + C32193 * C51108) * C152514) *
                C152324) *
               C152535 +
           (((C32943 * C51108 + (C34058 + C34057) * C152454) * C152514 +
             ((C32942 + C32941) * C51108 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
             (C40452 * C152454 + C31891 * C51108) * C152514) *
                C4281) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152320 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152327 +
            (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
               C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                  C51108 +
              (C42483 + C42484) * C152454) *
                 C152514 +
             ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
                C4953) *
               C152535 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152327 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152320 -
            (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
             ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                 C152514) *
                C4953) *
               C152282) *
              C3415 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152327 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152320 -
            (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                 C152169 +
             (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
                C4953) *
               C152535 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152320 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152327 +
            ((C44553 * C51108 + (C42488 + C42487) * C152454) * C152514 +
             ((C35140 + C35139) * C51108 +
              (C31518 * C1655 + C33531 + C33531 + C152553 * C1679 +
               C31520 * C9901 + C33532 + C33532 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152624 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C4281) *
               C152608 +
           ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                 C152514 +
             (C40450 * C51108 + C42749 * C152454) * C152169) *
                C4281 -
            (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                 C152514) *
                C152324) *
               C152577) *
              C3415 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C4281) *
               C152624 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152608 +
           (((C43137 * C51108 + (C43148 + C43147) * C152454) * C152514 +
             ((C34058 + C34057) * C51108 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
             (C42750 * C152454 + C40444 * C51108) * C152514) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C152219 * C152630 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C4281) *
              C152219 * C152623 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C4281 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152324) *
              C152219 * C152606 +
          (((C32599 * C51108 + (C32942 + C32941) * C152454) * C152514 +
            ((C32612 + C32611) * C51108 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152632 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152629 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152616 -
           (((C44821 + C44822) * C152454 + (C35357 + C35358) * C51108) *
                C152169 +
            ((C45093 + C45094) * C152454 +
             (C31520 * C2599 + C34823 + C34823 + C152482 * C2615 +
              C31518 * C2598 + C34824 + C34824 + C152553 * C2614) *
                 C51108) *
                C152514) *
               C152593) *
              C152219 * C3415 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152629 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152632 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C152616 +
           (((C35358 + C35357) * C51108 + (C44822 + C44821) * C152454) *
                C152514 +
            ((C35356 + C35355) * C51108 +
             (C31518 * C3131 + C35557 + C35557 + C152553 * C3139 +
              C31520 * C18307 + C35558 + C35558 + C152482 * C18309) *
                 C152454) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152320 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152327 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C4953) *
              C152219 * C152196 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152327 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152320 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C4953) *
              C152219 * C152205 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152320 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152327 +
           ((C32194 * C51108 + (C35140 + C35139) * C152454) * C152514 +
            ((C32192 + C32191) * C51108 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C4953) *
              C152219 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C4281 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C152219 * C152630 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C4281) *
              C152219 * C152623 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C4281 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152324) *
              C152219 * C152606 +
          (((C32599 * C51108 + (C32942 + C32941) * C152454) * C152514 +
            ((C32612 + C32611) * C51108 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C4281 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152624 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C4281) *
               C152608 +
           ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                 C152514 +
             (C40450 * C51108 + C42749 * C152454) * C152169) *
                C4281 -
            (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                 C152514) *
                C152324) *
               C152577) *
              C3415 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C4281) *
               C152624 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C4281 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152608 +
           (((C43137 * C51108 + (C43148 + C43147) * C152454) * C152514 +
             ((C34058 + C34057) * C51108 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
             (C42750 * C152454 + C40444 * C51108) * C152514) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152535 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152282) *
              C829 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152282 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152535) *
              C830 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C152535 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152282) *
              C831 +
          (((C32391 * C51108 + (C31890 + C31889) * C152454) * C152514 +
            ((C32404 + C32403) * C51108 +
             (C31518 * C365 + C31853 + C31853 + C152553 * C389 +
              C31520 * C2045 + C31854 + C31854 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C1823 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C1824 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C1825 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C152237 * C152587) *
              C152521 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C1824 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C1823 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C1825 +
           ((C42749 * C51108 + (C42154 + C42153) * C152454) * C152514 +
            ((C33746 + C33745) * C51108 +
             (C31518 * C1473 + C33295 + C33295 + C152553 * C1489 +
              C31520 * C8609 + C33296 + C33296 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C152535 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152536) *
               C152282) *
              C353 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152536) *
               C152535 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C152282) *
              C354 +
          ((((C31587 * C51108 + C40451 * C152454) * C152514 +
             ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
                C152536 -
            (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                 C152169 +
             (C41664 * C152454 + C32193 * C51108) * C152514) *
                C152324) *
               C152535 +
           (((C32943 * C51108 + (C34058 + C34057) * C152454) * C152514 +
             ((C32942 + C32941) * C51108 +
              (C31518 * C1649 + C34047 + C34047 + C152553 * C1673 +
               C31520 * C1656 + C34048 + C34048 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
             (C40452 * C152454 + C31891 * C51108) * C152514) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152536 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C1823 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152324 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152536) *
              C1824 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152536 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152324) *
              C1825 +
          ((((C43420 + C43419) * C51108 +
             (C31518 * C8072 + C43411 + C43411 + C152553 * C8084 +
              C31520 * C8073 + C43412 + C43412 + C152482 * C8085) *
                 C152454) *
                C152514 +
            ((C43148 + C43147) * C51108 +
             (C31518 * C8071 + C43413 + C43413 + C152553 * C8083 +
              C31520 * C8074 + C43414 + C43414 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
            ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
                C152514) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152624 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152608 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152608 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152624 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C152624 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152608 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C152219 * C129 -
          ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
           (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
              C152237 * C152219 * C130 +
          ((C31587 * C51108 + C40451 * C152454) * C152514 +
           ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
               C152169 +
           (C41013 * C152454 + C31588 * C51108) * C152514) *
              C152237 * C152219 * C132 +
          ((C31589 * C51108 + (C32404 + C32403) * C152454) * C152514 +
           ((C31586 + C31585) * C51108 +
            (C31518 * C366 + C32396 + C32396 + C152553 * C390 + C31520 * C1184 +
             C32397 + C32397 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152625 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C152219 * C353 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152610 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152625 -
           (((C35139 + C35140) * C152454 + (C32188 + C32187) * C51108) *
                C152169 +
            (C44554 * C152454 + (C32186 + C32185) * C51108) * C152514) *
               C152580) *
              C152219 * C354 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152625 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152610 +
           ((C32194 * C51108 + (C35140 + C35139) * C152454) * C152514 +
            ((C32192 + C32191) * C51108 +
             (C31518 * C1645 + C35129 + C35129 + C152553 * C1669 +
              C31520 * C3132 + C35130 + C35130 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C1374 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C1374 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C51108) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
               C152514) *
              C152237 * C1462 +
          (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
               C152514 +
           (C40450 * C51108 + C42749 * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
               C152514) *
              C152237 * C1464 +
          (((C42156 + C42155) * C51108 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C152514 +
           ((C42154 + C42153) * C51108 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152625 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152610 +
           (((C31518 * C605 + C32127 + C32127 + C152553 * C629 +
              C31520 * C2598 + C32128 + C32128 + C152482 * C2614) *
                 C51108 +
             (C42483 + C42484) * C152454) *
                C152514 +
            ((C32185 + C32186) * C51108 + C44553 * C152454) * C152169) *
               C152580) *
              C1373 +
          ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                C152514 +
            (C41663 * C51108 + C43137 * C152454) * C152169) *
               C152610 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152625 -
           (((C42487 + C42488) * C152454 + C44554 * C51108) * C152169 +
            ((C42489 + C42490) * C152454 + (C42484 + C42483) * C51108) *
                C152514) *
               C152580) *
              C1374 +
          ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152625 -
           (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
            ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                C152514) *
               C152610 +
           (((C42490 + C42489) * C51108 +
             (C31518 * C8070 + C42463 + C42463 + C152553 * C8082 +
              C31520 * C10112 + C42464 + C42464 + C152482 * C10116) *
                 C152454) *
                C152514 +
            ((C42488 + C42487) * C51108 +
             (C31518 * C8069 + C42465 + C42465 + C152553 * C8081 +
              C31520 * C10113 + C42466 + C42466 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152536 -
           ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
            ((C41669 + C41670) * C152454 +
             (C31520 * C605 + C32125 + C32125 + C152482 * C629 + C31518 * C604 +
              C32126 + C32126 + C152553 * C628) *
                 C51108) *
                C152514) *
               C152324) *
              C152219 * C829 +
          ((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
            ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
               C152324 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152536) *
              C152219 * C830 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152536 -
           (((C32941 + C32942) * C152454 + (C32190 + C32189) * C51108) *
                C152169 +
            (C41664 * C152454 + C32193 * C51108) * C152514) *
               C152324) *
              C152219 * C831 +
          (((C32599 * C51108 + (C32942 + C32941) * C152454) * C152514 +
            ((C32612 + C32611) * C51108 +
             (C31518 * C1183 + C32923 + C32923 + C152553 * C1195 +
              C31520 * C2821 + C32924 + C32924 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
                C152169 +
            (C41013 * C152454 + C31588 * C51108) * C152514) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31518 * C136 + C31523 + C31523 + C152553 * C152 +
               C31520 * C604 + C31524 + C31524 + C152482 * C628) *
                  C51108 +
              (C40461 + C40462) * C152454) *
                 C152514 +
             ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
                C152536 -
            ((C41658 * C152454 + (C32183 + C32184) * C51108) * C152169 +
             ((C41669 + C41670) * C152454 +
              (C31520 * C605 + C32125 + C32125 + C152482 * C629 +
               C31518 * C604 + C32126 + C32126 + C152553 * C628) *
                  C51108) *
                 C152514) *
                C152324) *
               C1373 +
           ((((C41670 + C41669) * C51108 + (C42485 + C42486) * C152454) *
                 C152514 +
             (C41663 * C51108 + C43137 * C152454) * C152169) *
                C152324 -
            ((C40444 * C152454 + C40445 * C51108) * C152169 +
             ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                 C152514) *
                C152536) *
               C1374 +
           ((((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                 C152514 +
             (C40450 * C51108 + C42749 * C152454) * C152169) *
                C152536 -
            (((C43147 + C43148) * C152454 + C43142 * C51108) * C152169 +
             ((C43419 + C43420) * C152454 + (C42486 + C42485) * C51108) *
                 C152514) *
                C152324) *
               C152577) *
              C152521 +
          (((((C32184 + C32183) * C51108 + C41663 * C152454) * C152514 +
             ((C32182 + C32181) * C51108 + C32943 * C152454) * C152169) *
                C152324 -
            ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
             (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
                C152536) *
               C1373 +
           (((C40443 * C51108 + C40450 * C152454) * C152514 +
             (C40451 * C51108 + C31892 * C152454) * C152169) *
                C152536 -
            (((C34057 + C34058) * C152454 + C41664 * C51108) * C152169 +
             (C43142 * C152454 + C41658 * C51108) * C152514) *
                C152324) *
               C1374 +
           (((C43137 * C51108 + (C43148 + C43147) * C152454) * C152514 +
             ((C34058 + C34057) * C51108 +
              (C31518 * C2199 + C34259 + C34259 + C152553 * C2207 +
               C31520 * C9700 + C34260 + C34260 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
             (C42750 * C152454 + C40444 * C51108) * C152514) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C152219 * C129 -
          ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
           (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
              C152237 * C152219 * C130 +
          ((C31587 * C51108 + C40451 * C152454) * C152514 +
           ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C32403 + C32404) * C152454 + (C31584 + C31583) * C51108) *
               C152169 +
           (C41013 * C152454 + C31588 * C51108) * C152514) *
              C152237 * C152219 * C132 +
          ((C31589 * C51108 + (C32404 + C32403) * C152454) * C152514 +
           ((C31586 + C31585) * C51108 +
            (C31518 * C366 + C32396 + C32396 + C152553 * C390 + C31520 * C1184 +
             C32397 + C32397 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C152624 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C152608 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C152608 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C152624 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C152624 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C152608 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
              C31524 + C31524 + C152482 * C628) *
                 C51108 +
             (C40461 + C40462) * C152454) *
                C152514 +
            ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
               C152237 * C1373 -
           ((C40444 * C152454 + C40445 * C51108) * C152169 +
            ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
                C152514) *
               C152237 * C1374 +
           (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
                C152514 +
            (C40450 * C51108 + C42749 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C40443 * C51108 + C40450 * C152454) * C152514 +
            (C40451 * C51108 + C31892 * C152454) * C152169) *
               C152237 * C1374 -
           ((C31891 * C152454 + (C31580 + C31579) * C51108) * C152169 +
            (C40445 * C152454 + (C31578 + C31577) * C51108) * C152514) *
               C152237 * C1373 -
           (((C33745 + C33746) * C152454 + C40452 * C51108) * C152169 +
            (C42750 * C152454 + C40444 * C51108) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C31587 * C51108 + C40451 * C152454) * C152514 +
            ((C31582 + C31581) * C51108 + C32391 * C152454) * C152169) *
               C152237 * C1373 -
           (((C31889 + C31890) * C152454 + C41013 * C51108) * C152169 +
            (C40452 * C152454 + C31891 * C51108) * C152514) *
               C152237 * C1374 +
           ((C31892 * C51108 + (C33746 + C33745) * C152454) * C152514 +
            ((C31890 + C31889) * C51108 +
             (C31518 * C1467 + C33735 + C33735 + C152553 * C1483 +
              C31520 * C2200 + C33736 + C33736 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31518 * C136 + C31523 + C31523 + C152553 * C152 + C31520 * C604 +
             C31524 + C31524 + C152482 * C628) *
                C51108 +
            (C40461 + C40462) * C152454) *
               C152514 +
           ((C31577 + C31578) * C51108 + C40443 * C152454) * C152169) *
              C152237 * C1461 -
          ((C40444 * C152454 + C40445 * C51108) * C152169 +
           ((C40463 + C40464) * C152454 + (C40462 + C40461) * C51108) *
               C152514) *
              C152237 * C1462 +
          (((C40464 + C40463) * C51108 + (C42151 + C42152) * C152454) *
               C152514 +
           (C40450 * C51108 + C42749 * C152454) * C152169) *
              C152237 * C1463 -
          (((C42153 + C42154) * C152454 + C42750 * C51108) * C152169 +
           ((C42155 + C42156) * C152454 + (C42152 + C42151) * C51108) *
               C152514) *
              C152237 * C1464 +
          (((C42156 + C42155) * C51108 +
            (C31518 * C7821 + C42135 + C42135 + C152553 * C7829 +
             C31520 * C8815 + C42136 + C42136 + C152482 * C8819) *
                C152454) *
               C152514 +
           ((C42154 + C42153) * C51108 +
            (C31518 * C7820 + C42137 + C42137 + C152553 * C7828 +
             C31520 * C8816 + C42138 + C42138 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152278 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152285 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C3759) *
              C152196 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152285 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152278 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C3759) *
              C152205 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152278 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152285 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152278 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152285 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C3759) *
              C152196 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152285 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152278 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C3759) *
              C152205 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152278 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152285 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152278 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152285 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C152536 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C3759) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C152278 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152285 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152278 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152285 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C152536 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C152278 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152285 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152631 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152627 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152613 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152237 * C152587) *
              C3415 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152627 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152631 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152613 +
           ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
            (C1846 * C51108 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C3275 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152282) *
              C152630 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152282 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C3275) *
              C152623 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C3275 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152282) *
              C152606 +
          ((C51785 * C51110 + (C51787 + C51786) * C51111 +
            (C842 * C51108 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C51112) *
               C152237 * C152282 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152625 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152610 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C152580) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152610 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152625 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C152580) *
               C152282) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152610 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152625 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C152580) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152625 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152610 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C3275 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C152630 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C3275 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152631 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152627 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152613 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C3415 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152627 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152631 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152613 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152625 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152610 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C152580) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152610 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152625 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C152580) *
               C152282) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152610 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152625 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C152580) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152625 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152610 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152282) *
              C152196 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C152536 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C3275 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152282) *
              C152196 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C152536 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C3275 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152282) *
              C152630 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152282 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C3275) *
              C152623 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C3275 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152282) *
              C152606 +
          ((C51785 * C51110 + (C51787 + C51786) * C51111 +
            (C842 * C51108 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C51112) *
               C152237 * C152282 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152631 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152627 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152613 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152237 * C152587) *
              C3415 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152627 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152631 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152613 +
           ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
            (C1846 * C51108 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C3275 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C152630 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C3275 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152631 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152627 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152613 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C3415 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152627 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152631 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152613 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152278 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152285 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C4281 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C3759) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152278 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152285 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152278 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152285 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C4281 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152278 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152285 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152320 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C4953) *
              C152278 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152327 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152320 -
           ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C4953) *
              C152285 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152320 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152327 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152320 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C4953) *
              C152278 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152327 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152320 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C4953) *
              C152285 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152320 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152327 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C4281 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152631 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152324 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C4281) *
              C152627 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C4281 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152324) *
              C152613 +
          (((C8116 * C51108 + C8828 * C152454) * C51110 +
            (C7477 * C51108 + C8620 * C152454) * C51111 +
            (C7478 * C51108 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C51112) *
               C152324 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152282) *
              C152621 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152604 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C4281 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C3275 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152632 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152616 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C3275 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152629 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152632 -
           ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152616 +
           ((C10130 * C51108 + C10129 * C152454) * C51110 +
            (C9916 * C51108 + C9915 * C152454) * C51111 +
            (C26771 * C51108 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C152454) *
                C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C4281 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152631 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C4281) *
              C152627 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C4281 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C152613 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152632 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152616 -
           (C61726 * C59282 + C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C3275 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152629 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152632 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152616 +
           (C10130 * C59279 + C10129 * C59280 + C61726 * C59281 +
            (C134 * C61717 + C61723 + C61723 + C152418 * C61719) * C59282) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152320 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C4953) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152327 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152320 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C4953) *
               C152282) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152327 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152320 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C4953) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152320 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152327 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152320 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C4953) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152327 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152320 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C4953) *
               C152282) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152327 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152320 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C4953) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152320 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152327 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C3275 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152282) *
              C152621 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C3275 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152604 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C4281 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C3275 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C4281 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152631 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152324 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C4281) *
              C152627 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C4281 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152324) *
              C152613 +
          (((C8116 * C51108 + C8828 * C152454) * C51110 +
            (C7477 * C51108 + C8620 * C152454) * C51111 +
            (C7478 * C51108 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C51112) *
               C152324 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C3275 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C4281 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C3275 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152631 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C4281) *
              C152627 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C4281 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C152613 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1823 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1824 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C1825 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152237 * C152587) *
              C152521 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1824 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1823 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C1825 +
           ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
            (C1846 * C51108 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152535 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152282) *
              C829 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152282 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152535) *
              C830 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152535 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152282) *
              C831 +
          ((C51785 * C51110 + (C51787 + C51786) * C51111 +
            (C842 * C51108 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C51112) *
               C152237 * C152282 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C2359 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C152580) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C2360 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C2359 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C152580) *
               C152282) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C2360 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C2359 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C152580) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C2359 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C2360 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152535 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C829 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152535 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1823 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1824 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C1825 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C152521 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1824 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1823 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C1825 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C2359 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C2360 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C152580) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C2360 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C2359 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C152580) *
               C152282) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C2360 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C2359 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C152580) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C2359 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C2360 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152536 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C1823 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152324 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152536) *
              C1824 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152536 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152324) *
              C1825 +
          (((C8116 * C51108 + C8828 * C152454) * C51110 +
            (C7477 * C51108 + C8620 * C152454) * C51111 +
            (C7478 * C51108 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C51112) *
               C152324 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152282) *
              C353 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C354 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C152536 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C152535 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2973 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C2975 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C152535 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C2974 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C2973 -
           ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C2975 +
           ((C10130 * C51108 + C10129 * C152454) * C51110 +
            (C9916 * C51108 + C9915 * C152454) * C51111 +
            (C26771 * C51108 +
             (C134 * C9901 + C9910 + C9910 + C152418 * C9903) * C152454) *
                C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152282) *
              C353 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C152536 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C1823 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152536) *
              C1824 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152536 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C1825 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2973 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C2975 -
           (C61726 * C59282 + C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C152535 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C2974 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C2973 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C2975 +
           (C10130 * C59279 + C10129 * C59280 + C61726 * C59281 +
            (C134 * C61717 + C61723 + C61723 + C152418 * C61719) * C59282) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                C6524 * C152454) *
                   C51110 +
               (C51114 + C51115) * C51111 + C51124 * C51112) *
                  C152237 * C152219 * C129 -
              (C51125 * C51112 + (C51117 + C51116) * C51111 +
               (C51115 + C51114) * C51110) *
                  C152237 * C152219 * C130 +
              (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                  C152237 * C152219 * C131 -
              ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
               C51125 * C51110) *
                  C152237 * C152219 * C132 +
              (C51126 * C51110 + (C51123 + C51122) * C51111 +
               (C198 * C51108 +
                (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
                   C51112) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
                 C6524 * C152454) *
                    C51110 +
                (C51114 + C51115) * C51111 + C51124 * C51112) *
                   C152237 * C152624 -
               (C51357 * C51112 + (C51347 + C51348) * C51111 +
                (C6525 * C152454 + C6524 * C51108) * C51110) *
                   C152237 * C152608 +
               ((C6525 * C51108 + C6526 * C152454) * C51110 +
                (C51349 + C51350) * C51111 + C51358 * C51112) *
                   C152237 * C152577) *
                  C353 +
              (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
                (C51353 + C51354) * C51112) *
                   C152237 * C152608 -
               (C51125 * C51112 + (C51117 + C51116) * C51111 +
                (C51115 + C51114) * C51110) *
                   C152237 * C152624 -
               ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
                (C51350 + C51349) * C51110) *
                   C152237 * C152577) *
                  C354 +
              ((C51124 * C51110 + (C51119 + C51118) * C51111 +
                C51126 * C51112) *
                   C152237 * C152624 -
               ((C444 * C152454 + C443 * C51108) * C51112 +
                (C51354 + C51353) * C51111 + C51357 * C51110) *
                   C152237 * C152608 +
               (C51358 * C51110 + (C51356 + C51355) * C51111 +
                (C444 * C51108 +
                 (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                    C51112) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152625 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152219 * C353 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            (C51585 + C51586) * C51112) *
               C152610 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152625 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152580) *
              C152219 * C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152625 -
           ((C1223 * C152454 + C688 * C51108) * C51112 +
            (C51586 + C51585) * C51111 + C51589 * C51110) *
               C152610 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152625 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C1373 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152610 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152625 -
           ((C6768 * C152454 + C2839 * C51108) * C51112 +
            (C6767 * C152454 + C2840 * C51108) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152580) *
              C1374 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152625 -
           ((C7478 * C152454 + C2063 * C51108) * C51112 +
            (C7477 * C152454 + C2064 * C51108) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152610 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2359 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152219 * C152621 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C2360 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C2359 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152580) *
              C152219 * C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C2359 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C2360 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2359 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152624 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C2360 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C2359 -
           ((C6768 * C152454 + C2839 * C51108) * C51112 +
            (C6767 * C152454 + C2840 * C51108) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152580) *
              C152608 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C2359 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C2360 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C2590 -
          (C51589 * C51112 + (C51579 + C51580) * C51111 +
           (C7476 * C152454 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
               C51110) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
            C8114 * C152454) *
               C51110 +
           (C51581 + C51582) * C51111 + C51590 * C51112) *
              C2592 -
          ((C26771 * C152454 + C2995 * C51108) * C51112 +
           (C9916 * C152454 + C2996 * C51108) * C51111 +
           (C10130 * C152454 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
               C51110) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C51108 +
            (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C152454) *
               C51110 +
           ((C134 * C2600 + C2625 + C2625 + C152418 * C2616) * C51108 +
            (C134 * C9390 + C9409 + C9409 + C152418 * C9402) * C152454) *
               C51111 +
           ((C134 * C2601 + C2626 + C2626 + C152418 * C2617) * C51108 +
            (C134 * C18307 + C26275 + C26275 + C152418 * C18309) * C152454) *
               C51112) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C353 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152610 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152625 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152625 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152610 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C1373 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152610 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152625 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C1374 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152625 -
           ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
            C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
               C152164 * C152610 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C152621 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C2360 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C2359 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C2359 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C2360 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152624 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C2360 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C2359 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C152608 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C2359 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C2360 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C2590 -
          (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
           (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
              C152164 * C2591 +
          ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
           C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
              C152164 * C2592 -
          ((C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C59282 +
           C10129 * C59281 + C10130 * C59280 +
           (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
              C152164 * C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152418 * C2615) * C59279 +
           (C134 * C9388 + C9407 + C9407 + C152418 * C9400) * C59280 +
           (C134 * C9389 + C9408 + C9408 + C152418 * C9401) * C59281 +
           (C134 * C61259 + C61263 + C61263 + C152418 * C61261) * C59282) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C1373 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C1374 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C152536 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C152577) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C1373 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C1374 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152536 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152219 * C829 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152324 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152536) *
              C152219 * C830 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152536 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152324) *
              C152219 * C831 +
          ((C51982 * C51110 + (C51984 + C51983) * C51111 +
            (C984 * C51108 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C51112) *
               C152324 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2973 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C2975 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C152219 * C152521 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C2974 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C2973 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C2975 +
           ((C54575 + C54574) * C51110 + (C54573 + C54572) * C51111 +
            (C2994 * C51108 +
             (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152454) *
                C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C829 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152536 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C1373 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C1374 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C152536 -
            ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
             C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C1373 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C1374 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2973 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2974 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C2975 -
           ((C134 * C10112 + C10123 + C10123 + C152418 * C10116) * C59282 +
            C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C152219 * C152521 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C2974 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C2973 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C2975 +
           (C2996 * C59279 + C9916 * C59280 + C9915 * C59281 +
            (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C59282) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152624 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152608 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            (C51353 + C51354) * C51112) *
               C152237 * C152608 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152624 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C51108) * C51112 +
            (C51354 + C51353) * C51111 + C51357 * C51110) *
               C152237 * C152608 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C152219 * C129 -
          (C51125 * C51112 + (C51117 + C51116) * C51111 +
           (C51115 + C51114) * C51110) *
              C152237 * C152219 * C130 +
          (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
              C152237 * C152219 * C131 -
          ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
           C51125 * C51110) *
              C152237 * C152219 * C132 +
          (C51126 * C51110 + (C51123 + C51122) * C51111 +
           (C198 * C51108 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2359 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152219 * C152621 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C2360 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C2359 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152580) *
              C152219 * C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C2359 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C2360 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C2359 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152624 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C2360 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C2359 -
           ((C6768 * C152454 + C2839 * C51108) * C51112 +
            (C6767 * C152454 + C2840 * C51108) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152580) *
              C152608 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C2359 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C2360 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C152621 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C2360 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C2359 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C2359 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C2360 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C2359 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C2360 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152624 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C2360 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C2359 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C152608 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C2359 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C2360 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152282) *
              C152196 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C4281 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C152535 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152282) *
              C152196 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C4281 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152320 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152327 +
            (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
              C8114 * C152454) *
                 C51110 +
             (C51581 + C51582) * C51111 + C51590 * C51112) *
                C4953) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152327 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152320 -
            ((C54374 + C54375) * C51112 + (C54376 + C54377) * C51111 +
             (C8115 * C152454 + C8114 * C51108) * C51110) *
                C4953) *
               C152282) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152327 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152320 -
            ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
             (C51582 + C51581) * C51110) *
                C4953) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152320 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152327 +
            ((C54377 + C54376) * C51110 + (C54375 + C54374) * C51111 +
             (C2838 * C51108 +
              (C134 * C1656 + C1693 + C1693 + C152418 * C1680) * C152454) *
                 C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152320 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152327 +
            ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
             C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
                C152164 * C4953) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152327 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152320 -
            (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
             C8114 * C59279) *
                C152164 * C4953) *
               C152282) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152327 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152320 -
            (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
                C152164 * C4953) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152320 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152327 +
            (C2840 * C59279 + C6767 * C59280 + C8117 * C59281 +
             (C134 * C8074 + C8103 + C8103 + C152418 * C8086) * C59282) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152624 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152608 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C4281 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C152577) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152624 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152608 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C4281 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152219 * C152630 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152324 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C4281) *
              C152219 * C152623 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C4281 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152324) *
              C152219 * C152606 +
          ((C51982 * C51110 + (C51984 + C51983) * C51111 +
            (C984 * C51108 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C51112) *
               C152324 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152632 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152629 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152616 -
           ((C54572 + C54573) * C51112 + (C54574 + C54575) * C51111 +
            (C10130 * C152454 +
             (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C51108) *
                C51110) *
               C152593) *
              C152219 * C3415 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152629 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152632 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152616 +
           ((C54575 + C54574) * C51110 + (C54573 + C54572) * C51111 +
            (C2994 * C51108 +
             (C134 * C3132 + C3145 + C3145 + C152418 * C3140) * C152454) *
                C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C152630 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C4281 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152624 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152608 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C4281 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152624 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152608 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152632 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152629 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152616 -
           (C61726 * C59282 + C10129 * C59281 + C10130 * C59280 +
            (C134 * C2598 + C2623 + C2623 + C152418 * C2614) * C59279) *
               C152164 * C152593) *
              C152219 * C3415 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152629 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152632 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152616 +
           (C2996 * C59279 + C9916 * C59280 + C9915 * C59281 +
            (C134 * C10113 + C10124 + C10124 + C152418 * C10117) * C59282) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152320 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152327 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C4953) *
              C152219 * C152196 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152327 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152320 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C4953) *
              C152219 * C152205 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152320 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152327 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152320 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152327 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C4953) *
              C152219 * C152196 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152327 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152320 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C4953) *
              C152219 * C152205 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152320 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152327 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C4281 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152219 * C152630 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152324 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C4281) *
              C152219 * C152623 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C4281 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152324) *
              C152219 * C152606 +
          ((C51982 * C51110 + (C51984 + C51983) * C51111 +
            (C984 * C51108 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C51112) *
               C152324 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C4281 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152624 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C4281) *
               C152608 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C4281 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C152577) *
              C3415 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C4281) *
               C152624 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C4281 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152608 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C4281 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C152630 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C4281 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C4281 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152624 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C4281) *
               C152608 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C4281 -
            (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
             C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C4281) *
               C152624 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C4281 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152608 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152535 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152282) *
              C829 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C152282 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152535) *
              C830 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152535 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C152282) *
              C831 +
          ((C51785 * C51110 + (C51787 + C51786) * C51111 +
            (C842 * C51108 +
             (C134 * C367 + C420 + C420 + C152418 * C391) * C152454) *
                C51112) *
               C152237 * C152282 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1823 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1824 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C1825 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152237 * C152587) *
              C152521 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1824 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1823 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C1825 +
           ((C53037 + C53036) * C51110 + (C53035 + C53034) * C51111 +
            (C1846 * C51108 +
             (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C152454) *
                C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152535 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152282) *
              C829 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152282 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152535 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C437 * C59279 + C442 * C59280 + C1846 * C59281 +
            (C134 * C1474 + C1499 + C1499 + C152418 * C1490) * C59282) *
               C152164 * C152237 * C152282 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1823 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1824 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C1825 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152237 * C152587) *
              C152521 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1824 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1823 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C1825 +
           (C1848 * C59279 + C6527 * C59280 + C7850 * C59281 +
            (C134 * C7823 + C7842 + C7842 + C152418 * C7831) * C59282) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C152535 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C152282) *
              C353 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C152535 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C152282) *
              C354 +
          (((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
                C152536 -
            ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
             C51589 * C51110) *
                C152324) *
               C152535 +
           ((C52281 * C51110 + (C52280 + C52279) * C51111 +
             (C1223 * C51108 +
              (C134 * C2045 + C2055 + C2055 + C152418 * C2047) * C152454) *
                 C51112) *
                C152324 -
            ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
             C51357 * C51110) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152536 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C1823 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152324 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152536) *
              C1824 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152536 -
           ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152324) *
              C1825 +
          (((C8116 * C51108 + C8828 * C152454) * C51110 +
            (C7477 * C51108 + C8620 * C152454) * C51111 +
            (C7478 * C51108 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C152454) *
                C51112) *
               C152324 -
           ((C53034 + C53035) * C51112 + (C53036 + C53037) * C51111 +
            (C7849 * C152454 + C6526 * C51108) * C51110) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C152282) *
              C353 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C152535 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
                C152164 * C152536 -
            (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
                C152164 * C152324) *
               C152535 +
           ((C1221 * C59279 + C2063 * C59280 + C7478 * C59281 +
             (C134 * C8609 + C8617 + C8617 + C152418 * C8611) * C59282) *
                C152164 * C152324 -
            (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C1823 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152324 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152536) *
              C1824 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152536 -
           (C60885 * C59282 + C8828 * C59281 + C8116 * C59280 +
            C7475 * C59279) *
               C152164 * C152324) *
              C1825 +
          ((C8116 * C59279 + C8828 * C59280 + C60885 * C59281 +
            (C134 * C60876 + C60882 + C60882 + C152418 * C60878) * C59282) *
               C152164 * C152324 -
           (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 +
            C6526 * C59279) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152624 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152608 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            (C51353 + C51354) * C51112) *
               C152237 * C152608 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152624 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C51108) * C51112 +
            (C51354 + C51353) * C51111 + C51357 * C51110) *
               C152237 * C152608 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C152219 * C129 -
          (C51125 * C51112 + (C51117 + C51116) * C51111 +
           (C51115 + C51114) * C51110) *
              C152237 * C152219 * C130 +
          (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
              C152237 * C152219 * C131 -
          ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
           C51125 * C51110) *
              C152237 * C152219 * C132 +
          (C51126 * C51110 + (C51123 + C51122) * C51111 +
           (C198 * C51108 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152625 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C152219 * C353 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            (C51585 + C51586) * C51112) *
               C152610 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152625 -
           ((C51587 + C51588) * C51112 + (C51584 + C51583) * C51111 +
            (C51582 + C51581) * C51110) *
               C152580) *
              C152219 * C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152625 -
           ((C1223 * C152454 + C688 * C51108) * C51112 +
            (C51586 + C51585) * C51111 + C51589 * C51110) *
               C152610 +
           (C51590 * C51110 + (C51588 + C51587) * C51111 +
            (C689 * C51108 +
             (C134 * C2821 + C2831 + C2831 + C152418 * C2823) * C152454) *
                C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152625 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152610 +
           (((C134 * C605 + C648 + C648 + C152418 * C629) * C51108 +
             C8114 * C152454) *
                C51110 +
            (C51581 + C51582) * C51111 + C51590 * C51112) *
               C152580) *
              C1373 +
          (((C7476 * C51108 + C7475 * C152454) * C51110 +
            (C52275 + C52276) * C51111 + C52281 * C51112) *
               C152610 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152625 -
           ((C6768 * C152454 + C2839 * C51108) * C51112 +
            (C6767 * C152454 + C2840 * C51108) * C51111 +
            (C8115 * C152454 + C8114 * C51108) * C51110) *
               C152580) *
              C1374 +
          (((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152625 -
           ((C7478 * C152454 + C2063 * C51108) * C51112 +
            (C7477 * C152454 + C2064 * C51108) * C51111 +
            (C8116 * C152454 + C7475 * C51108) * C51110) *
               C152610 +
           ((C8115 * C51108 + C8118 * C152454) * C51110 +
            (C6767 * C51108 + C8117 * C152454) * C51111 +
            (C6768 * C51108 +
             (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C152454) *
                C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C152219 * C353 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152610 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152625 -
           (C8117 * C59282 + C6767 * C59281 + C2840 * C59280 + C685 * C59279) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152625 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152610 +
           (C686 * C59279 + C2839 * C59280 + C6768 * C59281 +
            (C134 * C9700 + C9707 + C9707 + C152418 * C9702) * C59282) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152625 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152610 +
           ((C134 * C605 + C648 + C648 + C152418 * C629) * C59279 +
            C8114 * C59280 + C8115 * C59281 + C8118 * C59282) *
               C152164 * C152580) *
              C1373 +
          ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 + C8828 * C59282) *
               C152164 * C152610 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152625 -
           (C60422 * C59282 + C8118 * C59281 + C8115 * C59280 +
            C8114 * C59279) *
               C152164 * C152580) *
              C1374 +
          ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152625 -
           ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
            C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
               C152164 * C152610 +
           (C8115 * C59279 + C8118 * C59280 + C60422 * C59281 +
            (C134 * C60413 + C60419 + C60419 + C152418 * C60415) * C59282) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152536 -
           (C51589 * C51112 + (C51579 + C51580) * C51111 +
            (C7476 * C152454 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                C51110) *
               C152324) *
              C152219 * C829 +
          (((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
            C51982 * C51112) *
               C152324 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152536) *
              C152219 * C830 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152536 -
           ((C51983 + C51984) * C51112 + (C51586 + C51585) * C51111 +
            C51589 * C51110) *
               C152324) *
              C152219 * C831 +
          ((C51982 * C51110 + (C51984 + C51983) * C51111 +
            (C984 * C51108 +
             (C134 * C1184 + C1211 + C1211 + C152418 * C1196) * C152454) *
                C51112) *
               C152324 -
           ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
            C51125 * C51110) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
              C6524 * C152454) *
                 C51110 +
             (C51114 + C51115) * C51111 + C51124 * C51112) *
                C152536 -
            (C51589 * C51112 + (C51579 + C51580) * C51111 +
             (C7476 * C152454 +
              (C134 * C604 + C647 + C647 + C152418 * C628) * C51108) *
                 C51110) *
                C152324) *
               C1373 +
           (((C7476 * C51108 + C7475 * C152454) * C51110 +
             (C52275 + C52276) * C51111 + C52281 * C51112) *
                C152324 -
            (C51357 * C51112 + (C51347 + C51348) * C51111 +
             (C6525 * C152454 + C6524 * C51108) * C51110) *
                C152536) *
               C1374 +
           (((C6525 * C51108 + C6526 * C152454) * C51110 +
             (C51349 + C51350) * C51111 + C51358 * C51112) *
                C152536 -
            ((C53328 + C53329) * C51112 + (C53330 + C53331) * C51111 +
             (C8116 * C152454 + C7475 * C51108) * C51110) *
                C152324) *
               C152577) *
              C152521 +
          ((((C51580 + C51579) * C51110 + (C51578 + C51577) * C51111 +
             C51982 * C51112) *
                C152324 -
            (C51125 * C51112 + (C51117 + C51116) * C51111 +
             (C51115 + C51114) * C51110) *
                C152536) *
               C1373 +
           (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
             C51785 * C51112) *
                C152536 -
            ((C52279 + C52280) * C51112 + (C52278 + C52277) * C51111 +
             (C52276 + C52275) * C51110) *
                C152324) *
               C1374 +
           (((C53331 + C53330) * C51110 + (C53329 + C53328) * C51111 +
             (C2062 * C51108 +
              (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C152454) *
                 C51112) *
                C152324 -
            ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
             (C51350 + C51349) * C51110) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152536 -
           (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
            (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
               C152164 * C152324) *
              C152219 * C829 +
          ((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
               C152164 * C152324 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152536 -
           (C7478 * C59282 + C2063 * C59281 + C1221 * C59280 + C683 * C59279) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C682 * C59279 + C1222 * C59280 + C2062 * C59281 +
            (C134 * C2200 + C2213 + C2213 + C152418 * C2208) * C59282) *
               C152164 * C152324 -
           (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
             C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
                C152164 * C152536 -
            (C8116 * C59282 + C7475 * C59281 + C7476 * C59280 +
             (C134 * C604 + C647 + C647 + C152418 * C628) * C59279) *
                C152164 * C152324) *
               C1373 +
           ((C7476 * C59279 + C7475 * C59280 + C8116 * C59281 +
             C8828 * C59282) *
                C152164 * C152324 -
            (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 +
             C6524 * C59279) *
                C152164 * C152536) *
               C1374 +
           ((C6525 * C59279 + C6526 * C59280 + C7849 * C59281 +
             C7851 * C59282) *
                C152164 * C152536 -
            ((C134 * C8815 + C8824 + C8824 + C152418 * C8819) * C59282 +
             C8828 * C59281 + C8116 * C59280 + C7475 * C59279) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          (((C684 * C59279 + C1220 * C59280 + C2064 * C59281 + C7477 * C59282) *
                C152164 * C152324 -
            (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
                C152164 * C152536) *
               C1373 +
           ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
                C152164 * C152536 -
            (C8620 * C59282 + C7477 * C59281 + C2064 * C59280 +
             C1220 * C59279) *
                C152164 * C152324) *
               C1374 +
           ((C2064 * C59279 + C7477 * C59280 + C8620 * C59281 +
             (C134 * C8816 + C8825 + C8825 + C152418 * C8820) * C59282) *
                C152164 * C152324 -
            (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C152219 * C129 -
          (C51125 * C51112 + (C51117 + C51116) * C51111 +
           (C51115 + C51114) * C51110) *
              C152237 * C152219 * C130 +
          (C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
              C152237 * C152219 * C131 -
          ((C51122 + C51123) * C51112 + (C51121 + C51120) * C51111 +
           C51125 * C51110) *
              C152237 * C152219 * C132 +
          (C51126 * C51110 + (C51123 + C51122) * C51111 +
           (C198 * C51108 +
            (C134 * C833 + C839 + C839 + C152418 * C835) * C152454) *
               C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C152624 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C152608 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            (C51353 + C51354) * C51112) *
               C152237 * C152608 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C152624 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C354 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C152624 -
           ((C444 * C152454 + C443 * C51108) * C51112 +
            (C51354 + C51353) * C51111 + C51357 * C51110) *
               C152237 * C152608 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
             C6524 * C152454) *
                C51110 +
            (C51114 + C51115) * C51111 + C51124 * C51112) *
               C152237 * C1373 -
           (C51357 * C51112 + (C51347 + C51348) * C51111 +
            (C6525 * C152454 + C6524 * C51108) * C51110) *
               C152237 * C1374 +
           ((C6525 * C51108 + C6526 * C152454) * C51110 +
            (C51349 + C51350) * C51111 + C51358 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C51348 + C51347) * C51110 + (C51346 + C51345) * C51111 +
            C51785 * C51112) *
               C152237 * C1374 -
           (C51125 * C51112 + (C51117 + C51116) * C51111 +
            (C51115 + C51114) * C51110) *
               C152237 * C1373 -
           ((C51355 + C51356) * C51112 + (C51352 + C51351) * C51111 +
            (C51350 + C51349) * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C51124 * C51110 + (C51119 + C51118) * C51111 + C51126 * C51112) *
               C152237 * C1373 -
           ((C51786 + C51787) * C51112 + (C51354 + C51353) * C51111 +
            C51357 * C51110) *
               C152237 * C1374 +
           (C51358 * C51110 + (C51356 + C51355) * C51111 +
            (C444 * C51108 +
             (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C152454) *
                C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C51108 +
            C6524 * C152454) *
               C51110 +
           (C51114 + C51115) * C51111 + C51124 * C51112) *
              C152237 * C1461 -
          (C51357 * C51112 + (C51347 + C51348) * C51111 +
           (C6525 * C152454 + C6524 * C51108) * C51110) *
              C152237 * C1462 +
          ((C6525 * C51108 + C6526 * C152454) * C51110 +
           (C51349 + C51350) * C51111 + C51358 * C51112) *
              C152237 * C1463 -
          ((C6528 * C152454 + C1847 * C51108) * C51112 +
           (C6527 * C152454 + C1848 * C51108) * C51111 +
           (C7849 * C152454 + C6526 * C51108) * C51110) *
              C152237 * C1464 +
          ((C7849 * C51108 + C7851 * C152454) * C51110 +
           (C6527 * C51108 + C7850 * C152454) * C51111 +
           (C6528 * C51108 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C152454) *
               C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C152219 * C129 -
          (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
              C152164 * C152237 * C152219 * C130 +
          (C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
              C152164 * C152237 * C152219 * C131 -
          (C1846 * C59282 + C442 * C59281 + C437 * C59280 + C195 * C59279) *
              C152164 * C152237 * C152219 * C132 +
          (C196 * C59279 + C443 * C59280 + C444 * C59281 +
           (C134 * C1829 + C1839 + C1839 + C152418 * C1831) * C59282) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C152624 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C152608 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C353 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C152608 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C152624 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C152624 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C152608 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
            C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
               C152164 * C152237 * C1373 -
           (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
               C152164 * C152237 * C1374 +
           (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
               C152164 * C152237 * C152577) *
              C152621 +
          ((C439 * C59279 + C440 * C59280 + C1848 * C59281 + C6527 * C59282) *
               C152164 * C152237 * C1374 -
           (C1848 * C59282 + C440 * C59281 + C439 * C59280 + C193 * C59279) *
               C152164 * C152237 * C1373 -
           (C7850 * C59282 + C6527 * C59281 + C1848 * C59280 + C440 * C59279) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C194 * C59279 + C438 * C59280 + C441 * C59281 + C1847 * C59282) *
               C152164 * C152237 * C1373 -
           (C6528 * C59282 + C1847 * C59281 + C441 * C59280 + C438 * C59279) *
               C152164 * C152237 * C1374 +
           (C441 * C59279 + C1847 * C59280 + C6528 * C59281 +
            (C134 * C8312 + C8319 + C8319 + C152418 * C8314) * C59282) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152418 * C152) * C59279 +
           C6524 * C59280 + C6525 * C59281 + C6526 * C59282) *
              C152164 * C152237 * C1461 -
          (C7849 * C59282 + C6526 * C59281 + C6525 * C59280 + C6524 * C59279) *
              C152164 * C152237 * C1462 +
          (C6525 * C59279 + C6526 * C59280 + C7849 * C59281 + C7851 * C59282) *
              C152164 * C152237 * C1463 -
          (C60267 * C59282 + C7851 * C59281 + C7849 * C59280 + C6526 * C59279) *
              C152164 * C152237 * C1464 +
          (C7849 * C59279 + C7851 * C59280 + C60267 * C59281 +
           (C134 * C60258 + C60264 + C60264 + C152418 * C60260) * C59282) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152278 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152285 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C3759) *
              C152196 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152285 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152278 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            (C125406 * C152454 + C109159 * C152552) * C152514) *
               C152237 * C3759) *
              C152205 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C152278 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152285 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152536 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152278 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152536) *
               C152285 +
           (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
             (C123207 * C152552 + C110921 * C152454) * C152169) *
                C152536 -
            (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
             ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
                C152324) *
               C3759) *
              C3415 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152536) *
               C152278 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152536 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152285 +
           (((C111224 * C152552 + (C111236 + C111235) * C152454) * C152514 +
             ((C102878 + C102877) * C152552 +
              (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
               C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
             (C125406 * C152454 + C109159 * C152552) * C152514) *
                C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152631 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152627 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152613 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C152237 * C152587) *
              C3415 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152627 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152631 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            (C125406 * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152613 +
           ((C110921 * C152552 + (C110933 + C110932) * C152454) * C152514 +
            ((C102566 + C102565) * C152552 +
             (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
              C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C3275 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152282) *
              C152630 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152282 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C3275 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C101211 * C152552 + (C100710 + C100709) * C152454) * C152514 +
            ((C101224 + C101223) * C152552 +
             (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
              C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152625 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152610 +
            (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
               C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                  C152552 +
              (C110718 + C110719) * C152454) *
                 C152514 +
             ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
                C152580) *
               C3275 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152610 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152625 -
            (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
             ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                 C152514) *
                C152580) *
               C152282) *
              C3415 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152610 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152625 -
            (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                 C152169 +
             (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
                C152580) *
               C3275 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152625 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152610 +
            ((C127182 * C152552 + (C112309 + C112308) * C152454) * C152514 +
             ((C103960 + C103959) * C152552 +
              (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
               C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152536 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C3275 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152536) *
               C152282) *
              C152196 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152536) *
               C3275 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152536 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152282) *
              C152205 +
          ((((C100407 * C152552 + C123208 * C152454) * C152514 +
             ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                C152536 -
            (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                 C152169 +
             (C124405 * C152454 + C101013 * C152552) * C152514) *
                C152324) *
               C3275 +
           (((C101763 * C152552 + (C102878 + C102877) * C152454) * C152514 +
             ((C101762 + C101761) * C152552 +
              (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
               C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
             (C123209 * C152454 + C100711 * C152552) * C152514) *
                C152536) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C3275 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152282) *
              C152630 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152282 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C3275 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C101211 * C152552 + (C100710 + C100709) * C152454) * C152514 +
            ((C101224 + C101223) * C152552 +
             (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
              C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152631 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152627 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152613 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C152237 * C152587) *
              C3415 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152627 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152631 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            (C125406 * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152613 +
           ((C110921 * C152552 + (C110933 + C110932) * C152454) * C152514 +
            ((C102566 + C102565) * C152552 +
             (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
              C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C4281 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152278 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C4281) *
               C152285 +
           (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
             (C123207 * C152552 + C110921 * C152454) * C152169) *
                C4281 -
            (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
             ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
                C152324) *
               C3759) *
              C152521 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C4281) *
               C152278 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C4281 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152285 +
           (((C111224 * C152552 + (C111236 + C111235) * C152454) * C152514 +
             ((C102878 + C102877) * C152552 +
              (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
               C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
             (C125406 * C152454 + C109159 * C152552) * C152514) *
                C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152320 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152327 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
               C4953) *
              C152278 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152327 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152320 -
           (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C4953) *
              C152285 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152320 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152327 +
           ((C110726 * C152552 + (C110725 + C110724) * C152454) * C152514 +
            ((C112309 + C112308) * C152552 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C4953) *
              C3759) *
         C152191) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C4281 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C152631 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152324 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C4281) *
              C152627 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C4281 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152324) *
              C152613 +
          (((C111431 * C152552 + (C111443 + C111442) * C152454) * C152514 +
            ((C111236 + C111235) * C152552 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C4281 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C3275 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C4281) *
               C152282) *
              C152621 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C4281) *
               C3275 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C4281 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152282) *
              C152604 +
          ((((C100407 * C152552 + C123208 * C152454) * C152514 +
             ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                C4281 -
            (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                 C152169 +
             (C124405 * C152454 + C101013 * C152552) * C152514) *
                C152324) *
               C3275 +
           (((C101763 * C152552 + (C102878 + C102877) * C152454) * C152514 +
             ((C101762 + C101761) * C152552 +
              (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
               C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
             (C123209 * C152454 + C100711 * C152552) * C152514) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152632 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152629 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
               C152616 -
           (((C127450 + C127451) * C152454 + (C104177 + C104178) * C152552) *
                C152169 +
            ((C112720 + C112721) * C152454 +
             (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
              C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                 C152552) *
                C152514) *
               C152593) *
              C3275 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152629 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152632 -
           (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C152616 +
           (((C112721 + C112720) * C152552 + (C112719 + C112718) * C152454) *
                C152514 +
            ((C127451 + C127450) * C152552 +
             (C100338 * C9386 + C112504 + C112504 + C100336 * C9398 +
              C100340 * C9391 + C112505 + C112505 + C152482 * C9403) *
                 C152454) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152320 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152327 +
            (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
               C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                  C152552 +
              (C110718 + C110719) * C152454) *
                 C152514 +
             ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
                C4953) *
               C3275 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152327 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152320 -
            (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
             ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                 C152514) *
                C4953) *
               C152282) *
              C152521 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152327 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152320 -
            (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                 C152169 +
             (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
                C4953) *
               C3275 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152320 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152327 +
            ((C127182 * C152552 + (C112309 + C112308) * C152454) * C152514 +
             ((C103960 + C103959) * C152552 +
              (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
               C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C4281 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C3275 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C4281) *
               C152282) *
              C152621 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C4281) *
               C3275 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C4281 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152282) *
              C152604 +
          ((((C100407 * C152552 + C123208 * C152454) * C152514 +
             ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                C4281 -
            (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                 C152169 +
             (C124405 * C152454 + C101013 * C152552) * C152514) *
                C152324) *
               C3275 +
           (((C101763 * C152552 + (C102878 + C102877) * C152454) * C152514 +
             ((C101762 + C101761) * C152552 +
              (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
               C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
             (C123209 * C152454 + C100711 * C152552) * C152514) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C4281 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C152631 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152324 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C4281) *
              C152627 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C4281 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152324) *
              C152613 +
          (((C111431 * C152552 + (C111443 + C111442) * C152454) * C152514 +
            ((C111236 + C111235) * C152552 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C1823 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C1824 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C1825 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C152237 * C152587) *
              C152521 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C1824 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C1823 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            (C125406 * C152454 + C109159 * C152552) * C152514) *
               C152237 * C1825 +
           ((C110921 * C152552 + (C110933 + C110932) * C152454) * C152514 +
            ((C102566 + C102565) * C152552 +
             (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
              C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152535 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152282) *
              C829 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152282 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152535) *
              C830 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C152535 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152282) *
              C831 +
          (((C101211 * C152552 + (C100710 + C100709) * C152454) * C152514 +
            ((C101224 + C101223) * C152552 +
             (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
              C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C2359 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C2360 +
            (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
               C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                  C152552 +
              (C110718 + C110719) * C152454) *
                 C152514 +
             ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
                C152580) *
               C152535 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C2360 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C2359 -
            (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
             ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                 C152514) *
                C152580) *
               C152282) *
              C152521 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C2360 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C2359 -
            (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                 C152169 +
             (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
                C152580) *
               C152535 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C2359 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C2360 +
            ((C127182 * C152552 + (C112309 + C112308) * C152454) * C152514 +
             ((C103960 + C103959) * C152552 +
              (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
               C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152536 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C1823 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152324 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152536) *
              C1824 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152536 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152324) *
              C1825 +
          (((C111431 * C152552 + (C111443 + C111442) * C152454) * C152514 +
            ((C111236 + C111235) * C152552 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152536 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152535 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152536) *
               C152282) *
              C353 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152536) *
               C152535 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152536 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             ((C102879 + C102880) * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152282) *
              C354 +
          ((((C100407 * C152552 + C123208 * C152454) * C152514 +
             ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                C152536 -
            (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                 C152169 +
             (C124405 * C152454 + C101013 * C152552) * C152514) *
                C152324) *
               C152535 +
           (((C101763 * C152552 + (C102878 + C102877) * C152454) * C152514 +
             ((C101762 + C101761) * C152552 +
              (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
               C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
             (C123209 * C152454 + C100711 * C152552) * C152514) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C2973 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C2974 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
               C2975 -
           (((C127450 + C127451) * C152454 + (C104177 + C104178) * C152552) *
                C152169 +
            ((C112720 + C112721) * C152454 +
             (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
              C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                 C152552) *
                C152514) *
               C152593) *
              C152535 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C2974 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C2973 -
           (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C2975 +
           (((C112721 + C112720) * C152552 + (C112719 + C112718) * C152454) *
                C152514 +
            ((C127451 + C127450) * C152552 +
             (C100338 * C9386 + C112504 + C112504 + C100336 * C9398 +
              C100340 * C9391 + C112505 + C112505 + C152482 * C9403) *
                 C152454) *
                C152169) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152552 +
                (C109172 + C109173) * C152454) *
                   C152514 +
               ((C100397 + C100398) * C152552 + (C100702 + C100701) * C152454) *
                   C152169) *
                  C152237 * C152219 * C129 -
              ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
               ((C100701 + C100702) * C152454 + (C100398 + C100397) * C152552) *
                   C152514) *
                  C152237 * C152219 * C130 +
              ((C100407 * C152552 + (C100700 + C100699) * C152454) * C152514 +
               ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                  C152237 * C152219 * C131 -
              (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                   C152169 +
               ((C100708 + C100707) * C152454 + C100408 * C152552) * C152514) *
                  C152237 * C152219 * C132 +
              ((C100409 * C152552 + (C101224 + C101223) * C152454) * C152514 +
               ((C100406 + C100405) * C152552 +
                (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
                 C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                    C152454) *
                   C152169) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                  C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                     C152552 +
                 (C109172 + C109173) * C152454) *
                    C152514 +
                ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                   C152237 * C152624 -
               ((C109159 * C152454 + C123206 * C152552) * C152169 +
                ((C109175 + C109174) * C152454 +
                 (C109173 + C109172) * C152552) *
                    C152514) *
                   C152237 * C152608 +
               ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
                (C123207 * C152552 + C110921 * C152454) * C152169) *
                   C152237 * C152577) *
                  C353 +
              (((C123205 * C152552 + C123207 * C152454) * C152514 +
                (C123208 * C152552 + C100712 * C152454) * C152169) *
                   C152237 * C152608 -
               ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
                (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                   C152237 * C152624 -
               (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
                ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
                   C152237 * C152577) *
                  C354 +
              (((C100407 * C152552 + C123208 * C152454) * C152514 +
                ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                   C152237 * C152624 -
               (((C100709 + C100710) * C152454 +
                 (C100708 + C100707) * C152552) *
                    C152169 +
                (C123209 * C152454 + C100711 * C152552) * C152514) *
                   C152237 * C152608 +
               ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
                ((C100710 + C100709) * C152552 +
                 (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
                  C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                     C152454) *
                    C152169) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152625 -
           (((C101758 + C101757) * C152454 + (C101003 + C101004) * C152552) *
                C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152610 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C152219 * C353 +
          ((((C101004 + C101003) * C152552 + (C101757 + C101758) * C152454) *
                C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152610 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152625 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            ((C103961 + C103962) * C152454 + (C101006 + C101005) * C152552) *
                C152514) *
               C152580) *
              C152219 * C354 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152625 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            ((C101760 + C101759) * C152454 + C101013 * C152552) * C152514) *
               C152610 +
           ((C101014 * C152552 + (C103960 + C103959) * C152454) * C152514 +
            ((C101012 + C101011) * C152552 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C1373 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C1374 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C1374 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C1373 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C1373 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C1374 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
              C152237 * C1461 -
          ((C109159 * C152454 + C123206 * C152552) * C152169 +
           ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
               C152514) *
              C152237 * C1462 +
          ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
           (C123207 * C152552 + C110921 * C152454) * C152169) *
              C152237 * C1463 -
          (((C110932 + C110933) * C152454 + (C102567 + C102568) * C152552) *
               C152169 +
           ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
              C152237 * C1464 +
          ((C110460 * C152552 + (C110459 + C110458) * C152454) * C152514 +
           ((C110933 + C110932) * C152552 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152625 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152610 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C1373 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152610 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152625 -
           (((C112308 + C112309) * C152454 + (C103961 + C103962) * C152552) *
                C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C152580) *
              C1374 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152625 -
           (((C111235 + C111236) * C152454 + (C102879 + C102880) * C152552) *
                C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152610 +
           ((C110726 * C152552 + (C110725 + C110724) * C152454) * C152514 +
            ((C112309 + C112308) * C152552 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C2359 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C2360 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C152219 * C152621 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C2360 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C2359 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            ((C103961 + C103962) * C152454 + (C101006 + C101005) * C152552) *
                C152514) *
               C152580) *
              C152219 * C152604 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C2359 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            (C124405 * C152454 + C101013 * C152552) * C152514) *
               C2360 +
           ((C101014 * C152552 + (C103960 + C103959) * C152454) * C152514 +
            ((C101012 + C101011) * C152552 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C2359 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C2360 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C152624 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C2360 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C2359 -
           (((C112308 + C112309) * C152454 + (C103961 + C103962) * C152552) *
                C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C152580) *
              C152608 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C2359 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C2360 +
           ((C110726 * C152552 + (C110725 + C110724) * C152454) * C152514 +
            ((C112309 + C112308) * C152552 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
              C2590 -
          ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
           ((C110093 + C110094) * C152454 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152552) *
               C152514) *
              C2591 +
          (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152552 +
            (C110718 + C110719) * C152454) *
               C152514 +
           ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
               C152169) *
              C2592 -
          (((C100340 * C9390 + C104376 + C104376 + C152482 * C9402 +
             C100338 * C3130 + C104375 + C104375 + C100336 * C3138) *
                C152454 +
            (C104177 + C104178) * C152552) *
               C152169 +
           ((C112720 + C112721) * C152454 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152552) *
               C152514) *
              C2593 +
          (((C100338 * C2599 + C103645 + C103645 + C100336 * C2615 +
             C100340 * C17994 + C103646 + C103646 + C152482 * C18002) *
                C152552 +
            (C100338 * C9388 + C112004 + C112004 + C100336 * C9400 +
             C100340 * C18737 + C112005 + C112005 + C152482 * C18741) *
                C152454) *
               C152514 +
           ((C100338 * C2600 + C103647 + C103647 + C100336 * C2616 +
             C100340 * C17993 + C103648 + C103648 + C152482 * C18001) *
                C152552 +
            (C100338 * C9390 + C126794 + C126794 + C100336 * C9402 +
             C100340 * C18738 + C126795 + C126795 + C152482 * C18742) *
                C152454) *
               C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152536 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C1373 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152536) *
               C1374 +
           (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
             (C123207 * C152552 + C110921 * C152454) * C152169) *
                C152536 -
            (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
             ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
                C152324) *
               C152577) *
              C152521 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152536) *
               C1373 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152536 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C1374 +
           (((C111224 * C152552 + (C111236 + C111235) * C152454) * C152514 +
             ((C102878 + C102877) * C152552 +
              (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
               C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
             (C125406 * C152454 + C109159 * C152552) * C152514) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152536 -
           (((C101758 + C101757) * C152454 + (C101003 + C101004) * C152552) *
                C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C152219 * C829 +
          ((((C101004 + C101003) * C152552 + (C101757 + C101758) * C152454) *
                C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152324 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152536) *
              C152219 * C830 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152536 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            ((C101760 + C101759) * C152454 + C101013 * C152552) * C152514) *
               C152324) *
              C152219 * C831 +
          (((C101419 * C152552 + (C101762 + C101761) * C152454) * C152514 +
            ((C101432 + C101431) * C152552 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C2973 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C2974 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
               C2975 -
           (((C127450 + C127451) * C152454 + (C104177 + C104178) * C152552) *
                C152169 +
            ((C112720 + C112721) * C152454 +
             (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
              C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                 C152552) *
                C152514) *
               C152593) *
              C152219 * C152521 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C2974 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C2973 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
               C2975 +
           (((C104178 + C104177) * C152552 + (C127451 + C127450) * C152454) *
                C152514 +
            ((C104176 + C104175) * C152552 +
             (C100338 * C3131 + C104377 + C104377 + C100336 * C3139 +
              C100340 * C18307 + C104378 + C104378 + C152482 * C18309) *
                 C152454) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152624 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152608 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152608 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152624 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C152624 -
           (((C100709 + C100710) * C152454 + (C100708 + C100707) * C152552) *
                C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152608 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + (C100702 + C100701) * C152454) *
               C152169) *
              C152237 * C152219 * C129 -
          ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
           ((C100701 + C100702) * C152454 + (C100398 + C100397) * C152552) *
               C152514) *
              C152237 * C152219 * C130 +
          ((C100407 * C152552 + (C100700 + C100699) * C152454) * C152514 +
           ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
               C152169 +
           ((C100708 + C100707) * C152454 + C100408 * C152552) * C152514) *
              C152237 * C152219 * C132 +
          ((C100409 * C152552 + (C101224 + C101223) * C152454) * C152514 +
           ((C100406 + C100405) * C152552 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C1373 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C1374 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C1374 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C1373 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C1373 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C1374 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
              C152237 * C1461 -
          ((C109159 * C152454 + C123206 * C152552) * C152169 +
           ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
               C152514) *
              C152237 * C1462 +
          ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
           (C123207 * C152552 + C110921 * C152454) * C152169) *
              C152237 * C1463 -
          (((C110932 + C110933) * C152454 + (C102567 + C102568) * C152552) *
               C152169 +
           ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
              C152237 * C1464 +
          ((C110460 * C152552 + (C110459 + C110458) * C152454) * C152514 +
           ((C110933 + C110932) * C152552 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C2359 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C2360 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C152219 * C152621 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C2360 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C2359 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            ((C103961 + C103962) * C152454 + (C101006 + C101005) * C152552) *
                C152514) *
               C152580) *
              C152219 * C152604 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C2359 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            (C124405 * C152454 + C101013 * C152552) * C152514) *
               C2360 +
           ((C101014 * C152552 + (C103960 + C103959) * C152454) * C152514 +
            ((C101012 + C101011) * C152552 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C2359 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C2360 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C152624 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C2360 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C2359 -
           (((C112308 + C112309) * C152454 + (C103961 + C103962) * C152552) *
                C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C152580) *
              C152608 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C2359 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C2360 +
           ((C110726 * C152552 + (C110725 + C110724) * C152454) * C152514 +
            ((C112309 + C112308) * C152552 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C4281 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152535 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C4281) *
               C152282) *
              C152196 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C4281) *
               C152535 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C4281 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152282) *
              C152205 +
          ((((C100407 * C152552 + C123208 * C152454) * C152514 +
             ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                C4281 -
            (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                 C152169 +
             (C124405 * C152454 + C101013 * C152552) * C152514) *
                C152324) *
               C152535 +
           (((C101763 * C152552 + (C102878 + C102877) * C152454) * C152514 +
             ((C101762 + C101761) * C152552 +
              (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
               C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
             (C123209 * C152454 + C100711 * C152552) * C152514) *
                C4281) *
               C152282) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152320 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152327 +
            (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
               C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                  C152552 +
              (C110718 + C110719) * C152454) *
                 C152514 +
             ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
                C4953) *
               C152535 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152327 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152320 -
            (((C112308 + C112309) * C152454 + C127183 * C152552) * C152169 +
             ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                 C152514) *
                C4953) *
               C152282) *
              C3415 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152327 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152320 -
            (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                 C152169 +
             (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
                C4953) *
               C152535 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152320 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152327 +
            ((C127182 * C152552 + (C112309 + C112308) * C152454) * C152514 +
             ((C103960 + C103959) * C152552 +
              (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
               C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                  C152454) *
                 C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C4281 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152624 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C4281) *
               C152608 +
           (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
             (C123207 * C152552 + C110921 * C152454) * C152169) *
                C4281 -
            (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
             ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
                C152324) *
               C152577) *
              C3415 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C4281) *
               C152624 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C4281 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152608 +
           (((C111224 * C152552 + (C111236 + C111235) * C152454) * C152514 +
             ((C102878 + C102877) * C152552 +
              (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
               C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
             (C125406 * C152454 + C109159 * C152552) * C152514) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C4281 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C152219 * C152630 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152324 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C4281) *
              C152219 * C152623 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C4281 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            (C124405 * C152454 + C101013 * C152552) * C152514) *
               C152324) *
              C152219 * C152606 +
          (((C101419 * C152552 + (C101762 + C101761) * C152454) * C152514 +
            ((C101432 + C101431) * C152552 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152632 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152629 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
               C152616 -
           (((C127450 + C127451) * C152454 + (C104177 + C104178) * C152552) *
                C152169 +
            ((C112720 + C112721) * C152454 +
             (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
              C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                 C152552) *
                C152514) *
               C152593) *
              C152219 * C3415 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152629 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152632 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
               C152616 +
           (((C104178 + C104177) * C152552 + (C127451 + C127450) * C152454) *
                C152514 +
            ((C104176 + C104175) * C152552 +
             (C100338 * C3131 + C104377 + C104377 + C100336 * C3139 +
              C100340 * C18307 + C104378 + C104378 + C152482 * C18309) *
                 C152454) *
                C152169) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152320 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152327 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + C127182 * C152454) * C152169) *
               C4953) *
              C152219 * C152196 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152327 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152320 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            (C127183 * C152454 + (C101006 + C101005) * C152552) * C152514) *
               C4953) *
              C152219 * C152205 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152320 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            (C124405 * C152454 + C101013 * C152552) * C152514) *
               C152327 +
           ((C101014 * C152552 + (C103960 + C103959) * C152454) * C152514 +
            ((C101012 + C101011) * C152552 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C4953) *
              C152219 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C4281 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C152219 * C152630 +
          ((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152324 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C4281) *
              C152219 * C152623 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C4281 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            (C124405 * C152454 + C101013 * C152552) * C152514) *
               C152324) *
              C152219 * C152606 +
          (((C101419 * C152552 + (C101762 + C101761) * C152454) * C152514 +
            ((C101432 + C101431) * C152552 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C4281 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152624 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C4281) *
               C152608 +
           (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
             (C123207 * C152552 + C110921 * C152454) * C152169) *
                C4281 -
            (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
             ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
                C152324) *
               C152577) *
              C3415 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C4281) *
               C152624 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C4281 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152608 +
           (((C111224 * C152552 + (C111236 + C111235) * C152454) * C152514 +
             ((C102878 + C102877) * C152552 +
              (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
               C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
             (C125406 * C152454 + C109159 * C152552) * C152514) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152535 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152282) *
              C829 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152282 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152535) *
              C830 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C152535 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152282) *
              C831 +
          (((C101211 * C152552 + (C100710 + C100709) * C152454) * C152514 +
            ((C101224 + C101223) * C152552 +
             (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
              C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                 C152454) *
                C152169) *
               C152237 * C152282 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C1823 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C1824 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C1825 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C152237 * C152587) *
              C152521 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C1824 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C1823 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            (C125406 * C152454 + C109159 * C152552) * C152514) *
               C152237 * C1825 +
           ((C110921 * C152552 + (C110933 + C110932) * C152454) * C152514 +
            ((C102566 + C102565) * C152552 +
             (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
              C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                 C152454) *
                C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152536 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C152535 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152536) *
               C152282) *
              C353 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152536) *
               C152535 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152536 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             ((C102879 + C102880) * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C152282) *
              C354 +
          ((((C100407 * C152552 + C123208 * C152454) * C152514 +
             ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
                C152536 -
            (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                 C152169 +
             (C124405 * C152454 + C101013 * C152552) * C152514) *
                C152324) *
               C152535 +
           (((C101763 * C152552 + (C102878 + C102877) * C152454) * C152514 +
             ((C101762 + C101761) * C152552 +
              (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
               C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
             (C123209 * C152454 + C100711 * C152552) * C152514) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152536 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C1823 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152324 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152536) *
              C1824 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152536 -
           (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152324) *
              C1825 +
          (((C111431 * C152552 + (C111443 + C111442) * C152454) * C152514 +
            ((C111236 + C111235) * C152552 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C152454) *
                C152169) *
               C152324 -
           (((C110932 + C110933) * C152454 + C125406 * C152552) * C152169 +
            ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152624 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152608 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152608 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152624 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C152624 -
           (((C100709 + C100710) * C152454 + (C100708 + C100707) * C152552) *
                C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152608 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + (C100702 + C100701) * C152454) *
               C152169) *
              C152237 * C152219 * C129 -
          ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
           ((C100701 + C100702) * C152454 + (C100398 + C100397) * C152552) *
               C152514) *
              C152237 * C152219 * C130 +
          ((C100407 * C152552 + (C100700 + C100699) * C152454) * C152514 +
           ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
               C152169 +
           ((C100708 + C100707) * C152454 + C100408 * C152552) * C152514) *
              C152237 * C152219 * C132 +
          ((C100409 * C152552 + (C101224 + C101223) * C152454) * C152514 +
           ((C100406 + C100405) * C152552 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152625 -
           (((C101758 + C101757) * C152454 + (C101003 + C101004) * C152552) *
                C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152610 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C152219 * C353 +
          ((((C101004 + C101003) * C152552 + (C101757 + C101758) * C152454) *
                C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152610 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152625 -
           (((C103959 + C103960) * C152454 + (C101008 + C101007) * C152552) *
                C152169 +
            ((C103961 + C103962) * C152454 + (C101006 + C101005) * C152552) *
                C152514) *
               C152580) *
              C152219 * C354 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152625 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            ((C101760 + C101759) * C152454 + C101013 * C152552) * C152514) *
               C152610 +
           ((C101014 * C152552 + (C103960 + C103959) * C152454) * C152514 +
            ((C101012 + C101011) * C152552 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152454) *
                C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C1373 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C1374 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C1374 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C1373 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C1373 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C1374 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
              C152237 * C1461 -
          ((C109159 * C152454 + C123206 * C152552) * C152169 +
           ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
               C152514) *
              C152237 * C1462 +
          ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
           (C123207 * C152552 + C110921 * C152454) * C152169) *
              C152237 * C1463 -
          (((C110932 + C110933) * C152454 + (C102567 + C102568) * C152552) *
               C152169 +
           ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
              C152237 * C1464 +
          ((C110460 * C152552 + (C110459 + C110458) * C152454) * C152514 +
           ((C110933 + C110932) * C152552 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152625 -
           ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152610 +
           (((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152552 +
             (C110718 + C110719) * C152454) *
                C152514 +
            ((C101005 + C101006) * C152552 + (C103962 + C103961) * C152454) *
                C152169) *
               C152580) *
              C1373 +
          ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                C152514 +
            (C124404 * C152552 + C111224 * C152454) * C152169) *
               C152610 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152625 -
           (((C112308 + C112309) * C152454 + (C103961 + C103962) * C152552) *
                C152169 +
            ((C110721 + C110720) * C152454 + (C110719 + C110718) * C152552) *
                C152514) *
               C152580) *
              C1374 +
          (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152625 -
           (((C111235 + C111236) * C152454 + (C102879 + C102880) * C152552) *
                C152169 +
            ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
               C152610 +
           ((C110726 * C152552 + (C110725 + C110724) * C152454) * C152514 +
            ((C112309 + C112308) * C152552 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C152454) *
                C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152536 -
           (((C101758 + C101757) * C152454 + (C101003 + C101004) * C152552) *
                C152169 +
            ((C110093 + C110094) * C152454 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152552) *
                C152514) *
               C152324) *
              C152219 * C829 +
          ((((C101004 + C101003) * C152552 + (C101757 + C101758) * C152454) *
                C152514 +
            ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
               C152324 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152536) *
              C152219 * C830 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152536 -
           (((C101761 + C101762) * C152454 + (C101010 + C101009) * C152552) *
                C152169 +
            ((C101760 + C101759) * C152454 + C101013 * C152552) * C152514) *
               C152324) *
              C152219 * C831 +
          (((C101419 * C152552 + (C101762 + C101761) * C152454) * C152514 +
            ((C101432 + C101431) * C152552 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152454) *
                C152169) *
               C152324 -
           (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
                C152169 +
            (C123758 * C152454 + C100408 * C152552) * C152514) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
               C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                  C152552 +
              (C109172 + C109173) * C152454) *
                 C152514 +
             ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
                C152536 -
            ((C124403 * C152454 + (C101003 + C101004) * C152552) * C152169 +
             ((C110093 + C110094) * C152454 +
              (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
               C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                  C152552) *
                 C152514) *
                C152324) *
               C1373 +
           ((((C110094 + C110093) * C152552 + (C110092 + C110091) * C152454) *
                 C152514 +
             (C124404 * C152552 + C111224 * C152454) * C152169) *
                C152324 -
            ((C109159 * C152454 + C123206 * C152552) * C152169 +
             ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                 C152514) *
                C152536) *
               C1374 +
           (((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
             (C123207 * C152552 + C110921 * C152454) * C152169) *
                C152536 -
            (((C111235 + C111236) * C152454 + C125793 * C152552) * C152169 +
             ((C110723 + C110722) * C152454 + C110679 * C152552) * C152514) *
                C152324) *
               C152577) *
              C152521 +
          (((((C101004 + C101003) * C152552 + C124404 * C152454) * C152514 +
             ((C101002 + C101001) * C152552 + C101763 * C152454) * C152169) *
                C152324 -
            ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
             (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
                C152536) *
               C1373 +
           (((C123205 * C152552 + C123207 * C152454) * C152514 +
             (C123208 * C152552 + C100712 * C152454) * C152169) *
                C152536 -
            (((C102877 + C102878) * C152454 + C124405 * C152552) * C152169 +
             (C125793 * C152454 + C124403 * C152552) * C152514) *
                C152324) *
               C1374 +
           (((C111224 * C152552 + (C111236 + C111235) * C152454) * C152514 +
             ((C102878 + C102877) * C152552 +
              (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
               C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                  C152454) *
                 C152169) *
                C152324 -
            (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
             (C125406 * C152454 + C109159 * C152552) * C152514) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + (C100702 + C100701) * C152454) *
               C152169) *
              C152237 * C152219 * C129 -
          ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
           ((C100701 + C100702) * C152454 + (C100398 + C100397) * C152552) *
               C152514) *
              C152237 * C152219 * C130 +
          ((C100407 * C152552 + (C100700 + C100699) * C152454) * C152514 +
           ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
              C152237 * C152219 * C131 -
          (((C101223 + C101224) * C152454 + (C100404 + C100403) * C152552) *
               C152169 +
           ((C100708 + C100707) * C152454 + C100408 * C152552) * C152514) *
              C152237 * C152219 * C132 +
          ((C100409 * C152552 + (C101224 + C101223) * C152454) * C152514 +
           ((C100406 + C100405) * C152552 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152454) *
               C152169) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C152624 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C152608 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C353 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C152608 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C152624 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C354 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C152624 -
           (((C100709 + C100710) * C152454 + (C100708 + C100707) * C152552) *
                C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C152608 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152552 +
             (C109172 + C109173) * C152454) *
                C152514 +
            ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
               C152237 * C1373 -
           ((C109159 * C152454 + C123206 * C152552) * C152169 +
            ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
                C152514) *
               C152237 * C1374 +
           ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
            (C123207 * C152552 + C110921 * C152454) * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C123205 * C152552 + C123207 * C152454) * C152514 +
            (C123208 * C152552 + C100712 * C152454) * C152169) *
               C152237 * C1374 -
           ((C100711 * C152454 + (C100400 + C100399) * C152552) * C152169 +
            (C123206 * C152454 + (C100398 + C100397) * C152552) * C152514) *
               C152237 * C1373 -
           (((C102565 + C102566) * C152454 + C123209 * C152552) * C152169 +
            ((C102567 + C102568) * C152454 + C109159 * C152552) * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C100407 * C152552 + C123208 * C152454) * C152514 +
            ((C100402 + C100401) * C152552 + C101211 * C152454) * C152169) *
               C152237 * C1373 -
           (((C100709 + C100710) * C152454 + C123758 * C152552) * C152169 +
            (C123209 * C152454 + C100711 * C152552) * C152514) *
               C152237 * C1374 +
           ((C100712 * C152552 + (C102566 + C102565) * C152454) * C152514 +
            ((C100710 + C100709) * C152552 +
             (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
              C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                 C152454) *
                C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152552 +
            (C109172 + C109173) * C152454) *
               C152514 +
           ((C100397 + C100398) * C152552 + C123205 * C152454) * C152169) *
              C152237 * C1461 -
          ((C109159 * C152454 + C123206 * C152552) * C152169 +
           ((C109175 + C109174) * C152454 + (C109173 + C109172) * C152552) *
               C152514) *
              C152237 * C1462 +
          ((C109178 * C152552 + (C109177 + C109176) * C152454) * C152514 +
           (C123207 * C152552 + C110921 * C152454) * C152169) *
              C152237 * C1463 -
          (((C110932 + C110933) * C152454 + (C102567 + C102568) * C152552) *
               C152169 +
           ((C110457 + C110456) * C152454 + C110435 * C152552) * C152514) *
              C152237 * C1464 +
          ((C110460 * C152552 + (C110459 + C110458) * C152454) * C152514 +
           ((C110933 + C110932) * C152552 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C152454) *
               C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[275] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152278 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152285 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152237 * C3759) *
                       C152196 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152285 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152278 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C3759) *
                       C152205 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C152278 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152285 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C3759) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152552 +
             (C142561 + C142562 + C142563) * C152454) *
                C152164 * C152536 -
            ((C143475 + C143476 + C143477) * C152454 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152552) *
                C152164 * C152324) *
               C152278 +
           (((C143477 + C143476 + C143475) * C152552 +
             (C144111 + C144112 + C144113) * C152454) *
                C152164 * C152324 -
            ((C142564 + C142565 + C142566) * C152454 +
             (C142563 + C142562 + C142561) * C152552) *
                C152164 * C152536) *
               C152285 +
           (((C142566 + C142565 + C142564) * C152552 +
             (C143845 + C143846 + C143847) * C152454) *
                C152164 * C152536 -
            ((C144810 + C144811 + C144812) * C152454 +
             (C144113 + C144112 + C144111) * C152552) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          ((((C134405 + C134404 + C134403) * C152552 +
             (C135165 + C135166 + C135167) * C152454) *
                C152164 * C152324 -
            ((C134101 + C134102 + C134103) * C152454 +
             (C133801 + C133800 + C133799) * C152552) *
                C152164 * C152536) *
               C152278 +
           (((C134103 + C134102 + C134101) * C152552 +
             (C134104 + C134105 + C134106) * C152454) *
                C152164 * C152536 -
            ((C136276 + C136277 + C136278) * C152454 +
             (C135167 + C135166 + C135165) * C152552) *
                C152164 * C152324) *
               C152285 +
           (((C136278 + C136277 + C136276) * C152552 +
             (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
              C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
              C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C135968 + C135969 + C135970) * C152454 +
             (C134106 + C134105 + C134104) * C152552) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152631 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152627 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152237 * C152613 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C152237 * C152587) *
                       C3415 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152627 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152631 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152613 +
                    ((C135970 + C135969 + C135968) * C152552 +
                     (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                      C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                      C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                         C152454) *
                        C152164 * C152237 * C152587) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C3275 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152282) *
                       C152630 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C3275) *
                       C152623 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C3275 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152282) *
                       C152606 +
                   (((C134626 + C134625 + C134624) * C152552 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134624 + C134625 + C134626) * C152454 +
                     (C133807 + C133806 + C133805) * C152552) *
                        C152164 * C152237 * C3275) *
                       C152581)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C152625 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152610 +
                     ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                       C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                       C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                          C152552 +
                      (C144108 + C144109 + C144110) * C152454) *
                         C152164 * C152580) *
                        C3275 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152610 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C152625 -
                     ((C144114 + C144115 + C144116) * C152454 +
                      (C144110 + C144109 + C144108) * C152552) *
                         C152164 * C152580) *
                        C152282) *
                       C3415 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152610 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C152625 -
                     ((C137354 + C137355 + C137356) * C152454 +
                      (C134408 + C134407 + C134406) * C152552) *
                         C152164 * C152580) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C152625 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152610 +
                     ((C137356 + C137355 + C137354) * C152552 +
                      (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                       C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                       C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                          C152454) *
                         C152164 * C152580) *
                        C152282) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[278] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C152536 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152324) *
                        C3275 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152324 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C152536) *
                        C152282) *
                       C152196 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152324 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C152536) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C152536 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152324) *
                        C152282) *
                       C152205 +
                   ((((C133804 + C133803 + C133802) * C152552 +
                      (C134107 + C134108 + C134109) * C152454) *
                         C152164 * C152536 -
                     ((C135168 + C135169 + C135170) * C152454 +
                      (C134411 + C134410 + C134409) * C152552) *
                         C152164 * C152324) *
                        C3275 +
                    (((C135170 + C135169 + C135168) * C152552 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152454) *
                         C152164 * C152324 -
                     ((C134110 + C134111 + C134112) * C152454 +
                      (C134109 + C134108 + C134107) * C152552) *
                         C152164 * C152536) *
                        C152282) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[279] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C3275 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152282) *
                       C152630 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C3275) *
                       C152623 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C3275 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152282) *
                       C152606 +
                   (((C134626 + C134625 + C134624) * C152552 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134624 + C134625 + C134626) * C152454 +
                     (C133807 + C133806 + C133805) * C152552) *
                        C152164 * C152237 * C3275) *
                       C152581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152631 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152627 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152237 * C152613 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C152237 * C152587) *
                       C3415 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152627 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152631 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152613 +
                    ((C135970 + C135969 + C135968) * C152552 +
                     (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                      C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                      C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                         C152454) *
                        C152164 * C152237 * C152587) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152552 +
             (C142561 + C142562 + C142563) * C152454) *
                C152164 * C4281 -
            ((C143475 + C143476 + C143477) * C152454 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152552) *
                C152164 * C152324) *
               C152278 +
           (((C143477 + C143476 + C143475) * C152552 +
             (C144111 + C144112 + C144113) * C152454) *
                C152164 * C152324 -
            ((C142564 + C142565 + C142566) * C152454 +
             (C142563 + C142562 + C142561) * C152552) *
                C152164 * C4281) *
               C152285 +
           (((C142566 + C142565 + C142564) * C152552 +
             (C143845 + C143846 + C143847) * C152454) *
                C152164 * C4281 -
            ((C144810 + C144811 + C144812) * C152454 +
             (C144113 + C144112 + C144111) * C152552) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          ((((C134405 + C134404 + C134403) * C152552 +
             (C135165 + C135166 + C135167) * C152454) *
                C152164 * C152324 -
            ((C134101 + C134102 + C134103) * C152454 +
             (C133801 + C133800 + C133799) * C152552) *
                C152164 * C4281) *
               C152278 +
           (((C134103 + C134102 + C134101) * C152552 +
             (C134104 + C134105 + C134106) * C152454) *
                C152164 * C4281 -
            ((C136276 + C136277 + C136278) * C152454 +
             (C135167 + C135166 + C135165) * C152552) *
                C152164 * C152324) *
               C152285 +
           (((C136278 + C136277 + C136276) * C152552 +
             (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
              C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
              C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C135968 + C135969 + C135970) * C152454 +
             (C134106 + C134105 + C134104) * C152552) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152320 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152327 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C4953) *
                       C152278 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152327 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152320 -
                    ((C144114 + C144115 + C144116) * C152454 +
                     (C144110 + C144109 + C144108) * C152552) *
                        C152164 * C4953) *
                       C152285 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152320 -
                    ((C144810 + C144811 + C144812) * C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C152327 +
                    ((C144116 + C144115 + C144114) * C152552 +
                     (C133726 * C8070 + C144087 + C144087 + C152619 * C8082 +
                      C133728 * C10112 + C144088 + C144088 + C152620 * C10116 +
                      C133730 * C61259 + C144089 + C144089 + C133725 * C61261) *
                         C152454) *
                        C152164 * C4953) *
                       C3759) *
                  C152191) /
                 (p * q * std::sqrt(p + q));
    d2ee[282] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C4281 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152324) *
                       C152631 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152324 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C4281) *
                       C152627 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C4281 -
                    ((C144810 + C144811 + C144812) * C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C152324) *
                       C152613 +
                   (((C144812 + C144811 + C144810) * C152552 +
                     (C133726 * C8072 + C144801 + C144801 + C152619 * C8084 +
                      C133728 * C8073 + C144802 + C144802 + C152620 * C8085 +
                      C133730 * C61717 + C144803 + C144803 + C133725 * C61719) *
                         C152454) *
                        C152164 * C152324 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C4281) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C4281 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152324) *
                        C3275 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152324 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C4281) *
                        C152282) *
                       C152621 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152324 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C4281) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C4281 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152324) *
                        C152282) *
                       C152604 +
                   ((((C133804 + C133803 + C133802) * C152552 +
                      (C134107 + C134108 + C134109) * C152454) *
                         C152164 * C4281 -
                     ((C135168 + C135169 + C135170) * C152454 +
                      (C134411 + C134410 + C134409) * C152552) *
                         C152164 * C152324) *
                        C3275 +
                    (((C135170 + C135169 + C135168) * C152552 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152454) *
                         C152164 * C152324 -
                     ((C134110 + C134111 + C134112) * C152454 +
                      (C134109 + C134108 + C134107) * C152552) *
                         C152164 * C4281) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152632 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152629 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C152616 -
                    ((C146067 + C146068 + C146069) * C152454 +
                     (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
                      C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
                      C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                         C152552) *
                        C152164 * C152593) *
                       C3275 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152629 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152632 -
                    ((C144114 + C144115 + C144116) * C152454 +
                     (C144110 + C144109 + C144108) * C152552) *
                        C152164 * C152616 +
                    ((C146069 + C146068 + C146067) * C152552 +
                     (C133726 * C9387 + C146058 + C146058 + C152619 * C9399 +
                      C133728 * C9389 + C146059 + C146059 + C152620 * C9401 +
                      C133730 * C68548 + C146060 + C146060 + C133725 * C68550) *
                         C152454) *
                        C152164 * C152593) *
                       C152282) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[283] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C152320 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152327 +
                     ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                       C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                       C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                          C152552 +
                      (C144108 + C144109 + C144110) * C152454) *
                         C152164 * C4953) *
                        C3275 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152327 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C152320 -
                     ((C144114 + C144115 + C144116) * C152454 +
                      (C144110 + C144109 + C144108) * C152552) *
                         C152164 * C4953) *
                        C152282) *
                       C152521 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152327 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C152320 -
                     ((C137354 + C137355 + C137356) * C152454 +
                      (C134408 + C134407 + C134406) * C152552) *
                         C152164 * C4953) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C152320 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152327 +
                     ((C137356 + C137355 + C137354) * C152552 +
                      (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                       C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                       C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                          C152454) *
                         C152164 * C4953) *
                        C152282) *
                       C152202)) /
                 (p * q * std::sqrt(p + q));
    d2ee[284] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C4281 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152324) *
                        C3275 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152324 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C4281) *
                        C152282) *
                       C152621 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152324 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C4281) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C4281 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152324) *
                        C152282) *
                       C152604 +
                   ((((C133804 + C133803 + C133802) * C152552 +
                      (C134107 + C134108 + C134109) * C152454) *
                         C152164 * C4281 -
                     ((C135168 + C135169 + C135170) * C152454 +
                      (C134411 + C134410 + C134409) * C152552) *
                         C152164 * C152324) *
                        C3275 +
                    (((C135170 + C135169 + C135168) * C152552 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152454) *
                         C152164 * C152324 -
                     ((C134110 + C134111 + C134112) * C152454 +
                      (C134109 + C134108 + C134107) * C152552) *
                         C152164 * C4281) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C4281 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152324) *
                       C152631 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152324 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C4281) *
                       C152627 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C4281 -
                    ((C144810 + C144811 + C144812) * C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C152324) *
                       C152613 +
                   (((C144812 + C144811 + C144810) * C152552 +
                     (C133726 * C8072 + C144801 + C144801 + C152619 * C8084 +
                      C133728 * C8073 + C144802 + C144802 + C152620 * C8085 +
                      C133730 * C61717 + C144803 + C144803 + C133725 * C61719) *
                         C152454) *
                        C152164 * C152324 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C4281) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[285] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C1823 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C1824 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152237 * C1825 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C152237 * C152587) *
                       C152521 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C1824 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C1823 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C1825 +
                    ((C135970 + C135969 + C135968) * C152552 +
                     (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                      C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                      C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                         C152454) *
                        C152164 * C152237 * C152587) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152535 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152282) *
                       C829 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152535) *
                       C830 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C152535 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152282) *
                       C831 +
                   (((C134626 + C134625 + C134624) * C152552 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134624 + C134625 + C134626) * C152454 +
                     (C133807 + C133806 + C133805) * C152552) *
                        C152164 * C152237 * C152535) *
                       C152581)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C2359 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C2360 +
                     ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                       C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                       C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                          C152552 +
                      (C144108 + C144109 + C144110) * C152454) *
                         C152164 * C152580) *
                        C152535 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C2360 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C2359 -
                     ((C144114 + C144115 + C144116) * C152454 +
                      (C144110 + C144109 + C144108) * C152552) *
                         C152164 * C152580) *
                        C152282) *
                       C152521 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C2360 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C2359 -
                     ((C137354 + C137355 + C137356) * C152454 +
                      (C134408 + C134407 + C134406) * C152552) *
                         C152164 * C152580) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C2359 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C2360 +
                     ((C137356 + C137355 + C137354) * C152552 +
                      (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                       C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                       C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                          C152454) *
                         C152164 * C152580) *
                        C152282) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[286] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152536 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152324) *
                       C1823 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152324 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152536) *
                       C1824 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152536 -
                    ((C144810 + C144811 + C144812) * C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C152324) *
                       C1825 +
                   (((C144812 + C144811 + C144810) * C152552 +
                     (C133726 * C8072 + C144801 + C144801 + C152619 * C8084 +
                      C133728 * C8073 + C144802 + C144802 + C152620 * C8085 +
                      C133730 * C61717 + C144803 + C144803 + C133725 * C61719) *
                         C152454) *
                        C152164 * C152324 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C152536) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C152536 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152324) *
                        C152535 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C133726 * C1652 + C135752 + C135752 + C152619 * C1676 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133730 * C9387 + C135750 + C135750 + C133725 * C9399) *
                          C152454) *
                         C152164 * C152324 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C152536) *
                        C152282) *
                       C353 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152324 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C152536) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C152536 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152324) *
                        C152282) *
                       C354 +
                   ((((C133804 + C133803 + C133802) * C152552 +
                      (C134107 + C134108 + C134109) * C152454) *
                         C152164 * C152536 -
                     ((C135168 + C135169 + C135170) * C152454 +
                      (C134411 + C134410 + C134409) * C152552) *
                         C152164 * C152324) *
                        C152535 +
                    (((C135170 + C135169 + C135168) * C152552 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152454) *
                         C152164 * C152324 -
                     ((C134110 + C134111 + C134112) * C152454 +
                      (C134109 + C134108 + C134107) * C152552) *
                         C152164 * C152536) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C2973 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C2974 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C2975 -
                    ((C146067 + C146068 + C146069) * C152454 +
                     (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
                      C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
                      C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                         C152552) *
                        C152164 * C152593) *
                       C152535 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C2974 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C2973 -
                    ((C144114 + C144115 + C144116) * C152454 +
                     (C144110 + C144109 + C144108) * C152552) *
                        C152164 * C2975 +
                    ((C146069 + C146068 + C146067) * C152552 +
                     (C133726 * C9387 + C146058 + C146058 + C152619 * C9399 +
                      C133728 * C9389 + C146059 + C146059 + C152620 * C9401 +
                      C133730 * C68548 + C146060 + C146060 + C133725 * C68550) *
                         C152454) *
                        C152164 * C152593) *
                       C152282) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                   C152552 +
               (C133726 * C359 + C134040 + C134040 + C152619 * C383 +
                C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                C133730 * C1648 + C134038 + C134038 + C133725 * C1672) *
                   C152454) *
                  C152164 * C152237 * C152219 * C129 -
              ((C134101 + C134102 + C134103) * C152454 +
               (C133801 + C133800 + C133799) * C152552) *
                  C152164 * C152237 * C152219 * C130 +
              ((C133804 + C133803 + C133802) * C152552 +
               (C134107 + C134108 + C134109) * C152454) *
                  C152164 * C152237 * C152219 * C131 -
              ((C134624 + C134625 + C134626) * C152454 +
               (C133807 + C133806 + C133805) * C152552) *
                  C152164 * C152237 * C152219 * C132 +
              ((C133810 + C133809 + C133808) * C152552 +
               (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
                C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
                C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                   C152454) *
                  C152164 * C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                 C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                 C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                    C152552 +
                (C142561 + C142562 + C142563) * C152454) *
                   C152164 * C152237 * C152624 -
               ((C142564 + C142565 + C142566) * C152454 +
                (C142563 + C142562 + C142561) * C152552) *
                   C152164 * C152237 * C152608 +
               ((C142566 + C142565 + C142564) * C152552 +
                (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                 C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                 C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                    C152454) *
                   C152164 * C152237 * C152577) *
                  C353 +
              (((C134103 + C134102 + C134101) * C152552 +
                (C134104 + C134105 + C134106) * C152454) *
                   C152164 * C152237 * C152608 -
               ((C134101 + C134102 + C134103) * C152454 +
                (C133801 + C133800 + C133799) * C152552) *
                   C152164 * C152237 * C152624 -
               ((C135968 + C135969 + C135970) * C152454 +
                (C134106 + C134105 + C134104) * C152552) *
                   C152164 * C152237 * C152577) *
                  C354 +
              (((C133804 + C133803 + C133802) * C152552 +
                (C134107 + C134108 + C134109) * C152454) *
                   C152164 * C152237 * C152624 -
               ((C134110 + C134111 + C134112) * C152454 +
                (C134109 + C134108 + C134107) * C152552) *
                   C152164 * C152237 * C152608 +
               ((C134112 + C134111 + C134110) * C152552 +
                (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                 C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                 C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                    C152454) *
                   C152164 * C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C152625 -
           ((C133730 * C3129 + C135131 + C135131 + C133725 * C3137 +
             C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
             C133726 * C1179 + C135129 + C135129 + C152619 * C1191) *
                C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152610 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152552 +
            (C133726 * C1648 + C135746 + C135746 + C152619 * C1672 +
             C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
             C133730 * C9388 + C135744 + C135744 + C133725 * C9400) *
                C152454) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C152610 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C152625 -
           ((C137354 + C137355 + C137356) * C152454 +
            (C134408 + C134407 + C134406) * C152552) *
               C152164 * C152580) *
              C152219 * C354 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C152625 -
           ((C135168 + C135169 + C135170) * C152454 +
            (C134411 + C134410 + C134409) * C152552) *
               C152164 * C152610 +
           ((C134414 + C134413 + C134412) * C152552 +
            (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
             C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
             C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                C152454) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C152237 * C1373 -
           ((C142564 + C142565 + C142566) * C152454 +
            (C142563 + C142562 + C142561) * C152552) *
               C152164 * C152237 * C1374 +
           ((C142566 + C142565 + C142564) * C152552 +
            (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
             C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
             C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C134103 + C134102 + C134101) * C152552 +
            (C134104 + C134105 + C134106) * C152454) *
               C152164 * C152237 * C1374 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C152237 * C1373 -
           ((C135968 + C135969 + C135970) * C152454 +
            (C134106 + C134105 + C134104) * C152552) *
               C152164 * C152237 * C152577) *
              C152604 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C152237 * C1373 -
           ((C134110 + C134111 + C134112) * C152454 +
            (C134109 + C134108 + C134107) * C152552) *
               C152164 * C152237 * C1374 +
           ((C134112 + C134111 + C134110) * C152552 +
            (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
             C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
             C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                C152454) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
            C133728 * C604 + C133734 + C133734 + C152620 * C628 +
            C133730 * C605 + C133735 + C133735 + C133725 * C629) *
               C152552 +
           (C142561 + C142562 + C142563) * C152454) *
              C152164 * C152237 * C1461 -
          ((C142564 + C142565 + C142566) * C152454 +
           (C142563 + C142562 + C142561) * C152552) *
              C152164 * C152237 * C1462 +
          ((C142566 + C142565 + C142564) * C152552 +
           (C143845 + C143846 + C143847) * C152454) *
              C152164 * C152237 * C1463 -
          ((C143848 + C143849 + C143850) * C152454 +
           (C143847 + C143846 + C143845) * C152552) *
              C152164 * C152237 * C1464 +
          ((C143850 + C143849 + C143848) * C152552 +
           (C133726 * C7821 + C143830 + C143830 + C152619 * C7829 +
            C133728 * C8815 + C143831 + C143831 + C152620 * C8819 +
            C133730 * C60413 + C143832 + C143832 + C133725 * C60415) *
               C152454) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C152625 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152610 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152552 +
            (C144108 + C144109 + C144110) * C152454) *
               C152164 * C152580) *
              C1373 +
          (((C143477 + C143476 + C143475) * C152552 +
            (C144111 + C144112 + C144113) * C152454) *
               C152164 * C152610 -
           ((C142564 + C142565 + C142566) * C152454 +
            (C142563 + C142562 + C142561) * C152552) *
               C152164 * C152625 -
           ((C144114 + C144115 + C144116) * C152454 +
            (C144110 + C144109 + C144108) * C152552) *
               C152164 * C152580) *
              C1374 +
          (((C142566 + C142565 + C142564) * C152552 +
            (C143845 + C143846 + C143847) * C152454) *
               C152164 * C152625 -
           ((C133730 * C10112 + C136475 + C136475 + C133725 * C10116 +
             C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
             C133726 * C2197 + C136473 + C136473 + C152619 * C2205) *
                C152454 +
            (C144113 + C144112 + C144111) * C152552) *
               C152164 * C152610 +
           ((C144116 + C144115 + C144114) * C152552 +
            (C133726 * C8070 + C144087 + C144087 + C152619 * C8082 +
             C133728 * C10112 + C144088 + C144088 + C152620 * C10116 +
             C133730 * C61259 + C144089 + C144089 + C133725 * C61261) *
                C152454) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C2359 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C2360 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152552 +
            (C144108 + C144109 + C144110) * C152454) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C2360 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C2359 -
           ((C137354 + C137355 + C137356) * C152454 +
            (C134408 + C134407 + C134406) * C152552) *
               C152164 * C152580) *
              C152219 * C152604 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C2359 -
           ((C135168 + C135169 + C135170) * C152454 +
            (C134411 + C134410 + C134409) * C152552) *
               C152164 * C2360 +
           ((C134414 + C134413 + C134412) * C152552 +
            (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
             C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
             C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                C152454) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C2359 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C2360 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152552 +
            (C144108 + C144109 + C144110) * C152454) *
               C152164 * C152580) *
              C152624 +
          (((C143477 + C143476 + C143475) * C152552 +
            (C144111 + C144112 + C144113) * C152454) *
               C152164 * C2360 -
           ((C142564 + C142565 + C142566) * C152454 +
            (C142563 + C142562 + C142561) * C152552) *
               C152164 * C2359 -
           ((C144114 + C144115 + C144116) * C152454 +
            (C144110 + C144109 + C144108) * C152552) *
               C152164 * C152580) *
              C152608 +
          (((C142566 + C142565 + C142564) * C152552 +
            (C143845 + C143846 + C143847) * C152454) *
               C152164 * C2359 -
           ((C144810 + C144811 + C144812) * C152454 +
            (C144113 + C144112 + C144111) * C152552) *
               C152164 * C2360 +
           ((C144116 + C144115 + C144114) * C152552 +
            (C133726 * C8070 + C144087 + C144087 + C152619 * C8082 +
             C133728 * C10112 + C144088 + C144088 + C152620 * C10116 +
             C133730 * C61259 + C144089 + C144089 + C133725 * C61261) *
                C152454) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
            C133728 * C604 + C133734 + C133734 + C152620 * C628 +
            C133730 * C605 + C133735 + C133735 + C133725 * C629) *
               C152552 +
           (C142561 + C142562 + C142563) * C152454) *
              C152164 * C2590 -
          ((C143475 + C143476 + C143477) * C152454 +
           (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
            C133728 * C605 + C134341 + C134341 + C152620 * C629 +
            C133726 * C604 + C134342 + C134342 + C152619 * C628) *
               C152552) *
              C152164 * C2591 +
          ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
            C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
            C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
               C152552 +
           (C144108 + C144109 + C144110) * C152454) *
              C152164 * C2592 -
          ((C133730 * C18737 + C137765 + C137765 + C133725 * C18741 +
            C133728 * C9388 + C137764 + C137764 + C152620 * C9400 +
            C133726 * C3129 + C137763 + C137763 + C152619 * C3137) *
               C152454 +
           (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
            C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
            C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
               C152552) *
              C152164 * C2593 +
          ((C133726 * C2599 + C137043 + C137043 + C152619 * C2615 +
            C133728 * C17994 + C137044 + C137044 + C152620 * C18002 +
            C133730 * C17995 + C137045 + C137045 + C133725 * C18003) *
               C152552 +
           (C133726 * C9388 + C145371 + C145371 + C152619 * C9400 +
            C133728 * C18737 + C145372 + C145372 + C152620 * C18741 +
            C133730 * C67864 + C145373 + C145373 + C133725 * C67866) *
               C152454) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152552 +
             (C142561 + C142562 + C142563) * C152454) *
                C152164 * C152536 -
            ((C143475 + C143476 + C143477) * C152454 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152552) *
                C152164 * C152324) *
               C1373 +
           (((C143477 + C143476 + C143475) * C152552 +
             (C144111 + C144112 + C144113) * C152454) *
                C152164 * C152324 -
            ((C142564 + C142565 + C142566) * C152454 +
             (C142563 + C142562 + C142561) * C152552) *
                C152164 * C152536) *
               C1374 +
           (((C142566 + C142565 + C142564) * C152552 +
             (C143845 + C143846 + C143847) * C152454) *
                C152164 * C152536 -
            ((C133730 * C10112 + C136475 + C136475 + C133725 * C10116 +
              C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
              C133726 * C2197 + C136473 + C136473 + C152619 * C2205) *
                 C152454 +
             (C144113 + C144112 + C144111) * C152552) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C134405 + C134404 + C134403) * C152552 +
             (C135165 + C135166 + C135167) * C152454) *
                C152164 * C152324 -
            ((C134101 + C134102 + C134103) * C152454 +
             (C133801 + C133800 + C133799) * C152552) *
                C152164 * C152536) *
               C1373 +
           (((C134103 + C134102 + C134101) * C152552 +
             (C134104 + C134105 + C134106) * C152454) *
                C152164 * C152536 -
            ((C136276 + C136277 + C136278) * C152454 +
             (C135167 + C135166 + C135165) * C152552) *
                C152164 * C152324) *
               C1374 +
           (((C136278 + C136277 + C136276) * C152552 +
             (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
              C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
              C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C135968 + C135969 + C135970) * C152454 +
             (C134106 + C134105 + C134104) * C152552) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C152536 -
           ((C133730 * C3129 + C135131 + C135131 + C133725 * C3137 +
             C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
             C133726 * C1179 + C135129 + C135129 + C152619 * C1191) *
                C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C152324 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C152536) *
              C152219 * C830 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C152536 -
           ((C135168 + C135169 + C135170) * C152454 +
            (C134411 + C134410 + C134409) * C152552) *
               C152164 * C152324) *
              C152219 * C831 +
          (((C134838 + C134837 + C134836) * C152552 +
            (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
             C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
             C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C134624 + C134625 + C134626) * C152454 +
            (C133807 + C133806 + C133805) * C152552) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C2973 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C2974 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152552 +
            (C144108 + C144109 + C144110) * C152454) *
               C152164 * C2975 -
           ((C133730 * C18737 + C137765 + C137765 + C133725 * C18741 +
             C133728 * C9388 + C137764 + C137764 + C152620 * C9400 +
             C133726 * C3129 + C137763 + C137763 + C152619 * C3137) *
                C152454 +
            (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
             C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
             C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                C152552) *
               C152164 * C152593) *
              C152219 * C152521 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C2974 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C2973 -
           ((C137354 + C137355 + C137356) * C152454 +
            (C134408 + C134407 + C134406) * C152552) *
               C152164 * C2975 +
           ((C137568 + C137567 + C137566) * C152552 +
            (C133726 * C3130 + C137766 + C137766 + C152619 * C3138 +
             C133728 * C9390 + C137767 + C137767 + C152620 * C9402 +
             C133730 * C18738 + C137768 + C137768 + C133725 * C18742) *
                C152454) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152624 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152608 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C353 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152608 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152624 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152577) *
                       C354 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C152624 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152608 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152552 +
                    (C133726 * C359 + C134040 + C134040 + C152619 * C383 +
                     C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                     C133730 * C1648 + C134038 + C134038 + C133725 * C1672) *
                        C152454) *
                       C152164 * C152237 * C152219 * C129 -
                   ((C134101 + C134102 + C134103) * C152454 +
                    (C133801 + C133800 + C133799) * C152552) *
                       C152164 * C152237 * C152219 * C130 +
                   ((C133804 + C133803 + C133802) * C152552 +
                    (C134107 + C134108 + C134109) * C152454) *
                       C152164 * C152237 * C152219 * C131 -
                   ((C134624 + C134625 + C134626) * C152454 +
                    (C133807 + C133806 + C133805) * C152552) *
                       C152164 * C152237 * C152219 * C132 +
                   ((C133810 + C133809 + C133808) * C152552 +
                    (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
                     C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
                     C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                        C152454) *
                       C152164 * C152237 * C152219 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C1373 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C1374 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152621 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C1374 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C1373 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152577) *
                       C152604 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C1373 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C1374 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152552 +
                    (C142561 + C142562 + C142563) * C152454) *
                       C152164 * C152237 * C1461 -
                   ((C142564 + C142565 + C142566) * C152454 +
                    (C142563 + C142562 + C142561) * C152552) *
                       C152164 * C152237 * C1462 +
                   ((C142566 + C142565 + C142564) * C152552 +
                    (C143845 + C143846 + C143847) * C152454) *
                       C152164 * C152237 * C1463 -
                   ((C143848 + C143849 + C143850) * C152454 +
                    (C143847 + C143846 + C143845) * C152552) *
                       C152164 * C152237 * C1464 +
                   ((C143850 + C143849 + C143848) * C152552 +
                    (C133726 * C7821 + C143830 + C143830 + C152619 * C7829 +
                     C133728 * C8815 + C143831 + C143831 + C152620 * C8819 +
                     C133730 * C60413 + C143832 + C143832 + C133725 * C60415) *
                        C152454) *
                       C152164 * C152237 * C1465) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C2359 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C2360 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C152580) *
                       C152219 * C152621 +
                   (((C134405 + C134404 + C134403) * C152552 +
                     (C135165 + C135166 + C135167) * C152454) *
                        C152164 * C2360 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C2359 -
                    ((C137354 + C137355 + C137356) * C152454 +
                     (C134408 + C134407 + C134406) * C152552) *
                        C152164 * C152580) *
                       C152219 * C152604 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C2359 -
                    ((C135168 + C135169 + C135170) * C152454 +
                     (C134411 + C134410 + C134409) * C152552) *
                        C152164 * C2360 +
                    ((C134414 + C134413 + C134412) * C152552 +
                     (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
                      C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
                      C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                         C152454) *
                        C152164 * C152580) *
                       C152219 * C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C2359 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C2360 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C152580) *
                       C152624 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C2360 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C2359 -
                    ((C144114 + C144115 + C144116) * C152454 +
                     (C144110 + C144109 + C144108) * C152552) *
                        C152164 * C152580) *
                       C152608 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C2359 -
                    ((C144810 + C144811 + C144812) * C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C2360 +
                    ((C144116 + C144115 + C144114) * C152552 +
                     (C133726 * C8070 + C144087 + C144087 + C152619 * C8082 +
                      C133728 * C10112 + C144088 + C144088 + C152620 * C10116 +
                      C133730 * C61259 + C144089 + C144089 + C133725 * C61261) *
                         C152454) *
                        C152164 * C152580) *
                       C152577) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[290] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C4281 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152324) *
                        C152535 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152324 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C4281) *
                        C152282) *
                       C152196 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152324 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C4281) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C4281 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152324) *
                        C152282) *
                       C152205 +
                   ((((C133804 + C133803 + C133802) * C152552 +
                      (C134107 + C134108 + C134109) * C152454) *
                         C152164 * C4281 -
                     ((C135168 + C135169 + C135170) * C152454 +
                      (C134411 + C134410 + C134409) * C152552) *
                         C152164 * C152324) *
                        C152535 +
                    (((C135170 + C135169 + C135168) * C152552 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152454) *
                         C152164 * C152324 -
                     ((C134110 + C134111 + C134112) * C152454 +
                      (C134109 + C134108 + C134107) * C152552) *
                         C152164 * C4281) *
                        C152282) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[291] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C152320 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152327 +
                     ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                       C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                       C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                          C152552 +
                      (C144108 + C144109 + C144110) * C152454) *
                         C152164 * C4953) *
                        C152535 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C144111 + C144112 + C144113) * C152454) *
                         C152164 * C152327 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C152320 -
                     ((C144114 + C144115 + C144116) * C152454 +
                      (C144110 + C144109 + C144108) * C152552) *
                         C152164 * C4953) *
                        C152282) *
                       C3415 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152327 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C152320 -
                     ((C137354 + C137355 + C137356) * C152454 +
                      (C134408 + C134407 + C134406) * C152552) *
                         C152164 * C4953) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C152320 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152327 +
                     ((C137356 + C137355 + C137354) * C152552 +
                      (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                       C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                       C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                          C152454) *
                         C152164 * C4953) *
                        C152282) *
                       C152202)) /
                 (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152552 +
             (C142561 + C142562 + C142563) * C152454) *
                C152164 * C4281 -
            ((C143475 + C143476 + C143477) * C152454 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152552) *
                C152164 * C152324) *
               C152624 +
           (((C143477 + C143476 + C143475) * C152552 +
             (C144111 + C144112 + C144113) * C152454) *
                C152164 * C152324 -
            ((C142564 + C142565 + C142566) * C152454 +
             (C142563 + C142562 + C142561) * C152552) *
                C152164 * C4281) *
               C152608 +
           (((C142566 + C142565 + C142564) * C152552 +
             (C143845 + C143846 + C143847) * C152454) *
                C152164 * C4281 -
            ((C144810 + C144811 + C144812) * C152454 +
             (C144113 + C144112 + C144111) * C152552) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C134405 + C134404 + C134403) * C152552 +
             (C135165 + C135166 + C135167) * C152454) *
                C152164 * C152324 -
            ((C134101 + C134102 + C134103) * C152454 +
             (C133801 + C133800 + C133799) * C152552) *
                C152164 * C4281) *
               C152624 +
           (((C134103 + C134102 + C134101) * C152552 +
             (C134104 + C134105 + C134106) * C152454) *
                C152164 * C4281 -
            ((C136276 + C136277 + C136278) * C152454 +
             (C135167 + C135166 + C135165) * C152552) *
                C152164 * C152324) *
               C152608 +
           (((C136278 + C136277 + C136276) * C152552 +
             (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
              C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
              C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C135968 + C135969 + C135970) * C152454 +
             (C134106 + C134105 + C134104) * C152552) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C4281 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C152324 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C4281) *
              C152219 * C152623 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C4281 -
           ((C135168 + C135169 + C135170) * C152454 +
            (C134411 + C134410 + C134409) * C152552) *
               C152164 * C152324) *
              C152219 * C152606 +
          (((C134838 + C134837 + C134836) * C152552 +
            (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
             C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
             C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C134624 + C134625 + C134626) * C152454 +
            (C133807 + C133806 + C133805) * C152552) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C152632 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152629 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152552 +
            (C144108 + C144109 + C144110) * C152454) *
               C152164 * C152616 -
           ((C146067 + C146068 + C146069) * C152454 +
            (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
             C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
             C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                C152552) *
               C152164 * C152593) *
              C152219 * C3415 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C152629 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C152632 -
           ((C137354 + C137355 + C137356) * C152454 +
            (C134408 + C134407 + C134406) * C152552) *
               C152164 * C152616 +
           ((C137568 + C137567 + C137566) * C152552 +
            (C133726 * C3130 + C137766 + C137766 + C152619 * C3138 +
             C133728 * C9390 + C137767 + C137767 + C152620 * C9402 +
             C133730 * C18738 + C137768 + C137768 + C133725 * C18742) *
                C152454) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152320 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152327 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C4953) *
                       C152219 * C152196 +
                   (((C134405 + C134404 + C134403) * C152552 +
                     (C135165 + C135166 + C135167) * C152454) *
                        C152164 * C152327 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152320 -
                    ((C137354 + C137355 + C137356) * C152454 +
                     (C134408 + C134407 + C134406) * C152552) *
                        C152164 * C4953) *
                       C152219 * C152205 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152320 -
                    ((C135168 + C135169 + C135170) * C152454 +
                     (C134411 + C134410 + C134409) * C152552) *
                        C152164 * C152327 +
                    ((C134414 + C134413 + C134412) * C152552 +
                     (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
                      C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
                      C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                         C152454) *
                        C152164 * C4953) *
                       C152219 * C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C4281 -
           ((C143475 + C143476 + C143477) * C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C152324 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C4281) *
              C152219 * C152623 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C4281 -
           ((C135168 + C135169 + C135170) * C152454 +
            (C134411 + C134410 + C134409) * C152552) *
               C152164 * C152324) *
              C152219 * C152606 +
          (((C134838 + C134837 + C134836) * C152552 +
            (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
             C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
             C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C134624 + C134625 + C134626) * C152454 +
            (C133807 + C133806 + C133805) * C152552) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152552 +
             (C142561 + C142562 + C142563) * C152454) *
                C152164 * C4281 -
            ((C143475 + C143476 + C143477) * C152454 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152552) *
                C152164 * C152324) *
               C152624 +
           (((C143477 + C143476 + C143475) * C152552 +
             (C144111 + C144112 + C144113) * C152454) *
                C152164 * C152324 -
            ((C142564 + C142565 + C142566) * C152454 +
             (C142563 + C142562 + C142561) * C152552) *
                C152164 * C4281) *
               C152608 +
           (((C142566 + C142565 + C142564) * C152552 +
             (C143845 + C143846 + C143847) * C152454) *
                C152164 * C4281 -
            ((C144810 + C144811 + C144812) * C152454 +
             (C144113 + C144112 + C144111) * C152552) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C134405 + C134404 + C134403) * C152552 +
             (C135165 + C135166 + C135167) * C152454) *
                C152164 * C152324 -
            ((C134101 + C134102 + C134103) * C152454 +
             (C133801 + C133800 + C133799) * C152552) *
                C152164 * C4281) *
               C152624 +
           (((C134103 + C134102 + C134101) * C152552 +
             (C134104 + C134105 + C134106) * C152454) *
                C152164 * C4281 -
            ((C136276 + C136277 + C136278) * C152454 +
             (C135167 + C135166 + C135165) * C152552) *
                C152164 * C152324) *
               C152608 +
           (((C136278 + C136277 + C136276) * C152552 +
             (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
              C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
              C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C135968 + C135969 + C135970) * C152454 +
             (C134106 + C134105 + C134104) * C152552) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152535 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152282) *
                       C829 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152535) *
                       C830 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C152535 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152282) *
                       C831 +
                   (((C134626 + C134625 + C134624) * C152552 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152454) *
                        C152164 * C152237 * C152282 -
                    ((C134624 + C134625 + C134626) * C152454 +
                     (C133807 + C133806 + C133805) * C152552) *
                        C152164 * C152237 * C152535) *
                       C152581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C1823 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C1824 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152237 * C1825 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C152237 * C152587) *
                       C152521 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C1824 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C1823 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C1825 +
                    ((C135970 + C135969 + C135968) * C152552 +
                     (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                      C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                      C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                         C152454) *
                        C152164 * C152237 * C152587) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[296] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152552 +
                      (C142561 + C142562 + C142563) * C152454) *
                         C152164 * C152536 -
                     ((C143475 + C143476 + C143477) * C152454 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152552) *
                         C152164 * C152324) *
                        C152535 +
                    (((C143477 + C143476 + C143475) * C152552 +
                      (C133726 * C1652 + C135752 + C135752 + C152619 * C1676 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133730 * C9387 + C135750 + C135750 + C133725 * C9399) *
                          C152454) *
                         C152164 * C152324 -
                     ((C142564 + C142565 + C142566) * C152454 +
                      (C142563 + C142562 + C142561) * C152552) *
                         C152164 * C152536) *
                        C152282) *
                       C353 +
                   ((((C134405 + C134404 + C134403) * C152552 +
                      (C135165 + C135166 + C135167) * C152454) *
                         C152164 * C152324 -
                     ((C134101 + C134102 + C134103) * C152454 +
                      (C133801 + C133800 + C133799) * C152552) *
                         C152164 * C152536) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152552 +
                      (C134104 + C134105 + C134106) * C152454) *
                         C152164 * C152536 -
                     ((C136276 + C136277 + C136278) * C152454 +
                      (C135167 + C135166 + C135165) * C152552) *
                         C152164 * C152324) *
                        C152282) *
                       C354 +
                   ((((C133804 + C133803 + C133802) * C152552 +
                      (C134107 + C134108 + C134109) * C152454) *
                         C152164 * C152536 -
                     ((C135168 + C135169 + C135170) * C152454 +
                      (C134411 + C134410 + C134409) * C152552) *
                         C152164 * C152324) *
                        C152535 +
                    (((C135170 + C135169 + C135168) * C152552 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152454) *
                         C152164 * C152324 -
                     ((C134110 + C134111 + C134112) * C152454 +
                      (C134109 + C134108 + C134107) * C152552) *
                         C152164 * C152536) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152536 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152324) *
                       C1823 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152324 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152536) *
                       C1824 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152536 -
                    ((C144810 + C144811 + C144812) * C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C152324) *
                       C1825 +
                   (((C144812 + C144811 + C144810) * C152552 +
                     (C133726 * C8072 + C144801 + C144801 + C152619 * C8084 +
                      C133728 * C8073 + C144802 + C144802 + C152620 * C8085 +
                      C133730 * C61717 + C144803 + C144803 + C133725 * C61719) *
                         C152454) *
                        C152164 * C152324 -
                    ((C143848 + C143849 + C143850) * C152454 +
                     (C143847 + C143846 + C143845) * C152552) *
                        C152164 * C152536) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[297] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152624 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152608 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C353 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152608 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152624 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152577) *
                       C354 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C152624 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152608 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152552 +
                    (C133726 * C359 + C134040 + C134040 + C152619 * C383 +
                     C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                     C133730 * C1648 + C134038 + C134038 + C133725 * C1672) *
                        C152454) *
                       C152164 * C152237 * C152219 * C129 -
                   ((C134101 + C134102 + C134103) * C152454 +
                    (C133801 + C133800 + C133799) * C152552) *
                       C152164 * C152237 * C152219 * C130 +
                   ((C133804 + C133803 + C133802) * C152552 +
                    (C134107 + C134108 + C134109) * C152454) *
                       C152164 * C152237 * C152219 * C131 -
                   ((C134624 + C134625 + C134626) * C152454 +
                    (C133807 + C133806 + C133805) * C152552) *
                       C152164 * C152237 * C152219 * C132 +
                   ((C133810 + C133809 + C133808) * C152552 +
                    (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
                     C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
                     C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                        C152454) *
                       C152164 * C152237 * C152219 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152625 -
                    ((C133730 * C3129 + C135131 + C135131 + C133725 * C3137 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133726 * C1179 + C135129 + C135129 + C152619 * C1191) *
                         C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152610 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C133726 * C1648 + C135746 + C135746 + C152619 * C1672 +
                      C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
                      C133730 * C9388 + C135744 + C135744 + C133725 * C9400) *
                         C152454) *
                        C152164 * C152580) *
                       C152219 * C353 +
                   (((C134405 + C134404 + C134403) * C152552 +
                     (C135165 + C135166 + C135167) * C152454) *
                        C152164 * C152610 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152625 -
                    ((C137354 + C137355 + C137356) * C152454 +
                     (C134408 + C134407 + C134406) * C152552) *
                        C152164 * C152580) *
                       C152219 * C354 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152625 -
                    ((C135168 + C135169 + C135170) * C152454 +
                     (C134411 + C134410 + C134409) * C152552) *
                        C152164 * C152610 +
                    ((C134414 + C134413 + C134412) * C152552 +
                     (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
                      C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
                      C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                         C152454) *
                        C152164 * C152580) *
                       C152219 * C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C1373 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C1374 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152621 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C1374 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C1373 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152577) *
                       C152604 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C1373 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C1374 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152552 +
                    (C142561 + C142562 + C142563) * C152454) *
                       C152164 * C152237 * C1461 -
                   ((C142564 + C142565 + C142566) * C152454 +
                    (C142563 + C142562 + C142561) * C152552) *
                       C152164 * C152237 * C1462 +
                   ((C142566 + C142565 + C142564) * C152552 +
                    (C143845 + C143846 + C143847) * C152454) *
                       C152164 * C152237 * C1463 -
                   ((C143848 + C143849 + C143850) * C152454 +
                    (C143847 + C143846 + C143845) * C152552) *
                       C152164 * C152237 * C1464 +
                   ((C143850 + C143849 + C143848) * C152552 +
                    (C133726 * C7821 + C143830 + C143830 + C152619 * C7829 +
                     C133728 * C8815 + C143831 + C143831 + C152620 * C8819 +
                     C133730 * C60413 + C143832 + C143832 + C133725 * C60415) *
                        C152454) *
                       C152164 * C152237 * C1465) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152625 -
                    ((C143475 + C143476 + C143477) * C152454 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152552) *
                        C152164 * C152610 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152552 +
                     (C144108 + C144109 + C144110) * C152454) *
                        C152164 * C152580) *
                       C1373 +
                   (((C143477 + C143476 + C143475) * C152552 +
                     (C144111 + C144112 + C144113) * C152454) *
                        C152164 * C152610 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152625 -
                    ((C144114 + C144115 + C144116) * C152454 +
                     (C144110 + C144109 + C144108) * C152552) *
                        C152164 * C152580) *
                       C1374 +
                   (((C142566 + C142565 + C142564) * C152552 +
                     (C143845 + C143846 + C143847) * C152454) *
                        C152164 * C152625 -
                    ((C133730 * C10112 + C136475 + C136475 + C133725 * C10116 +
                      C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
                      C133726 * C2197 + C136473 + C136473 + C152619 * C2205) *
                         C152454 +
                     (C144113 + C144112 + C144111) * C152552) *
                        C152164 * C152610 +
                    ((C144116 + C144115 + C144114) * C152552 +
                     (C133726 * C8070 + C144087 + C144087 + C152619 * C8082 +
                      C133728 * C10112 + C144088 + C144088 + C152620 * C10116 +
                      C133730 * C61259 + C144089 + C144089 + C133725 * C61261) *
                         C152454) *
                        C152164 * C152580) *
                       C152577) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152552 +
            (C142561 + C142562 + C142563) * C152454) *
               C152164 * C152536 -
           ((C133730 * C3129 + C135131 + C135131 + C133725 * C3137 +
             C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
             C133726 * C1179 + C135129 + C135129 + C152619 * C1191) *
                C152454 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152552) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C134405 + C134404 + C134403) * C152552 +
            (C135165 + C135166 + C135167) * C152454) *
               C152164 * C152324 -
           ((C134101 + C134102 + C134103) * C152454 +
            (C133801 + C133800 + C133799) * C152552) *
               C152164 * C152536) *
              C152219 * C830 +
          (((C133804 + C133803 + C133802) * C152552 +
            (C134107 + C134108 + C134109) * C152454) *
               C152164 * C152536 -
           ((C135168 + C135169 + C135170) * C152454 +
            (C134411 + C134410 + C134409) * C152552) *
               C152164 * C152324) *
              C152219 * C831 +
          (((C134838 + C134837 + C134836) * C152552 +
            (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
             C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
             C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                C152454) *
               C152164 * C152324 -
           ((C134624 + C134625 + C134626) * C152454 +
            (C133807 + C133806 + C133805) * C152552) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152552 +
             (C142561 + C142562 + C142563) * C152454) *
                C152164 * C152536 -
            ((C143475 + C143476 + C143477) * C152454 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152552) *
                C152164 * C152324) *
               C1373 +
           (((C143477 + C143476 + C143475) * C152552 +
             (C144111 + C144112 + C144113) * C152454) *
                C152164 * C152324 -
            ((C142564 + C142565 + C142566) * C152454 +
             (C142563 + C142562 + C142561) * C152552) *
                C152164 * C152536) *
               C1374 +
           (((C142566 + C142565 + C142564) * C152552 +
             (C143845 + C143846 + C143847) * C152454) *
                C152164 * C152536 -
            ((C133730 * C10112 + C136475 + C136475 + C133725 * C10116 +
              C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
              C133726 * C2197 + C136473 + C136473 + C152619 * C2205) *
                 C152454 +
             (C144113 + C144112 + C144111) * C152552) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C134405 + C134404 + C134403) * C152552 +
             (C135165 + C135166 + C135167) * C152454) *
                C152164 * C152324 -
            ((C134101 + C134102 + C134103) * C152454 +
             (C133801 + C133800 + C133799) * C152552) *
                C152164 * C152536) *
               C1373 +
           (((C134103 + C134102 + C134101) * C152552 +
             (C134104 + C134105 + C134106) * C152454) *
                C152164 * C152536 -
            ((C136276 + C136277 + C136278) * C152454 +
             (C135167 + C135166 + C135165) * C152552) *
                C152164 * C152324) *
               C1374 +
           (((C136278 + C136277 + C136276) * C152552 +
             (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
              C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
              C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                 C152454) *
                C152164 * C152324 -
            ((C135968 + C135969 + C135970) * C152454 +
             (C134106 + C134105 + C134104) * C152552) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152552 +
                    (C133726 * C359 + C134040 + C134040 + C152619 * C383 +
                     C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                     C133730 * C1648 + C134038 + C134038 + C133725 * C1672) *
                        C152454) *
                       C152164 * C152237 * C152219 * C129 -
                   ((C134101 + C134102 + C134103) * C152454 +
                    (C133801 + C133800 + C133799) * C152552) *
                       C152164 * C152237 * C152219 * C130 +
                   ((C133804 + C133803 + C133802) * C152552 +
                    (C134107 + C134108 + C134109) * C152454) *
                       C152164 * C152237 * C152219 * C131 -
                   ((C134624 + C134625 + C134626) * C152454 +
                    (C133807 + C133806 + C133805) * C152552) *
                       C152164 * C152237 * C152219 * C132 +
                   ((C133810 + C133809 + C133808) * C152552 +
                    (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
                     C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
                     C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                        C152454) *
                       C152164 * C152237 * C152219 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C152624 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C152608 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C353 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C152608 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C152624 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152577) *
                       C354 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C152624 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C152608 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152552 +
                     (C142561 + C142562 + C142563) * C152454) *
                        C152164 * C152237 * C1373 -
                    ((C142564 + C142565 + C142566) * C152454 +
                     (C142563 + C142562 + C142561) * C152552) *
                        C152164 * C152237 * C1374 +
                    ((C142566 + C142565 + C142564) * C152552 +
                     (C133726 * C1470 + C135516 + C135516 + C152619 * C1486 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133730 * C8070 + C135514 + C135514 + C133725 * C8082) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152621 +
                   (((C134103 + C134102 + C134101) * C152552 +
                     (C134104 + C134105 + C134106) * C152454) *
                        C152164 * C152237 * C1374 -
                    ((C134101 + C134102 + C134103) * C152454 +
                     (C133801 + C133800 + C133799) * C152552) *
                        C152164 * C152237 * C1373 -
                    ((C135968 + C135969 + C135970) * C152454 +
                     (C134106 + C134105 + C134104) * C152552) *
                        C152164 * C152237 * C152577) *
                       C152604 +
                   (((C133804 + C133803 + C133802) * C152552 +
                     (C134107 + C134108 + C134109) * C152454) *
                        C152164 * C152237 * C1373 -
                    ((C134110 + C134111 + C134112) * C152454 +
                     (C134109 + C134108 + C134107) * C152552) *
                        C152164 * C152237 * C1374 +
                    ((C134112 + C134111 + C134110) * C152552 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152454) *
                        C152164 * C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152552 +
                    (C142561 + C142562 + C142563) * C152454) *
                       C152164 * C152237 * C1461 -
                   ((C142564 + C142565 + C142566) * C152454 +
                    (C142563 + C142562 + C142561) * C152552) *
                       C152164 * C152237 * C1462 +
                   ((C142566 + C142565 + C142564) * C152552 +
                    (C143845 + C143846 + C143847) * C152454) *
                       C152164 * C152237 * C1463 -
                   ((C143848 + C143849 + C143850) * C152454 +
                    (C143847 + C143846 + C143845) * C152552) *
                       C152164 * C152237 * C1464 +
                   ((C143850 + C143849 + C143848) * C152552 +
                    (C133726 * C7821 + C143830 + C143830 + C152619 * C7829 +
                     C133728 * C8815 + C143831 + C143831 + C152620 * C8819 +
                     C133730 * C60413 + C143832 + C143832 + C133725 * C60415) *
                        C152454) *
                       C152164 * C152237 * C1465) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152278 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152285 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C3759) *
              C152196 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152285 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152278 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C3759) *
              C152205 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152278 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152285 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152278 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152285 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C3759) *
              C152196 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152285 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152278 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C3759) *
              C152205 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152278 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152285 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152278 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152285 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C3759) *
              C152196 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152285 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152278 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C3759) *
              C152205 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152278 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152285 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152278 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152285 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C152536 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C152278 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152285 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152278 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152285 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C152536 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C3759) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C152278 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152285 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152536 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152278 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152536) *
               C152285 +
           ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
             C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
             C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
             C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
                C152403 * C152164 * C152536 -
            (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
             C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
             C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
             C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
                C152403 * C152164 * C152324) *
               C3759) *
              C3415 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152536) *
               C152278 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152536 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152285 +
           ((C117235 * C1651 + C118800 + C118800 + C117231 * C1675 +
             C117237 * C1654 + C118801 + C118801 + C117232 * C1678 +
             C117239 * C9386 + C118802 + C118802 + C117233 * C9398 +
             C117241 * C9391 + C118803 + C118803 + C117234 * C9403) *
                C152403 * C152164 * C152324 -
            (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
             C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
             C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
             C117235 * C361 + C117425 + C117425 + C117231 * C385) *
                C152403 * C152164 * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C3275 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C152282) *
                  C152630 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                   C152237 * C152282 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C3275) *
                  C152623 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152237 * C3275 -
               ((C101223 + C101224) * C152403 * C51112 +
                (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                   C152237 * C152282) *
                  C152606 +
              ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
                (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
                 C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                    C152403 * C51112) *
                   C152237 * C152282 -
               ((C100405 + C100406) * C152403 * C51112 +
                (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                   C152237 * C3275) *
                  C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C152631 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C152627 +
               ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152237 * C152613 -
               ((C102565 + C102566) * C152403 * C51112 +
                (C102567 + C102568) * C152403 * C51111 +
                (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
                 C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                    C152403 * C51110) *
                   C152237 * C152587) *
                  C3415 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                   C152237 * C152627 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C152631 -
               ((C100709 + C100710) * C152403 * C51112 +
                (C100706 + C100705) * C152403 * C51111 +
                (C100704 + C100703) * C152403 * C51110) *
                   C152237 * C152613 +
               ((C102568 + C102567) * C152403 * C51110 +
                (C102566 + C102565) * C152403 * C51111 +
                (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
                 C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                    C152403 * C51112) *
                   C152237 * C152587) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152625 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152610 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C152580) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152610 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152625 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C152580) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152610 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152625 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C152580) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152625 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152610 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C3275 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C3275 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152631 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152627 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C152613 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152627 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152631 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C152613 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152625 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152610 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C152580) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152610 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152625 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C152580) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152610 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152625 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C152580) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152625 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152610 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C3275 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152282) *
              C152630 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C3275) *
              C152623 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C3275 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152282) *
              C152606 +
          ((C117235 * C356 + C117734 + C117734 + C117231 * C380 +
            C117237 * C1182 + C117735 + C117735 + C117232 * C1194 +
            C117239 * C1645 + C117736 + C117736 + C117233 * C1669 +
            C117241 * C3132 + C117737 + C117737 + C117234 * C3140) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152631 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152627 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152613 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C152237 * C152587) *
              C3415 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152627 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152631 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152613 +
           (C117235 * C1469 + C118602 + C118602 + C117231 * C1485 +
            C117237 * C2198 + C118603 + C118603 + C117232 * C2206 +
            C117239 * C8069 + C118604 + C118604 + C117233 * C8081 +
            C117241 * C10113 + C118605 + C118605 + C117234 * C10117) *
               C152403 * C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152625 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152610 +
            (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
             C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
             C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
             C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
                C152403 * C152164 * C152580) *
               C3275 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152610 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152625 -
            (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
             C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
             C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
             C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
                C152403 * C152164 * C152580) *
               C152282) *
              C3415 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152610 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152625 -
            (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
             C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
             C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
             C117235 * C606 + C117595 + C117595 + C117231 * C630) *
                C152403 * C152164 * C152580) *
               C3275 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152625 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152610 +
            (C117235 * C1647 + C119517 + C119517 + C117231 * C1671 +
             C117237 * C3130 + C119518 + C119518 + C117232 * C3138 +
             C117239 * C9390 + C119519 + C119519 + C117233 * C9402 +
             C117241 * C18738 + C119520 + C119520 + C117234 * C18742) *
                C152403 * C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C152536 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C3275 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C152536 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C3275 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152536 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C3275 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152536) *
               C152282) *
              C152196 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152536) *
               C3275 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152536 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152282) *
              C152205 +
          (((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
             C117237 * C602 + C117253 + C117253 + C117232 * C626 +
             C117239 * C607 + C117254 + C117254 + C117233 * C631 +
             C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
                C152403 * C152164 * C152536 -
            (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
             C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
             C117237 * C607 + C117598 + C117598 + C117232 * C631 +
             C117235 * C602 + C117599 + C117599 + C117231 * C626) *
                C152403 * C152164 * C152324) *
               C3275 +
           ((C117235 * C1181 + C118074 + C118074 + C117231 * C1193 +
             C117237 * C1646 + C118075 + C118075 + C117232 * C1670 +
             C117239 * C3131 + C118076 + C118076 + C117233 * C3139 +
             C117241 * C18307 + C118077 + C118077 + C117234 * C18309) *
                C152403 * C152164 * C152324 -
            (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
             C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
             C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
             C117235 * C357 + C117429 + C117429 + C117231 * C381) *
                C152403 * C152164 * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152631 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152627 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152613 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152627 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152631 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152613 +
           ((C102568 + C102567) * C152403 * C51110 +
            (C102566 + C102565) * C152403 * C51111 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C152403 * C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C3275 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152282 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C3275) *
              C152623 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C3275 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152282) *
              C152606 +
          ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152403 * C51112) *
               C152237 * C152282 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C3275 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C3275 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152631 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152627 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C152613 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152627 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152631 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C152613 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C3275 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152282) *
              C152630 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C3275) *
              C152623 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C3275 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152282) *
              C152606 +
          ((C117235 * C356 + C117734 + C117734 + C117231 * C380 +
            C117237 * C1182 + C117735 + C117735 + C117232 * C1194 +
            C117239 * C1645 + C117736 + C117736 + C117233 * C1669 +
            C117241 * C3132 + C117737 + C117737 + C117234 * C3140) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152631 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152627 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152613 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C152237 * C152587) *
              C3415 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152627 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152631 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152613 +
           (C117235 * C1469 + C118602 + C118602 + C117231 * C1485 +
            C117237 * C2198 + C118603 + C118603 + C117232 * C2206 +
            C117239 * C8069 + C118604 + C118604 + C117233 * C8081 +
            C117241 * C10113 + C118605 + C118605 + C117234 * C10117) *
               C152403 * C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152278 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152285 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C4281 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152278 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152285 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152278 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152285 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C4281 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C3759) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152278 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152285 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C4281 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152278 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C4281) *
               C152285 +
           ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
             C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
             C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
             C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
                C152403 * C152164 * C4281 -
            (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
             C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
             C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
             C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
                C152403 * C152164 * C152324) *
               C3759) *
              C152521 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C4281) *
               C152278 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C4281 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152285 +
           ((C117235 * C1651 + C118800 + C118800 + C117231 * C1675 +
             C117237 * C1654 + C118801 + C118801 + C117232 * C1678 +
             C117239 * C9386 + C118802 + C118802 + C117233 * C9398 +
             C117241 * C9391 + C118803 + C118803 + C117234 * C9403) *
                C152403 * C152164 * C152324 -
            (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
             C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
             C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
             C117235 * C361 + C117425 + C117425 + C117231 * C385) *
                C152403 * C152164 * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152320 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C4953) *
              C152278 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152327 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152320 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C4953) *
              C152285 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152320 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152327 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152320 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C4953) *
              C152278 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152327 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152320 -
           ((C103959 + C103960) * C152403 * C51112 +
            (C103961 + C103962) * C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C4953) *
              C152285 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152320 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152327 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152320 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152327 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C4953) *
              C152278 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152327 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152320 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C4953) *
              C152285 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152320 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152327 +
           (C117235 * C1653 + C118468 + C118468 + C117231 * C1677 +
            C117237 * C9387 + C118469 + C118469 + C117232 * C9399 +
            C117239 * C9389 + C118470 + C118470 + C117233 * C9401 +
            C117241 * C68548 + C118471 + C118471 + C117234 * C68550) *
               C152403 * C152164 * C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                  C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                     C152403 * C51110 +
                 (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                    C4281 -
                (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                 (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                  C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                     C152403 * C51110) *
                    C152324) *
                   C3275 +
               (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                  C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                     C152403 * C51110 +
                 (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                    C152324 -
                (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                 (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                  C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                     C152403 * C51110) *
                    C4281) *
                   C152282) *
                  C152621 +
              ((((C101004 + C101003) * C152403 * C51110 +
                 (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                    C152324 -
                (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                 (C100398 + C100397) * C152403 * C51110) *
                    C4281) *
                   C3275 +
               (((C100702 + C100701) * C152403 * C51110 +
                 (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                    C4281 -
                ((C101761 + C101762) * C152403 * C51112 +
                 (C101760 + C101759) * C152403 * C51111 +
                 (C101758 + C101757) * C152403 * C51110) *
                    C152324) *
                   C152282) *
                  C152604 +
              (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                 C100412 * C51112) *
                    C4281 -
                ((C101431 + C101432) * C152403 * C51112 +
                 (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                    C152324) *
                   C3275 +
               ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
                 (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
                  C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                     C152403 * C51112) *
                    C152324 -
                ((C101223 + C101224) * C152403 * C51112 +
                 (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                    C4281) *
                   C152282) *
                  C152571) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C4281 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C152324) *
                  C152631 +
              (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                 C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                    C152403 * C51110 +
                (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                   C152324 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C4281) *
                  C152627 +
              (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C4281 -
               ((C102877 + C102878) * C152403 * C51112 +
                (C102879 + C102880) * C152403 * C51111 +
                (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
                 C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                    C152403 * C51110) *
                   C152324) *
                  C152613 +
              (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
                 C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                    C152403 * C51110 +
                (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
                 C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                    C152403 * C51111 +
                (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
                 C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                    C152403 * C51112) *
                   C152324 -
               ((C102565 + C102566) * C152403 * C51112 +
                (C102567 + C102568) * C152403 * C51111 +
                (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
                 C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                    C152403 * C51110) *
                   C4281) *
                  C152587) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152632 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152616 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C3275 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152629 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152632 -
           ((C103959 + C103960) * C152403 * C51112 +
            (C103961 + C103962) * C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152616 +
           ((C100338 * C3129 + C104373 + C104373 + C100336 * C3137 +
             C100340 * C9388 + C104374 + C104374 + C152482 * C9400) *
                C152403 * C51110 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C152403 * C51111 +
            (C100338 * C3131 + C104377 + C104377 + C100336 * C3139 +
             C100340 * C18307 + C104378 + C104378 + C152482 * C18309) *
                C152403 * C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C4281 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C3275 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152631 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C4281) *
              C152627 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C4281 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C152613 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152632 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152616 -
           ((C112718 + C112719) * C6260 + (C112720 + C112721) * C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C3275 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152629 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152632 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152616 +
           ((C112721 + C112720) * C6258 + (C112719 + C112718) * C6259 +
            (C100338 * C10112 + C112708 + C112708 + C100336 * C10116 +
             C100340 * C61259 + C112709 + C112709 + C152482 * C61261) *
                C6260) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C4281 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C3275 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C4281) *
               C152282) *
              C152621 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C4281) *
               C3275 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C4281 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152282) *
              C152604 +
          (((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
             C117237 * C602 + C117253 + C117253 + C117232 * C626 +
             C117239 * C607 + C117254 + C117254 + C117233 * C631 +
             C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
                C152403 * C152164 * C4281 -
            (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
             C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
             C117237 * C607 + C117598 + C117598 + C117232 * C631 +
             C117235 * C602 + C117599 + C117599 + C117231 * C626) *
                C152403 * C152164 * C152324) *
               C3275 +
           ((C117235 * C1181 + C118074 + C118074 + C117231 * C1193 +
             C117237 * C1646 + C118075 + C118075 + C117232 * C1670 +
             C117239 * C3131 + C118076 + C118076 + C117233 * C3139 +
             C117241 * C18307 + C118077 + C118077 + C117234 * C18309) *
                C152403 * C152164 * C152324 -
            (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
             C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
             C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
             C117235 * C357 + C117429 + C117429 + C117231 * C381) *
                C152403 * C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C4281 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C152631 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152324 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C4281) *
              C152627 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C4281 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152324) *
              C152613 +
          ((C117235 * C2197 + C118934 + C118934 + C117231 * C2205 +
            C117237 * C8070 + C118935 + C118935 + C117232 * C8082 +
            C117239 * C10112 + C118936 + C118936 + C117233 * C10116 +
            C117241 * C61259 + C118937 + C118937 + C117234 * C61261) *
               C152403 * C152164 * C152324 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152632 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152629 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152616 -
           (C117241 * C17995 + C119315 + C119315 + C117234 * C18003 +
            C117239 * C17994 + C119316 + C119316 + C117233 * C18002 +
            C117237 * C2599 + C119317 + C119317 + C117232 * C2615 +
            C117235 * C2598 + C119318 + C119318 + C117231 * C2614) *
               C152403 * C152164 * C152593) *
              C3275 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152629 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152632 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C152616 +
           (C117235 * C3129 + C119785 + C119785 + C117231 * C3137 +
            C117237 * C9388 + C119786 + C119786 + C117232 * C9400 +
            C117239 * C18737 + C119787 + C119787 + C117233 * C18741 +
            C117241 * C67864 + C119788 + C119788 + C117234 * C67866) *
               C152403 * C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152320 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C4953) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152327 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152320 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C4953) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152327 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152320 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C4953) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152320 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152327 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152320 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C4953) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152327 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152320 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C4953) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152327 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152320 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C4953) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152320 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152327 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152320 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152327 +
            (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
             C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
             C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
             C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
                C152403 * C152164 * C4953) *
               C3275 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152327 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152320 -
            (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
             C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
             C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
             C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
                C152403 * C152164 * C4953) *
               C152282) *
              C152521 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152327 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152320 -
            (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
             C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
             C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
             C117235 * C606 + C117595 + C117595 + C117231 * C630) *
                C152403 * C152164 * C4953) *
               C3275 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152320 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152327 +
            (C117235 * C1647 + C119517 + C119517 + C117231 * C1671 +
             C117237 * C3130 + C119518 + C119518 + C117232 * C3138 +
             C117239 * C9390 + C119519 + C119519 + C117233 * C9402 +
             C117241 * C18738 + C119520 + C119520 + C117234 * C18742) *
                C152403 * C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C4281 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152631 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152324 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C4281) *
              C152627 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C4281 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152324) *
              C152613 +
          (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
             C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                C152403 * C51110 +
            (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
             C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                C152403 * C51111 +
            (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
             C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                C152403 * C51112) *
               C152324 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152604 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C4281 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C3275 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C4281 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C3275 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152631 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C4281) *
              C152627 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C4281 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C152613 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C4281 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C3275 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C4281) *
               C152282) *
              C152621 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C4281) *
               C3275 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C4281 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152282) *
              C152604 +
          (((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
             C117237 * C602 + C117253 + C117253 + C117232 * C626 +
             C117239 * C607 + C117254 + C117254 + C117233 * C631 +
             C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
                C152403 * C152164 * C4281 -
            (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
             C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
             C117237 * C607 + C117598 + C117598 + C117232 * C631 +
             C117235 * C602 + C117599 + C117599 + C117231 * C626) *
                C152403 * C152164 * C152324) *
               C3275 +
           ((C117235 * C1181 + C118074 + C118074 + C117231 * C1193 +
             C117237 * C1646 + C118075 + C118075 + C117232 * C1670 +
             C117239 * C3131 + C118076 + C118076 + C117233 * C3139 +
             C117241 * C18307 + C118077 + C118077 + C117234 * C18309) *
                C152403 * C152164 * C152324 -
            (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
             C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
             C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
             C117235 * C357 + C117429 + C117429 + C117231 * C381) *
                C152403 * C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C4281 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C152631 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152324 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C4281) *
              C152627 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C4281 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152324) *
              C152613 +
          ((C117235 * C2197 + C118934 + C118934 + C117231 * C2205 +
            C117237 * C8070 + C118935 + C118935 + C117232 * C8082 +
            C117239 * C10112 + C118936 + C118936 + C117233 * C10116 +
            C117241 * C61259 + C118937 + C118937 + C117234 * C61261) *
               C152403 * C152164 * C152324 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C152535 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C152282) *
                  C829 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                   C152237 * C152282 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C152535) *
                  C830 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152237 * C152535 -
               ((C101223 + C101224) * C152403 * C51112 +
                (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                   C152237 * C152282) *
                  C831 +
              ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
                (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
                 C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                    C152403 * C51112) *
                   C152237 * C152282 -
               ((C100405 + C100406) * C152403 * C51112 +
                (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                   C152237 * C152535) *
                  C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C1823 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C1824 +
               ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152237 * C1825 -
               ((C102565 + C102566) * C152403 * C51112 +
                (C102567 + C102568) * C152403 * C51111 +
                (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
                 C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                    C152403 * C51110) *
                   C152237 * C152587) *
                  C152521 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                   C152237 * C1824 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C1823 -
               ((C100709 + C100710) * C152403 * C51112 +
                (C100706 + C100705) * C152403 * C51111 +
                (C100704 + C100703) * C152403 * C51110) *
                   C152237 * C1825 +
               ((C102568 + C102567) * C152403 * C51110 +
                (C102566 + C102565) * C152403 * C51111 +
                (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
                 C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                    C152403 * C51112) *
                   C152237 * C152587) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C2359 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C2360 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C152580) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C2360 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C2359 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C152580) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C2360 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C2359 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C152580) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C2359 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C2360 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152535 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152535 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1823 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1824 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C1825 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C1824 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1823 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C1825 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C2359 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C2360 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C152580) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C2360 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C2359 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C152580) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C2360 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C2359 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C152580) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C2359 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C2360 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152535 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152282) *
              C829 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152535) *
              C830 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152535 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152282) *
              C831 +
          ((C117235 * C356 + C117734 + C117734 + C117231 * C380 +
            C117237 * C1182 + C117735 + C117735 + C117232 * C1194 +
            C117239 * C1645 + C117736 + C117736 + C117233 * C1669 +
            C117241 * C3132 + C117737 + C117737 + C117234 * C3140) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C1823 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C1824 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C1825 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C152237 * C152587) *
              C152521 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C1824 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C1823 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C1825 +
           (C117235 * C1469 + C118602 + C118602 + C117231 * C1485 +
            C117237 * C2198 + C118603 + C118603 + C117232 * C2206 +
            C117239 * C8069 + C118604 + C118604 + C117233 * C8081 +
            C117241 * C10113 + C118605 + C118605 + C117234 * C10117) *
               C152403 * C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C2359 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C2360 +
            (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
             C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
             C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
             C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
                C152403 * C152164 * C152580) *
               C152535 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C2360 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C2359 -
            (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
             C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
             C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
             C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
                C152403 * C152164 * C152580) *
               C152282) *
              C152521 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C2360 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C2359 -
            (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
             C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
             C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
             C117235 * C606 + C117595 + C117595 + C117231 * C630) *
                C152403 * C152164 * C152580) *
               C152535 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C2359 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C2360 +
            (C117235 * C1647 + C119517 + C119517 + C117231 * C1671 +
             C117237 * C3130 + C119518 + C119518 + C117232 * C3138 +
             C117239 * C9390 + C119519 + C119519 + C117233 * C9402 +
             C117241 * C18738 + C119520 + C119520 + C117234 * C18742) *
                C152403 * C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                  C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                     C152403 * C51110 +
                 (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                    C152536 -
                (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                 (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                  C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                     C152403 * C51110) *
                    C152324) *
                   C152535 +
               (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                  C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                     C152403 * C51110 +
                 (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                    C152324 -
                (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                 (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                  C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                     C152403 * C51110) *
                    C152536) *
                   C152282) *
                  C353 +
              ((((C101004 + C101003) * C152403 * C51110 +
                 (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                    C152324 -
                (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                 (C100398 + C100397) * C152403 * C51110) *
                    C152536) *
                   C152535 +
               (((C100702 + C100701) * C152403 * C51110 +
                 (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                    C152536 -
                ((C101761 + C101762) * C152403 * C51112 +
                 (C101760 + C101759) * C152403 * C51111 +
                 (C101758 + C101757) * C152403 * C51110) *
                    C152324) *
                   C152282) *
                  C354 +
              (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                 C100412 * C51112) *
                    C152536 -
                ((C101431 + C101432) * C152403 * C51112 +
                 (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                    C152324) *
                   C152535 +
               ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
                 (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
                  C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                     C152403 * C51112) *
                    C152324 -
                ((C101223 + C101224) * C152403 * C51112 +
                 (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                    C152536) *
                   C152282) *
                  C152571) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152536 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C152324) *
                  C1823 +
              (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                 C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                    C152403 * C51110 +
                (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                   C152324 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152536) *
                  C1824 +
              (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152536 -
               ((C102877 + C102878) * C152403 * C51112 +
                (C102879 + C102880) * C152403 * C51111 +
                (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
                 C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                    C152403 * C51110) *
                   C152324) *
                  C1825 +
              (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
                 C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                    C152403 * C51110 +
                (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
                 C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                    C152403 * C51111 +
                (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
                 C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                    C152403 * C51112) *
                   C152324 -
               ((C102565 + C102566) * C152403 * C51112 +
                (C102567 + C102568) * C152403 * C51111 +
                (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
                 C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                    C152403 * C51110) *
                   C152536) *
                  C152587) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2973 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C2975 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C152535 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C2974 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C2973 -
           ((C103959 + C103960) * C152403 * C51112 +
            (C103961 + C103962) * C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C2975 +
           ((C100338 * C3129 + C104373 + C104373 + C100336 * C3137 +
             C100340 * C9388 + C104374 + C104374 + C152482 * C9400) *
                C152403 * C51110 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C152403 * C51111 +
            (C100338 * C3131 + C104377 + C104377 + C100336 * C3139 +
             C100340 * C18307 + C104378 + C104378 + C152482 * C18309) *
                C152403 * C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            ((C110091 + C110092) * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
              C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                 C6260) *
                C152164 * C152324 -
            ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             (C102880 + C102879) * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             (C102568 + C102567) * C6260) *
                C152164 * C152536 -
            ((C100340 * C8069 + C103078 + C103078 + C152482 * C8081 +
              C100338 * C2198 + C103077 + C103077 + C100336 * C2206) *
                 C6260 +
             (C102879 + C102880) * C6259 + (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C152536 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C152535 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C1823 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152536) *
              C1824 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152536 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C1825 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2973 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C2975 -
           ((C112718 + C112719) * C6260 + (C112720 + C112721) * C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C152535 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C2974 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C2973 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C2975 +
           ((C112721 + C112720) * C6258 + (C112719 + C112718) * C6259 +
            (C100338 * C10112 + C112708 + C112708 + C100336 * C10116 +
             C100340 * C61259 + C112709 + C112709 + C152482 * C61261) *
                C6260) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152536 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152535 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152536) *
               C152282) *
              C353 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152536) *
               C152535 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152536 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152282) *
              C354 +
          (((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
             C117237 * C602 + C117253 + C117253 + C117232 * C626 +
             C117239 * C607 + C117254 + C117254 + C117233 * C631 +
             C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
                C152403 * C152164 * C152536 -
            (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
             C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
             C117237 * C607 + C117598 + C117598 + C117232 * C631 +
             C117235 * C602 + C117599 + C117599 + C117231 * C626) *
                C152403 * C152164 * C152324) *
               C152535 +
           ((C117235 * C1181 + C118074 + C118074 + C117231 * C1193 +
             C117237 * C1646 + C118075 + C118075 + C117232 * C1670 +
             C117239 * C3131 + C118076 + C118076 + C117233 * C3139 +
             C117241 * C18307 + C118077 + C118077 + C117234 * C18309) *
                C152403 * C152164 * C152324 -
            (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
             C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
             C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
             C117235 * C357 + C117429 + C117429 + C117231 * C381) *
                C152403 * C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152536 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C1823 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152324 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152536) *
              C1824 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152536 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152324) *
              C1825 +
          ((C117235 * C2197 + C118934 + C118934 + C117231 * C2205 +
            C117237 * C8070 + C118935 + C118935 + C117232 * C8082 +
            C117239 * C10112 + C118936 + C118936 + C117233 * C10116 +
            C117241 * C61259 + C118937 + C118937 + C117234 * C61261) *
               C152403 * C152164 * C152324 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C2973 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C2974 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C2975 -
           (C117241 * C17995 + C119315 + C119315 + C117234 * C18003 +
            C117239 * C17994 + C119316 + C119316 + C117233 * C18002 +
            C117237 * C2599 + C119317 + C119317 + C117232 * C2615 +
            C117235 * C2598 + C119318 + C119318 + C117231 * C2614) *
               C152403 * C152164 * C152593) *
              C152535 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C2974 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C2973 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C2975 +
           (C117235 * C3129 + C119785 + C119785 + C117231 * C3137 +
            C117237 * C9388 + C119786 + C119786 + C117232 * C9400 +
            C117239 * C18737 + C119787 + C119787 + C117233 * C18741 +
            C117241 * C67864 + C119788 + C119788 + C117234 * C67866) *
               C152403 * C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                   C152403 * C51110 +
               (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                  C152237 * C152219 * C129 -
              (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
               (C100398 + C100397) * C152403 * C51110) *
                  C152237 * C152219 * C130 +
              (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
               C100412 * C51112) *
                  C152237 * C152219 * C131 -
              ((C100405 + C100406) * C152403 * C51112 +
               (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                  C152237 * C152219 * C132 +
              (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
               (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
                C100340 * C975 + C100376 + C100376 + C152482 * C977) *
                   C152403 * C51112) *
                  C152237 * C152219 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C152624 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C152608 +
               ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152237 * C152577) *
                  C353 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 +
                (C100707 + C100708) * C152403 * C51112) *
                   C152237 * C152608 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C152624 -
               ((C100709 + C100710) * C152403 * C51112 +
                (C100706 + C100705) * C152403 * C51111 +
                (C100704 + C100703) * C152403 * C51110) *
                   C152237 * C152577) *
                  C354 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152237 * C152624 -
               ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
                 C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                    C152403 * C51112 +
                (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                   C152237 * C152608 +
               (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
                (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
                 C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                    C152403 * C51112) *
                   C152237 * C152577) *
                  C152571) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152625 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C152610 +
               ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
                 C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                    C152403 * C51110 +
                (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                   C152580) *
                  C152219 * C353 +
              (((C101004 + C101003) * C152403 * C51110 +
                (C101002 + C101001) * C152403 * C51111 +
                (C101009 + C101010) * C152403 * C51112) *
                   C152610 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152625 -
               ((C101011 + C101012) * C152403 * C51112 +
                (C101008 + C101007) * C152403 * C51111 +
                (C101006 + C101005) * C152403 * C51110) *
                   C152580) *
                  C152219 * C354 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152625 -
               ((C100340 * C610 + C100973 + C100973 + C152482 * C634 +
                 C100338 * C609 + C100974 + C100974 + C100336 * C633) *
                    C152403 * C51112 +
                (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                   C152610 +
               (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
                (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
                 C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                    C152403 * C51112) *
                   C152580) *
                  C152219 * C152571) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C1373 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C1374 +
               ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152237 * C152577) *
                  C152621 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                   C152237 * C1374 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C1373 -
               ((C100709 + C100710) * C152403 * C51112 +
                (C100706 + C100705) * C152403 * C51111 +
                (C100704 + C100703) * C152403 * C51110) *
                   C152237 * C152577) *
                  C152604 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152237 * C1373 -
               ((C101223 + C101224) * C152403 * C51112 +
                (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                   C152237 * C1374 +
               (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
                (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
                 C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                    C152403 * C51112) *
                   C152237 * C152577) *
                  C152571) -
         0.25 * std::pow(Pi, 2.5) *
             (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                   C152403 * C51110 +
               (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                  C152237 * C1461 -
              (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
               (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                   C152403 * C51110) *
                  C152237 * C1462 +
              ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                   C152403 * C51110 +
               (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                  C152237 * C1463 -
              ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
                C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
                   C152403 * C51112 +
               (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
                C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
                   C152403 * C51111 +
               (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
                C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                   C152403 * C51110) *
                  C152237 * C1464 +
              ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
                C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                   C152403 * C51110 +
               (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
                C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
                   C152403 * C51111 +
               (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
                C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                   C152403 * C51112) *
                  C152237 * C1465) *
             C152191 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152625 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C152610 +
               ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
                 C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                    C152403 * C51110 +
                (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                   C152580) *
                  C1373 +
              (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                 C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                    C152403 * C51110 +
                (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                   C152610 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152625 -
               ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
                 C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                    C152403 * C51112 +
                (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
                 C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                    C152403 * C51111 +
                (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
                 C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                    C152403 * C51110) *
                   C152580) *
                  C1374 +
              (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152625 -
               ((C100340 * C1655 + C102341 + C102341 + C152482 * C1679 +
                 C100338 * C1650 + C102342 + C102342 + C100336 * C1674) *
                    C152403 * C51112 +
                (C100340 * C1654 + C102343 + C102343 + C152482 * C1678 +
                 C100338 * C1651 + C102344 + C102344 + C100336 * C1675) *
                    C152403 * C51111 +
                (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
                 C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                    C152403 * C51110) *
                   C152610 +
               ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
                 C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                    C152403 * C51110 +
                (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
                 C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                    C152403 * C51111 +
                (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
                 C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                    C152403 * C51112) *
                   C152580) *
                  C152577) *
             C152191 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C2359 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C2360 +
               ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
                 C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                    C152403 * C51110 +
                (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                   C152580) *
                  C152219 * C152621 +
              (((C101004 + C101003) * C152403 * C51110 +
                (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                   C2360 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C2359 -
               ((C101011 + C101012) * C152403 * C51112 +
                (C101008 + C101007) * C152403 * C51111 +
                (C101006 + C101005) * C152403 * C51110) *
                   C152580) *
                  C152219 * C152604 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C2359 -
               ((C101431 + C101432) * C152403 * C51112 +
                (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                   C2360 +
               (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
                (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
                 C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                    C152403 * C51112) *
                   C152580) *
                  C152219 * C152571) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C2359 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C2360 +
               ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
                 C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                    C152403 * C51110 +
                (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                   C152580) *
                  C152624 +
              (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                 C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                    C152403 * C51110 +
                (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                   C2360 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C2359 -
               ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
                 C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                    C152403 * C51112 +
                (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
                 C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                    C152403 * C51111 +
                (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
                 C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                    C152403 * C51110) *
                   C152580) *
                  C152608 +
              (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C2359 -
               ((C102877 + C102878) * C152403 * C51112 +
                (C102879 + C102880) * C152403 * C51111 +
                (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
                 C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                    C152403 * C51110) *
                   C2360 +
               ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
                 C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                    C152403 * C51110 +
                (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
                 C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                    C152403 * C51111 +
                (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
                 C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                    C152403 * C51112) *
                   C152580) *
                  C152577) *
             C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C2590 -
          (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
           (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
            C100338 * C604 + C100946 + C100946 + C100336 * C628) *
               C152403 * C51110) *
              C2591 +
          ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
            C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
               C152403 * C51110 +
           (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
              C2592 -
          ((C100340 * C2601 + C103639 + C103639 + C152482 * C2617 +
            C100338 * C2596 + C103640 + C103640 + C100336 * C2612) *
               C152403 * C51112 +
           (C100340 * C2600 + C103641 + C103641 + C152482 * C2616 +
            C100338 * C2597 + C103642 + C103642 + C100336 * C2613) *
               C152403 * C51111 +
           (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
            C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
               C152403 * C51110) *
              C2593 +
          ((C100338 * C2599 + C103645 + C103645 + C100336 * C2615 +
            C100340 * C17994 + C103646 + C103646 + C152482 * C18002) *
               C152403 * C51110 +
           (C100338 * C2600 + C103647 + C103647 + C100336 * C2616 +
            C100340 * C17993 + C103648 + C103648 + C152482 * C18001) *
               C152403 * C51111 +
           (C100338 * C2601 + C103649 + C103649 + C100336 * C2617 +
            C100340 * C18522 + C103650 + C103650 + C152482 * C18524) *
               C152403 * C51112) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C100338 * C1648 + C102340 + C102340 + C100336 * C1672 +
             C100340 * C3129 + C102339 + C102339 + C152482 * C3137) *
                C6259 +
            (C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C6260) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152610 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152625 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152625 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152610 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C1373 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            (C110722 + C110723) * C6260) *
               C152164 * C152610 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152625 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C1374 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152625 -
           ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
             C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                C6260 +
            (C110723 + C110722) * C6259 + C110679 * C6258) *
               C152164 * C152610 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C2360 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C2359 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C2359 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C2360 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152624 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C2360 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C2359 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C152608 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C2359 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C2360 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C2590 -
          (C110679 * C6260 + (C110093 + C110094) * C6259 +
           (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
            C100338 * C604 + C100946 + C100946 + C100336 * C628) *
               C6258) *
              C152164 * C2591 +
          ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
            C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
               C6258 +
           (C110718 + C110719) * C6259 + C110726 * C6260) *
              C152164 * C2592 -
          ((C100340 * C9389 + C112002 + C112002 + C152482 * C9401 +
            C100338 * C9387 + C112003 + C112003 + C100336 * C9399) *
               C6260 +
           (C100340 * C9388 + C104374 + C104374 + C152482 * C9400 +
            C100338 * C3129 + C104373 + C104373 + C100336 * C3137) *
               C6259 +
           (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
            C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
               C6258) *
              C152164 * C2593 +
          ((C100338 * C2599 + C103645 + C103645 + C100336 * C2615 +
            C100340 * C17994 + C103646 + C103646 + C152482 * C18002) *
               C6258 +
           (C100338 * C9388 + C112004 + C112004 + C100336 * C9400 +
            C100340 * C18737 + C112005 + C112005 + C152482 * C18741) *
               C6259 +
           (C100338 * C9389 + C112006 + C112006 + C100336 * C9401 +
            C100340 * C68548 + C112007 + C112007 + C152482 * C68550) *
               C6260) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C152219 * C129 -
          (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
           C117239 * C606 + C117249 + C117249 + C117233 * C630 +
           C117237 * C603 + C117250 + C117250 + C117232 * C627 +
           C117235 * C137 + C117251 + C117251 + C117231 * C153) *
              C152403 * C152164 * C152237 * C152219 * C130 +
          (C117235 * C138 + C117252 + C117252 + C117231 * C154 +
           C117237 * C602 + C117253 + C117253 + C117232 * C626 +
           C117239 * C607 + C117254 + C117254 + C117233 * C631 +
           C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
              C152403 * C152164 * C152237 * C152219 * C131 -
          (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
           C117239 * C608 + C117257 + C117257 + C117233 * C632 +
           C117237 * C601 + C117258 + C117258 + C117232 * C625 +
           C117235 * C139 + C117259 + C117259 + C117231 * C155) *
              C152403 * C152164 * C152237 * C152219 * C132 +
          (C117235 * C140 + C117260 + C117260 + C117231 * C156 +
           C117237 * C609 + C117261 + C117261 + C117232 * C633 +
           C117239 * C610 + C117262 + C117262 + C117233 * C634 +
           C117241 * C2977 + C117263 + C117263 + C117234 * C2979) *
              C152403 * C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C353 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152608 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C354 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152625 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152610 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C152219 * C353 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152610 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152625 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C152580) *
              C152219 * C354 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152625 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152610 +
           (C117235 * C607 + C117600 + C117600 + C117231 * C631 +
            C117237 * C2596 + C117601 + C117601 + C117232 * C2612 +
            C117239 * C2601 + C117602 + C117602 + C117233 * C2617 +
            C117241 * C18522 + C117603 + C117603 + C117234 * C18524) *
               C152403 * C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C152621 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C1374 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C152604 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C1461 -
          (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
           C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
           C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
           C117235 * C359 + C117413 + C117413 + C117231 * C383) *
              C152403 * C152164 * C152237 * C1462 +
          (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
           C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
           C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
           C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
              C152403 * C152164 * C152237 * C1463 -
          (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
           C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
           C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
           C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
              C152403 * C152164 * C152237 * C1464 +
          (C117235 * C1471 + C118310 + C118310 + C117231 * C1487 +
           C117237 * C8072 + C118311 + C118311 + C117232 * C8084 +
           C117239 * C8073 + C118312 + C118312 + C117233 * C8085 +
           C117241 * C61717 + C118313 + C118313 + C117234 * C61719) *
              C152403 * C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152625 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152610 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C1373 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152610 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152625 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C152580) *
              C1374 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152625 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152610 +
           (C117235 * C1653 + C118468 + C118468 + C117231 * C1677 +
            C117237 * C9387 + C118469 + C118469 + C117232 * C9399 +
            C117239 * C9389 + C118470 + C118470 + C117233 * C9401 +
            C117241 * C68548 + C118471 + C118471 + C117234 * C68550) *
               C152403 * C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C2359 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C2360 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C152219 * C152621 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C2360 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C2359 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C152580) *
              C152219 * C152604 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C2359 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C2360 +
           (C117235 * C607 + C117600 + C117600 + C117231 * C631 +
            C117237 * C2596 + C117601 + C117601 + C117232 * C2612 +
            C117239 * C2601 + C117602 + C117602 + C117233 * C2617 +
            C117241 * C18522 + C117603 + C117603 + C117234 * C18524) *
               C152403 * C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C2359 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C2360 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C152624 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C2360 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C2359 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C152580) *
              C152608 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C2359 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C2360 +
           (C117235 * C1653 + C118468 + C118468 + C117231 * C1677 +
            C117237 * C9387 + C118469 + C118469 + C117232 * C9399 +
            C117239 * C9389 + C118470 + C118470 + C117233 * C9401 +
            C117241 * C68548 + C118471 + C118471 + C117234 * C68550) *
               C152403 * C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C2590 -
          (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
           C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
           C117237 * C605 + C117582 + C117582 + C117232 * C629 +
           C117235 * C604 + C117583 + C117583 + C117231 * C628) *
              C152403 * C152164 * C2591 +
          (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
           C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
           C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
           C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
              C152403 * C152164 * C2592 -
          (C117241 * C17995 + C119315 + C119315 + C117234 * C18003 +
           C117239 * C17994 + C119316 + C119316 + C117233 * C18002 +
           C117237 * C2599 + C119317 + C119317 + C117232 * C2615 +
           C117235 * C2598 + C119318 + C119318 + C117231 * C2614) *
              C152403 * C152164 * C2593 +
          (C117235 * C2599 + C119319 + C119319 + C117231 * C2615 +
           C117237 * C17994 + C119320 + C119320 + C117232 * C18002 +
           C117239 * C17995 + C119321 + C119321 + C117233 * C18003 +
           C117241 * C119311 + C119322 + C119322 + C117234 * C119313) *
              C152403 * C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152536 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C152324) *
                  C152219 * C829 +
              (((C101004 + C101003) * C152403 * C51110 +
                (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                   C152324 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152536) *
                  C152219 * C830 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152536 -
               ((C101431 + C101432) * C152403 * C51112 +
                (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                   C152324) *
                  C152219 * C831 +
              ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
                (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
                 C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                    C152403 * C51112) *
                   C152324 -
               ((C100405 + C100406) * C152403 * C51112 +
                (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                   C152536) *
                  C152219 * C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                  C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                     C152403 * C51110 +
                 (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                    C152536 -
                (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                 (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                  C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                     C152403 * C51110) *
                    C152324) *
                   C1373 +
               (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                  C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                     C152403 * C51110 +
                 (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                    C152324 -
                (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                 (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                  C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                     C152403 * C51110) *
                    C152536) *
                   C1374 +
               (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                  C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                     C152403 * C51110 +
                 (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                    C152536 -
                ((C102877 + C102878) * C152403 * C51112 +
                 (C102879 + C102880) * C152403 * C51111 +
                 (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
                  C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                     C152403 * C51110) *
                    C152324) *
                   C152577) *
                  C152521 +
              ((((C101004 + C101003) * C152403 * C51110 +
                 (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                    C152324 -
                (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                 (C100398 + C100397) * C152403 * C51110) *
                    C152536) *
                   C1373 +
               (((C100702 + C100701) * C152403 * C51110 +
                 (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                    C152536 -
                ((C101761 + C101762) * C152403 * C51112 +
                 (C101760 + C101759) * C152403 * C51111 +
                 (C101758 + C101757) * C152403 * C51110) *
                    C152324) *
                   C1374 +
               (((C102880 + C102879) * C152403 * C51110 +
                 (C102878 + C102877) * C152403 * C51111 +
                 (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
                  C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                     C152403 * C51112) *
                    C152324 -
                ((C100709 + C100710) * C152403 * C51112 +
                 (C100706 + C100705) * C152403 * C51111 +
                 (C100704 + C100703) * C152403 * C51110) *
                    C152536) *
                   C152577) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2973 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C2975 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C152219 * C152521 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C2974 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C2973 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C2975 +
           ((C104178 + C104177) * C152403 * C51110 +
            (C104176 + C104175) * C152403 * C51111 +
            (C100338 * C2595 + C104165 + C104165 + C100336 * C2611 +
             C100340 * C2602 + C104166 + C104166 + C152482 * C2618) *
                C152403 * C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152536 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C1373 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C110722 + C110723) * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C1374 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C152536 -
            ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
              C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                 C6260 +
             (C110723 + C110722) * C6259 + C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C1373 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C1374 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2973 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C2975 -
           ((C100340 * C9389 + C112002 + C112002 + C152482 * C9401 +
             C100338 * C9387 + C112003 + C112003 + C100336 * C9399) *
                C6260 +
            (C100340 * C9388 + C104374 + C104374 + C152482 * C9400 +
             C100338 * C3129 + C104373 + C104373 + C100336 * C3137) *
                C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C152219 * C152521 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C2974 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C2973 -
           ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
            (C101006 + C101005) * C6258) *
               C152164 * C2975 +
           ((C104178 + C104177) * C6258 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C6259 +
            (C100338 * C9386 + C112504 + C112504 + C100336 * C9398 +
             C100340 * C9391 + C112505 + C112505 + C152482 * C9403) *
                C6260) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152536 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C152219 * C829 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152324 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152536) *
              C152219 * C830 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152536 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152324) *
              C152219 * C831 +
          ((C117235 * C601 + C117868 + C117868 + C117231 * C625 +
            C117237 * C608 + C117869 + C117869 + C117232 * C632 +
            C117239 * C2595 + C117870 + C117870 + C117233 * C2611 +
            C117241 * C2602 + C117871 + C117871 + C117234 * C2618) *
               C152403 * C152164 * C152324 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152536 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C1373 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152536) *
               C1374 +
           ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
             C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
             C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
             C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
                C152403 * C152164 * C152536 -
            (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
             C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
             C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
             C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
                C152403 * C152164 * C152324) *
               C152577) *
              C152521 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152536) *
               C1373 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152536 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C1374 +
           ((C117235 * C1651 + C118800 + C118800 + C117231 * C1675 +
             C117237 * C1654 + C118801 + C118801 + C117232 * C1678 +
             C117239 * C9386 + C118802 + C118802 + C117233 * C9398 +
             C117241 * C9391 + C118803 + C118803 + C117234 * C9403) *
                C152403 * C152164 * C152324 -
            (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
             C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
             C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
             C117235 * C361 + C117425 + C117425 + C117231 * C385) *
                C152403 * C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C2973 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C2974 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C2975 -
           (C117241 * C17995 + C119315 + C119315 + C117234 * C18003 +
            C117239 * C17994 + C119316 + C119316 + C117233 * C18002 +
            C117237 * C2599 + C119317 + C119317 + C117232 * C2615 +
            C117235 * C2598 + C119318 + C119318 + C117231 * C2614) *
               C152403 * C152164 * C152593) *
              C152219 * C152521 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C2974 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C2973 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C2975 +
           (C117235 * C2597 + C119651 + C119651 + C117231 * C2613 +
            C117237 * C2600 + C119652 + C119652 + C117232 * C2616 +
            C117239 * C17993 + C119653 + C119653 + C117233 * C18001 +
            C117241 * C17996 + C119654 + C119654 + C117234 * C18004) *
               C152403 * C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C152219 * C129 -
          (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
           (C100398 + C100397) * C152403 * C51110) *
              C152237 * C152219 * C130 +
          (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
           C100412 * C51112) *
              C152237 * C152219 * C131 -
          ((C100405 + C100406) * C152403 * C51112 +
           (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
              C152237 * C152219 * C132 +
          (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
           (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
            C100340 * C975 + C100376 + C100376 + C152482 * C977) *
               C152403 * C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152624 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152608 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 +
            (C100707 + C100708) * C152403 * C51112) *
               C152237 * C152608 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152624 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152624 -
           ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
             C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152608 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2359 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C2360 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C2359 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152580) *
              C152219 * C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C2359 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C2360 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2359 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152624 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C2360 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C2359 -
           ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
             C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                C152403 * C51112 +
            (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
             C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152580) *
              C152608 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C2359 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C2360 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C2359 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C2359 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C2360 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152624 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C2360 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C2359 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C152608 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C2359 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C2360 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C152219 * C129 -
          (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
           C117239 * C606 + C117249 + C117249 + C117233 * C630 +
           C117237 * C603 + C117250 + C117250 + C117232 * C627 +
           C117235 * C137 + C117251 + C117251 + C117231 * C153) *
              C152403 * C152164 * C152237 * C152219 * C130 +
          (C117235 * C138 + C117252 + C117252 + C117231 * C154 +
           C117237 * C602 + C117253 + C117253 + C117232 * C626 +
           C117239 * C607 + C117254 + C117254 + C117233 * C631 +
           C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
              C152403 * C152164 * C152237 * C152219 * C131 -
          (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
           C117239 * C608 + C117257 + C117257 + C117233 * C632 +
           C117237 * C601 + C117258 + C117258 + C117232 * C625 +
           C117235 * C139 + C117259 + C117259 + C117231 * C155) *
              C152403 * C152164 * C152237 * C152219 * C132 +
          (C117235 * C140 + C117260 + C117260 + C117231 * C156 +
           C117237 * C609 + C117261 + C117261 + C117232 * C633 +
           C117239 * C610 + C117262 + C117262 + C117233 * C634 +
           C117241 * C2977 + C117263 + C117263 + C117234 * C2979) *
              C152403 * C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C353 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152608 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C354 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C152621 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C1374 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C152604 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C1461 -
          (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
           C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
           C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
           C117235 * C359 + C117413 + C117413 + C117231 * C383) *
              C152403 * C152164 * C152237 * C1462 +
          (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
           C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
           C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
           C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
              C152403 * C152164 * C152237 * C1463 -
          (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
           C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
           C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
           C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
              C152403 * C152164 * C152237 * C1464 +
          (C117235 * C1471 + C118310 + C118310 + C117231 * C1487 +
           C117237 * C8072 + C118311 + C118311 + C117232 * C8084 +
           C117239 * C8073 + C118312 + C118312 + C117233 * C8085 +
           C117241 * C61717 + C118313 + C118313 + C117234 * C61719) *
              C152403 * C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C2359 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C2360 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C152219 * C152621 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C2360 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C2359 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C152580) *
              C152219 * C152604 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C2359 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C2360 +
           (C117235 * C607 + C117600 + C117600 + C117231 * C631 +
            C117237 * C2596 + C117601 + C117601 + C117232 * C2612 +
            C117239 * C2601 + C117602 + C117602 + C117233 * C2617 +
            C117241 * C18522 + C117603 + C117603 + C117234 * C18524) *
               C152403 * C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C2359 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C2360 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C152624 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C2360 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C2359 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C152580) *
              C152608 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C2359 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C2360 +
           (C117235 * C1653 + C118468 + C118468 + C117231 * C1677 +
            C117237 * C9387 + C118469 + C118469 + C117232 * C9399 +
            C117239 * C9389 + C118470 + C118470 + C117233 * C9401 +
            C117241 * C68548 + C118471 + C118471 + C117234 * C68550) *
               C152403 * C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C4281 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C152535 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C4281 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C152535 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C4281 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152535 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C4281) *
               C152282) *
              C152196 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C4281) *
               C152535 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C4281 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152282) *
              C152205 +
          (((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
             C117237 * C602 + C117253 + C117253 + C117232 * C626 +
             C117239 * C607 + C117254 + C117254 + C117233 * C631 +
             C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
                C152403 * C152164 * C4281 -
            (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
             C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
             C117237 * C607 + C117598 + C117598 + C117232 * C631 +
             C117235 * C602 + C117599 + C117599 + C117231 * C626) *
                C152403 * C152164 * C152324) *
               C152535 +
           ((C117235 * C1181 + C118074 + C118074 + C117231 * C1193 +
             C117237 * C1646 + C118075 + C118075 + C117232 * C1670 +
             C117239 * C3131 + C118076 + C118076 + C117233 * C3139 +
             C117241 * C18307 + C118077 + C118077 + C117234 * C18309) *
                C152403 * C152164 * C152324 -
            (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
             C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
             C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
             C117235 * C357 + C117429 + C117429 + C117231 * C381) *
                C152403 * C152164 * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152320 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C4953) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152327 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152320 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C4953) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152327 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152320 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C4953) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152320 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152327 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152320 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C4953) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152327 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152320 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C4953) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152327 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152320 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C4953) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152320 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152327 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152320 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152327 +
            (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
             C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
             C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
             C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
                C152403 * C152164 * C4953) *
               C152535 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152327 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152320 -
            (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
             C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
             C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
             C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
                C152403 * C152164 * C4953) *
               C152282) *
              C3415 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152327 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152320 -
            (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
             C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
             C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
             C117235 * C606 + C117595 + C117595 + C117231 * C630) *
                C152403 * C152164 * C4953) *
               C152535 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152320 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152327 +
            (C117235 * C1647 + C119517 + C119517 + C117231 * C1671 +
             C117237 * C3130 + C119518 + C119518 + C117232 * C3138 +
             C117239 * C9390 + C119519 + C119519 + C117233 * C9402 +
             C117241 * C18738 + C119520 + C119520 + C117234 * C18742) *
                C152403 * C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C4281 -
               (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                 C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                    C152403 * C51110) *
                   C152324) *
                  C152219 * C152630 +
              (((C101004 + C101003) * C152403 * C51110 +
                (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                   C152324 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C4281) *
                  C152219 * C152623 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C4281 -
               ((C101431 + C101432) * C152403 * C51112 +
                (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                   C152324) *
                  C152219 * C152606 +
              ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
                (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
                 C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                    C152403 * C51112) *
                   C152324 -
               ((C100405 + C100406) * C152403 * C51112 +
                (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                   C4281) *
                  C152219 * C152581) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                  C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                     C152403 * C51110 +
                 (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                    C4281 -
                (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
                 (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
                  C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                     C152403 * C51110) *
                    C152324) *
                   C152624 +
               (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
                  C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                     C152403 * C51110 +
                 (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                    C152324 -
                (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                 (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                  C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                     C152403 * C51110) *
                    C4281) *
                   C152608 +
               (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                  C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                     C152403 * C51110 +
                 (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                    C4281 -
                ((C102877 + C102878) * C152403 * C51112 +
                 (C102879 + C102880) * C152403 * C51111 +
                 (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
                  C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                     C152403 * C51110) *
                    C152324) *
                   C152577) *
                  C3415 +
              ((((C101004 + C101003) * C152403 * C51110 +
                 (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                    C152324 -
                (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                 (C100398 + C100397) * C152403 * C51110) *
                    C4281) *
                   C152624 +
               (((C100702 + C100701) * C152403 * C51110 +
                 (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                    C4281 -
                ((C101761 + C101762) * C152403 * C51112 +
                 (C101760 + C101759) * C152403 * C51111 +
                 (C101758 + C101757) * C152403 * C51110) *
                    C152324) *
                   C152608 +
               (((C102880 + C102879) * C152403 * C51110 +
                 (C102878 + C102877) * C152403 * C51111 +
                 (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
                  C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                     C152403 * C51112) *
                    C152324 -
                ((C100709 + C100710) * C152403 * C51112 +
                 (C100706 + C100705) * C152403 * C51111 +
                 (C100704 + C100703) * C152403 * C51110) *
                    C4281) *
                   C152577) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152632 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152616 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C152219 * C3415 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152629 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152632 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152616 +
           ((C104178 + C104177) * C152403 * C51110 +
            (C104176 + C104175) * C152403 * C51111 +
            (C100338 * C2595 + C104165 + C104165 + C100336 * C2611 +
             C100340 * C2602 + C104166 + C104166 + C152482 * C2618) *
                C152403 * C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C4281 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152624 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152608 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C4281 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152624 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152608 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152632 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152616 -
           ((C112718 + C112719) * C6260 + (C112720 + C112721) * C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C152219 * C3415 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152629 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152632 -
           ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
            (C101006 + C101005) * C6258) *
               C152164 * C152616 +
           ((C104178 + C104177) * C6258 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C6259 +
            (C100338 * C9386 + C112504 + C112504 + C100336 * C9398 +
             C100340 * C9391 + C112505 + C112505 + C152482 * C9403) *
                C6260) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C4281 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C152219 * C152630 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152324 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C4281) *
              C152219 * C152623 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C4281 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152324) *
              C152219 * C152606 +
          ((C117235 * C601 + C117868 + C117868 + C117231 * C625 +
            C117237 * C608 + C117869 + C117869 + C117232 * C632 +
            C117239 * C2595 + C117870 + C117870 + C117233 * C2611 +
            C117241 * C2602 + C117871 + C117871 + C117234 * C2618) *
               C152403 * C152164 * C152324 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C4281 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152624 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C4281) *
               C152608 +
           ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
             C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
             C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
             C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
                C152403 * C152164 * C4281 -
            (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
             C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
             C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
             C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
                C152403 * C152164 * C152324) *
               C152577) *
              C3415 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C4281) *
               C152624 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C4281 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152608 +
           ((C117235 * C1651 + C118800 + C118800 + C117231 * C1675 +
             C117237 * C1654 + C118801 + C118801 + C117232 * C1678 +
             C117239 * C9386 + C118802 + C118802 + C117233 * C9398 +
             C117241 * C9391 + C118803 + C118803 + C117234 * C9403) *
                C152403 * C152164 * C152324 -
            (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
             C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
             C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
             C117235 * C361 + C117425 + C117425 + C117231 * C385) *
                C152403 * C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152632 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152629 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152616 -
           (C117241 * C17995 + C119315 + C119315 + C117234 * C18003 +
            C117239 * C17994 + C119316 + C119316 + C117233 * C18002 +
            C117237 * C2599 + C119317 + C119317 + C117232 * C2615 +
            C117235 * C2598 + C119318 + C119318 + C117231 * C2614) *
               C152403 * C152164 * C152593) *
              C152219 * C3415 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152629 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152632 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C152616 +
           (C117235 * C2597 + C119651 + C119651 + C117231 * C2613 +
            C117237 * C2600 + C119652 + C119652 + C117232 * C2616 +
            C117239 * C17993 + C119653 + C119653 + C117233 * C18001 +
            C117241 * C17996 + C119654 + C119654 + C117234 * C18004) *
               C152403 * C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152320 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C4953) *
              C152219 * C152196 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152327 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152320 -
           ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
            (C101006 + C101005) * C6258) *
               C152164 * C4953) *
              C152219 * C152205 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152320 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152327 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152320 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C4953) *
              C152219 * C152196 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152327 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152320 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C4953) *
              C152219 * C152205 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152320 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152327 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152320 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152327 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C4953) *
              C152219 * C152196 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152327 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152320 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C4953) *
              C152219 * C152205 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152320 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152327 +
           (C117235 * C607 + C117600 + C117600 + C117231 * C631 +
            C117237 * C2596 + C117601 + C117601 + C117232 * C2612 +
            C117239 * C2601 + C117602 + C117602 + C117233 * C2617 +
            C117241 * C18522 + C117603 + C117603 + C117234 * C18524) *
               C152403 * C152164 * C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152624 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152608 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C4281 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152624 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152608 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C4281 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152324 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C4281) *
              C152219 * C152623 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C4281 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152324) *
              C152219 * C152606 +
          ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
            (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
             C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                C152403 * C51112) *
               C152324 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C4281 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152624 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152608 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C4281 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152624 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152608 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C4281 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C152219 * C152630 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152324 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C4281) *
              C152219 * C152623 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C4281 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152324) *
              C152219 * C152606 +
          ((C117235 * C601 + C117868 + C117868 + C117231 * C625 +
            C117237 * C608 + C117869 + C117869 + C117232 * C632 +
            C117239 * C2595 + C117870 + C117870 + C117233 * C2611 +
            C117241 * C2602 + C117871 + C117871 + C117234 * C2618) *
               C152403 * C152164 * C152324 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C4281 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152624 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C4281) *
               C152608 +
           ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
             C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
             C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
             C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
                C152403 * C152164 * C4281 -
            (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
             C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
             C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
             C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
                C152403 * C152164 * C152324) *
               C152577) *
              C3415 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C4281) *
               C152624 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C4281 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152608 +
           ((C117235 * C1651 + C118800 + C118800 + C117231 * C1675 +
             C117237 * C1654 + C118801 + C118801 + C117232 * C1678 +
             C117239 * C9386 + C118802 + C118802 + C117233 * C9398 +
             C117241 * C9391 + C118803 + C118803 + C117234 * C9403) *
                C152403 * C152164 * C152324 -
            (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
             C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
             C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
             C117235 * C361 + C117425 + C117425 + C117231 * C385) *
                C152403 * C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1823 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1824 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C1825 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1824 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1823 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C1825 +
           ((C102568 + C102567) * C152403 * C51110 +
            (C102566 + C102565) * C152403 * C51111 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C152403 * C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152535 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152282 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152535) *
              C830 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152535 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152282) *
              C831 +
          ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152403 * C51112) *
               C152237 * C152282 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152535 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152535 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1823 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1824 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C1825 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C1824 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1823 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C1825 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152535 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152282) *
              C829 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152535) *
              C830 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152535 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152282) *
              C831 +
          ((C117235 * C356 + C117734 + C117734 + C117231 * C380 +
            C117237 * C1182 + C117735 + C117735 + C117232 * C1194 +
            C117239 * C1645 + C117736 + C117736 + C117233 * C1669 +
            C117241 * C3132 + C117737 + C117737 + C117234 * C3140) *
               C152403 * C152164 * C152237 * C152282 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C1823 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C1824 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C1825 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C152237 * C152587) *
              C152521 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C1824 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C1823 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C1825 +
           (C117235 * C1469 + C118602 + C118602 + C117231 * C1485 +
            C117237 * C2198 + C118603 + C118603 + C117232 * C2206 +
            C117239 * C8069 + C118604 + C118604 + C117233 * C8081 +
            C117241 * C10113 + C118605 + C118605 + C117234 * C10117) *
               C152403 * C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152536 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C1823 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152324 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152536) *
              C1824 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152536 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152324) *
              C1825 +
          (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
             C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                C152403 * C51110 +
            (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
             C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                C152403 * C51111 +
            (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
             C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                C152403 * C51112) *
               C152324 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C354 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C152536 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C152535 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            ((C110091 + C110092) * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
              C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                 C6260) *
                C152164 * C152324 -
            ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             (C102880 + C102879) * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             (C102568 + C102567) * C6260) *
                C152164 * C152536 -
            ((C100340 * C8069 + C103078 + C103078 + C152482 * C8081 +
              C100338 * C2198 + C103077 + C103077 + C100336 * C2206) *
                 C6260 +
             (C102879 + C102880) * C6259 + (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C152536 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C152535 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C1823 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152536) *
              C1824 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152536 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C1825 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152536 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C152535 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152536) *
               C152282) *
              C353 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152536) *
               C152535 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152536 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C152282) *
              C354 +
          (((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
             C117237 * C602 + C117253 + C117253 + C117232 * C626 +
             C117239 * C607 + C117254 + C117254 + C117233 * C631 +
             C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
                C152403 * C152164 * C152536 -
            (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
             C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
             C117237 * C607 + C117598 + C117598 + C117232 * C631 +
             C117235 * C602 + C117599 + C117599 + C117231 * C626) *
                C152403 * C152164 * C152324) *
               C152535 +
           ((C117235 * C1181 + C118074 + C118074 + C117231 * C1193 +
             C117237 * C1646 + C118075 + C118075 + C117232 * C1670 +
             C117239 * C3131 + C118076 + C118076 + C117233 * C3139 +
             C117241 * C18307 + C118077 + C118077 + C117234 * C18309) *
                C152403 * C152164 * C152324 -
            (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
             C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
             C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
             C117235 * C357 + C117429 + C117429 + C117231 * C381) *
                C152403 * C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152536 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C1823 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152324 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152536) *
              C1824 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152536 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152324) *
              C1825 +
          ((C117235 * C2197 + C118934 + C118934 + C117231 * C2205 +
            C117237 * C8070 + C118935 + C118935 + C117232 * C8082 +
            C117239 * C10112 + C118936 + C118936 + C117233 * C10116 +
            C117241 * C61259 + C118937 + C118937 + C117234 * C61261) *
               C152403 * C152164 * C152324 -
           (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
            C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
            C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
            C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
               C152403 * C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                   C152403 * C51110 +
               (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                  C152237 * C152219 * C129 -
              (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
               (C100398 + C100397) * C152403 * C51110) *
                  C152237 * C152219 * C130 +
              (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
               C100412 * C51112) *
                  C152237 * C152219 * C131 -
              ((C100405 + C100406) * C152403 * C51112 +
               (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                  C152237 * C152219 * C132 +
              (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
               (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
                C100340 * C975 + C100376 + C100376 + C152482 * C977) *
                   C152403 * C51112) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C152624 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C152608 +
               ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152237 * C152577) *
                  C353 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 +
                (C100707 + C100708) * C152403 * C51112) *
                   C152237 * C152608 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C152624 -
               ((C100709 + C100710) * C152403 * C51112 +
                (C100706 + C100705) * C152403 * C51111 +
                (C100704 + C100703) * C152403 * C51110) *
                   C152237 * C152577) *
                  C354 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152237 * C152624 -
               ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
                 C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                    C152403 * C51112 +
                (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                   C152237 * C152608 +
               (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
                (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
                 C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                    C152403 * C51112) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152625 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 +
            (C101009 + C101010) * C152403 * C51112) *
               C152610 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152625 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152580) *
              C152219 * C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152625 -
           ((C100340 * C610 + C100973 + C100973 + C152482 * C634 +
             C100338 * C609 + C100974 + C100974 + C100336 * C633) *
                C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152610 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152625 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C1373 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152610 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152625 -
           ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
             C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                C152403 * C51112 +
            (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
             C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152580) *
              C1374 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152625 -
           ((C100340 * C1655 + C102341 + C102341 + C152482 * C1679 +
             C100338 * C1650 + C102342 + C102342 + C100336 * C1674) *
                C152403 * C51112 +
            (C100340 * C1654 + C102343 + C102343 + C152482 * C1678 +
             C100338 * C1651 + C102344 + C102344 + C100336 * C1675) *
                C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C100338 * C1648 + C102340 + C102340 + C100336 * C1672 +
             C100340 * C3129 + C102339 + C102339 + C152482 * C3137) *
                C6259 +
            (C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C6260) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152610 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152625 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152625 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152610 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C1373 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            (C110722 + C110723) * C6260) *
               C152164 * C152610 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152625 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C1374 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152625 -
           ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
             C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                C6260 +
            (C110723 + C110722) * C6259 + C110679 * C6258) *
               C152164 * C152610 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C152219 * C129 -
          (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
           C117239 * C606 + C117249 + C117249 + C117233 * C630 +
           C117237 * C603 + C117250 + C117250 + C117232 * C627 +
           C117235 * C137 + C117251 + C117251 + C117231 * C153) *
              C152403 * C152164 * C152237 * C152219 * C130 +
          (C117235 * C138 + C117252 + C117252 + C117231 * C154 +
           C117237 * C602 + C117253 + C117253 + C117232 * C626 +
           C117239 * C607 + C117254 + C117254 + C117233 * C631 +
           C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
              C152403 * C152164 * C152237 * C152219 * C131 -
          (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
           C117239 * C608 + C117257 + C117257 + C117233 * C632 +
           C117237 * C601 + C117258 + C117258 + C117232 * C625 +
           C117235 * C139 + C117259 + C117259 + C117231 * C155) *
              C152403 * C152164 * C152237 * C152219 * C132 +
          (C117235 * C140 + C117260 + C117260 + C117231 * C156 +
           C117237 * C609 + C117261 + C117261 + C117232 * C633 +
           C117239 * C610 + C117262 + C117262 + C117233 * C634 +
           C117241 * C2977 + C117263 + C117263 + C117234 * C2979) *
              C152403 * C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C353 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152608 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C354 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152625 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152610 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C152219 * C353 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152610 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152625 -
           (C117241 * C17993 + C117592 + C117592 + C117234 * C18001 +
            C117239 * C2600 + C117593 + C117593 + C117233 * C2616 +
            C117237 * C2597 + C117594 + C117594 + C117232 * C2613 +
            C117235 * C606 + C117595 + C117595 + C117231 * C630) *
               C152403 * C152164 * C152580) *
              C152219 * C354 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152625 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152610 +
           (C117235 * C607 + C117600 + C117600 + C117231 * C631 +
            C117237 * C2596 + C117601 + C117601 + C117232 * C2612 +
            C117239 * C2601 + C117602 + C117602 + C117233 * C2617 +
            C117241 * C18522 + C117603 + C117603 + C117234 * C18524) *
               C152403 * C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C152621 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C1374 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C152604 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C1461 -
          (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
           C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
           C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
           C117235 * C359 + C117413 + C117413 + C117231 * C383) *
              C152403 * C152164 * C152237 * C1462 +
          (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
           C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
           C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
           C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
              C152403 * C152164 * C152237 * C1463 -
          (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
           C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
           C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
           C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
              C152403 * C152164 * C152237 * C1464 +
          (C117235 * C1471 + C118310 + C118310 + C117231 * C1487 +
           C117237 * C8072 + C118311 + C118311 + C117232 * C8084 +
           C117239 * C8073 + C118312 + C118312 + C117233 * C8085 +
           C117241 * C61717 + C118313 + C118313 + C117234 * C61719) *
              C152403 * C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152625 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152610 +
           (C117235 * C605 + C117584 + C117584 + C117231 * C629 +
            C117237 * C2598 + C117585 + C117585 + C117232 * C2614 +
            C117239 * C2599 + C117586 + C117586 + C117233 * C2615 +
            C117241 * C17994 + C117587 + C117587 + C117234 * C18002) *
               C152403 * C152164 * C152580) *
              C1373 +
          ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
            C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
            C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
            C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
               C152403 * C152164 * C152610 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152625 -
           (C117241 * C18737 + C118460 + C118460 + C117234 * C18741 +
            C117239 * C9388 + C118461 + C118461 + C117233 * C9400 +
            C117237 * C3129 + C118462 + C118462 + C117232 * C3137 +
            C117235 * C1648 + C118463 + C118463 + C117231 * C1672) *
               C152403 * C152164 * C152580) *
              C1374 +
          ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152625 -
           (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
            C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
            C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
            C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
               C152403 * C152164 * C152610 +
           (C117235 * C1653 + C118468 + C118468 + C117231 * C1677 +
            C117237 * C9387 + C118469 + C118469 + C117232 * C9399 +
            C117239 * C9389 + C118470 + C118470 + C117233 * C9401 +
            C117241 * C68548 + C118471 + C118471 + C117234 * C68550) *
               C152403 * C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C1373 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C1374 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C152536 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C1373 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C1374 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152536 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152324 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152536) *
              C152219 * C830 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152536 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152324) *
              C152219 * C831 +
          ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
            (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
             C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                C152403 * C51112) *
               C152324 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152536 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C1373 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C110722 + C110723) * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C1374 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C152536 -
            ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
              C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                 C6260 +
             (C110723 + C110722) * C6259 + C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C1373 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C1374 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152536 -
           (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
            C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
            C117237 * C605 + C117582 + C117582 + C117232 * C629 +
            C117235 * C604 + C117583 + C117583 + C117231 * C628) *
               C152403 * C152164 * C152324) *
              C152219 * C829 +
          ((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
            C117237 * C606 + C117589 + C117589 + C117232 * C630 +
            C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
            C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
               C152403 * C152164 * C152324 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152536) *
              C152219 * C830 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152536 -
           (C117241 * C2601 + C117596 + C117596 + C117234 * C2617 +
            C117239 * C2596 + C117597 + C117597 + C117233 * C2612 +
            C117237 * C607 + C117598 + C117598 + C117232 * C631 +
            C117235 * C602 + C117599 + C117599 + C117231 * C626) *
               C152403 * C152164 * C152324) *
              C152219 * C831 +
          ((C117235 * C601 + C117868 + C117868 + C117231 * C625 +
            C117237 * C608 + C117869 + C117869 + C117232 * C632 +
            C117239 * C2595 + C117870 + C117870 + C117233 * C2611 +
            C117241 * C2602 + C117871 + C117871 + C117234 * C2618) *
               C152403 * C152164 * C152324 -
           (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
            C117239 * C608 + C117257 + C117257 + C117233 * C632 +
            C117237 * C601 + C117258 + C117258 + C117232 * C625 +
            C117235 * C139 + C117259 + C117259 + C117231 * C155) *
               C152403 * C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
             C117237 * C604 + C117245 + C117245 + C117232 * C628 +
             C117239 * C605 + C117246 + C117246 + C117233 * C629 +
             C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
                C152403 * C152164 * C152536 -
            (C117241 * C2599 + C117580 + C117580 + C117234 * C2615 +
             C117239 * C2598 + C117581 + C117581 + C117233 * C2614 +
             C117237 * C605 + C117582 + C117582 + C117232 * C629 +
             C117235 * C604 + C117583 + C117583 + C117231 * C628) *
                C152403 * C152164 * C152324) *
               C1373 +
           ((C117235 * C1179 + C118066 + C118066 + C117231 * C1191 +
             C117237 * C1648 + C118067 + C118067 + C117232 * C1672 +
             C117239 * C3129 + C118068 + C118068 + C117233 * C3137 +
             C117241 * C9388 + C118069 + C118069 + C117234 * C9400) *
                C152403 * C152164 * C152324 -
            (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
             C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
             C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
             C117235 * C359 + C117413 + C117413 + C117231 * C383) *
                C152403 * C152164 * C152536) *
               C1374 +
           ((C117235 * C360 + C117414 + C117414 + C117231 * C384 +
             C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
             C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
             C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
                C152403 * C152164 * C152536 -
            (C117241 * C9389 + C118464 + C118464 + C117234 * C9401 +
             C117239 * C9387 + C118465 + C118465 + C117233 * C9399 +
             C117237 * C1653 + C118466 + C118466 + C117232 * C1677 +
             C117235 * C1652 + C118467 + C118467 + C117231 * C1676) *
                C152403 * C152164 * C152324) *
               C152577) *
              C152521 +
          (((C117235 * C603 + C117588 + C117588 + C117231 * C627 +
             C117237 * C606 + C117589 + C117589 + C117232 * C630 +
             C117239 * C2597 + C117590 + C117590 + C117233 * C2613 +
             C117241 * C2600 + C117591 + C117591 + C117234 * C2616) *
                C152403 * C152164 * C152324 -
            (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
             C117239 * C606 + C117249 + C117249 + C117233 * C630 +
             C117237 * C603 + C117250 + C117250 + C117232 * C627 +
             C117235 * C137 + C117251 + C117251 + C117231 * C153) *
                C152403 * C152164 * C152536) *
               C1373 +
           ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
             C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
             C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
             C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
                C152403 * C152164 * C152536 -
            (C117241 * C9390 + C118070 + C118070 + C117234 * C9402 +
             C117239 * C3130 + C118071 + C118071 + C117233 * C3138 +
             C117237 * C1647 + C118072 + C118072 + C117232 * C1671 +
             C117235 * C1180 + C118073 + C118073 + C117231 * C1192) *
                C152403 * C152164 * C152324) *
               C1374 +
           ((C117235 * C1651 + C118800 + C118800 + C117231 * C1675 +
             C117237 * C1654 + C118801 + C118801 + C117232 * C1678 +
             C117239 * C9386 + C118802 + C118802 + C117233 * C9398 +
             C117241 * C9391 + C118803 + C118803 + C117234 * C9403) *
                C152403 * C152164 * C152324 -
            (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
             C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
             C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
             C117235 * C361 + C117425 + C117425 + C117231 * C385) *
                C152403 * C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152624 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152608 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 +
            (C100707 + C100708) * C152403 * C51112) *
               C152237 * C152608 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152624 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152624 -
           ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
             C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152608 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C152219 * C129 -
          (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
           (C100398 + C100397) * C152403 * C51110) *
              C152237 * C152219 * C130 +
          (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
           C100412 * C51112) *
              C152237 * C152219 * C131 -
          ((C100405 + C100406) * C152403 * C51112 +
           (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
              C152237 * C152219 * C132 +
          (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
           (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
            C100340 * C975 + C100376 + C100376 + C152482 * C977) *
               C152403 * C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C152219 * C129 -
          (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
           C117239 * C606 + C117249 + C117249 + C117233 * C630 +
           C117237 * C603 + C117250 + C117250 + C117232 * C627 +
           C117235 * C137 + C117251 + C117251 + C117231 * C153) *
              C152403 * C152164 * C152237 * C152219 * C130 +
          (C117235 * C138 + C117252 + C117252 + C117231 * C154 +
           C117237 * C602 + C117253 + C117253 + C117232 * C626 +
           C117239 * C607 + C117254 + C117254 + C117233 * C631 +
           C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
              C152403 * C152164 * C152237 * C152219 * C131 -
          (C117241 * C2595 + C117256 + C117256 + C117234 * C2611 +
           C117239 * C608 + C117257 + C117257 + C117233 * C632 +
           C117237 * C601 + C117258 + C117258 + C117232 * C625 +
           C117235 * C139 + C117259 + C117259 + C117231 * C155) *
              C152403 * C152164 * C152237 * C152219 * C132 +
          (C117235 * C140 + C117260 + C117260 + C117231 * C156 +
           C117237 * C609 + C117261 + C117261 + C117232 * C633 +
           C117239 * C610 + C117262 + C117262 + C117233 * C634 +
           C117241 * C2977 + C117263 + C117263 + C117234 * C2979) *
              C152403 * C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C353 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C152608 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C354 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C152624 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C152608 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
            C117237 * C604 + C117245 + C117245 + C117232 * C628 +
            C117239 * C605 + C117246 + C117246 + C117233 * C629 +
            C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
            C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
            C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
            C117235 * C359 + C117413 + C117413 + C117231 * C383) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
            C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
            C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
            C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
               C152403 * C152164 * C152237 * C152577) *
              C152621 +
          ((C117235 * C358 + C117418 + C117418 + C117231 * C382 +
            C117237 * C1180 + C117419 + C117419 + C117232 * C1192 +
            C117239 * C1647 + C117420 + C117420 + C117233 * C1671 +
            C117241 * C3130 + C117421 + C117421 + C117234 * C3138) *
               C152403 * C152164 * C152237 * C1374 -
           (C117241 * C2597 + C117248 + C117248 + C117234 * C2613 +
            C117239 * C606 + C117249 + C117249 + C117233 * C630 +
            C117237 * C603 + C117250 + C117250 + C117232 * C627 +
            C117235 * C137 + C117251 + C117251 + C117231 * C153) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C9386 + C117422 + C117422 + C117234 * C9398 +
            C117239 * C1654 + C117423 + C117423 + C117233 * C1678 +
            C117237 * C1651 + C117424 + C117424 + C117232 * C1675 +
            C117235 * C361 + C117425 + C117425 + C117231 * C385) *
               C152403 * C152164 * C152237 * C152577) *
              C152604 +
          ((C117235 * C138 + C117252 + C117252 + C117231 * C154 +
            C117237 * C602 + C117253 + C117253 + C117232 * C626 +
            C117239 * C607 + C117254 + C117254 + C117233 * C631 +
            C117241 * C2596 + C117255 + C117255 + C117234 * C2612) *
               C152403 * C152164 * C152237 * C1373 -
           (C117241 * C3131 + C117426 + C117426 + C117234 * C3139 +
            C117239 * C1646 + C117427 + C117427 + C117233 * C1670 +
            C117237 * C1181 + C117428 + C117428 + C117232 * C1193 +
            C117235 * C357 + C117429 + C117429 + C117231 * C381) *
               C152403 * C152164 * C152237 * C1374 +
           (C117235 * C362 + C117430 + C117430 + C117231 * C386 +
            C117237 * C1650 + C117431 + C117431 + C117232 * C1674 +
            C117239 * C1655 + C117432 + C117432 + C117233 * C1679 +
            C117241 * C9901 + C117433 + C117433 + C117234 * C9903) *
               C152403 * C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117235 * C136 + C117244 + C117244 + C117231 * C152 +
           C117237 * C604 + C117245 + C117245 + C117232 * C628 +
           C117239 * C605 + C117246 + C117246 + C117233 * C629 +
           C117241 * C2598 + C117247 + C117247 + C117234 * C2614) *
              C152403 * C152164 * C152237 * C1461 -
          (C117241 * C3129 + C117410 + C117410 + C117234 * C3137 +
           C117239 * C1648 + C117411 + C117411 + C117233 * C1672 +
           C117237 * C1179 + C117412 + C117412 + C117232 * C1191 +
           C117235 * C359 + C117413 + C117413 + C117231 * C383) *
              C152403 * C152164 * C152237 * C1462 +
          (C117235 * C360 + C117414 + C117414 + C117231 * C384 +
           C117237 * C1652 + C117415 + C117415 + C117232 * C1676 +
           C117239 * C1653 + C117416 + C117416 + C117233 * C1677 +
           C117241 * C9387 + C117417 + C117417 + C117234 * C9399) *
              C152403 * C152164 * C152237 * C1463 -
          (C117241 * C10112 + C118306 + C118306 + C117234 * C10116 +
           C117239 * C8070 + C118307 + C118307 + C117233 * C8082 +
           C117237 * C2197 + C118308 + C118308 + C117232 * C2205 +
           C117235 * C1470 + C118309 + C118309 + C117231 * C1486) *
              C152403 * C152164 * C152237 * C1464 +
          (C117235 * C1471 + C118310 + C118310 + C117231 * C1487 +
           C117237 * C8072 + C118311 + C118311 + C117232 * C8084 +
           C117239 * C8073 + C118312 + C118312 + C117233 * C8085 +
           C117241 * C61717 + C118313 + C118313 + C117234 * C61719) *
              C152403 * C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[325] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C152278 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152285 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C3759) *
                       C152196 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152285 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C152278 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C3759) *
                       C152205 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C152278 -
                    ((C134624 + C134625 + C134626) * C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C152285 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C3759) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[326] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C152536 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152278 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C152536) *
                        C152285 +
                    (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                       C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                       C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                          C152403 * C152514 +
                      (C134104 + C134105 + C134106) * C152403 * C152169) *
                         C152536 -
                     ((C136276 + C136277 + C136278) * C152403 * C152169 +
                      (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                          C152403 * C152514) *
                         C152324) *
                        C3759) *
                       C3415 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C152536) *
                        C152278 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C152536 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152285 +
                    (((C136278 + C136277 + C136276) * C152403 * C152514 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134110 + C134111 + C134112) * C152403 * C152169 +
                      (C134106 + C134105 + C134104) * C152403 * C152514) *
                         C152536) *
                        C3759) *
                       C152202)) /
                 (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152237 * C152631 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C152237 * C152627 +
           ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
             C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
             C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                C152403 * C152514 +
            (C134104 + C134105 + C134106) * C152403 * C152169) *
               C152237 * C152613 -
           ((C135968 + C135969 + C135970) * C152403 * C152169 +
            (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
             C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
             C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                C152403 * C152514) *
               C152237 * C152587) *
              C3415 +
          (((C134103 + C134102 + C134101) * C152403 * C152514 +
            (C134107 + C134108 + C134109) * C152403 * C152169) *
               C152237 * C152627 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C152237 * C152631 -
           ((C134110 + C134111 + C134112) * C152403 * C152169 +
            (C134106 + C134105 + C134104) * C152403 * C152514) *
               C152237 * C152613 +
           ((C135970 + C135969 + C135968) * C152403 * C152514 +
            (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
             C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
             C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                C152403 * C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152237 * C3275 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C152237 * C152282) *
              C152630 +
          (((C134103 + C134102 + C134101) * C152403 * C152514 +
            (C134107 + C134108 + C134109) * C152403 * C152169) *
               C152237 * C152282 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C152237 * C3275) *
              C152623 +
          (((C133804 + C133803 + C133802) * C152403 * C152514 +
            (C133805 + C133806 + C133807) * C152403 * C152169) *
               C152237 * C3275 -
           ((C134624 + C134625 + C134626) * C152403 * C152169 +
            (C134109 + C134108 + C134107) * C152403 * C152514) *
               C152237 * C152282) *
              C152606 +
          (((C134626 + C134625 + C134624) * C152403 * C152514 +
            (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
             C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
             C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                C152403 * C152169) *
               C152237 * C152282 -
           ((C133808 + C133809 + C133810) * C152403 * C152169 +
            (C133807 + C133806 + C133805) * C152403 * C152514) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152403 * C152514 +
             (C133799 + C133800 + C133801) * C152403 * C152169) *
                C152625 -
            ((C134403 + C134404 + C134405) * C152403 * C152169 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152403 * C152514) *
                C152610 +
            ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
              C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
              C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                 C152403 * C152514 +
             (C134406 + C134407 + C134408) * C152403 * C152169) *
                C152580) *
               C3275 +
           (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
              C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
              C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                 C152403 * C152514 +
             (C135165 + C135166 + C135167) * C152403 * C152169) *
                C152610 -
            ((C134101 + C134102 + C134103) * C152403 * C152169 +
             (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
              C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
              C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                 C152403 * C152514) *
                C152625 -
            ((C137354 + C137355 + C137356) * C152403 * C152169 +
             (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
              C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
              C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                 C152403 * C152514) *
                C152580) *
               C152282) *
              C3415 +
          ((((C134405 + C134404 + C134403) * C152403 * C152514 +
             (C134409 + C134410 + C134411) * C152403 * C152169) *
                C152610 -
            ((C133802 + C133803 + C133804) * C152403 * C152169 +
             (C133801 + C133800 + C133799) * C152403 * C152514) *
                C152625 -
            ((C134412 + C134413 + C134414) * C152403 * C152169 +
             (C134408 + C134407 + C134406) * C152403 * C152514) *
                C152580) *
               C3275 +
           (((C134103 + C134102 + C134101) * C152403 * C152514 +
             (C134107 + C134108 + C134109) * C152403 * C152169) *
                C152625 -
            ((C135168 + C135169 + C135170) * C152403 * C152169 +
             (C135167 + C135166 + C135165) * C152403 * C152514) *
                C152610 +
            ((C137356 + C137355 + C137354) * C152403 * C152514 +
             (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
              C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
              C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                 C152403 * C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C152536 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C3275 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C152536) *
                        C152282) *
                       C152196 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C152536) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C152536 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152282) *
                       C152205 +
                   ((((C133804 + C133803 + C133802) * C152403 * C152514 +
                      (C133805 + C133806 + C133807) * C152403 * C152169) *
                         C152536 -
                     ((C134836 + C134837 + C134838) * C152403 * C152169 +
                      (C134411 + C134410 + C134409) * C152403 * C152514) *
                         C152324) *
                        C3275 +
                    (((C135170 + C135169 + C135168) * C152403 * C152514 +
                      (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
                       C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
                       C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134624 + C134625 + C134626) * C152403 * C152169 +
                      (C134109 + C134108 + C134107) * C152403 * C152514) *
                         C152536) *
                        C152282) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[329] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C3275 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152282) *
                       C152630 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152282 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C3275) *
                       C152623 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C3275 -
                    ((C134624 + C134625 + C134626) * C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C152282) *
                       C152606 +
                   (((C134626 + C134625 + C134624) * C152403 * C152514 +
                     (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
                      C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
                      C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                         C152403 * C152169) *
                        C152237 * C152282 -
                    ((C133808 + C133809 + C133810) * C152403 * C152169 +
                     (C133807 + C133806 + C133805) * C152403 * C152514) *
                        C152237 * C3275) *
                       C152581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C152631 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152627 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152613 -
                    ((C135968 + C135969 + C135970) * C152403 * C152169 +
                     (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                         C152403 * C152514) *
                        C152237 * C152587) *
                       C3415 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152627 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C152631 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152613 +
                    ((C135970 + C135969 + C135968) * C152403 * C152514 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152403 * C152169) *
                        C152237 * C152587) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[330] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C4281 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152278 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C4281) *
                        C152285 +
                    (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                       C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                       C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                          C152403 * C152514 +
                      (C134104 + C134105 + C134106) * C152403 * C152169) *
                         C4281 -
                     ((C136276 + C136277 + C136278) * C152403 * C152169 +
                      (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                          C152403 * C152514) *
                         C152324) *
                        C3759) *
                       C152521 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C4281) *
                        C152278 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C4281 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152285 +
                    (((C136278 + C136277 + C136276) * C152403 * C152514 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134110 + C134111 + C134112) * C152403 * C152169 +
                      (C134106 + C134105 + C134104) * C152403 * C152514) *
                         C4281) *
                        C3759) *
                       C152202)) /
                 (p * q * std::sqrt(p + q));
    d2ee[331] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152320 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152327 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C4953) *
                       C152278 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152327 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152320 -
                    ((C137354 + C137355 + C137356) * C152403 * C152169 +
                     (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
                      C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
                      C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                         C152403 * C152514) *
                        C4953) *
                       C152285 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152320 -
                    ((C136276 + C136277 + C136278) * C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C152327 +
                    ((C133726 * C1653 + C135753 + C135753 + C152619 * C1677 +
                      C133728 * C9387 + C135754 + C135754 + C152620 * C9399 +
                      C133730 * C9389 + C135755 + C135755 + C133725 * C9401) *
                         C152403 * C152514 +
                     (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                      C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                      C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                         C152403 * C152169) *
                        C4953) *
                       C3759) *
                  C152191) /
                 (p * q * std::sqrt(p + q));
    d2ee[332] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C4281 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C152631 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152324 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C4281) *
                       C152627 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C4281 -
                    ((C136276 + C136277 + C136278) * C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C152324) *
                       C152613 +
                   (((C133726 * C2197 + C136473 + C136473 + C152619 * C2205 +
                      C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
                      C133730 * C10112 + C136475 + C136475 + C133725 * C10116) *
                         C152403 * C152514 +
                     (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
                      C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
                      C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                         C152403 * C152169) *
                        C152324 -
                    ((C135968 + C135969 + C135970) * C152403 * C152169 +
                     (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                         C152403 * C152514) *
                        C4281) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C4281 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C3275 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C4281) *
                        C152282) *
                       C152621 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C4281) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C4281 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152282) *
                       C152604 +
                   ((((C133804 + C133803 + C133802) * C152403 * C152514 +
                      (C133805 + C133806 + C133807) * C152403 * C152169) *
                         C4281 -
                     ((C134836 + C134837 + C134838) * C152403 * C152169 +
                      (C134411 + C134410 + C134409) * C152403 * C152514) *
                         C152324) *
                        C3275 +
                    (((C135170 + C135169 + C135168) * C152403 * C152514 +
                      (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
                       C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
                       C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134624 + C134625 + C134626) * C152403 * C152169 +
                      (C134109 + C134108 + C134107) * C152403 * C152514) *
                         C4281) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152632 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152629 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C152616 -
                    ((C137566 + C137567 + C137568) * C152403 * C152169 +
                     (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
                      C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
                      C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                         C152403 * C152514) *
                        C152593) *
                       C3275 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152629 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152632 -
                    ((C137354 + C137355 + C137356) * C152403 * C152169 +
                     (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
                      C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
                      C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                         C152403 * C152514) *
                        C152616 +
                    ((C133726 * C3129 + C137763 + C137763 + C152619 * C3137 +
                      C133728 * C9388 + C137764 + C137764 + C152620 * C9400 +
                      C133730 * C18737 + C137765 + C137765 + C133725 * C18741) *
                         C152403 * C152514 +
                     (C133726 * C3130 + C137766 + C137766 + C152619 * C3138 +
                      C133728 * C9390 + C137767 + C137767 + C152620 * C9402 +
                      C133730 * C18738 + C137768 + C137768 + C133725 * C18742) *
                         C152403 * C152169) *
                        C152593) *
                       C152282) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152403 * C152514 +
             (C133799 + C133800 + C133801) * C152403 * C152169) *
                C152320 -
            ((C134403 + C134404 + C134405) * C152403 * C152169 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152403 * C152514) *
                C152327 +
            ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
              C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
              C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                 C152403 * C152514 +
             (C134406 + C134407 + C134408) * C152403 * C152169) *
                C4953) *
               C3275 +
           (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
              C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
              C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                 C152403 * C152514 +
             (C135165 + C135166 + C135167) * C152403 * C152169) *
                C152327 -
            ((C134101 + C134102 + C134103) * C152403 * C152169 +
             (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
              C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
              C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                 C152403 * C152514) *
                C152320 -
            ((C137354 + C137355 + C137356) * C152403 * C152169 +
             (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
              C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
              C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                 C152403 * C152514) *
                C4953) *
               C152282) *
              C152521 +
          ((((C134405 + C134404 + C134403) * C152403 * C152514 +
             (C134409 + C134410 + C134411) * C152403 * C152169) *
                C152327 -
            ((C133802 + C133803 + C133804) * C152403 * C152169 +
             (C133801 + C133800 + C133799) * C152403 * C152514) *
                C152320 -
            ((C134412 + C134413 + C134414) * C152403 * C152169 +
             (C134408 + C134407 + C134406) * C152403 * C152514) *
                C4953) *
               C3275 +
           (((C134103 + C134102 + C134101) * C152403 * C152514 +
             (C134107 + C134108 + C134109) * C152403 * C152169) *
                C152320 -
            ((C135168 + C135169 + C135170) * C152403 * C152169 +
             (C135167 + C135166 + C135165) * C152403 * C152514) *
                C152327 +
            ((C137356 + C137355 + C137354) * C152403 * C152514 +
             (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
              C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
              C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                 C152403 * C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[334] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C4281 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C3275 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C4281) *
                        C152282) *
                       C152621 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C4281) *
                        C3275 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C4281 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152282) *
                       C152604 +
                   ((((C133804 + C133803 + C133802) * C152403 * C152514 +
                      (C133805 + C133806 + C133807) * C152403 * C152169) *
                         C4281 -
                     ((C134836 + C134837 + C134838) * C152403 * C152169 +
                      (C134411 + C134410 + C134409) * C152403 * C152514) *
                         C152324) *
                        C3275 +
                    (((C135170 + C135169 + C135168) * C152403 * C152514 +
                      (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
                       C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
                       C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134624 + C134625 + C134626) * C152403 * C152169 +
                      (C134109 + C134108 + C134107) * C152403 * C152514) *
                         C4281) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C4281 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C152631 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152324 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C4281) *
                       C152627 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C4281 -
                    ((C136276 + C136277 + C136278) * C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C152324) *
                       C152613 +
                   (((C133726 * C2197 + C136473 + C136473 + C152619 * C2205 +
                      C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
                      C133730 * C10112 + C136475 + C136475 + C133725 * C10116) *
                         C152403 * C152514 +
                     (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
                      C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
                      C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                         C152403 * C152169) *
                        C152324 -
                    ((C135968 + C135969 + C135970) * C152403 * C152169 +
                     (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                         C152403 * C152514) *
                        C4281) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152237 * C1823 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C152237 * C1824 +
           ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
             C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
             C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                C152403 * C152514 +
            (C134104 + C134105 + C134106) * C152403 * C152169) *
               C152237 * C1825 -
           ((C135968 + C135969 + C135970) * C152403 * C152169 +
            (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
             C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
             C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                C152403 * C152514) *
               C152237 * C152587) *
              C152521 +
          (((C134103 + C134102 + C134101) * C152403 * C152514 +
            (C134107 + C134108 + C134109) * C152403 * C152169) *
               C152237 * C1824 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C152237 * C1823 -
           ((C134110 + C134111 + C134112) * C152403 * C152169 +
            (C134106 + C134105 + C134104) * C152403 * C152514) *
               C152237 * C1825 +
           ((C135970 + C135969 + C135968) * C152403 * C152514 +
            (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
             C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
             C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                C152403 * C152169) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152237 * C152535 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C152237 * C152282) *
              C829 +
          (((C134103 + C134102 + C134101) * C152403 * C152514 +
            (C134107 + C134108 + C134109) * C152403 * C152169) *
               C152237 * C152282 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C152237 * C152535) *
              C830 +
          (((C133804 + C133803 + C133802) * C152403 * C152514 +
            (C133805 + C133806 + C133807) * C152403 * C152169) *
               C152237 * C152535 -
           ((C134624 + C134625 + C134626) * C152403 * C152169 +
            (C134109 + C134108 + C134107) * C152403 * C152514) *
               C152237 * C152282) *
              C831 +
          (((C134626 + C134625 + C134624) * C152403 * C152514 +
            (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
             C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
             C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                C152403 * C152169) *
               C152237 * C152282 -
           ((C133808 + C133809 + C133810) * C152403 * C152169 +
            (C133807 + C133806 + C133805) * C152403 * C152514) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152403 * C152514 +
             (C133799 + C133800 + C133801) * C152403 * C152169) *
                C2359 -
            ((C134403 + C134404 + C134405) * C152403 * C152169 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152403 * C152514) *
                C2360 +
            ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
              C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
              C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                 C152403 * C152514 +
             (C134406 + C134407 + C134408) * C152403 * C152169) *
                C152580) *
               C152535 +
           (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
              C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
              C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                 C152403 * C152514 +
             (C135165 + C135166 + C135167) * C152403 * C152169) *
                C2360 -
            ((C134101 + C134102 + C134103) * C152403 * C152169 +
             (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
              C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
              C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                 C152403 * C152514) *
                C2359 -
            ((C137354 + C137355 + C137356) * C152403 * C152169 +
             (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
              C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
              C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                 C152403 * C152514) *
                C152580) *
               C152282) *
              C152521 +
          ((((C134405 + C134404 + C134403) * C152403 * C152514 +
             (C134409 + C134410 + C134411) * C152403 * C152169) *
                C2360 -
            ((C133802 + C133803 + C133804) * C152403 * C152169 +
             (C133801 + C133800 + C133799) * C152403 * C152514) *
                C2359 -
            ((C134412 + C134413 + C134414) * C152403 * C152169 +
             (C134408 + C134407 + C134406) * C152403 * C152514) *
                C152580) *
               C152535 +
           (((C134103 + C134102 + C134101) * C152403 * C152514 +
             (C134107 + C134108 + C134109) * C152403 * C152169) *
                C2359 -
            ((C135168 + C135169 + C135170) * C152403 * C152169 +
             (C135167 + C135166 + C135165) * C152403 * C152514) *
                C2360 +
            ((C137356 + C137355 + C137354) * C152403 * C152514 +
             (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
              C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
              C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                 C152403 * C152169) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152536 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C1823 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152324 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152536) *
                       C1824 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152536 -
                    ((C136276 + C136277 + C136278) * C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C152324) *
                       C1825 +
                   (((C133726 * C2197 + C136473 + C136473 + C152619 * C2205 +
                      C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
                      C133730 * C10112 + C136475 + C136475 + C133725 * C10116) *
                         C152403 * C152514 +
                     (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
                      C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
                      C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                         C152403 * C152169) *
                        C152324 -
                    ((C135968 + C135969 + C135970) * C152403 * C152169 +
                     (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                         C152403 * C152514) *
                        C152536) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C152536 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152535 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C152536) *
                        C152282) *
                       C353 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C152536) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C152536 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152282) *
                       C354 +
                   ((((C133804 + C133803 + C133802) * C152403 * C152514 +
                      (C133805 + C133806 + C133807) * C152403 * C152169) *
                         C152536 -
                     ((C134836 + C134837 + C134838) * C152403 * C152169 +
                      (C134411 + C134410 + C134409) * C152403 * C152514) *
                         C152324) *
                        C152535 +
                    (((C135170 + C135169 + C135168) * C152403 * C152514 +
                      (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
                       C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
                       C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134624 + C134625 + C134626) * C152403 * C152169 +
                      (C134109 + C134108 + C134107) * C152403 * C152514) *
                         C152536) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C2973 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C2974 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C2975 -
                    ((C137566 + C137567 + C137568) * C152403 * C152169 +
                     (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
                      C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
                      C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                         C152403 * C152514) *
                        C152593) *
                       C152535 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C2974 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C2973 -
                    ((C137354 + C137355 + C137356) * C152403 * C152169 +
                     (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
                      C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
                      C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                         C152403 * C152514) *
                        C2975 +
                    ((C133726 * C3129 + C137763 + C137763 + C152619 * C3137 +
                      C133728 * C9388 + C137764 + C137764 + C152620 * C9400 +
                      C133730 * C18737 + C137765 + C137765 + C133725 * C18741) *
                         C152403 * C152514 +
                     (C133726 * C3130 + C137766 + C137766 + C152619 * C3138 +
                      C133728 * C9390 + C137767 + C137767 + C152620 * C9402 +
                      C133730 * C18738 + C137768 + C137768 + C133725 * C18742) *
                         C152403 * C152169) *
                        C152593) *
                       C152282) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                   C152403 * C152514 +
               (C133799 + C133800 + C133801) * C152403 * C152169) *
                  C152237 * C152219 * C129 -
              ((C133802 + C133803 + C133804) * C152403 * C152169 +
               (C133801 + C133800 + C133799) * C152403 * C152514) *
                  C152237 * C152219 * C130 +
              ((C133804 + C133803 + C133802) * C152403 * C152514 +
               (C133805 + C133806 + C133807) * C152403 * C152169) *
                  C152237 * C152219 * C131 -
              ((C133808 + C133809 + C133810) * C152403 * C152169 +
               (C133807 + C133806 + C133805) * C152403 * C152514) *
                  C152237 * C152219 * C132 +
              ((C133810 + C133809 + C133808) * C152403 * C152514 +
               (C133726 * C141 + C133772 + C133772 + C152619 * C157 +
                C133728 * C611 + C133773 + C133773 + C152620 * C635 +
                C133730 * C612 + C133774 + C133774 + C133725 * C636) *
                   C152403 * C152169) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                 C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                 C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                    C152403 * C152514 +
                (C133799 + C133800 + C133801) * C152403 * C152169) *
                   C152237 * C152624 -
               ((C134101 + C134102 + C134103) * C152403 * C152169 +
                (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                 C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                 C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                    C152403 * C152514) *
                   C152237 * C152608 +
               ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                 C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                 C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                    C152403 * C152514 +
                (C134104 + C134105 + C134106) * C152403 * C152169) *
                   C152237 * C152577) *
                  C353 +
              (((C134103 + C134102 + C134101) * C152403 * C152514 +
                (C134107 + C134108 + C134109) * C152403 * C152169) *
                   C152237 * C152608 -
               ((C133802 + C133803 + C133804) * C152403 * C152169 +
                (C133801 + C133800 + C133799) * C152403 * C152514) *
                   C152237 * C152624 -
               ((C134110 + C134111 + C134112) * C152403 * C152169 +
                (C134106 + C134105 + C134104) * C152403 * C152514) *
                   C152237 * C152577) *
                  C354 +
              (((C133804 + C133803 + C133802) * C152403 * C152514 +
                (C133805 + C133806 + C133807) * C152403 * C152169) *
                   C152237 * C152624 -
               ((C133730 * C1645 + C134071 + C134071 + C133725 * C1669 +
                 C133728 * C1182 + C134072 + C134072 + C152620 * C1194 +
                 C133726 * C356 + C134073 + C134073 + C152619 * C380) *
                    C152403 * C152169 +
                (C134109 + C134108 + C134107) * C152403 * C152514) *
                   C152237 * C152608 +
               ((C134112 + C134111 + C134110) * C152403 * C152514 +
                (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                 C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                 C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                    C152403 * C152169) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152625 -
           ((C134403 + C134404 + C134405) * C152403 * C152169 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152403 * C152514) *
               C152610 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152403 * C152514 +
            (C134406 + C134407 + C134408) * C152403 * C152169) *
               C152580) *
              C152219 * C353 +
          (((C134405 + C134404 + C134403) * C152403 * C152514 +
            (C134409 + C134410 + C134411) * C152403 * C152169) *
               C152610 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C152625 -
           ((C134412 + C134413 + C134414) * C152403 * C152169 +
            (C134408 + C134407 + C134406) * C152403 * C152514) *
               C152580) *
              C152219 * C354 +
          (((C133804 + C133803 + C133802) * C152403 * C152514 +
            (C133805 + C133806 + C133807) * C152403 * C152169) *
               C152625 -
           ((C133730 * C2595 + C134373 + C134373 + C133725 * C2611 +
             C133728 * C608 + C134374 + C134374 + C152620 * C632 +
             C133726 * C601 + C134375 + C134375 + C152619 * C625) *
                C152403 * C152169 +
            (C134411 + C134410 + C134409) * C152403 * C152514) *
               C152610 +
           ((C134414 + C134413 + C134412) * C152403 * C152514 +
            (C133726 * C608 + C134376 + C134376 + C152619 * C632 +
             C133728 * C2595 + C134377 + C134377 + C152620 * C2611 +
             C133730 * C2602 + C134378 + C134378 + C133725 * C2618) *
                C152403 * C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152237 * C1373 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C152237 * C1374 +
           ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
             C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
             C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                C152403 * C152514 +
            (C134104 + C134105 + C134106) * C152403 * C152169) *
               C152237 * C152577) *
              C152621 +
          (((C134103 + C134102 + C134101) * C152403 * C152514 +
            (C134107 + C134108 + C134109) * C152403 * C152169) *
               C152237 * C1374 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C152237 * C1373 -
           ((C134110 + C134111 + C134112) * C152403 * C152169 +
            (C134106 + C134105 + C134104) * C152403 * C152514) *
               C152237 * C152577) *
              C152604 +
          (((C133804 + C133803 + C133802) * C152403 * C152514 +
            (C133805 + C133806 + C133807) * C152403 * C152169) *
               C152237 * C1373 -
           ((C134624 + C134625 + C134626) * C152403 * C152169 +
            (C134109 + C134108 + C134107) * C152403 * C152514) *
               C152237 * C1374 +
           ((C134112 + C134111 + C134110) * C152403 * C152514 +
            (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
             C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
             C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                C152403 * C152169) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
            C133728 * C604 + C133734 + C133734 + C152620 * C628 +
            C133730 * C605 + C133735 + C133735 + C133725 * C629) *
               C152403 * C152514 +
           (C133799 + C133800 + C133801) * C152403 * C152169) *
              C152237 * C1461 -
          ((C134101 + C134102 + C134103) * C152403 * C152169 +
           (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
            C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
            C133726 * C359 + C134040 + C134040 + C152619 * C383) *
               C152403 * C152514) *
              C152237 * C1462 +
          ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
            C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
            C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
               C152403 * C152514 +
           (C134104 + C134105 + C134106) * C152403 * C152169) *
              C152237 * C1463 -
          ((C133730 * C8069 + C135511 + C135511 + C133725 * C8081 +
            C133728 * C2198 + C135512 + C135512 + C152620 * C2206 +
            C133726 * C1469 + C135513 + C135513 + C152619 * C1485) *
               C152403 * C152169 +
           (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
            C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
            C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
               C152403 * C152514) *
              C152237 * C1464 +
          ((C133726 * C1471 + C135517 + C135517 + C152619 * C1487 +
            C133728 * C8072 + C135518 + C135518 + C152620 * C8084 +
            C133730 * C8073 + C135519 + C135519 + C133725 * C8085) *
               C152403 * C152514 +
           (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
            C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
            C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
               C152403 * C152169) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C152625 -
           ((C134403 + C134404 + C134405) * C152403 * C152169 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152403 * C152514) *
               C152610 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152403 * C152514 +
            (C134406 + C134407 + C134408) * C152403 * C152169) *
               C152580) *
              C1373 +
          (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
             C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
             C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                C152403 * C152514 +
            (C135165 + C135166 + C135167) * C152403 * C152169) *
               C152610 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C152625 -
           ((C133730 * C9390 + C135741 + C135741 + C133725 * C9402 +
             C133728 * C3130 + C135742 + C135742 + C152620 * C3138 +
             C133726 * C1647 + C135743 + C135743 + C152619 * C1671) *
                C152403 * C152169 +
            (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
             C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
             C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                C152403 * C152514) *
               C152580) *
              C1374 +
          (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
             C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
             C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                C152403 * C152514 +
            (C134104 + C134105 + C134106) * C152403 * C152169) *
               C152625 -
           ((C133730 * C9386 + C135747 + C135747 + C133725 * C9398 +
             C133728 * C1654 + C135748 + C135748 + C152620 * C1678 +
             C133726 * C1651 + C135749 + C135749 + C152619 * C1675) *
                C152403 * C152169 +
            (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
             C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
             C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                C152403 * C152514) *
               C152610 +
           ((C133726 * C1653 + C135753 + C135753 + C152619 * C1677 +
             C133728 * C9387 + C135754 + C135754 + C152620 * C9399 +
             C133730 * C9389 + C135755 + C135755 + C133725 * C9401) *
                C152403 * C152514 +
            (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
             C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
             C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                C152403 * C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C2359 -
           ((C134403 + C134404 + C134405) * C152403 * C152169 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152403 * C152514) *
               C2360 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152403 * C152514 +
            (C134406 + C134407 + C134408) * C152403 * C152169) *
               C152580) *
              C152219 * C152621 +
          (((C134405 + C134404 + C134403) * C152403 * C152514 +
            (C134409 + C134410 + C134411) * C152403 * C152169) *
               C2360 -
           ((C133802 + C133803 + C133804) * C152403 * C152169 +
            (C133801 + C133800 + C133799) * C152403 * C152514) *
               C2359 -
           ((C134412 + C134413 + C134414) * C152403 * C152169 +
            (C134408 + C134407 + C134406) * C152403 * C152514) *
               C152580) *
              C152219 * C152604 +
          (((C133804 + C133803 + C133802) * C152403 * C152514 +
            (C133805 + C133806 + C133807) * C152403 * C152169) *
               C2359 -
           ((C134836 + C134837 + C134838) * C152403 * C152169 +
            (C134411 + C134410 + C134409) * C152403 * C152514) *
               C2360 +
           ((C134414 + C134413 + C134412) * C152403 * C152514 +
            (C133726 * C608 + C134376 + C134376 + C152619 * C632 +
             C133728 * C2595 + C134377 + C134377 + C152620 * C2611 +
             C133730 * C2602 + C134378 + C134378 + C133725 * C2618) *
                C152403 * C152169) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
             C133728 * C604 + C133734 + C133734 + C152620 * C628 +
             C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                C152403 * C152514 +
            (C133799 + C133800 + C133801) * C152403 * C152169) *
               C2359 -
           ((C134403 + C134404 + C134405) * C152403 * C152169 +
            (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
             C133728 * C605 + C134341 + C134341 + C152620 * C629 +
             C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                C152403 * C152514) *
               C2360 +
           ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
             C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
             C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                C152403 * C152514 +
            (C134406 + C134407 + C134408) * C152403 * C152169) *
               C152580) *
              C152624 +
          (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
             C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
             C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                C152403 * C152514 +
            (C135165 + C135166 + C135167) * C152403 * C152169) *
               C2360 -
           ((C134101 + C134102 + C134103) * C152403 * C152169 +
            (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
             C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
             C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                C152403 * C152514) *
               C2359 -
           ((C133730 * C9390 + C135741 + C135741 + C133725 * C9402 +
             C133728 * C3130 + C135742 + C135742 + C152620 * C3138 +
             C133726 * C1647 + C135743 + C135743 + C152619 * C1671) *
                C152403 * C152169 +
            (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
             C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
             C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                C152403 * C152514) *
               C152580) *
              C152608 +
          (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
             C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
             C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                C152403 * C152514 +
            (C134104 + C134105 + C134106) * C152403 * C152169) *
               C2359 -
           ((C136276 + C136277 + C136278) * C152403 * C152169 +
            (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
             C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
             C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                C152403 * C152514) *
               C2360 +
           ((C133726 * C1653 + C135753 + C135753 + C152619 * C1677 +
             C133728 * C9387 + C135754 + C135754 + C152620 * C9399 +
             C133730 * C9389 + C135755 + C135755 + C133725 * C9401) *
                C152403 * C152514 +
            (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
             C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
             C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                C152403 * C152169) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
            C133728 * C604 + C133734 + C133734 + C152620 * C628 +
            C133730 * C605 + C133735 + C133735 + C133725 * C629) *
               C152403 * C152514 +
           (C133799 + C133800 + C133801) * C152403 * C152169) *
              C2590 -
          ((C134403 + C134404 + C134405) * C152403 * C152169 +
           (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
            C133728 * C605 + C134341 + C134341 + C152620 * C629 +
            C133726 * C604 + C134342 + C134342 + C152619 * C628) *
               C152403 * C152514) *
              C2591 +
          ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
            C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
            C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
               C152403 * C152514 +
           (C134406 + C134407 + C134408) * C152403 * C152169) *
              C2592 -
          ((C133730 * C17993 + C137037 + C137037 + C133725 * C18001 +
            C133728 * C2600 + C137038 + C137038 + C152620 * C2616 +
            C133726 * C2597 + C137039 + C137039 + C152619 * C2613) *
               C152403 * C152169 +
           (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
            C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
            C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
               C152403 * C152514) *
              C2593 +
          ((C133726 * C2599 + C137043 + C137043 + C152619 * C2615 +
            C133728 * C17994 + C137044 + C137044 + C152620 * C18002 +
            C133730 * C17995 + C137045 + C137045 + C133725 * C18003) *
               C152403 * C152514 +
           (C133726 * C2600 + C137046 + C137046 + C152619 * C2616 +
            C133728 * C17993 + C137047 + C137047 + C152620 * C18001 +
            C133730 * C17996 + C137048 + C137048 + C133725 * C18004) *
               C152403 * C152169) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[338] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C152536 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C1373 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C152536) *
                        C1374 +
                    (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                       C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                       C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                          C152403 * C152514 +
                      (C134104 + C134105 + C134106) * C152403 * C152169) *
                         C152536 -
                     ((C136276 + C136277 + C136278) * C152403 * C152169 +
                      (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                          C152403 * C152514) *
                         C152324) *
                        C152577) *
                       C152521 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C152536) *
                        C1373 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C152536 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C1374 +
                    (((C136278 + C136277 + C136276) * C152403 * C152514 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134110 + C134111 + C134112) * C152403 * C152169 +
                      (C134106 + C134105 + C134104) * C152403 * C152514) *
                         C152536) *
                        C152577) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152536 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C152219 * C829 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152324 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152536) *
                       C152219 * C830 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152536 -
                    ((C134836 + C134837 + C134838) * C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C152324) *
                       C152219 * C831 +
                   (((C134838 + C134837 + C134836) * C152403 * C152514 +
                     (C133726 * C609 + C134827 + C134827 + C152619 * C633 +
                      C133728 * C610 + C134828 + C134828 + C152620 * C634 +
                      C133730 * C2977 + C134829 + C134829 + C133725 * C2979) *
                         C152403 * C152169) *
                        C152324 -
                    ((C133808 + C133809 + C133810) * C152403 * C152169 +
                     (C133807 + C133806 + C133805) * C152403 * C152514) *
                        C152536) *
                       C152219 * C152581)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C2973 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C2974 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C2975 -
                    ((C137566 + C137567 + C137568) * C152403 * C152169 +
                     (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
                      C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
                      C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                         C152403 * C152514) *
                        C152593) *
                       C152219 * C152521 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C2974 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C2973 -
                    ((C134412 + C134413 + C134414) * C152403 * C152169 +
                     (C134408 + C134407 + C134406) * C152403 * C152514) *
                        C2975 +
                    ((C137568 + C137567 + C137566) * C152403 * C152514 +
                     (C133726 * C2596 + C137557 + C137557 + C152619 * C2612 +
                      C133728 * C2601 + C137558 + C137558 + C152620 * C2617 +
                      C133730 * C18522 + C137559 + C137559 + C133725 * C18524) *
                         C152403 * C152169) *
                        C152593) *
                       C152219 * C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[339] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C152624 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152608 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152577) *
                       C353 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152608 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C152624 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152577) *
                       C354 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C152624 -
                    ((C133730 * C1645 + C134071 + C134071 + C133725 * C1669 +
                      C133728 * C1182 + C134072 + C134072 + C152620 * C1194 +
                      C133726 * C356 + C134073 + C134073 + C152619 * C380) *
                         C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C152608 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152403 * C152514 +
                    (C133799 + C133800 + C133801) * C152403 * C152169) *
                       C152237 * C152219 * C129 -
                   ((C133802 + C133803 + C133804) * C152403 * C152169 +
                    (C133801 + C133800 + C133799) * C152403 * C152514) *
                       C152237 * C152219 * C130 +
                   ((C133804 + C133803 + C133802) * C152403 * C152514 +
                    (C133805 + C133806 + C133807) * C152403 * C152169) *
                       C152237 * C152219 * C131 -
                   ((C133808 + C133809 + C133810) * C152403 * C152169 +
                    (C133807 + C133806 + C133805) * C152403 * C152514) *
                       C152237 * C152219 * C132 +
                   ((C133810 + C133809 + C133808) * C152403 * C152514 +
                    (C133726 * C141 + C133772 + C133772 + C152619 * C157 +
                     C133728 * C611 + C133773 + C133773 + C152620 * C635 +
                     C133730 * C612 + C133774 + C133774 + C133725 * C636) *
                        C152403 * C152169) *
                       C152237 * C152219 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C1373 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C1374 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152577) *
                       C152621 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C1374 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C1373 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152577) *
                       C152604 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C1373 -
                    ((C134624 + C134625 + C134626) * C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C1374 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152403 * C152514 +
                    (C133799 + C133800 + C133801) * C152403 * C152169) *
                       C152237 * C1461 -
                   ((C134101 + C134102 + C134103) * C152403 * C152169 +
                    (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                     C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                     C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                        C152403 * C152514) *
                       C152237 * C1462 +
                   ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                     C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                     C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                        C152403 * C152514 +
                    (C134104 + C134105 + C134106) * C152403 * C152169) *
                       C152237 * C1463 -
                   ((C133730 * C8069 + C135511 + C135511 + C133725 * C8081 +
                     C133728 * C2198 + C135512 + C135512 + C152620 * C2206 +
                     C133726 * C1469 + C135513 + C135513 + C152619 * C1485) *
                        C152403 * C152169 +
                    (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                     C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                     C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                        C152403 * C152514) *
                       C152237 * C1464 +
                   ((C133726 * C1471 + C135517 + C135517 + C152619 * C1487 +
                     C133728 * C8072 + C135518 + C135518 + C152620 * C8084 +
                     C133730 * C8073 + C135519 + C135519 + C133725 * C8085) *
                        C152403 * C152514 +
                    (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                     C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                     C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                        C152403 * C152169) *
                       C152237 * C1465) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C2359 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C2360 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C152580) *
                       C152219 * C152621 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C2360 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C2359 -
                    ((C134412 + C134413 + C134414) * C152403 * C152169 +
                     (C134408 + C134407 + C134406) * C152403 * C152514) *
                        C152580) *
                       C152219 * C152604 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C2359 -
                    ((C134836 + C134837 + C134838) * C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C2360 +
                    ((C134414 + C134413 + C134412) * C152403 * C152514 +
                     (C133726 * C608 + C134376 + C134376 + C152619 * C632 +
                      C133728 * C2595 + C134377 + C134377 + C152620 * C2611 +
                      C133730 * C2602 + C134378 + C134378 + C133725 * C2618) *
                         C152403 * C152169) *
                        C152580) *
                       C152219 * C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C2359 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C2360 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C152580) *
                       C152624 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C2360 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C2359 -
                    ((C133730 * C9390 + C135741 + C135741 + C133725 * C9402 +
                      C133728 * C3130 + C135742 + C135742 + C152620 * C3138 +
                      C133726 * C1647 + C135743 + C135743 + C152619 * C1671) *
                         C152403 * C152169 +
                     (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
                      C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
                      C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                         C152403 * C152514) *
                        C152580) *
                       C152608 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C2359 -
                    ((C136276 + C136277 + C136278) * C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C2360 +
                    ((C133726 * C1653 + C135753 + C135753 + C152619 * C1677 +
                      C133728 * C9387 + C135754 + C135754 + C152620 * C9399 +
                      C133730 * C9389 + C135755 + C135755 + C133725 * C9401) *
                         C152403 * C152514 +
                     (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                      C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                      C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                         C152403 * C152169) *
                        C152580) *
                       C152577) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[340] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C4281 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152535 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C4281) *
                        C152282) *
                       C152196 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C4281) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C4281 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152282) *
                       C152205 +
                   ((((C133804 + C133803 + C133802) * C152403 * C152514 +
                      (C133805 + C133806 + C133807) * C152403 * C152169) *
                         C4281 -
                     ((C134836 + C134837 + C134838) * C152403 * C152169 +
                      (C134411 + C134410 + C134409) * C152403 * C152514) *
                         C152324) *
                        C152535 +
                    (((C135170 + C135169 + C135168) * C152403 * C152514 +
                      (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
                       C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
                       C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134624 + C134625 + C134626) * C152403 * C152169 +
                      (C134109 + C134108 + C134107) * C152403 * C152514) *
                         C4281) *
                        C152282) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
              C133728 * C604 + C133734 + C133734 + C152620 * C628 +
              C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                 C152403 * C152514 +
             (C133799 + C133800 + C133801) * C152403 * C152169) *
                C152320 -
            ((C134403 + C134404 + C134405) * C152403 * C152169 +
             (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
              C133728 * C605 + C134341 + C134341 + C152620 * C629 +
              C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                 C152403 * C152514) *
                C152327 +
            ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
              C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
              C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                 C152403 * C152514 +
             (C134406 + C134407 + C134408) * C152403 * C152169) *
                C4953) *
               C152535 +
           (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
              C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
              C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                 C152403 * C152514 +
             (C135165 + C135166 + C135167) * C152403 * C152169) *
                C152327 -
            ((C134101 + C134102 + C134103) * C152403 * C152169 +
             (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
              C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
              C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                 C152403 * C152514) *
                C152320 -
            ((C137354 + C137355 + C137356) * C152403 * C152169 +
             (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
              C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
              C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                 C152403 * C152514) *
                C4953) *
               C152282) *
              C3415 +
          ((((C134405 + C134404 + C134403) * C152403 * C152514 +
             (C134409 + C134410 + C134411) * C152403 * C152169) *
                C152327 -
            ((C133802 + C133803 + C133804) * C152403 * C152169 +
             (C133801 + C133800 + C133799) * C152403 * C152514) *
                C152320 -
            ((C134412 + C134413 + C134414) * C152403 * C152169 +
             (C134408 + C134407 + C134406) * C152403 * C152514) *
                C4953) *
               C152535 +
           (((C134103 + C134102 + C134101) * C152403 * C152514 +
             (C134107 + C134108 + C134109) * C152403 * C152169) *
                C152320 -
            ((C135168 + C135169 + C135170) * C152403 * C152169 +
             (C135167 + C135166 + C135165) * C152403 * C152514) *
                C152327 +
            ((C137356 + C137355 + C137354) * C152403 * C152514 +
             (C133726 * C1646 + C137345 + C137345 + C152619 * C1670 +
              C133728 * C3131 + C137346 + C137346 + C152620 * C3139 +
              C133730 * C18307 + C137347 + C137347 + C133725 * C18309) *
                 C152403 * C152169) *
                C4953) *
               C152282) *
              C152202)) /
        (p * q * std::sqrt(p + q));
    d2ee[342] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C4281 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152624 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C4281) *
                        C152608 +
                    (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                       C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                       C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                          C152403 * C152514 +
                      (C134104 + C134105 + C134106) * C152403 * C152169) *
                         C4281 -
                     ((C136276 + C136277 + C136278) * C152403 * C152169 +
                      (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                          C152403 * C152514) *
                         C152324) *
                        C152577) *
                       C3415 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C4281) *
                        C152624 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C4281 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152608 +
                    (((C136278 + C136277 + C136276) * C152403 * C152514 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134110 + C134111 + C134112) * C152403 * C152169 +
                      (C134106 + C134105 + C134104) * C152403 * C152514) *
                         C4281) *
                        C152577) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C4281 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C152219 * C152630 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152324 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C4281) *
                       C152219 * C152623 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C4281 -
                    ((C134836 + C134837 + C134838) * C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C152324) *
                       C152219 * C152606 +
                   (((C134838 + C134837 + C134836) * C152403 * C152514 +
                     (C133726 * C609 + C134827 + C134827 + C152619 * C633 +
                      C133728 * C610 + C134828 + C134828 + C152620 * C634 +
                      C133730 * C2977 + C134829 + C134829 + C133725 * C2979) *
                         C152403 * C152169) *
                        C152324 -
                    ((C133808 + C133809 + C133810) * C152403 * C152169 +
                     (C133807 + C133806 + C133805) * C152403 * C152514) *
                        C4281) *
                       C152219 * C152581)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152632 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152629 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C152616 -
                    ((C137566 + C137567 + C137568) * C152403 * C152169 +
                     (C133730 * C17994 + C137040 + C137040 + C133725 * C18002 +
                      C133728 * C2599 + C137041 + C137041 + C152620 * C2615 +
                      C133726 * C2598 + C137042 + C137042 + C152619 * C2614) *
                         C152403 * C152514) *
                        C152593) *
                       C152219 * C3415 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152629 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152632 -
                    ((C134412 + C134413 + C134414) * C152403 * C152169 +
                     (C134408 + C134407 + C134406) * C152403 * C152514) *
                        C152616 +
                    ((C137568 + C137567 + C137566) * C152403 * C152514 +
                     (C133726 * C2596 + C137557 + C137557 + C152619 * C2612 +
                      C133728 * C2601 + C137558 + C137558 + C152620 * C2617 +
                      C133730 * C18522 + C137559 + C137559 + C133725 * C18524) *
                         C152403 * C152169) *
                        C152593) *
                       C152219 * C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[343] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152320 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152327 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C4953) *
                       C152219 * C152196 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152327 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152320 -
                    ((C134412 + C134413 + C134414) * C152403 * C152169 +
                     (C134408 + C134407 + C134406) * C152403 * C152514) *
                        C4953) *
                       C152219 * C152205 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152320 -
                    ((C134836 + C134837 + C134838) * C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C152327 +
                    ((C134414 + C134413 + C134412) * C152403 * C152514 +
                     (C133726 * C608 + C134376 + C134376 + C152619 * C632 +
                      C133728 * C2595 + C134377 + C134377 + C152620 * C2611 +
                      C133730 * C2602 + C134378 + C134378 + C133725 * C2618) *
                         C152403 * C152169) *
                        C4953) *
                       C152219 * C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[344] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C4281 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C152219 * C152630 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152324 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C4281) *
                       C152219 * C152623 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C4281 -
                    ((C134836 + C134837 + C134838) * C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C152324) *
                       C152219 * C152606 +
                   (((C134838 + C134837 + C134836) * C152403 * C152514 +
                     (C133726 * C609 + C134827 + C134827 + C152619 * C633 +
                      C133728 * C610 + C134828 + C134828 + C152620 * C634 +
                      C133730 * C2977 + C134829 + C134829 + C133725 * C2979) *
                         C152403 * C152169) *
                        C152324 -
                    ((C133808 + C133809 + C133810) * C152403 * C152169 +
                     (C133807 + C133806 + C133805) * C152403 * C152514) *
                        C4281) *
                       C152219 * C152581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C4281 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152624 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C4281) *
                        C152608 +
                    (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                       C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                       C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                          C152403 * C152514 +
                      (C134104 + C134105 + C134106) * C152403 * C152169) *
                         C4281 -
                     ((C136276 + C136277 + C136278) * C152403 * C152169 +
                      (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                          C152403 * C152514) *
                         C152324) *
                        C152577) *
                       C3415 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C4281) *
                        C152624 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C4281 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152608 +
                    (((C136278 + C136277 + C136276) * C152403 * C152514 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134110 + C134111 + C134112) * C152403 * C152169 +
                      (C134106 + C134105 + C134104) * C152403 * C152514) *
                         C4281) *
                        C152577) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[345] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C152535 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152282) *
                       C829 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152282 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C152535) *
                       C830 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C152535 -
                    ((C134624 + C134625 + C134626) * C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C152282) *
                       C831 +
                   (((C134626 + C134625 + C134624) * C152403 * C152514 +
                     (C133726 * C364 + C134615 + C134615 + C152619 * C388 +
                      C133728 * C1183 + C134616 + C134616 + C152620 * C1195 +
                      C133730 * C2821 + C134617 + C134617 + C133725 * C2823) *
                         C152403 * C152169) *
                        C152237 * C152282 -
                    ((C133808 + C133809 + C133810) * C152403 * C152169 +
                     (C133807 + C133806 + C133805) * C152403 * C152514) *
                        C152237 * C152535) *
                       C152581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C1823 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C1824 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C1825 -
                    ((C135968 + C135969 + C135970) * C152403 * C152169 +
                     (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                         C152403 * C152514) *
                        C152237 * C152587) *
                       C152521 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C1824 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C1823 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C1825 +
                    ((C135970 + C135969 + C135968) * C152403 * C152514 +
                     (C133726 * C1468 + C135959 + C135959 + C152619 * C1484 +
                      C133728 * C2199 + C135960 + C135960 + C152620 * C2207 +
                      C133730 * C9700 + C135961 + C135961 + C133725 * C9702) *
                         C152403 * C152169) *
                        C152237 * C152587) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[346] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C152536 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C152535 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C152536) *
                        C152282) *
                       C353 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C152536) *
                        C152535 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C152536 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C152282) *
                       C354 +
                   ((((C133804 + C133803 + C133802) * C152403 * C152514 +
                      (C133805 + C133806 + C133807) * C152403 * C152169) *
                         C152536 -
                     ((C134836 + C134837 + C134838) * C152403 * C152169 +
                      (C134411 + C134410 + C134409) * C152403 * C152514) *
                         C152324) *
                        C152535 +
                    (((C135170 + C135169 + C135168) * C152403 * C152514 +
                      (C133726 * C1182 + C135150 + C135150 + C152619 * C1194 +
                       C133728 * C1645 + C135151 + C135151 + C152620 * C1669 +
                       C133730 * C3132 + C135152 + C135152 + C133725 * C3140) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134624 + C134625 + C134626) * C152403 * C152169 +
                      (C134109 + C134108 + C134107) * C152403 * C152514) *
                         C152536) *
                        C152282) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152536 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C1823 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152324 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152536) *
                       C1824 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152536 -
                    ((C136276 + C136277 + C136278) * C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C152324) *
                       C1825 +
                   (((C133726 * C2197 + C136473 + C136473 + C152619 * C2205 +
                      C133728 * C8070 + C136474 + C136474 + C152620 * C8082 +
                      C133730 * C10112 + C136475 + C136475 + C133725 * C10116) *
                         C152403 * C152514 +
                     (C133726 * C2198 + C136476 + C136476 + C152619 * C2206 +
                      C133728 * C8069 + C136477 + C136477 + C152620 * C8081 +
                      C133730 * C10113 + C136478 + C136478 + C133725 * C10117) *
                         C152403 * C152169) *
                        C152324 -
                    ((C135968 + C135969 + C135970) * C152403 * C152169 +
                     (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                      C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                      C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                         C152403 * C152514) *
                        C152536) *
                       C152587) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[347] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C152624 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152608 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152577) *
                       C353 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152608 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C152624 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152577) *
                       C354 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C152624 -
                    ((C133730 * C1645 + C134071 + C134071 + C133725 * C1669 +
                      C133728 * C1182 + C134072 + C134072 + C152620 * C1194 +
                      C133726 * C356 + C134073 + C134073 + C152619 * C380) *
                         C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C152608 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152403 * C152514 +
                    (C133799 + C133800 + C133801) * C152403 * C152169) *
                       C152237 * C152219 * C129 -
                   ((C133802 + C133803 + C133804) * C152403 * C152169 +
                    (C133801 + C133800 + C133799) * C152403 * C152514) *
                       C152237 * C152219 * C130 +
                   ((C133804 + C133803 + C133802) * C152403 * C152514 +
                    (C133805 + C133806 + C133807) * C152403 * C152169) *
                       C152237 * C152219 * C131 -
                   ((C133808 + C133809 + C133810) * C152403 * C152169 +
                    (C133807 + C133806 + C133805) * C152403 * C152514) *
                       C152237 * C152219 * C132 +
                   ((C133810 + C133809 + C133808) * C152403 * C152514 +
                    (C133726 * C141 + C133772 + C133772 + C152619 * C157 +
                     C133728 * C611 + C133773 + C133773 + C152620 * C635 +
                     C133730 * C612 + C133774 + C133774 + C133725 * C636) *
                        C152403 * C152169) *
                       C152237 * C152219 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152625 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152610 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C152580) *
                       C152219 * C353 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152610 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152625 -
                    ((C134412 + C134413 + C134414) * C152403 * C152169 +
                     (C134408 + C134407 + C134406) * C152403 * C152514) *
                        C152580) *
                       C152219 * C354 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152625 -
                    ((C133730 * C2595 + C134373 + C134373 + C133725 * C2611 +
                      C133728 * C608 + C134374 + C134374 + C152620 * C632 +
                      C133726 * C601 + C134375 + C134375 + C152619 * C625) *
                         C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C152610 +
                    ((C134414 + C134413 + C134412) * C152403 * C152514 +
                     (C133726 * C608 + C134376 + C134376 + C152619 * C632 +
                      C133728 * C2595 + C134377 + C134377 + C152620 * C2611 +
                      C133730 * C2602 + C134378 + C134378 + C133725 * C2618) *
                         C152403 * C152169) *
                        C152580) *
                       C152219 * C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C1373 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C1374 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152577) *
                       C152621 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C1374 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C1373 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152577) *
                       C152604 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C1373 -
                    ((C134624 + C134625 + C134626) * C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C1374 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152403 * C152514 +
                    (C133799 + C133800 + C133801) * C152403 * C152169) *
                       C152237 * C1461 -
                   ((C134101 + C134102 + C134103) * C152403 * C152169 +
                    (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                     C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                     C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                        C152403 * C152514) *
                       C152237 * C1462 +
                   ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                     C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                     C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                        C152403 * C152514 +
                    (C134104 + C134105 + C134106) * C152403 * C152169) *
                       C152237 * C1463 -
                   ((C133730 * C8069 + C135511 + C135511 + C133725 * C8081 +
                     C133728 * C2198 + C135512 + C135512 + C152620 * C2206 +
                     C133726 * C1469 + C135513 + C135513 + C152619 * C1485) *
                        C152403 * C152169 +
                    (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                     C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                     C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                        C152403 * C152514) *
                       C152237 * C1464 +
                   ((C133726 * C1471 + C135517 + C135517 + C152619 * C1487 +
                     C133728 * C8072 + C135518 + C135518 + C152620 * C8084 +
                     C133730 * C8073 + C135519 + C135519 + C133725 * C8085) *
                        C152403 * C152514 +
                    (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                     C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                     C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                        C152403 * C152169) *
                       C152237 * C1465) *
                  C152191) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152625 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152610 +
                    ((C133726 * C605 + C134343 + C134343 + C152619 * C629 +
                      C133728 * C2598 + C134344 + C134344 + C152620 * C2614 +
                      C133730 * C2599 + C134345 + C134345 + C133725 * C2615) *
                         C152403 * C152514 +
                     (C134406 + C134407 + C134408) * C152403 * C152169) *
                        C152580) *
                       C1373 +
                   (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                      C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                      C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                         C152403 * C152514 +
                     (C135165 + C135166 + C135167) * C152403 * C152169) *
                        C152610 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152625 -
                    ((C133730 * C9390 + C135741 + C135741 + C133725 * C9402 +
                      C133728 * C3130 + C135742 + C135742 + C152620 * C3138 +
                      C133726 * C1647 + C135743 + C135743 + C152619 * C1671) *
                         C152403 * C152169 +
                     (C133730 * C9388 + C135744 + C135744 + C133725 * C9400 +
                      C133728 * C3129 + C135745 + C135745 + C152620 * C3137 +
                      C133726 * C1648 + C135746 + C135746 + C152619 * C1672) *
                         C152403 * C152514) *
                        C152580) *
                       C1374 +
                   (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152625 -
                    ((C133730 * C9386 + C135747 + C135747 + C133725 * C9398 +
                      C133728 * C1654 + C135748 + C135748 + C152620 * C1678 +
                      C133726 * C1651 + C135749 + C135749 + C152619 * C1675) *
                         C152403 * C152169 +
                     (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                      C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                      C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                         C152403 * C152514) *
                        C152610 +
                    ((C133726 * C1653 + C135753 + C135753 + C152619 * C1677 +
                      C133728 * C9387 + C135754 + C135754 + C152620 * C9399 +
                      C133730 * C9389 + C135755 + C135755 + C133725 * C9401) *
                         C152403 * C152514 +
                     (C133726 * C1654 + C135756 + C135756 + C152619 * C1678 +
                      C133728 * C9386 + C135757 + C135757 + C152620 * C9398 +
                      C133730 * C9391 + C135758 + C135758 + C133725 * C9403) *
                         C152403 * C152169) *
                        C152580) *
                       C152577) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[348] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152536 -
                    ((C134403 + C134404 + C134405) * C152403 * C152169 +
                     (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                      C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                      C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                         C152403 * C152514) *
                        C152324) *
                       C152219 * C829 +
                   (((C134405 + C134404 + C134403) * C152403 * C152514 +
                     (C134409 + C134410 + C134411) * C152403 * C152169) *
                        C152324 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152536) *
                       C152219 * C830 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152536 -
                    ((C134836 + C134837 + C134838) * C152403 * C152169 +
                     (C134411 + C134410 + C134409) * C152403 * C152514) *
                        C152324) *
                       C152219 * C831 +
                   (((C134838 + C134837 + C134836) * C152403 * C152514 +
                     (C133726 * C609 + C134827 + C134827 + C152619 * C633 +
                      C133728 * C610 + C134828 + C134828 + C152620 * C634 +
                      C133730 * C2977 + C134829 + C134829 + C133725 * C2979) *
                         C152403 * C152169) *
                        C152324 -
                    ((C133808 + C133809 + C133810) * C152403 * C152169 +
                     (C133807 + C133806 + C133805) * C152403 * C152514) *
                        C152536) *
                       C152219 * C152581)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                       C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                       C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                          C152403 * C152514 +
                      (C133799 + C133800 + C133801) * C152403 * C152169) *
                         C152536 -
                     ((C134403 + C134404 + C134405) * C152403 * C152169 +
                      (C133730 * C2598 + C134340 + C134340 + C133725 * C2614 +
                       C133728 * C605 + C134341 + C134341 + C152620 * C629 +
                       C133726 * C604 + C134342 + C134342 + C152619 * C628) *
                          C152403 * C152514) *
                         C152324) *
                        C1373 +
                    (((C133726 * C1179 + C135129 + C135129 + C152619 * C1191 +
                       C133728 * C1648 + C135130 + C135130 + C152620 * C1672 +
                       C133730 * C3129 + C135131 + C135131 + C133725 * C3137) *
                          C152403 * C152514 +
                      (C135165 + C135166 + C135167) * C152403 * C152169) *
                         C152324 -
                     ((C134101 + C134102 + C134103) * C152403 * C152169 +
                      (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                       C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                       C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                          C152403 * C152514) *
                         C152536) *
                        C1374 +
                    (((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                       C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                       C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                          C152403 * C152514 +
                      (C134104 + C134105 + C134106) * C152403 * C152169) *
                         C152536 -
                     ((C136276 + C136277 + C136278) * C152403 * C152169 +
                      (C133730 * C9387 + C135750 + C135750 + C133725 * C9399 +
                       C133728 * C1653 + C135751 + C135751 + C152620 * C1677 +
                       C133726 * C1652 + C135752 + C135752 + C152619 * C1676) *
                          C152403 * C152514) *
                         C152324) *
                        C152577) *
                       C152521 +
                   ((((C134405 + C134404 + C134403) * C152403 * C152514 +
                      (C134409 + C134410 + C134411) * C152403 * C152169) *
                         C152324 -
                     ((C133802 + C133803 + C133804) * C152403 * C152169 +
                      (C133801 + C133800 + C133799) * C152403 * C152514) *
                         C152536) *
                        C1373 +
                    (((C134103 + C134102 + C134101) * C152403 * C152514 +
                      (C134107 + C134108 + C134109) * C152403 * C152169) *
                         C152536 -
                     ((C135168 + C135169 + C135170) * C152403 * C152169 +
                      (C135167 + C135166 + C135165) * C152403 * C152514) *
                         C152324) *
                        C1374 +
                    (((C136278 + C136277 + C136276) * C152403 * C152514 +
                      (C133726 * C1650 + C136267 + C136267 + C152619 * C1674 +
                       C133728 * C1655 + C136268 + C136268 + C152620 * C1679 +
                       C133730 * C9901 + C136269 + C136269 + C133725 * C9903) *
                          C152403 * C152169) *
                         C152324 -
                     ((C134110 + C134111 + C134112) * C152403 * C152169 +
                      (C134106 + C134105 + C134104) * C152403 * C152514) *
                         C152536) *
                        C152577) *
                       C152202)) /
                     (p * q * std::sqrt(p + q));
    d2ee[349] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152403 * C152514 +
                    (C133799 + C133800 + C133801) * C152403 * C152169) *
                       C152237 * C152219 * C129 -
                   ((C133802 + C133803 + C133804) * C152403 * C152169 +
                    (C133801 + C133800 + C133799) * C152403 * C152514) *
                       C152237 * C152219 * C130 +
                   ((C133804 + C133803 + C133802) * C152403 * C152514 +
                    (C133805 + C133806 + C133807) * C152403 * C152169) *
                       C152237 * C152219 * C131 -
                   ((C133808 + C133809 + C133810) * C152403 * C152169 +
                    (C133807 + C133806 + C133805) * C152403 * C152514) *
                       C152237 * C152219 * C132 +
                   ((C133810 + C133809 + C133808) * C152403 * C152514 +
                    (C133726 * C141 + C133772 + C133772 + C152619 * C157 +
                     C133728 * C611 + C133773 + C133773 + C152620 * C635 +
                     C133730 * C612 + C133774 + C133774 + C133725 * C636) *
                        C152403 * C152169) *
                       C152237 * C152219 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C152624 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C152608 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152577) *
                       C353 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C152608 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C152624 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152577) *
                       C354 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C152624 -
                    ((C133730 * C1645 + C134071 + C134071 + C133725 * C1669 +
                      C133728 * C1182 + C134072 + C134072 + C152620 * C1194 +
                      C133726 * C356 + C134073 + C134073 + C152619 * C380) *
                         C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C152608 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                      C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                      C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                         C152403 * C152514 +
                     (C133799 + C133800 + C133801) * C152403 * C152169) *
                        C152237 * C1373 -
                    ((C134101 + C134102 + C134103) * C152403 * C152169 +
                     (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                      C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                      C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                         C152403 * C152514) *
                        C152237 * C1374 +
                    ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                      C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                      C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                         C152403 * C152514 +
                     (C134104 + C134105 + C134106) * C152403 * C152169) *
                        C152237 * C152577) *
                       C152621 +
                   (((C134103 + C134102 + C134101) * C152403 * C152514 +
                     (C134107 + C134108 + C134109) * C152403 * C152169) *
                        C152237 * C1374 -
                    ((C133802 + C133803 + C133804) * C152403 * C152169 +
                     (C133801 + C133800 + C133799) * C152403 * C152514) *
                        C152237 * C1373 -
                    ((C134110 + C134111 + C134112) * C152403 * C152169 +
                     (C134106 + C134105 + C134104) * C152403 * C152514) *
                        C152237 * C152577) *
                       C152604 +
                   (((C133804 + C133803 + C133802) * C152403 * C152514 +
                     (C133805 + C133806 + C133807) * C152403 * C152169) *
                        C152237 * C1373 -
                    ((C134624 + C134625 + C134626) * C152403 * C152169 +
                     (C134109 + C134108 + C134107) * C152403 * C152514) *
                        C152237 * C1374 +
                    ((C134112 + C134111 + C134110) * C152403 * C152514 +
                     (C133726 * C363 + C134074 + C134074 + C152619 * C387 +
                      C133728 * C1649 + C134075 + C134075 + C152620 * C1673 +
                      C133730 * C1656 + C134076 + C134076 + C133725 * C1680) *
                         C152403 * C152169) *
                        C152237 * C152577) *
                       C152571)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C133726 * C136 + C133733 + C133733 + C152619 * C152 +
                     C133728 * C604 + C133734 + C133734 + C152620 * C628 +
                     C133730 * C605 + C133735 + C133735 + C133725 * C629) *
                        C152403 * C152514 +
                    (C133799 + C133800 + C133801) * C152403 * C152169) *
                       C152237 * C1461 -
                   ((C134101 + C134102 + C134103) * C152403 * C152169 +
                    (C133730 * C1648 + C134038 + C134038 + C133725 * C1672 +
                     C133728 * C1179 + C134039 + C134039 + C152620 * C1191 +
                     C133726 * C359 + C134040 + C134040 + C152619 * C383) *
                        C152403 * C152514) *
                       C152237 * C1462 +
                   ((C133726 * C360 + C134041 + C134041 + C152619 * C384 +
                     C133728 * C1652 + C134042 + C134042 + C152620 * C1676 +
                     C133730 * C1653 + C134043 + C134043 + C133725 * C1677) *
                        C152403 * C152514 +
                    (C134104 + C134105 + C134106) * C152403 * C152169) *
                       C152237 * C1463 -
                   ((C133730 * C8069 + C135511 + C135511 + C133725 * C8081 +
                     C133728 * C2198 + C135512 + C135512 + C152620 * C2206 +
                     C133726 * C1469 + C135513 + C135513 + C152619 * C1485) *
                        C152403 * C152169 +
                    (C133730 * C8070 + C135514 + C135514 + C133725 * C8082 +
                     C133728 * C2197 + C135515 + C135515 + C152620 * C2205 +
                     C133726 * C1470 + C135516 + C135516 + C152619 * C1486) *
                        C152403 * C152514) *
                       C152237 * C1464 +
                   ((C133726 * C1471 + C135517 + C135517 + C152619 * C1487 +
                     C133728 * C8072 + C135518 + C135518 + C152620 * C8084 +
                     C133730 * C8073 + C135519 + C135519 + C133725 * C8085) *
                        C152403 * C152514 +
                    (C133726 * C1472 + C135520 + C135520 + C152619 * C1488 +
                     C133728 * C8071 + C135521 + C135521 + C152620 * C8083 +
                     C133730 * C8074 + C135522 + C135522 + C133725 * C8086) *
                        C152403 * C152169) *
                       C152237 * C1465) *
                  C152191) /
                     (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152278 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152285 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C3759) *
              C152196 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152285 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152278 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C3759) *
              C152205 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152278 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152285 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152278 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152285 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C3759) *
              C152196 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152285 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152278 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C3759) *
              C152205 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152278 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152285 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152278 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152285 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C152536 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C3759) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C152278 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152285 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152278 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152285 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C152536 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C3759) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C152278 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152285 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C152536) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152631 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152627 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152613 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152627 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152631 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152613 +
           ((C102568 + C102567) * C152403 * C51110 +
            (C102566 + C102565) * C152403 * C51111 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C152403 * C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C3275 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152282 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C3275) *
              C152623 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C3275 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152282) *
              C152606 +
          ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152403 * C51112) *
               C152237 * C152282 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152625 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152610 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C152580) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152610 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152625 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C152580) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152610 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152625 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C152580) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152625 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152610 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C3275 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C3275 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152631 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152627 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C152613 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152627 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152631 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C152613 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152625 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152610 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C152580) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152610 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152625 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C152580) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152610 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152625 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C152580) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152625 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152610 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C152536 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C3275 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C152536 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C3275 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C152536) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C3275 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152282 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C3275) *
              C152623 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C3275 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152282) *
              C152606 +
          ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152403 * C51112) *
               C152237 * C152282 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152631 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152627 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152613 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152627 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152631 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152613 +
           ((C102568 + C102567) * C152403 * C51110 +
            (C102566 + C102565) * C152403 * C51111 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C152403 * C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C3275 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C152630 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C3275) *
              C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C3275 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C152606 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C3275) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152631 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152627 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C152613 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C3415 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C152627 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152631 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C152613 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152278 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152285 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C4281 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C3759) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152278 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152285 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152278 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152285 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C4281 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C3759) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152278 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152285 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C4281) *
               C3759) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152320 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C4953) *
              C152278 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152327 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152320 -
           ((C103959 + C103960) * C152403 * C51112 +
            (C103961 + C103962) * C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C4953) *
              C152285 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152320 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152327 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152320 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C4953) *
              C152278 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152327 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152320 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C4953) *
              C152285 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152320 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152327 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C4953) *
              C3759) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C4281 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152631 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152324 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C4281) *
              C152627 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C4281 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152324) *
              C152613 +
          (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
             C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                C152403 * C51110 +
            (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
             C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                C152403 * C51111 +
            (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
             C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                C152403 * C51112) *
               C152324 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152604 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C4281 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C3275 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152632 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152616 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C3275 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152629 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152632 -
           ((C103959 + C103960) * C152403 * C51112 +
            (C103961 + C103962) * C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152616 +
           ((C100338 * C3129 + C104373 + C104373 + C100336 * C3137 +
             C100340 * C9388 + C104374 + C104374 + C152482 * C9400) *
                C152403 * C51110 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C152403 * C51111 +
            (C100338 * C3131 + C104377 + C104377 + C100336 * C3139 +
             C100340 * C18307 + C104378 + C104378 + C152482 * C18309) *
                C152403 * C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C4281 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C3275 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152631 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C4281) *
              C152627 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C4281 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C152613 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152632 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152616 -
           ((C112718 + C112719) * C6260 + (C112720 + C112721) * C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C3275 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152629 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152632 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152616 +
           ((C112721 + C112720) * C6258 + (C112719 + C112718) * C6259 +
            (C100338 * C10112 + C112708 + C112708 + C100336 * C10116 +
             C100340 * C61259 + C112709 + C112709 + C152482 * C61261) *
                C6260) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152320 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C4953) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152327 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152320 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C4953) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152327 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152320 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C4953) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152320 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152327 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152320 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C4953) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152327 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152320 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C4953) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152327 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152320 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C4953) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152320 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152327 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C3275 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C3275 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152604 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C4281 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C3275 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C4281 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152631 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152324 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C4281) *
              C152627 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C4281 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152324) *
              C152613 +
          (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
             C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                C152403 * C51110 +
            (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
             C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                C152403 * C51111 +
            (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
             C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                C152403 * C51112) *
               C152324 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C3275 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152282) *
              C152621 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C3275 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152604 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C4281 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C3275 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C4281) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152631 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C4281) *
              C152627 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C4281 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C152613 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C4281) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1823 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1824 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C1825 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1824 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1823 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C1825 +
           ((C102568 + C102567) * C152403 * C51110 +
            (C102566 + C102565) * C152403 * C51111 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C152403 * C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152535 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152282 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152535) *
              C830 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152535 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152282) *
              C831 +
          ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152403 * C51112) *
               C152237 * C152282 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C2359 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C2360 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C152580) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C2360 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C2359 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C152580) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C2360 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C2359 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C152580) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C2359 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C2360 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152535 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152535 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1823 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1824 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C1825 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C1824 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1823 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C1825 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C2359 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C2360 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C152580) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C2360 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C2359 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C152580) *
               C152282) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C2360 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C2359 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C152580) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C2359 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C2360 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C152580) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152536 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C1823 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152324 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152536) *
              C1824 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152536 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152324) *
              C1825 +
          (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
             C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                C152403 * C51110 +
            (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
             C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                C152403 * C51111 +
            (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
             C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                C152403 * C51112) *
               C152324 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C354 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C152536 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C152535 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2973 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C2975 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C152535 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C2974 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C2973 -
           ((C103959 + C103960) * C152403 * C51112 +
            (C103961 + C103962) * C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C2975 +
           ((C100338 * C3129 + C104373 + C104373 + C100336 * C3137 +
             C100340 * C9388 + C104374 + C104374 + C152482 * C9400) *
                C152403 * C51110 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C152403 * C51111 +
            (C100338 * C3131 + C104377 + C104377 + C100336 * C3139 +
             C100340 * C18307 + C104378 + C104378 + C152482 * C18309) *
                C152403 * C51112) *
               C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            ((C110091 + C110092) * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
              C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                 C6260) *
                C152164 * C152324 -
            ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             (C102880 + C102879) * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             (C102568 + C102567) * C6260) *
                C152164 * C152536 -
            ((C100340 * C8069 + C103078 + C103078 + C152482 * C8081 +
              C100338 * C2198 + C103077 + C103077 + C100336 * C2206) *
                 C6260 +
             (C102879 + C102880) * C6259 + (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C152536 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C152535 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C1823 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152536) *
              C1824 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152536 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C1825 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2973 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C2975 -
           ((C112718 + C112719) * C6260 + (C112720 + C112721) * C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C152535 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C2974 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C2973 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C2975 +
           ((C112721 + C112720) * C6258 + (C112719 + C112718) * C6259 +
            (C100338 * C10112 + C112708 + C112708 + C100336 * C10116 +
             C100340 * C61259 + C112709 + C112709 + C152482 * C61261) *
                C6260) *
               C152164 * C152593) *
              C152282) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                   C152403 * C51110 +
               (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                  C152237 * C152219 * C129 -
              (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
               (C100398 + C100397) * C152403 * C51110) *
                  C152237 * C152219 * C130 +
              (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
               C100412 * C51112) *
                  C152237 * C152219 * C131 -
              ((C100405 + C100406) * C152403 * C51112 +
               (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
                  C152237 * C152219 * C132 +
              (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
               (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
                C100340 * C975 + C100376 + C100376 + C152482 * C977) *
                   C152403 * C51112) *
                  C152237 * C152219 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
                 C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                    C152403 * C51110 +
                (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                   C152237 * C152624 -
               (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
                (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
                 C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                    C152403 * C51110) *
                   C152237 * C152608 +
               ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
                 C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                    C152403 * C51110 +
                (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                   C152237 * C152577) *
                  C353 +
              (((C100702 + C100701) * C152403 * C51110 +
                (C100700 + C100699) * C152403 * C51111 +
                (C100707 + C100708) * C152403 * C51112) *
                   C152237 * C152608 -
               (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
                (C100398 + C100397) * C152403 * C51110) *
                   C152237 * C152624 -
               ((C100709 + C100710) * C152403 * C51112 +
                (C100706 + C100705) * C152403 * C51111 +
                (C100704 + C100703) * C152403 * C51110) *
                   C152237 * C152577) *
                  C354 +
              ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
                C100412 * C51112) *
                   C152237 * C152624 -
               ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
                 C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                    C152403 * C51112 +
                (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                   C152237 * C152608 +
               (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
                (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
                 C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                    C152403 * C51112) *
                   C152237 * C152577) *
                  C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152625 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 +
            (C101009 + C101010) * C152403 * C51112) *
               C152610 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152625 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152580) *
              C152219 * C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152625 -
           ((C100340 * C610 + C100973 + C100973 + C152482 * C634 +
             C100338 * C609 + C100974 + C100974 + C100336 * C633) *
                C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152610 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152625 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C1373 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152610 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152625 -
           ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
             C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                C152403 * C51112 +
            (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
             C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152580) *
              C1374 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152625 -
           ((C100340 * C1655 + C102341 + C102341 + C152482 * C1679 +
             C100338 * C1650 + C102342 + C102342 + C100336 * C1674) *
                C152403 * C51112 +
            (C100340 * C1654 + C102343 + C102343 + C152482 * C1678 +
             C100338 * C1651 + C102344 + C102344 + C100336 * C1675) *
                C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2359 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C2360 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C2359 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152580) *
              C152219 * C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C2359 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C2360 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2359 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152624 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C2360 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C2359 -
           ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
             C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                C152403 * C51112 +
            (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
             C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152580) *
              C152608 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C2359 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C2590 -
          (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
           (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
            C100338 * C604 + C100946 + C100946 + C100336 * C628) *
               C152403 * C51110) *
              C2591 +
          ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
            C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
               C152403 * C51110 +
           (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
              C2592 -
          ((C100340 * C2601 + C103639 + C103639 + C152482 * C2617 +
            C100338 * C2596 + C103640 + C103640 + C100336 * C2612) *
               C152403 * C51112 +
           (C100340 * C2600 + C103641 + C103641 + C152482 * C2616 +
            C100338 * C2597 + C103642 + C103642 + C100336 * C2613) *
               C152403 * C51111 +
           (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
            C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
               C152403 * C51110) *
              C2593 +
          ((C100338 * C2599 + C103645 + C103645 + C100336 * C2615 +
            C100340 * C17994 + C103646 + C103646 + C152482 * C18002) *
               C152403 * C51110 +
           (C100338 * C2600 + C103647 + C103647 + C100336 * C2616 +
            C100340 * C17993 + C103648 + C103648 + C152482 * C18001) *
               C152403 * C51111 +
           (C100338 * C2601 + C103649 + C103649 + C100336 * C2617 +
            C100340 * C18522 + C103650 + C103650 + C152482 * C18524) *
               C152403 * C51112) *
              C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C100338 * C1648 + C102340 + C102340 + C100336 * C1672 +
             C100340 * C3129 + C102339 + C102339 + C152482 * C3137) *
                C6259 +
            (C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C6260) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152610 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152625 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152625 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152610 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C1373 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            (C110722 + C110723) * C6260) *
               C152164 * C152610 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152625 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C1374 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152625 -
           ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
             C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                C6260 +
            (C110723 + C110722) * C6259 + C110679 * C6258) *
               C152164 * C152610 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C2360 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C2359 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C2359 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C2360 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152624 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C2360 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C2359 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C152608 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C2359 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C2360 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C2590 -
          (C110679 * C6260 + (C110093 + C110094) * C6259 +
           (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
            C100338 * C604 + C100946 + C100946 + C100336 * C628) *
               C6258) *
              C152164 * C2591 +
          ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
            C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
               C6258 +
           (C110718 + C110719) * C6259 + C110726 * C6260) *
              C152164 * C2592 -
          ((C100340 * C9389 + C112002 + C112002 + C152482 * C9401 +
            C100338 * C9387 + C112003 + C112003 + C100336 * C9399) *
               C6260 +
           (C100340 * C9388 + C104374 + C104374 + C152482 * C9400 +
            C100338 * C3129 + C104373 + C104373 + C100336 * C3137) *
               C6259 +
           (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
            C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
               C6258) *
              C152164 * C2593 +
          ((C100338 * C2599 + C103645 + C103645 + C100336 * C2615 +
            C100340 * C17994 + C103646 + C103646 + C152482 * C18002) *
               C6258 +
           (C100338 * C9388 + C112004 + C112004 + C100336 * C9400 +
            C100340 * C18737 + C112005 + C112005 + C152482 * C18741) *
               C6259 +
           (C100338 * C9389 + C112006 + C112006 + C100336 * C9401 +
            C100340 * C68548 + C112007 + C112007 + C152482 * C68550) *
               C6260) *
              C152164 * C2594) *
         C152219 * C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C1373 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C1374 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C152536 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C1373 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C1374 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152536 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152324 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152536) *
              C152219 * C830 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152536 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152324) *
              C152219 * C831 +
          ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
            (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
             C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                C152403 * C51112) *
               C152324 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2973 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C2975 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C152219 * C152521 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C2974 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C2973 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C2975 +
           ((C104178 + C104177) * C152403 * C51110 +
            (C104176 + C104175) * C152403 * C51111 +
            (C100338 * C2595 + C104165 + C104165 + C100336 * C2611 +
             C100340 * C2602 + C104166 + C104166 + C152482 * C2618) *
                C152403 * C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152536 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C1373 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C110722 + C110723) * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C1374 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C152536 -
            ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
              C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                 C6260 +
             (C110723 + C110722) * C6259 + C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C1373 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C1374 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2973 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2974 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C2975 -
           ((C100340 * C9389 + C112002 + C112002 + C152482 * C9401 +
             C100338 * C9387 + C112003 + C112003 + C100336 * C9399) *
                C6260 +
            (C100340 * C9388 + C104374 + C104374 + C152482 * C9400 +
             C100338 * C3129 + C104373 + C104373 + C100336 * C3137) *
                C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C152219 * C152521 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C2974 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C2973 -
           ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
            (C101006 + C101005) * C6258) *
               C152164 * C2975 +
           ((C104178 + C104177) * C6258 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C6259 +
            (C100338 * C9386 + C112504 + C112504 + C100336 * C9398 +
             C100340 * C9391 + C112505 + C112505 + C152482 * C9403) *
                C6260) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152624 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152608 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 +
            (C100707 + C100708) * C152403 * C51112) *
               C152237 * C152608 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152624 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152624 -
           ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
             C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152608 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C152219 * C129 -
          (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
           (C100398 + C100397) * C152403 * C51110) *
              C152237 * C152219 * C130 +
          (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
           C100412 * C51112) *
              C152237 * C152219 * C131 -
          ((C100405 + C100406) * C152403 * C51112 +
           (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
              C152237 * C152219 * C132 +
          (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
           (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
            C100340 * C975 + C100376 + C100376 + C152482 * C977) *
               C152403 * C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2359 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C2360 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C2359 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152580) *
              C152219 * C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C2359 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C2360 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C2359 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152624 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C2360 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C2359 -
           ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
             C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                C152403 * C51112 +
            (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
             C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152580) *
              C152608 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C2359 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C2360 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152219 * C152621 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C2360 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C2359 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C2359 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C2360 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C2359 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C2360 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C152624 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C2360 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C2359 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C152608 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C2359 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C2360 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C152205 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C4281 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C152535 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152282) *
              C152196 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C152205 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C4281 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C152535 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C4281) *
               C152282) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152320 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C152403 * C51110 +
             (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
                C4953) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152327 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152320 -
            ((C103959 + C103960) * C152403 * C51112 +
             (C103961 + C103962) * C152403 * C51111 +
             (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
              C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                 C152403 * C51110) *
                C4953) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152327 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152320 -
            ((C101011 + C101012) * C152403 * C51112 +
             (C101008 + C101007) * C152403 * C51111 +
             (C101006 + C101005) * C152403 * C51110) *
                C4953) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152320 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152327 +
            ((C103962 + C103961) * C152403 * C51110 +
             (C103960 + C103959) * C152403 * C51111 +
             (C100338 * C1645 + C103949 + C103949 + C100336 * C1669 +
              C100340 * C3132 + C103950 + C103950 + C152482 * C3140) *
                 C152403 * C51112) *
                C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152320 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152327 +
            ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
              C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                 C6258 +
             (C110718 + C110719) * C6259 + C110726 * C6260) *
                C152164 * C4953) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152327 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152320 -
            ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
             (C110719 + C110718) * C6258) *
                C152164 * C4953) *
               C152282) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152327 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152320 -
            ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
             (C101006 + C101005) * C6258) *
                C152164 * C4953) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152320 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152327 +
            ((C103962 + C103961) * C6258 + (C112309 + C112308) * C6259 +
             (C100338 * C8069 + C112302 + C112302 + C100336 * C8081 +
              C100340 * C10113 + C112303 + C112303 + C152482 * C10117) *
                 C6260) *
                C152164 * C4953) *
               C152282) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152624 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152608 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C4281 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152624 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152608 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C4281 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152324 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C4281) *
              C152219 * C152623 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C4281 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152324) *
              C152219 * C152606 +
          ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
            (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
             C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                C152403 * C51112) *
               C152324 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152632 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152616 -
           ((C104175 + C104176) * C152403 * C51112 +
            (C104177 + C104178) * C152403 * C51111 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C152403 * C51110) *
               C152593) *
              C152219 * C3415 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152629 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152632 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152616 +
           ((C104178 + C104177) * C152403 * C51110 +
            (C104176 + C104175) * C152403 * C51111 +
            (C100338 * C2595 + C104165 + C104165 + C100336 * C2611 +
             C100340 * C2602 + C104166 + C104166 + C152482 * C2618) *
                C152403 * C51112) *
               C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C4281 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152624 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152608 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C4281 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152624 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152608 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152632 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152629 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152616 -
           ((C112718 + C112719) * C6260 + (C112720 + C112721) * C6259 +
            (C100340 * C2599 + C103643 + C103643 + C152482 * C2615 +
             C100338 * C2598 + C103644 + C103644 + C100336 * C2614) *
                C6258) *
               C152164 * C152593) *
              C152219 * C3415 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152629 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152632 -
           ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
            (C101006 + C101005) * C6258) *
               C152164 * C152616 +
           ((C104178 + C104177) * C6258 +
            (C100338 * C3130 + C104375 + C104375 + C100336 * C3138 +
             C100340 * C9390 + C104376 + C104376 + C152482 * C9402) *
                C6259 +
            (C100338 * C9386 + C112504 + C112504 + C100336 * C9398 +
             C100340 * C9391 + C112505 + C112505 + C152482 * C9403) *
                C6260) *
               C152164 * C152593) *
              C152219 * C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152320 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C4953) *
              C152219 * C152196 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152327 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152320 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C4953) *
              C152219 * C152205 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152320 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152327 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152320 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152327 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C4953) *
              C152219 * C152196 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152327 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152320 -
           ((C112308 + C112309) * C6260 + (C103961 + C103962) * C6259 +
            (C101006 + C101005) * C6258) *
               C152164 * C4953) *
              C152219 * C152205 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152320 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152327 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C4953) *
              C152219 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C4281 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152324 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C4281) *
              C152219 * C152623 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C4281 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152324) *
              C152219 * C152606 +
          ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
            (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
             C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                C152403 * C51112) *
               C152324 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C4281 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152624 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C4281) *
               C152608 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C4281 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C4281) *
               C152624 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C4281 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152608 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C4281 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C152630 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            C111224 * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C4281) *
              C152219 * C152623 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C4281 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C152606 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C4281) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C4281 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152624 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             C111431 * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C4281) *
               C152608 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C4281 -
            ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
             C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C3415 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C4281) *
               C152624 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C4281 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152608 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C4281) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152535 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C152282 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152535) *
              C830 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152535 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152282) *
              C831 +
          ((C101218 * C51110 + (C101224 + C101223) * C152403 * C51111 +
            (C100338 * C366 + C101216 + C101216 + C100336 * C390 +
             C100340 * C1184 + C101217 + C101217 + C152482 * C1196) *
                C152403 * C51112) *
               C152237 * C152282 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1823 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1824 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C1825 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1824 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1823 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C1825 +
           ((C102568 + C102567) * C152403 * C51110 +
            (C102566 + C102565) * C152403 * C51111 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C152403 * C51112) *
               C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152535 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152282) *
              C829 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152282 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152535) *
              C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152535 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152282) *
              C831 +
          ((C101211 * C6258 + (C100710 + C100709) * C6259 +
            (C100338 * C1467 + C102555 + C102555 + C100336 * C1483 +
             C100340 * C2200 + C102556 + C102556 + C152482 * C2208) *
                C6260) *
               C152164 * C152237 * C152282 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152237 * C152535) *
              C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1823 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1824 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152237 * C1825 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152237 * C152587) *
              C152521 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            C110921 * C6260) *
               C152164 * C152237 * C1824 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1823 -
           ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
            C109159 * C6258) *
               C152164 * C152237 * C1825 +
           (C110921 * C6258 + (C110933 + C110932) * C6259 +
            (C100338 * C7820 + C110926 + C110926 + C100336 * C7828 +
             C100340 * C8816 + C110927 + C110927 + C152482 * C8820) *
                C6260) *
               C152164 * C152237 * C152587) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C152535 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C152535 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C152282) *
              C354 +
          (((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
             C100412 * C51112) *
                C152536 -
            ((C101431 + C101432) * C152403 * C51112 +
             (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
                C152324) *
               C152535 +
           ((C101764 * C51110 + (C101762 + C101761) * C152403 * C51111 +
             (C100338 * C1183 + C101743 + C101743 + C100336 * C1195 +
              C100340 * C2821 + C101744 + C101744 + C152482 * C2823) *
                 C152403 * C51112) *
                C152324 -
            ((C101223 + C101224) * C152403 * C51112 +
             (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
                C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152536 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C1823 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152324 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152536) *
              C1824 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152536 -
           ((C102877 + C102878) * C152403 * C51112 +
            (C102879 + C102880) * C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152324) *
              C1825 +
          (((C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
             C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                C152403 * C51110 +
            (C100338 * C2198 + C103077 + C103077 + C100336 * C2206 +
             C100340 * C8069 + C103078 + C103078 + C152482 * C8081) *
                C152403 * C51111 +
            (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
             C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                C152403 * C51112) *
               C152324 -
           ((C102565 + C102566) * C152403 * C51112 +
            (C102567 + C102568) * C152403 * C51111 +
            (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
             C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
                C152403 * C51110) *
               C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            ((C110091 + C110092) * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C152535 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C100338 * C2197 + C103075 + C103075 + C100336 * C2205 +
              C100340 * C8070 + C103076 + C103076 + C152482 * C8082) *
                 C6260) *
                C152164 * C152324 -
            ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C152282) *
              C353 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             (C102880 + C102879) * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C152535 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             (C102568 + C102567) * C6260) *
                C152164 * C152536 -
            ((C100340 * C8069 + C103078 + C103078 + C152482 * C8081 +
              C100338 * C2198 + C103077 + C103077 + C100336 * C2206) *
                 C6260 +
             (C102879 + C102880) * C6259 + (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C152282) *
              C354 +
          (((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
                C152164 * C152536 -
            ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
             C101013 * C6258) *
                C152164 * C152324) *
               C152535 +
           ((C101763 * C6258 + (C102878 + C102877) * C6259 +
             (C100338 * C2199 + C103079 + C103079 + C100336 * C2207 +
              C100340 * C9700 + C103080 + C103080 + C152482 * C9702) *
                 C6260) *
                C152164 * C152324 -
            ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
             C100711 * C6258) *
                C152164 * C152536) *
               C152282) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C1823 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            C111431 * C6260) *
               C152164 * C152324 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152536) *
              C1824 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152536 -
           ((C111442 + C111443) * C6260 + (C110723 + C110722) * C6259 +
            C110679 * C6258) *
               C152164 * C152324) *
              C1825 +
          ((C111431 * C6258 + (C111443 + C111442) * C6259 +
            (C100338 * C8815 + C111436 + C111436 + C100336 * C8819 +
             C100340 * C60413 + C111437 + C111437 + C152482 * C60415) *
                C6260) *
               C152164 * C152324 -
           ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
            C110435 * C6258) *
               C152164 * C152536) *
              C152587) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152624 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152608 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 +
            (C100707 + C100708) * C152403 * C51112) *
               C152237 * C152608 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152624 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152624 -
           ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
             C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152608 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C152219 * C129 -
          (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
           (C100398 + C100397) * C152403 * C51110) *
              C152237 * C152219 * C130 +
          (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
           C100412 * C51112) *
              C152237 * C152219 * C131 -
          ((C100405 + C100406) * C152403 * C51112 +
           (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
              C152237 * C152219 * C132 +
          (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
           (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
            C100340 * C975 + C100376 + C100376 + C152482 * C977) *
               C152403 * C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152625 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 +
            (C101009 + C101010) * C152403 * C51112) *
               C152610 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152625 -
           ((C101011 + C101012) * C152403 * C51112 +
            (C101008 + C101007) * C152403 * C51111 +
            (C101006 + C101005) * C152403 * C51110) *
               C152580) *
              C152219 * C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152625 -
           ((C100340 * C610 + C100973 + C100973 + C152482 * C634 +
             C100338 * C609 + C100974 + C100974 + C100336 * C633) *
                C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152610 +
           (C101016 * C51110 + (C101012 + C101011) * C152403 * C51111 +
            (C100338 * C610 + C100975 + C100975 + C100336 * C634 +
             C100340 * C2977 + C100976 + C100976 + C152482 * C2979) *
                C152403 * C51112) *
               C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152625 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C152403 * C51110 +
            (C101005 + C101006) * C152403 * C51111 + C101016 * C51112) *
               C152580) *
              C1373 +
          (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
             C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                C152403 * C51110 +
            (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
               C152610 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152625 -
           ((C100340 * C3131 + C102335 + C102335 + C152482 * C3139 +
             C100338 * C1646 + C102336 + C102336 + C100336 * C1670) *
                C152403 * C51112 +
            (C100340 * C3130 + C102337 + C102337 + C152482 * C3138 +
             C100338 * C1647 + C102338 + C102338 + C100336 * C1671) *
                C152403 * C51111 +
            (C100340 * C3129 + C102339 + C102339 + C152482 * C3137 +
             C100338 * C1648 + C102340 + C102340 + C100336 * C1672) *
                C152403 * C51110) *
               C152580) *
              C1374 +
          (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152625 -
           ((C100340 * C1655 + C102341 + C102341 + C152482 * C1679 +
             C100338 * C1650 + C102342 + C102342 + C100336 * C1674) *
                C152403 * C51112 +
            (C100340 * C1654 + C102343 + C102343 + C152482 * C1678 +
             C100338 * C1651 + C102344 + C102344 + C100336 * C1675) *
                C152403 * C51111 +
            (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C152403 * C51110) *
               C152610 +
           ((C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C152403 * C51110 +
            (C100338 * C1654 + C102349 + C102349 + C100336 * C1678 +
             C100340 * C9386 + C102350 + C102350 + C152482 * C9398) *
                C152403 * C51111 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C152403 * C51112) *
               C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C100338 * C1648 + C102340 + C102340 + C100336 * C1672 +
             C100340 * C3129 + C102339 + C102339 + C152482 * C3137) *
                C6259 +
            (C100338 * C1653 + C102347 + C102347 + C100336 * C1677 +
             C100340 * C9387 + C102348 + C102348 + C152482 * C9399) *
                C6260) *
               C152164 * C152580) *
              C152219 * C353 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152610 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152625 -
           ((C100340 * C9386 + C102350 + C102350 + C152482 * C9398 +
             C100338 * C1654 + C102349 + C102349 + C100336 * C1678) *
                C6260 +
            (C103961 + C103962) * C6259 + (C101006 + C101005) * C6258) *
               C152164 * C152580) *
              C152219 * C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152625 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152610 +
           (C101014 * C6258 + (C103960 + C103959) * C6259 +
            (C100338 * C1655 + C102351 + C102351 + C100336 * C1679 +
             C100340 * C9901 + C102352 + C102352 + C152482 * C9903) *
                C6260) *
               C152164 * C152580) *
              C152219 * C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152625 -
           (C110679 * C6260 + (C110093 + C110094) * C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152610 +
           ((C100338 * C605 + C100947 + C100947 + C100336 * C629 +
             C100340 * C2598 + C100948 + C100948 + C152482 * C2614) *
                C6258 +
            (C110718 + C110719) * C6259 + C110726 * C6260) *
               C152164 * C152580) *
              C1373 +
          (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
            (C110722 + C110723) * C6260) *
               C152164 * C152610 -
           (C110435 * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152625 -
           ((C110724 + C110725) * C6260 + (C110721 + C110720) * C6259 +
            (C110719 + C110718) * C6258) *
               C152164 * C152580) *
              C1374 +
          ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
               C152164 * C152625 -
           ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
             C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                C6260 +
            (C110723 + C110722) * C6259 + C110679 * C6258) *
               C152164 * C152610 +
           (C110726 * C6258 + (C110725 + C110724) * C6259 +
            (C100338 * C8073 + C110700 + C110700 + C100336 * C8085 +
             C100340 * C61717 + C110701 + C110701 + C152482 * C61719) *
                C6260) *
               C152164 * C152580) *
              C152577) *
         C152191) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152536 -
           (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C152403 * C51110) *
               C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C152403 * C51110 +
            (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
               C152324 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152536) *
              C152219 * C830 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152536 -
           ((C101431 + C101432) * C152403 * C51112 +
            (C101010 + C101009) * C152403 * C51111 + C101015 * C51110) *
               C152324) *
              C152219 * C831 +
          ((C101426 * C51110 + (C101432 + C101431) * C152403 * C51111 +
            (C100338 * C611 + C101424 + C101424 + C100336 * C635 +
             C100340 * C612 + C101425 + C101425 + C152482 * C636) *
                C152403 * C51112) *
               C152324 -
           ((C100405 + C100406) * C152403 * C51112 +
            (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
               C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C152403 * C51110 +
             (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
                C152536 -
            (C101015 * C51112 + (C101003 + C101004) * C152403 * C51111 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C152403 * C51110) *
                C152324) *
               C1373 +
           (((C100338 * C1179 + C101723 + C101723 + C100336 * C1191 +
              C100340 * C1648 + C101724 + C101724 + C152482 * C1672) *
                 C152403 * C51110 +
             (C101757 + C101758) * C152403 * C51111 + C101764 * C51112) *
                C152324 -
            (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
             (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
              C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                 C152403 * C51110) *
                C152536) *
               C1374 +
           (((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
              C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                 C152403 * C51110 +
             (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
                C152536 -
            ((C102877 + C102878) * C152403 * C51112 +
             (C102879 + C102880) * C152403 * C51111 +
             (C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
              C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                 C152403 * C51110) *
                C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C152403 * C51110 +
             (C101002 + C101001) * C152403 * C51111 + C101426 * C51112) *
                C152324 -
            (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
             (C100398 + C100397) * C152403 * C51110) *
                C152536) *
               C1373 +
           (((C100702 + C100701) * C152403 * C51110 +
             (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
                C152536 -
            ((C101761 + C101762) * C152403 * C51112 +
             (C101760 + C101759) * C152403 * C51111 +
             (C101758 + C101757) * C152403 * C51110) *
                C152324) *
               C1374 +
           (((C102880 + C102879) * C152403 * C51110 +
             (C102878 + C102877) * C152403 * C51111 +
             (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
              C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                 C152403 * C51112) *
                C152324 -
            ((C100709 + C100710) * C152403 * C51112 +
             (C100706 + C100705) * C152403 * C51111 +
             (C100704 + C100703) * C152403 * C51110) *
                C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152536 -
           ((C100340 * C1653 + C102345 + C102345 + C152482 * C1677 +
             C100338 * C1652 + C102346 + C102346 + C100336 * C1676) *
                C6260 +
            (C100340 * C1648 + C101724 + C101724 + C152482 * C1672 +
             C100338 * C1179 + C101723 + C101723 + C100336 * C1191) *
                C6259 +
            (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
             C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                C6258) *
               C152164 * C152324) *
              C152219 * C829 +
          (((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
            (C102880 + C102879) * C6260) *
               C152164 * C152324 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152536) *
              C152219 * C830 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152536 -
           ((C102877 + C102878) * C6260 + (C101760 + C101759) * C6259 +
            C101013 * C6258) *
               C152164 * C152324) *
              C152219 * C831 +
          ((C101419 * C6258 + (C101762 + C101761) * C6259 +
            (C100338 * C1649 + C102867 + C102867 + C100336 * C1673 +
             C100340 * C1656 + C102868 + C102868 + C152482 * C1680) *
                C6260) *
               C152164 * C152324 -
           ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
            C100408 * C6258) *
               C152164 * C152536) *
              C152219 * C152581)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
              C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                 C6258 +
             (C109172 + C109173) * C6259 + C109178 * C6260) *
                C152164 * C152536 -
            (C110679 * C6260 + (C110093 + C110094) * C6259 +
             (C100340 * C605 + C100945 + C100945 + C152482 * C629 +
              C100338 * C604 + C100946 + C100946 + C100336 * C628) *
                 C6258) *
                C152164 * C152324) *
               C1373 +
           (((C110094 + C110093) * C6258 + (C110092 + C110091) * C6259 +
             (C110722 + C110723) * C6260) *
                C152164 * C152324 -
            (C110435 * C6260 + (C109175 + C109174) * C6259 +
             (C109173 + C109172) * C6258) *
                C152164 * C152536) *
               C1374 +
           ((C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
                C152164 * C152536 -
            ((C100340 * C8073 + C110698 + C110698 + C152482 * C8085 +
              C100338 * C8072 + C110699 + C110699 + C100336 * C8084) *
                 C6260 +
             (C110723 + C110722) * C6259 + C110679 * C6258) *
                C152164 * C152324) *
               C152577) *
              C152521 +
          ((((C101004 + C101003) * C6258 + (C101757 + C101758) * C6259 +
             C111224 * C6260) *
                C152164 * C152324 -
            (C109159 * C6260 + (C100701 + C100702) * C6259 +
             (C100398 + C100397) * C6258) *
                C152164 * C152536) *
               C1373 +
           (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
             C110921 * C6260) *
                C152164 * C152536 -
            ((C111235 + C111236) * C6260 + (C102879 + C102880) * C6259 +
             (C101758 + C101757) * C6258) *
                C152164 * C152324) *
               C1374 +
           ((C111224 * C6258 + (C111236 + C111235) * C6259 +
             (C100338 * C8071 + C111229 + C111229 + C100336 * C8083 +
              C100340 * C8074 + C111230 + C111230 + C152482 * C8086) *
                 C6260) *
                C152164 * C152324 -
            ((C110932 + C110933) * C6260 + (C102567 + C102568) * C6259 +
             C109159 * C6258) *
                C152164 * C152536) *
               C152577) *
              C152202)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C152219 * C129 -
          (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
           (C100398 + C100397) * C152403 * C51110) *
              C152237 * C152219 * C130 +
          (C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
           C100412 * C51112) *
              C152237 * C152219 * C131 -
          ((C100405 + C100406) * C152403 * C51112 +
           (C100404 + C100403) * C152403 * C51111 + C100411 * C51110) *
              C152237 * C152219 * C132 +
          (C100412 * C51110 + (C100406 + C100405) * C152403 * C51111 +
           (C100338 * C142 + C100375 + C100375 + C100336 * C158 +
            C100340 * C975 + C100376 + C100376 + C152482 * C977) *
               C152403 * C51112) *
              C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C152624 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C152608 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 +
            (C100707 + C100708) * C152403 * C51112) *
               C152237 * C152608 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C152624 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C354 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C152624 -
           ((C100340 * C1183 + C100671 + C100671 + C152482 * C1195 +
             C100338 * C364 + C100672 + C100672 + C100336 * C388) *
                C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C152608 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C152403 * C51110 +
            (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
               C152237 * C1373 -
           (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
            (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
             C100338 * C359 + C100644 + C100644 + C100336 * C383) *
                C152403 * C51110) *
               C152237 * C1374 +
           ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
             C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
                C152403 * C51110 +
            (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
               C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C152403 * C51110 +
            (C100700 + C100699) * C152403 * C51111 + C101218 * C51112) *
               C152237 * C1374 -
           (C100411 * C51112 + (C100400 + C100399) * C152403 * C51111 +
            (C100398 + C100397) * C152403 * C51110) *
               C152237 * C1373 -
           ((C100709 + C100710) * C152403 * C51112 +
            (C100706 + C100705) * C152403 * C51111 +
            (C100704 + C100703) * C152403 * C51110) *
               C152237 * C152577) *
              C152604 +
          ((C100410 * C51110 + (C100402 + C100401) * C152403 * C51111 +
            C100412 * C51112) *
               C152237 * C1373 -
           ((C101223 + C101224) * C152403 * C51112 +
            (C100708 + C100707) * C152403 * C51111 + C100713 * C51110) *
               C152237 * C1374 +
           (C100714 * C51110 + (C100710 + C100709) * C152403 * C51111 +
            (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
             C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
                C152403 * C51112) *
               C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C152403 * C51110 +
           (C100397 + C100398) * C152403 * C51111 + C100410 * C51112) *
              C152237 * C1461 -
          (C100713 * C51112 + (C100701 + C100702) * C152403 * C51111 +
           (C100340 * C1179 + C100643 + C100643 + C152482 * C1191 +
            C100338 * C359 + C100644 + C100644 + C100336 * C383) *
               C152403 * C51110) *
              C152237 * C1462 +
          ((C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C152403 * C51110 +
           (C100703 + C100704) * C152403 * C51111 + C100714 * C51112) *
              C152237 * C1463 -
          ((C100340 * C2199 + C102105 + C102105 + C152482 * C2207 +
            C100338 * C1468 + C102106 + C102106 + C100336 * C1484) *
               C152403 * C51112 +
           (C100340 * C2198 + C102107 + C102107 + C152482 * C2206 +
            C100338 * C1469 + C102108 + C102108 + C100336 * C1485) *
               C152403 * C51111 +
           (C100340 * C2197 + C102109 + C102109 + C152482 * C2205 +
            C100338 * C1470 + C102110 + C102110 + C100336 * C1486) *
               C152403 * C51110) *
              C152237 * C1464 +
          ((C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
            C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
               C152403 * C51110 +
           (C100338 * C1472 + C102113 + C102113 + C100336 * C1488 +
            C100340 * C8071 + C102114 + C102114 + C152482 * C8083) *
               C152403 * C51111 +
           (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
            C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
               C152403 * C51112) *
              C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C100338 * C359 + C100644 + C100644 + C100336 * C383 +
            C100340 * C1179 + C100643 + C100643 + C152482 * C1191) *
               C6259 +
           (C100338 * C360 + C100645 + C100645 + C100336 * C384 +
            C100340 * C1652 + C100646 + C100646 + C152482 * C1676) *
               C6260) *
              C152164 * C152237 * C152219 * C129 -
          ((C100704 + C100703) * C6260 + (C100701 + C100702) * C6259 +
           (C100398 + C100397) * C6258) *
              C152164 * C152237 * C152219 * C130 +
          (C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
              C152164 * C152237 * C152219 * C131 -
          ((C100709 + C100710) * C6260 + (C100708 + C100707) * C6259 +
           C100408 * C6258) *
              C152164 * C152237 * C152219 * C132 +
          (C100409 * C6258 + (C101224 + C101223) * C6259 +
           (C100338 * C365 + C100673 + C100673 + C100336 * C389 +
            C100340 * C2045 + C100674 + C100674 + C152482 * C2047) *
               C6260) *
              C152164 * C152237 * C152219 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C152624 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C152608 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C353 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C152608 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C152624 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C354 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C152624 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C152608 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
             C100340 * C604 + C100344 + C100344 + C152482 * C628) *
                C6258 +
            (C109172 + C109173) * C6259 + C109178 * C6260) *
               C152164 * C152237 * C1373 -
           ((C109176 + C109177) * C6260 + (C109175 + C109174) * C6259 +
            (C109173 + C109172) * C6258) *
               C152164 * C152237 * C1374 +
           (C109178 * C6258 + (C109177 + C109176) * C6259 +
            (C100338 * C1471 + C102111 + C102111 + C100336 * C1487 +
             C100340 * C8072 + C102112 + C102112 + C152482 * C8084) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152621 +
          (((C100702 + C100701) * C6258 + (C100703 + C100704) * C6259 +
            (C102568 + C102567) * C6260) *
               C152164 * C152237 * C1374 -
           (C109159 * C6260 + (C100701 + C100702) * C6259 +
            (C100398 + C100397) * C6258) *
               C152164 * C152237 * C1373 -
           ((C100340 * C8071 + C102114 + C102114 + C152482 * C8083 +
             C100338 * C1472 + C102113 + C102113 + C100336 * C1488) *
                C6260 +
            (C102567 + C102568) * C6259 + C109159 * C6258) *
               C152164 * C152237 * C152577) *
              C152604 +
          ((C100407 * C6258 + (C100700 + C100699) * C6259 + C100712 * C6260) *
               C152164 * C152237 * C1373 -
           ((C102565 + C102566) * C6260 + (C100706 + C100705) * C6259 +
            C100711 * C6258) *
               C152164 * C152237 * C1374 +
           (C100712 * C6258 + (C102566 + C102565) * C6259 +
            (C100338 * C1473 + C102115 + C102115 + C100336 * C1489 +
             C100340 * C8609 + C102116 + C102116 + C152482 * C8611) *
                C6260) *
               C152164 * C152237 * C152577) *
              C152571)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100338 * C136 + C100343 + C100343 + C100336 * C152 +
            C100340 * C604 + C100344 + C100344 + C152482 * C628) *
               C6258 +
           (C109172 + C109173) * C6259 + C109178 * C6260) *
              C152164 * C152237 * C1461 -
          (C110435 * C6260 + (C109175 + C109174) * C6259 +
           (C109173 + C109172) * C6258) *
              C152164 * C152237 * C1462 +
          (C109178 * C6258 + (C109177 + C109176) * C6259 + C110460 * C6260) *
              C152164 * C152237 * C1463 -
          ((C110458 + C110459) * C6260 + (C110457 + C110456) * C6259 +
           C110435 * C6258) *
              C152164 * C152237 * C1464 +
          (C110460 * C6258 + (C110459 + C110458) * C6259 +
           (C100338 * C7822 + C110446 + C110446 + C100336 * C7830 +
            C100340 * C60876 + C110447 + C110447 + C152482 * C60878) *
               C6260) *
              C152164 * C152237 * C1465) *
         C152191) /
            (p * q * std::sqrt(p + q));
}
